{"docstore/data": {"7df91806-7929-41a3-b79e-704e77b4fbc5": {"__data__": {"id_": "7df91806-7929-41a3-b79e-704e77b4fbc5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbeed959-19df-4772-aa09-91c45a98391b", "node_type": "1", "metadata": {}, "hash": "f99cd83e98b35907550ac896cb8f38c0628e1623c7be0db8e965b05f56251412", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nsidebar: auto\n---\n\n# Testing\n\nDeveloping Decentralized Applications (DApps) on the Cosmos network often involves integrating with the Keplr wallet. Testing is key for ensuring users can flawlessly interact with your DApp through the Keplr wallet.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbeed959-19df-4772-aa09-91c45a98391b": {"__data__": {"id_": "bbeed959-19df-4772-aa09-91c45a98391b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7df91806-7929-41a3-b79e-704e77b4fbc5", "node_type": "1", "metadata": {}, "hash": "0561fee82a406845037deec8fc79df22fbfd66e872787c547653c367acb6f9d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67480952-3ef3-4660-ad84-be0fc44139d2", "node_type": "1", "metadata": {}, "hash": "4b5285d6c12bd5180357a541f2df215bc18c7d690af9871d64b14efc12cafddb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[`@agoric/synpress`](https://github.com/agoric-labs/synpress) is an end-to-end (e2e) testing framework that simplifies the testing process for Keplr-based DApps. This framework automates testing how your DApp interacts with the Keplr wallet, simulating real user experiences. `@agoric/synpress` is built upon [`synthetixio/synpress`](https://github.com/Synthetixio/synpress), a framework designed for Metamask-based DApps.", "mimetype": "text/plain", "start_char_idx": 252, "end_char_idx": 674, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "67480952-3ef3-4660-ad84-be0fc44139d2": {"__data__": {"id_": "67480952-3ef3-4660-ad84-be0fc44139d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbeed959-19df-4772-aa09-91c45a98391b", "node_type": "1", "metadata": {}, "hash": "f99cd83e98b35907550ac896cb8f38c0628e1623c7be0db8e965b05f56251412", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92a0962b-213c-4b8d-9155-bc6bcbd93abc", "node_type": "1", "metadata": {}, "hash": "0275a23b7b2c10661218176489a1ae02ca83cf21fffd1977ae0454a04bd13b74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Since `@agoric/synpress` is based on [Cypress](https://www.cypress.io/), the official [Cypress documentation](https://docs.cypress.io/guides/overview/why-cypress) has a lot of information that you can use with `@agoric/synpress`.\n\n## Installation\n\nBefore you start testing your DApp with Keplr, you'll need to install the `@agoric/synpress` in your project using the following command:\n\n```bash\nyarn add -D @agoric/synpress\n```\n\n## Project structure", "mimetype": "text/plain", "start_char_idx": 676, "end_char_idx": 1125, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92a0962b-213c-4b8d-9155-bc6bcbd93abc": {"__data__": {"id_": "92a0962b-213c-4b8d-9155-bc6bcbd93abc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67480952-3ef3-4660-ad84-be0fc44139d2", "node_type": "1", "metadata": {}, "hash": "4b5285d6c12bd5180357a541f2df215bc18c7d690af9871d64b14efc12cafddb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77d1f3d6-b121-4489-88b4-0a5d1ca921a3", "node_type": "1", "metadata": {}, "hash": "d0763a4371bd3d26f1054cae49555c1edef8ffa629c1f6caf0656b40db1c3893", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Project structure\n\nWe recommend the following project structure for keeping your e2e tests clean and manageable:\n\n```text\nproject_dir\n\u2514\u2500\u2500 src\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 e2e\n        \u2514\u2500\u2500 synpress.config.js\n        \u2514\u2500\u2500 support.js\n        \u2514\u2500\u2500 specs\n            \u2514\u2500\u2500 test.spec.js\n```\n\n## Configure `synpress.config.js`\n\nBefore you start writing your E2E tests, you'll need to create a configuration file named `synpress.config.js` in the `tests/e2e` directory of your project.", "mimetype": "text/plain", "start_char_idx": 1105, "end_char_idx": 1569, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77d1f3d6-b121-4489-88b4-0a5d1ca921a3": {"__data__": {"id_": "77d1f3d6-b121-4489-88b4-0a5d1ca921a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92a0962b-213c-4b8d-9155-bc6bcbd93abc", "node_type": "1", "metadata": {}, "hash": "0275a23b7b2c10661218176489a1ae02ca83cf21fffd1977ae0454a04bd13b74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "394cdea8-0b0c-431d-bccd-6a9de6996303", "node_type": "1", "metadata": {}, "hash": "e19a58b2b36943608b37618858541dd338228a7ffbaaa1e940a87180aa03dbab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Inside `synpress.config.js`, you'll set the `baseUrl` property within the e2e configuration. This tells Cypress where to find your DApp during testing. Here's an example configuration:\n\n```js\nconst baseConfig = require('@agoric/synpress/synpress.config');\nconst { defineConfig } = require('cypress');\n\nmodule.exports = defineConfig({\n  ...baseConfig,\n  e2e: {\n    ...baseConfig.e2e,\n    baseUrl: 'http://localhost:5173'\n  }\n});\n```", "mimetype": "text/plain", "start_char_idx": 1571, "end_char_idx": 2002, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "394cdea8-0b0c-431d-bccd-6a9de6996303": {"__data__": {"id_": "394cdea8-0b0c-431d-bccd-6a9de6996303", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77d1f3d6-b121-4489-88b4-0a5d1ca921a3", "node_type": "1", "metadata": {}, "hash": "d0763a4371bd3d26f1054cae49555c1edef8ffa629c1f6caf0656b40db1c3893", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0041759f-acaf-410a-9d26-ae81a60574ae", "node_type": "1", "metadata": {}, "hash": "0d26825cb4a0f4df2d118332922ff7cab1e77f4577ad60b0a0d443d9ccf40d59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In this example, `baseUrl` is set to `http://localhost:5173`. Make sure to replace this with the actual URL where your DApp is running.\n\nBy default, if you don't create a `synpress.config.js` file, `@agoric/synpress` assumes your DApp runs on port 3000 of your local machine (`http://localhost:3000`). Specifying the correct `baseUrl` ensures your tests interact with the right instance of your DApp.", "mimetype": "text/plain", "start_char_idx": 2004, "end_char_idx": 2404, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0041759f-acaf-410a-9d26-ae81a60574ae": {"__data__": {"id_": "0041759f-acaf-410a-9d26-ae81a60574ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "394cdea8-0b0c-431d-bccd-6a9de6996303", "node_type": "1", "metadata": {}, "hash": "e19a58b2b36943608b37618858541dd338228a7ffbaaa1e940a87180aa03dbab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c04d91fa-03d7-434b-b229-f341bf6a4abb", "node_type": "1", "metadata": {}, "hash": "7fd55d52a1dcb8dc9d40f9143711575e080397d5d9f083e05583c83936417298", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Since you have a separate `synpress.config.js` in the `tests/e2e` folder, you need to specify its location when running your tests. Use the `--configFile` flag with the `synpress run` command:\n\n```bash\nEXTENSION=keplr synpress run --configFile=tests/e2e/synpress.config.js\n```\n\n## Creating a Support File", "mimetype": "text/plain", "start_char_idx": 2406, "end_char_idx": 2710, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c04d91fa-03d7-434b-b229-f341bf6a4abb": {"__data__": {"id_": "c04d91fa-03d7-434b-b229-f341bf6a4abb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0041759f-acaf-410a-9d26-ae81a60574ae", "node_type": "1", "metadata": {}, "hash": "0d26825cb4a0f4df2d118332922ff7cab1e77f4577ad60b0a0d443d9ccf40d59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa", "node_type": "1", "metadata": {}, "hash": "eb069f257fb4ad720a59f6f79e4ace9d3fd1ab0d1839730cf3cd9787a11ccb92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Creating a Support File\n\nNavigate to your project's `tests/e2e` directory and create a new file named `support.js`. This file can be used to create reusable commands that encapsulate common testing actions. For example, you can create a custom command to navigate to a specific page within your application. You can read more about it [over here](https://docs.cypress.io/api/cypress-api/custom-commands).\n\nAfter creating your `support.js` file, make sure to include the following import statement:", "mimetype": "text/plain", "start_char_idx": 2684, "end_char_idx": 3184, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa": {"__data__": {"id_": "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c04d91fa-03d7-434b-b229-f341bf6a4abb", "node_type": "1", "metadata": {}, "hash": "7fd55d52a1dcb8dc9d40f9143711575e080397d5d9f083e05583c83936417298", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49205a50-8f01-41f7-b71c-5ed2c4ff6942", "node_type": "1", "metadata": {}, "hash": "adafa06d5dc3639a07518c2c611fcd3ac355aa037b518d20c02edbfc9908549d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport '@agoric/synpress/support/index';\n```\n\nThis import is essential because it brings in the necessary functionalities from `@agoric/synpress` to interact with the Keplr wallet within your e2e tests. Without it, your tests won't be able to leverage the features provided by `@agoric/synpress` for Keplr integration.\n\n## Example Tests", "mimetype": "text/plain", "start_char_idx": 3186, "end_char_idx": 3528, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49205a50-8f01-41f7-b71c-5ed2c4ff6942": {"__data__": {"id_": "49205a50-8f01-41f7-b71c-5ed2c4ff6942", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa", "node_type": "1", "metadata": {}, "hash": "eb069f257fb4ad720a59f6f79e4ace9d3fd1ab0d1839730cf3cd9787a11ccb92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b73db82a-af6f-460f-938b-b35625d4e9af", "node_type": "1", "metadata": {}, "hash": "80d3c98b11c0a079bca5148121e90e829a81f76e1acff37baf6ffc02173fe90b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Example Tests\n\nWith the environment set up, let's write end-to-end (e2e) tests to test your DApp's functionality. In the `tests/e2e/specs` folder, create a new file with a descriptive name that reflects what it tests (e.g., `user_login.spec.js` or `token_transfer.spec.js`).\n\n### Test Structure\n\nYou use `describe` blocks to group related tests together, and `it` blocks to define individual test cases within those groups.", "mimetype": "text/plain", "start_char_idx": 3512, "end_char_idx": 3938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b73db82a-af6f-460f-938b-b35625d4e9af": {"__data__": {"id_": "b73db82a-af6f-460f-938b-b35625d4e9af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49205a50-8f01-41f7-b71c-5ed2c4ff6942", "node_type": "1", "metadata": {}, "hash": "adafa06d5dc3639a07518c2c611fcd3ac355aa037b518d20c02edbfc9908549d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bdeead0-2b85-416d-a108-3d21f20b93cb", "node_type": "1", "metadata": {}, "hash": "7abf59d35c928aea39e1f047588427e1b78eb66e661edbc84c3a56f32c3eb46e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ndescribe('User Login', () => {\n  it('should login with valid credentials', () => {\n    // Test steps for login functionality\n  });\n});\n```\n\n### Test 1: Setting Up Keplr Wallet\n\n```js\nit('should setup a Keplr wallet', () => {\n  cy.setupWallet({\n    secretWords: 'KEPLR_MNEMONIC'\n  });\n  cy.visit('/');\n});\n```", "mimetype": "text/plain", "start_char_idx": 3940, "end_char_idx": 4254, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3bdeead0-2b85-416d-a108-3d21f20b93cb": {"__data__": {"id_": "3bdeead0-2b85-416d-a108-3d21f20b93cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b73db82a-af6f-460f-938b-b35625d4e9af", "node_type": "1", "metadata": {}, "hash": "80d3c98b11c0a079bca5148121e90e829a81f76e1acff37baf6ffc02173fe90b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4", "node_type": "1", "metadata": {}, "hash": "577aa85692ac79325ea524a55d44d2b735ba4aa5ffc26e1b84916b6cdfa6703b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This test case simulates setting up a Keplr wallet for your tests, using the `cy.setupWallet` method. Make sure to replace `KEPLR_MNEMONIC` with a 24-word mnemonic phrase. The `setupWallet` method creates a wallet based on the provided mnemonic phrase, which can then be used throughout your test suite.\n\nAfter setting up the wallet, we visit the root path (`/`) of the DApp using `cy.visit('/')`.\n\n### Test 2: Connecting Keplr Wallet", "mimetype": "text/plain", "start_char_idx": 4256, "end_char_idx": 4690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4": {"__data__": {"id_": "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bdeead0-2b85-416d-a108-3d21f20b93cb", "node_type": "1", "metadata": {}, "hash": "7abf59d35c928aea39e1f047588427e1b78eb66e661edbc84c3a56f32c3eb46e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "625e9c00-10f4-425d-b38b-528c802bf39b", "node_type": "1", "metadata": {}, "hash": "9f9abea364dc7ea3d06d5a78023c35beb4d221812edbed1830e8697449acfe2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nit('should accept connection with wallet', () => {\n  cy.contains('Connect Wallet').click();\n  cy.acceptAccess();\n});\n```\n\nThis test simulates a user connecting their Keplr wallet to your DApp. `cy.contains('Connect Wallet')` searches for an element containing the text `Connect Wallet` on the webpage and triggers a click event. `cy.acceptAccess` simulates accepting Keplr wallet access for your DApp.\n\n### Test 3: Signing a Transaction", "mimetype": "text/plain", "start_char_idx": 4692, "end_char_idx": 5134, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "625e9c00-10f4-425d-b38b-528c802bf39b": {"__data__": {"id_": "625e9c00-10f4-425d-b38b-528c802bf39b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4", "node_type": "1", "metadata": {}, "hash": "577aa85692ac79325ea524a55d44d2b735ba4aa5ffc26e1b84916b6cdfa6703b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44bfad9b-a550-4158-9914-89f095dcc2fe", "node_type": "1", "metadata": {}, "hash": "458cff2f4c0ddecb940052acaad3635b1194ccfc322644d75c489eceb94cb1f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Test 3: Signing a Transaction\n\n```js\nit('should confirm make an offer transaction', () => {\n  cy.contains('Make an Offer').click();\n  cy.confirmTransaction();\n});\n```\n\nThis test simulates transaction Signing on your DApp. `cy.contains('Make an Offer')` searches for an element containing the text `Make an Offer` and triggers a click event. `cy.confirmTransaction` simulates confirming a transaction.\n\n### Running the Tests\n\nYou can now trigger the tests by running this command:", "mimetype": "text/plain", "start_char_idx": 5101, "end_char_idx": 5584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44bfad9b-a550-4158-9914-89f095dcc2fe": {"__data__": {"id_": "44bfad9b-a550-4158-9914-89f095dcc2fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "625e9c00-10f4-425d-b38b-528c802bf39b", "node_type": "1", "metadata": {}, "hash": "9f9abea364dc7ea3d06d5a78023c35beb4d221812edbed1830e8697449acfe2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7933593-0aae-4fbf-a47c-40120122c8f5", "node_type": "1", "metadata": {}, "hash": "da20940b57d19809b9f98a04bebfa2d0831bba4ea1c969c3d94ffd3278d1ac0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```bash\nEXTENSION=keplr synpress run --configFile=tests/e2e/synpress.config.js\n```\n\n## Projects Using `@agoric/synpress`\n\nSome examples projects utilizing `@agoric/synpress` for e2e tests:\n\n- [PSM dApp E2E Tests](https://github.com/Agoric/dapp-psm/tree/main/tests/e2e)\n- [Wallet dApp E2E Tests](https://github.com/frazarshad/wallet-app/tree/main/test/e2e)\n\n## @agoric/synpress Commands", "mimetype": "text/plain", "start_char_idx": 5586, "end_char_idx": 5971, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7933593-0aae-4fbf-a47c-40120122c8f5": {"__data__": {"id_": "e7933593-0aae-4fbf-a47c-40120122c8f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44bfad9b-a550-4158-9914-89f095dcc2fe", "node_type": "1", "metadata": {}, "hash": "458cff2f4c0ddecb940052acaad3635b1194ccfc322644d75c489eceb94cb1f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30fe353f-fbeb-4c35-a6cc-c7d36438e40f", "node_type": "1", "metadata": {}, "hash": "66fcfc20ddebe784279d6d0707bc338ae1b18075195260d42279fa5ae049e45b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## @agoric/synpress Commands\n\nThe `@agoric/synpress` commands are custom Cypress commands designed for use with Keplr. They provide ready-made functions to interact with Keplr-specific elements and workflows.\n\n### `setupWallet`\n\nInitializes a Keplr wallet for testing. You can either create a new one or import an existing one using the provided options.\n\n**Arguments:**\n\n(All arguments are optional)\n\nThe command takes a single object as an argument with the following keys:", "mimetype": "text/plain", "start_char_idx": 5943, "end_char_idx": 6418, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30fe353f-fbeb-4c35-a6cc-c7d36438e40f": {"__data__": {"id_": "30fe353f-fbeb-4c35-a6cc-c7d36438e40f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7933593-0aae-4fbf-a47c-40120122c8f5", "node_type": "1", "metadata": {}, "hash": "da20940b57d19809b9f98a04bebfa2d0831bba4ea1c969c3d94ffd3278d1ac0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd773573-843c-44d1-bc02-53a3e146fad0", "node_type": "1", "metadata": {}, "hash": "bf0cd976cff6c61ecefdd9c6e29459bb573b6065c1ce5f9f8bd1836c9b465d88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `secretWords` _(**string**)_: The secret words for the wallet. (default is a predefined mnemonic phrase that represents a wallet address on the Agoric chain)\n- `privateKey` _(**string**)_: The private key for the wallet.\n- `password` _(**string**)_: The password for the wallet. (default is `Test1234`).\n- `walletName` _(**string**)_: The name of the wallet. (default is `My Wallet`).\n- `selectedChains` _(**array**)_: The chains to select. (default is an empty array, `[]`).", "mimetype": "text/plain", "start_char_idx": 6420, "end_char_idx": 6897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd773573-843c-44d1-bc02-53a3e146fad0": {"__data__": {"id_": "bd773573-843c-44d1-bc02-53a3e146fad0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30fe353f-fbeb-4c35-a6cc-c7d36438e40f", "node_type": "1", "metadata": {}, "hash": "66fcfc20ddebe784279d6d0707bc338ae1b18075195260d42279fa5ae049e45b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ad56aa0-df9c-45d9-a31e-8dfd80546b03", "node_type": "1", "metadata": {}, "hash": "22573e46382ac1becd2238f0447e7dcbb1a86868e19101f91aacc14caa12f5a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `createNewWallet` _(**boolean**)_: Whether to create a new wallet (default is `false`).", "mimetype": "text/plain", "start_char_idx": 6898, "end_char_idx": 6987, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ad56aa0-df9c-45d9-a31e-8dfd80546b03": {"__data__": {"id_": "1ad56aa0-df9c-45d9-a31e-8dfd80546b03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd773573-843c-44d1-bc02-53a3e146fad0", "node_type": "1", "metadata": {}, "hash": "bf0cd976cff6c61ecefdd9c6e29459bb573b6065c1ce5f9f8bd1836c9b465d88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8373015e-3a30-412e-aeca-83f71eebf235", "node_type": "1", "metadata": {}, "hash": "e22ee385576acec082d6a887570fc865b85d4ac3ade1db5c53a2caa4c00037d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Returns:**\n\n- _(**boolean**)_: `true` if the wallet was set up successfully, `false` otherwise.\n\n### `acceptAccess`\n\nHandles the authorization process for connecting the Keplr wallet to a DApp. DApps provide a `Connect Wallet` option to initiate this process.\n\n**Returns:**\n\n- _(**boolean**)_: `true` if access was accepted successfully, `false` otherwise.\n\n### `confirmTransaction`", "mimetype": "text/plain", "start_char_idx": 6989, "end_char_idx": 7373, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8373015e-3a30-412e-aeca-83f71eebf235": {"__data__": {"id_": "8373015e-3a30-412e-aeca-83f71eebf235", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ad56aa0-df9c-45d9-a31e-8dfd80546b03", "node_type": "1", "metadata": {}, "hash": "22573e46382ac1becd2238f0447e7dcbb1a86868e19101f91aacc14caa12f5a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb3a1e90-003c-4324-847d-327f1ea0250c", "node_type": "1", "metadata": {}, "hash": "252a106c1d7fe2486ecc863044a74ee59824bcdfc488e9d3af7593fc4a93d024", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `confirmTransaction`\n\nHandles signing transactions within a DApp using the Keplr wallet. This occurs when a user initiates a transaction, such as sending tokens or interacting with a smart contract.\n\n**Returns:**\n\n- _(**boolean**)_: `true` if transaction was approved successfully, `false` otherwise.\n\n### `disconnectWalletFromDapp`\n\nDisconnects the Keplr wallet from all previously connected DApps.\n\n**Returns:**\n\n- _(**boolean**)_:`true` if the disconnection was successful, `false` otherwise.", "mimetype": "text/plain", "start_char_idx": 7349, "end_char_idx": 7848, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb3a1e90-003c-4324-847d-327f1ea0250c": {"__data__": {"id_": "bb3a1e90-003c-4324-847d-327f1ea0250c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8373015e-3a30-412e-aeca-83f71eebf235", "node_type": "1", "metadata": {}, "hash": "e22ee385576acec082d6a887570fc865b85d4ac3ade1db5c53a2caa4c00037d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdb7007b-c7ab-4f90-af25-62090434e8bd", "node_type": "1", "metadata": {}, "hash": "ace0ce3912250f77f9c609e21a5b0fe6a3908d927d1ba125fb1660609f942d7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `getWalletAddress`\n\nRetrieves the wallet address of the currently active wallet associated with a specified blockchain.\n\n**Arguments:**\n\n- `chainName` _(**string**)_: The name of the blockchain for which you want to obtain the wallet address.\n\n**Returns:**\n\n- _(**string**)_: The wallet address for the specified blockchain.\n\n### `switchWallet`\n\nSwitches the active wallet to the specified wallet by name.\n\n**Arguments:**", "mimetype": "text/plain", "start_char_idx": 7850, "end_char_idx": 8275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cdb7007b-c7ab-4f90-af25-62090434e8bd": {"__data__": {"id_": "cdb7007b-c7ab-4f90-af25-62090434e8bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb3a1e90-003c-4324-847d-327f1ea0250c", "node_type": "1", "metadata": {}, "hash": "252a106c1d7fe2486ecc863044a74ee59824bcdfc488e9d3af7593fc4a93d024", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15a43e86-240a-463d-9e3a-fd13642ed6cc", "node_type": "1", "metadata": {}, "hash": "6a61522856a3760c71c11e0ef1e7c4833989eb7718cbdac62ef6a41c234acdc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Arguments:**\n\n- `walletName` _(**string**)_: The name of the wallet you want to switch to. This should match the name used when the wallet was created using the `setupWallet` command.\n\n**Returns:**\n\n- _(**boolean**)_: `true` if the wallet switch was successful, `false` otherwise.\n\n### `addNewTokensFound`\n\nAdds all the new tokens discovered by the Keplr extension to the user's token portfolio when it connects to a new blockchain network.\n\n**Returns:**", "mimetype": "text/plain", "start_char_idx": 8261, "end_char_idx": 8717, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15a43e86-240a-463d-9e3a-fd13642ed6cc": {"__data__": {"id_": "15a43e86-240a-463d-9e3a-fd13642ed6cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cdb7007b-c7ab-4f90-af25-62090434e8bd", "node_type": "1", "metadata": {}, "hash": "ace0ce3912250f77f9c609e21a5b0fe6a3908d927d1ba125fb1660609f942d7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6270ed94-c253-4fca-aa18-9858f62956c0", "node_type": "1", "metadata": {}, "hash": "48a34cf4e0ba1a893d83031adeb8f2d376ab496de3f6b77ba88f67dc4f9ddf6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Returns:**\n\n- _(**boolean**)_: `true` if the tokens were successfully added to the user's token portfolio `false` otherwise.\n\n### `getTokenAmount`\n\nRetrieves the balance of a specified token in the wallet.\n\n**Arguments:**\n\n- `tokenName` _(**string**)_: The name of the token for which you want to retrieve the balance.\n\n**Returns:**\n\n- _(**number**)_: The amount of the specified token currently held in the wallet.\n\n### `isExtensionWindowActive`", "mimetype": "text/plain", "start_char_idx": 8705, "end_char_idx": 9153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6270ed94-c253-4fca-aa18-9858f62956c0": {"__data__": {"id_": "6270ed94-c253-4fca-aa18-9858f62956c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15a43e86-240a-463d-9e3a-fd13642ed6cc", "node_type": "1", "metadata": {}, "hash": "6a61522856a3760c71c11e0ef1e7c4833989eb7718cbdac62ef6a41c234acdc3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a", "node_type": "1", "metadata": {}, "hash": "7dd876716265e712560f35752e0860b80bb8ac4e5116f64b595353af1f10cfe9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `isExtensionWindowActive`\n\nDetermines whether the Keplr extension window is the currently active tab.\n\n**Returns:**\n\n- _(**boolean**)_:`true` if the Keplr extension window is active, `false` otherwise.\n\n### `switchToExtensionWindow`\n\nSwitches the focus to the Keplr extension window tab. Keplr window is used for managing wallet related operations.\n\n**Returns:**\n\n- _(**boolean**)_:`true` if the focus change was successful, `false` otherwise.\n\n### `isCypressWindowActive`", "mimetype": "text/plain", "start_char_idx": 9124, "end_char_idx": 9600, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a": {"__data__": {"id_": "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6270ed94-c253-4fca-aa18-9858f62956c0", "node_type": "1", "metadata": {}, "hash": "48a34cf4e0ba1a893d83031adeb8f2d376ab496de3f6b77ba88f67dc4f9ddf6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4db0c86a-9276-4382-92fe-fc7652dedcf9", "node_type": "1", "metadata": {}, "hash": "b62b4f747dc1d3ce4627b7fe61c9ee48cbb6ada74f9e7861adce3ac977076770", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `isCypressWindowActive`\n\nDetermines whether the Cypress window, where the DApp is running, is the currently active tab.\n\n**Returns:**\n\n- _(**boolean**)_:`true` if the Cypress window is active, `false` otherwise.\n\n### `switchToCypressWindow`\n\nSwitches the focus to the Cypress window tab.\n\n**Returns:**\n\n- _(**boolean**)_:`true` if the focus change was successful, `false` otherwise.\n\n<br />", "mimetype": "text/plain", "start_char_idx": 9573, "end_char_idx": 9967, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4db0c86a-9276-4382-92fe-fc7652dedcf9": {"__data__": {"id_": "4db0c86a-9276-4382-92fe-fc7652dedcf9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_e2e-testing.md", "node_type": "4", "metadata": {}, "hash": "70e8b9e9b0faadd9d3624df5346b3897ea3e8b80d9523eccf130f0aa4db0bcb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a", "node_type": "1", "metadata": {}, "hash": "7dd876716265e712560f35752e0860b80bb8ac4e5116f64b595353af1f10cfe9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<br />\n\nFor a full list of commands, you can refer to the [Keplr plugin file](https://github.com/agoric-labs/synpress/blob/dev/plugins/keplr-plugin.js).", "mimetype": "text/plain", "start_char_idx": 9961, "end_char_idx": 10113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ecfe11b7-60f6-4491-b06c-a55e51372777": {"__data__": {"id_": "ecfe11b7-60f6-4491-b06c-a55e51372777", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1956d6bf-914c-47a6-977c-f8c35a47a2c6", "node_type": "1", "metadata": {}, "hash": "29f45b067fd51f9f2b69ef46b252fa987490e089b26e646872c0c669a2ef7846", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nlayout: home\n\ntitle: Agoric\ntitleTemplate: Secured, Distributed JavaScript", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 78, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1956d6bf-914c-47a6-977c-f8c35a47a2c6": {"__data__": {"id_": "1956d6bf-914c-47a6-977c-f8c35a47a2c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecfe11b7-60f6-4491-b06c-a55e51372777", "node_type": "1", "metadata": {}, "hash": "e5b8e79fa56767f54cde1ab3e82ec1e8840417eaf6f33b1b0b6194c514a87984", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "888564db-93fb-4eeb-a7ce-3d7fe030e83b", "node_type": "1", "metadata": {}, "hash": "b6d4068ff7adca355eb80d45f492abd986a1db913452e5b7a384b44933f0b22f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "hero:\n  name: Agoric\n  text: Bringing Orchestration to Web3 Builders\n  tagline: Build feature-rich applications that seamlessly manage assets and services across multiple blockchains.\n  actions:\n    - theme: brand\n      text: Get Started\n      link: /guides/getting-started/\n    - theme: alt\n      text: 'App #1: Offer Safety'\n      link: https://github.com/Agoric/dapp-offer-up#readme\n    - theme: alt\n      text: 'App #2: Basics'\n      link: https://github.com/Agoric/dapp-agoric-basics#readme", "mimetype": "text/plain", "start_char_idx": 80, "end_char_idx": 575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "888564db-93fb-4eeb-a7ce-3d7fe030e83b": {"__data__": {"id_": "888564db-93fb-4eeb-a7ce-3d7fe030e83b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1956d6bf-914c-47a6-977c-f8c35a47a2c6", "node_type": "1", "metadata": {}, "hash": "29f45b067fd51f9f2b69ef46b252fa987490e089b26e646872c0c669a2ef7846", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f98130d-39a3-463b-b8e4-4cd1d3add03c", "node_type": "1", "metadata": {}, "hash": "1dd05690700a95f619844e52d36cb0a4bc9036982bcc560451427e4ddf157804", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- theme: alt\n      text: 'App #3: Orchestration'\n      link: https://github.com/Agoric/dapp-orchestration-basics#readme\n  image:\n    src: /bld-logo-color.svg\n    alt: Agoric", "mimetype": "text/plain", "start_char_idx": 580, "end_char_idx": 753, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f98130d-39a3-463b-b8e4-4cd1d3add03c": {"__data__": {"id_": "6f98130d-39a3-463b-b8e4-4cd1d3add03c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "888564db-93fb-4eeb-a7ce-3d7fe030e83b", "node_type": "1", "metadata": {}, "hash": "b6d4068ff7adca355eb80d45f492abd986a1db913452e5b7a384b44933f0b22f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2b6e77c-12c8-4aab-8646-7ed6876d88c4", "node_type": "1", "metadata": {}, "hash": "dea8f8afab5ee018e569cc411e5e5a75901d7e41e243ee73b5cffcba8a69358d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "features:\n  - icon: \u2753\n    title: What is Agoric?\n    details: The Agoric chain, tech stack, and ecosystem\n    link: /what-is-agoric\n\n  - icon:\n      src: '/orchestrate.svg'\n    title: Orchestrate\n    details: Build and manage multi-chain operations with the Orchestration API\n    link: /guides/orchestration/\n\n  - icon: \ud83e\uddd1\u200d\ud83c\udf93\ufe0f\n    title: Learn\n    details: Learn how Smart Contracts work on Agoric Platform\n    link: /guides/zoe/", "mimetype": "text/plain", "start_char_idx": 755, "end_char_idx": 1182, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2b6e77c-12c8-4aab-8646-7ed6876d88c4": {"__data__": {"id_": "c2b6e77c-12c8-4aab-8646-7ed6876d88c4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f98130d-39a3-463b-b8e4-4cd1d3add03c", "node_type": "1", "metadata": {}, "hash": "1dd05690700a95f619844e52d36cb0a4bc9036982bcc560451427e4ddf157804", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ea2ed53-6816-4b07-a78e-f1abe2fac07d", "node_type": "1", "metadata": {}, "hash": "66b7bcd1434b4d6bbe819f21bd7f9cfc96ee77110844f70dcc4bd0076093f718", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- icon: \ud83d\udee0\ufe0f\n    title: Build\n    details: Deploy your first Agoric dapp\n    link: /guides/getting-started/\n\n  - icon: \ud83d\udcd1\n    title: Tutorials\n    details: Step by step instructions on how to get Started with Smart Contracts\n    link: /guides/getting-started/tutorial-dapp-agoric-basics\n\n  - icon: \ud83d\udcac\n    title: Discord\n    details: Meet our developer community and make friends.\n    link: https://agoric.com/discord", "mimetype": "text/plain", "start_char_idx": 1186, "end_char_idx": 1598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ea2ed53-6816-4b07-a78e-f1abe2fac07d": {"__data__": {"id_": "0ea2ed53-6816-4b07-a78e-f1abe2fac07d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_index.md", "node_type": "4", "metadata": {}, "hash": "a087fb29dcaa660123b51b8307096d9dfea7aa0f9b10af35bf6f8a442dafe4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2b6e77c-12c8-4aab-8646-7ed6876d88c4", "node_type": "1", "metadata": {}, "hash": "dea8f8afab5ee018e569cc411e5e5a75901d7e41e243ee73b5cffcba8a69358d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- icon: \ud83d\udca1\n    title: Github Discussions\n    details: Ask questions. Share ideas.\n    link: https://github.com/Agoric/agoric-sdk/discussions\n\n  - icon: \ud83d\udd58\n    title: Office Hours\n    details: Join us for open discussion, whether you're just getting started or deep into the details.\n    link: https://github.com/Agoric/agoric-sdk/wiki/Office-Hours\n\n  - icon: \ud83d\udc26\n    title: Twitter\n    details: Catch up on all things Agoric product, events, and more.\n    link: https://twitter.com/agoric\n---", "mimetype": "text/plain", "start_char_idx": 1602, "end_char_idx": 2090, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22bbfe55-e9f2-4e8d-8ae2-939dcb6ab0d9": {"__data__": {"id_": "22bbfe55-e9f2-4e8d-8ae2-939dcb6ab0d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_what-is-agoric.md", "node_type": "4", "metadata": {}, "hash": "c42fe12c5dd9a0a1603178cf6446845ade8e2346394166cefbf24f2629f12119", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75eaea8d-3116-4b8a-8270-596746bf75e4", "node_type": "1", "metadata": {}, "hash": "3e28713775f544d758813ce3feaaf558fdc38e8a3ab86809094ec4c688592013", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# What is Agoric?\n\nAgoric is a Cosmos-based Layer 1 blockchain for building cross-chain\nsmart contracts in JavaScript. The platform\u2019s asynchronous,\nmulti-block architecture uniquely enables developers to orchestrate\nliquidity and services across the growing multi-chain universe, making\nAgoric ideal for building software with seamless user experiences. The\nnative token BLD is used for staking and governance. The\nover-collateralized IST stable token is used to pay network fees.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75eaea8d-3116-4b8a-8270-596746bf75e4": {"__data__": {"id_": "75eaea8d-3116-4b8a-8270-596746bf75e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_what-is-agoric.md", "node_type": "4", "metadata": {}, "hash": "c42fe12c5dd9a0a1603178cf6446845ade8e2346394166cefbf24f2629f12119", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22bbfe55-e9f2-4e8d-8ae2-939dcb6ab0d9", "node_type": "1", "metadata": {}, "hash": "0bc6e8edd7b3b124ba5c5c70d75bea6ed6ebeecc6903aa1e820aae5aa797f5f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13d5ea56-5b6a-4be3-98aa-ea5bd886275e", "node_type": "1", "metadata": {}, "hash": "0309929118ae125c15605da98ac7316c08e8d79205bf10aff115d40b25f29b3a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Agoric blockchain is built on the CometBFT consensus system with\nnative Inter-Blockchain Communication Protocol (IBC) support. Smart\ncontracts can seamlessly integrate 3rd party libraries, so a contract\ncould invoke an operation on Avalanche via Axelar\u2019s GMP the same way\nit does on Osmosis via IBC. Agoric smart contracts are long-lived\nprocesses that can execute across multiple blocks by default, so it\u2019s\neasy to design contract logic that makes a request over IBC to another", "mimetype": "text/plain", "start_char_idx": 482, "end_char_idx": 964, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13d5ea56-5b6a-4be3-98aa-ea5bd886275e": {"__data__": {"id_": "13d5ea56-5b6a-4be3-98aa-ea5bd886275e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_what-is-agoric.md", "node_type": "4", "metadata": {}, "hash": "c42fe12c5dd9a0a1603178cf6446845ade8e2346394166cefbf24f2629f12119", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75eaea8d-3116-4b8a-8270-596746bf75e4", "node_type": "1", "metadata": {}, "hash": "3e28713775f544d758813ce3feaaf558fdc38e8a3ab86809094ec4c688592013", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd", "node_type": "1", "metadata": {}, "hash": "5d53d72f1fd39276c2213d979eaf4146ec59d542f995f3bf696a6fb20853374b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "chain, awaits the result, then reacts to it. With on-chain timers,\ndevelopers can program Agoric smart contracts to take actions across\ntime with scheduled, long-term, and periodic actions\n(e.g. subscriptions, mortgages).", "mimetype": "text/plain", "start_char_idx": 965, "end_char_idx": 1186, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd": {"__data__": {"id_": "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_what-is-agoric.md", "node_type": "4", "metadata": {}, "hash": "c42fe12c5dd9a0a1603178cf6446845ade8e2346394166cefbf24f2629f12119", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13d5ea56-5b6a-4be3-98aa-ea5bd886275e", "node_type": "1", "metadata": {}, "hash": "0309929118ae125c15605da98ac7316c08e8d79205bf10aff115d40b25f29b3a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "570fc89c-19d5-4c13-88a9-2acc59f45ea2", "node_type": "1", "metadata": {}, "hash": "1f8ce47989e54492ed4fcff248d2a1c0c80ec5ed1be56144a9c7a0206b35623b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Agoric\u2019s hardened JavaScript makes blockchain programming accessible\nto the 17+ million JavaScript developers around the world. Hardened\nJavaScript provides the safe, stable environment that developers need\nto build, deploy, and operate sophisticated applications, NFTs, and\nDeFi markets. Beyond the JavaScript programming language, the Agoric\nplatform introduces Zoe, a \u201cfirst of its kind\u201d escrow service that\nenables safe economic composition between smart contracts. Zoe brings", "mimetype": "text/plain", "start_char_idx": 1188, "end_char_idx": 1668, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "570fc89c-19d5-4c13-88a9-2acc59f45ea2": {"__data__": {"id_": "570fc89c-19d5-4c13-88a9-2acc59f45ea2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_what-is-agoric.md", "node_type": "4", "metadata": {}, "hash": "c42fe12c5dd9a0a1603178cf6446845ade8e2346394166cefbf24f2629f12119", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd", "node_type": "1", "metadata": {}, "hash": "5d53d72f1fd39276c2213d979eaf4146ec59d542f995f3bf696a6fb20853374b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "to web3 developers on the Agoric platform the kind of modern,\npluggable component framework that has dominated web2 development, the\nsame kind of exponential composability that led to the explosive\ngrowth of the Node.js, React.js, and other JavaScript ecosystems.", "mimetype": "text/plain", "start_char_idx": 1669, "end_char_idx": 1932, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1402ca6c-941f-4dfa-9f32-9913b68438c5": {"__data__": {"id_": "1402ca6c-941f-4dfa-9f32-9913b68438c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8f713c1-22b5-45f4-a0c9-533178a7d4a9", "node_type": "1", "metadata": {}, "hash": "6401712555ad38029b5973f86de3df61e87d134d6a5246278ec8e38b95012b23", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nsidebar: auto\n---\n\n# Glossary\n\nThis page lists words, expressions, or concepts used by the Agoric technology stack.\n\n## a3p\n\nA short form of [agoric-3-proposals](https://github.com/Agoric/agoric-3-proposals/), a repository containing \"Proposals run or planned for Mainnet (agoric-3)\". The resulting docker images supply a test network environment for dapps, as discussed in [getting started](/guides/getting-started/).\n\n## Agoric CLI", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 437, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8f713c1-22b5-45f4-a0c9-533178a7d4a9": {"__data__": {"id_": "b8f713c1-22b5-45f4-a0c9-533178a7d4a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1402ca6c-941f-4dfa-9f32-9913b68438c5", "node_type": "1", "metadata": {}, "hash": "f3d2b0ede351a2cab836af4aaf48f358210295ea97357a431ea2957bca204a27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad428229-1650-4d07-bf00-bbc5095eb6cc", "node_type": "1", "metadata": {}, "hash": "feeb979b91c2283212762ef61f7a7db017e6e5d72dc55e0a3b0b5a260d3f0e32", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Agoric CLI\n\nA command line interface for initializing, deploying, and starting Agoric projects, as well as installing dependencies. See the [Agoric CLI documentation](/guides/agoric-cli/) for more information.\n\n## AllegedName\n\nHuman-readable name of a type of assets. The alleged name should\nnot be trusted as an accurate depiction, since it is provided by\nthe maker of the mint and could be deceptive, but is useful for debugging and double-checking.\n\nThe AllegedName must be a string.\n\n## Allocation", "mimetype": "text/plain", "start_char_idx": 424, "end_char_idx": 928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad428229-1650-4d07-bf00-bbc5095eb6cc": {"__data__": {"id_": "ad428229-1650-4d07-bf00-bbc5095eb6cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8f713c1-22b5-45f4-a0c9-533178a7d4a9", "node_type": "1", "metadata": {}, "hash": "6401712555ad38029b5973f86de3df61e87d134d6a5246278ec8e38b95012b23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5cbda961-6e55-482b-a1a6-64d565e66e2e", "node_type": "1", "metadata": {}, "hash": "00a72c69508a1be45c423415ec16eb4b2b87a0844c18d35cb59ab338dbc6410d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Allocation\n\nAllocations represent the [amounts](#amount) to be paid out to each [seat](#seat) on exit from a contract instance. Possible\nexit causes are exercising an exit condition, the contract's explicit choice, or a crash or freeze. There are several methods\nfor getting the amounts currently allocated.", "mimetype": "text/plain", "start_char_idx": 915, "end_char_idx": 1225, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5cbda961-6e55-482b-a1a6-64d565e66e2e": {"__data__": {"id_": "5cbda961-6e55-482b-a1a6-64d565e66e2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad428229-1650-4d07-bf00-bbc5095eb6cc", "node_type": "1", "metadata": {}, "hash": "feeb979b91c2283212762ef61f7a7db017e6e5d72dc55e0a3b0b5a260d3f0e32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cafe8d5-668c-4237-a8d4-f8b6e1526812", "node_type": "1", "metadata": {}, "hash": "39228b136274c3b024e1f81b8ea8f25453569c4f253459a3db14e746919c278b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In more detail, Zoe's guarantee is each [seat](#seat) will either get what it asked for in its offer, or the return of what was [escrowed](#escrow).\nThe contract can reallocate fairly arbitrarily to achieve that. As contract code is visible to its clients, users can see\nwhat the contract intends to do.", "mimetype": "text/plain", "start_char_idx": 1227, "end_char_idx": 1530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cafe8d5-668c-4237-a8d4-f8b6e1526812": {"__data__": {"id_": "0cafe8d5-668c-4237-a8d4-f8b6e1526812", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5cbda961-6e55-482b-a1a6-64d565e66e2e", "node_type": "1", "metadata": {}, "hash": "00a72c69508a1be45c423415ec16eb4b2b87a0844c18d35cb59ab338dbc6410d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e4ed967-807c-406b-b8ae-8964a70d1710", "node_type": "1", "metadata": {}, "hash": "3495154273a8efabed1e45d57dd78f8d41cfd6d3bbf416c2ae464e6a17f78406", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Zoe enforces those terms by keeping track of a current allocation for each seat. The initial allocation is the deposit.\nThe contract can modify a seat's allocation as long as it never violates offer safety or rights conservation. i.e. it can't\nassign assets that weren't already in some allocation and it can't assign them to more than one seat. Also, goods can't\ndisappear from the total allocation.\n\n## Amount", "mimetype": "text/plain", "start_char_idx": 1532, "end_char_idx": 1943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e4ed967-807c-406b-b8ae-8964a70d1710": {"__data__": {"id_": "1e4ed967-807c-406b-b8ae-8964a70d1710", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cafe8d5-668c-4237-a8d4-f8b6e1526812", "node_type": "1", "metadata": {}, "hash": "39228b136274c3b024e1f81b8ea8f25453569c4f253459a3db14e746919c278b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dea2ee06-df27-48d2-9668-57016b79e200", "node_type": "1", "metadata": {}, "hash": "906306a8eaeb5fd93da95ceb770fa4dea9f3a3e9580b2126594683832d34e18e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Amount\n\nAmounts are the canonical descriptions of tradable goods. They are manipulated\nby [issuers](#issuer) and [mints](#mint), and represent the goods and currency carried by\n[purses](#purse) and [payments](#payment). They represent things like currency, stock, and the\nabstract right to participate in a particular exchange.", "mimetype": "text/plain", "start_char_idx": 1934, "end_char_idx": 2264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dea2ee06-df27-48d2-9668-57016b79e200": {"__data__": {"id_": "dea2ee06-df27-48d2-9668-57016b79e200", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e4ed967-807c-406b-b8ae-8964a70d1710", "node_type": "1", "metadata": {}, "hash": "3495154273a8efabed1e45d57dd78f8d41cfd6d3bbf416c2ae464e6a17f78406", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "109504d6-86c4-4cf4-b907-8197d072d511", "node_type": "1", "metadata": {}, "hash": "a746e9a595355689e3c88a6d8d114ef3d761370f1b252c85520b6650ee50ac52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An amount is comprised of a [brand](#brand) with a [value](#amountvalue). For example, \"4 Quatloos\"\nis an amount with a value of \"4\" and a brand of the imaginary currency \"Quatloos\".", "mimetype": "text/plain", "start_char_idx": 2266, "end_char_idx": 2448, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "109504d6-86c4-4cf4-b907-8197d072d511": {"__data__": {"id_": "109504d6-86c4-4cf4-b907-8197d072d511", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dea2ee06-df27-48d2-9668-57016b79e200", "node_type": "1", "metadata": {}, "hash": "906306a8eaeb5fd93da95ceb770fa4dea9f3a3e9580b2126594683832d34e18e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55e8243f-c760-431d-826d-fd3f0b93ac56", "node_type": "1", "metadata": {}, "hash": "7840578623dbc7da769762f492c482c20729ab51efba0febe76ab80f07b10a48", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Important**: Amounts are _descriptions_ of digital assets, not the actual assets. They have no\neconomic scarcity or intrinsic value.\nFor example, to make you an offer to buy a magic sword in a game,\na party sends you an amount describing the asset of 5 Quatloos they're willing to trade for your\nsword. They don't send you the actual 5 Quatloos; that only happens when there is agreement on the\ntrade terms and they send you a payment, not an amount, of 5 Quatloos, the actual asset. Creating", "mimetype": "text/plain", "start_char_idx": 2450, "end_char_idx": 2944, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55e8243f-c760-431d-826d-fd3f0b93ac56": {"__data__": {"id_": "55e8243f-c760-431d-826d-fd3f0b93ac56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "109504d6-86c4-4cf4-b907-8197d072d511", "node_type": "1", "metadata": {}, "hash": "a746e9a595355689e3c88a6d8d114ef3d761370f1b252c85520b6650ee50ac52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60729b3b-2648-4fa3-9580-1c9dc321a45f", "node_type": "1", "metadata": {}, "hash": "3111d051e41766d16b215711d3594bfe9145e79bd90248d339ae16b001280a22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "a new `amount` does **not** create new assets.", "mimetype": "text/plain", "start_char_idx": 2945, "end_char_idx": 2991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60729b3b-2648-4fa3-9580-1c9dc321a45f": {"__data__": {"id_": "60729b3b-2648-4fa3-9580-1c9dc321a45f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55e8243f-c760-431d-826d-fd3f0b93ac56", "node_type": "1", "metadata": {}, "hash": "7840578623dbc7da769762f492c482c20729ab51efba0febe76ab80f07b10a48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "216e5849-af92-4eae-b170-b4cbe444b4b0", "node_type": "1", "metadata": {}, "hash": "acfd7106ecd2c61aa50e453914fdfc349e58991c0c104a91387b1ebe817db08a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [ERTP documentation's Amounts section](/guides/ertp/amounts)\nand the [ERTP API's AmountMath section](/reference/ertp-api/amount-math).\n\n## AmountMath", "mimetype": "text/plain", "start_char_idx": 2993, "end_char_idx": 3172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "216e5849-af92-4eae-b170-b4cbe444b4b0": {"__data__": {"id_": "216e5849-af92-4eae-b170-b4cbe444b4b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60729b3b-2648-4fa3-9580-1c9dc321a45f", "node_type": "1", "metadata": {}, "hash": "3111d051e41766d16b215711d3594bfe9145e79bd90248d339ae16b001280a22", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fa9e3ea-765c-4684-be8a-8681370c797c", "node_type": "1", "metadata": {}, "hash": "8f31d76a5d538933aa2fa516d85d283bc47dc9327699344c5b3cb41e59ef0e86", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AmountMath\n\nThe AmountMath library executes the logic of how [amounts](#amount) are changed when digital assets are merged, separated,\nor otherwise manipulated. For example, a deposit of 3 [Quatloos](#quatloos) into a purse that already has 7 Quatloos\nupdates its balance to 10 Quatloos. But a deposit of a non-fungible theater ticket into a purse that already holds\nfive tickets is performed by set union rather than by arithmetic.", "mimetype": "text/plain", "start_char_idx": 3159, "end_char_idx": 3594, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7fa9e3ea-765c-4684-be8a-8681370c797c": {"__data__": {"id_": "7fa9e3ea-765c-4684-be8a-8681370c797c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "216e5849-af92-4eae-b170-b4cbe444b4b0", "node_type": "1", "metadata": {}, "hash": "acfd7106ecd2c61aa50e453914fdfc349e58991c0c104a91387b1ebe817db08a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4796b6b-88bc-4027-b909-3044f636e8cf", "node_type": "1", "metadata": {}, "hash": "ce07c6b239c4e6a46de84e9d03986e16e5595eda6c7e0d12405f61f5147f1b1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`AmountMath` has a single set of polymorphic methods that deal with different asset kinds:", "mimetype": "text/plain", "start_char_idx": 3596, "end_char_idx": 3686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4796b6b-88bc-4027-b909-3044f636e8cf": {"__data__": {"id_": "d4796b6b-88bc-4027-b909-3044f636e8cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fa9e3ea-765c-4684-be8a-8681370c797c", "node_type": "1", "metadata": {}, "hash": "8f31d76a5d538933aa2fa516d85d283bc47dc9327699344c5b3cb41e59ef0e86", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61d8c8f2-96c3-4658-b650-8fbf26e515f0", "node_type": "1", "metadata": {}, "hash": "3a4fd3b57ac9bebf609b80748b98aa21241ec06e0e3709b2ffae5f5c7c48cc39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `AssetKind.NAT`: Used with [fungible](#fungible) assets.\n  Each amount value is a natural number (non-negative integer).\n  This is the default `AssetKind`.\n- `AssetKind.SET`: Used with [non-fungible](#non-fungible) assets;\n  deprecated in favor of `AssetKind.COPY_SET` but still in wide use.\n  Each amount value is an array of [Key](#key) values\n  subject to the same constraints as those of `AssetKind.COPY_SET`.\n- `AssetKind.COPY_SET`: Used with [non-fungible](#non-fungible) assets.", "mimetype": "text/plain", "start_char_idx": 3688, "end_char_idx": 4175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61d8c8f2-96c3-4658-b650-8fbf26e515f0": {"__data__": {"id_": "61d8c8f2-96c3-4658-b650-8fbf26e515f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4796b6b-88bc-4027-b909-3044f636e8cf", "node_type": "1", "metadata": {}, "hash": "ce07c6b239c4e6a46de84e9d03986e16e5595eda6c7e0d12405f61f5147f1b1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5f270dd-dc8b-431b-ae12-85662cbc113b", "node_type": "1", "metadata": {}, "hash": "88ce20cb8cb8f5d0fe319547ee0ed2db791abff13a150b4d3d45ee72aba805bb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each amount value is a set of [Key](#key) values\n  (strings, numbers, objects, etc.).\n  Amount values cannot include promises (they aren't keys), and should not\n  include privileged objects such as payments and purses.\n- `AssetKind.COPY_BAG`: Used with [semi-fungible](#semi-fungible) assets.\n  Each amount value is a [multiset](https://en.wikipedia.org/wiki/Multiset)\n  of [Key](#key) values subject to the same constraints as\n  those of `AssetKind.COPY_SET` but allowed to be present more than once.", "mimetype": "text/plain", "start_char_idx": 4178, "end_char_idx": 4679, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5f270dd-dc8b-431b-ae12-85662cbc113b": {"__data__": {"id_": "a5f270dd-dc8b-431b-ae12-85662cbc113b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61d8c8f2-96c3-4658-b650-8fbf26e515f0", "node_type": "1", "metadata": {}, "hash": "3a4fd3b57ac9bebf609b80748b98aa21241ec06e0e3709b2ffae5f5c7c48cc39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "021805c8-e8ed-4aef-b0a0-25179659b4a1", "node_type": "1", "metadata": {}, "hash": "1be94495230c7f7c4a81be55cb8bbe07e857304e3b08038856fe514676ceae71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [ERTP documentation's AmountMath section](/guides/ertp/amount-math)\nand the [ERTP API's AmountMath section](/reference/ertp-api/amount-math).\n\n<a id=\"value\"></a>\n\n## AmountValue", "mimetype": "text/plain", "start_char_idx": 4681, "end_char_idx": 4888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "021805c8-e8ed-4aef-b0a0-25179659b4a1": {"__data__": {"id_": "021805c8-e8ed-4aef-b0a0-25179659b4a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5f270dd-dc8b-431b-ae12-85662cbc113b", "node_type": "1", "metadata": {}, "hash": "88ce20cb8cb8f5d0fe319547ee0ed2db791abff13a150b4d3d45ee72aba805bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c", "node_type": "1", "metadata": {}, "hash": "fe3fe5366305200d2cb89e3bb7ad40bb10be0e706a28856c0cfb76f33742d11d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An AmountValue is the part of an [Amount](#amount) that describes the value of something\nthat can be owned or shared: how much, how many, or a description of a unique asset, such as\n\\$3, Pixel(3,2), or \u201cSeat J12 for the show September 27th at 9:00pm\u201d.\nFor a [fungible](#fungible) Amount, the AmountValue is usually a non-negative **BigInt** such as `10n` or `137n`.", "mimetype": "text/plain", "start_char_idx": 4890, "end_char_idx": 5255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c": {"__data__": {"id_": "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "021805c8-e8ed-4aef-b0a0-25179659b4a1", "node_type": "1", "metadata": {}, "hash": "1be94495230c7f7c4a81be55cb8bbe07e857304e3b08038856fe514676ceae71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2066be5b-b36f-4aea-9be0-9225889c3f36", "node_type": "1", "metadata": {}, "hash": "a2450a5f5b603896140fc02ef2864eaa06e99e7e2643b2525a12d4841c0a6132", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For a [non-fungible](#non-fungible) Amount, the AmountValue might be a [CopySet](/guides/js-programming/far#pass-styles-and-harden) containing strings naming particular rights or objects representing the rights directly.", "mimetype": "text/plain", "start_char_idx": 5256, "end_char_idx": 5476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2066be5b-b36f-4aea-9be0-9225889c3f36": {"__data__": {"id_": "2066be5b-b36f-4aea-9be0-9225889c3f36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c", "node_type": "1", "metadata": {}, "hash": "fe3fe5366305200d2cb89e3bb7ad40bb10be0e706a28856c0cfb76f33742d11d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16d4fea1-219a-4e29-9235-e232f5c3dbfb", "node_type": "1", "metadata": {}, "hash": "1c244be6e0eb2971fad19c413fc921178149456135fcb019f7fd058f3cf6675c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [ERTP documentation's AmountValue section](/guides/ertp/amounts#amountvalues).\n\n## AssetHolder\n\n[Purses](#purse) and [payments](#payment) are AssetHolders. These are objects that contain\ndigital assets in the quantity specified by an [amount](#amount).\n\n## Baggage", "mimetype": "text/plain", "start_char_idx": 5478, "end_char_idx": 5772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16d4fea1-219a-4e29-9235-e232f5c3dbfb": {"__data__": {"id_": "16d4fea1-219a-4e29-9235-e232f5c3dbfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2066be5b-b36f-4aea-9be0-9225889c3f36", "node_type": "1", "metadata": {}, "hash": "a2450a5f5b603896140fc02ef2864eaa06e99e7e2643b2525a12d4841c0a6132", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8", "node_type": "1", "metadata": {}, "hash": "7c3a7591d51c62367d9b84324f0637418d5d6574ad0ce16c1e042ab05c664fec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Baggage\n\n`baggage` is a `MapStore` that provides a way to preserve state and behavior of objects between [smart contract upgrades](/guides/zoe/contract-upgrade) in a way that preserves identity of objects as seen from other [vats](#vat).\n\n## BigInt", "mimetype": "text/plain", "start_char_idx": 5762, "end_char_idx": 6013, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8": {"__data__": {"id_": "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16d4fea1-219a-4e29-9235-e232f5c3dbfb", "node_type": "1", "metadata": {}, "hash": "1c244be6e0eb2971fad19c413fc921178149456135fcb019f7fd058f3cf6675c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffa4d15c-3010-4451-a901-74c6c647ddb2", "node_type": "1", "metadata": {}, "hash": "6946db93d0a4f24669c5bf9961af7290e0fe1352553af73c747bc6161d603b6d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## BigInt\n\nIn [ERTP AmountMath](/guides/ertp/amount-math), we use the JavaScript [BigInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) type for the `value` of fungible amounts in order to avoid overflow risks from using the usual JavaScript `Number` type.\n\n[Timer Services](/reference/repl/timerServices) also use `BigInt` for absolute and relative times.", "mimetype": "text/plain", "start_char_idx": 6004, "end_char_idx": 6403, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ffa4d15c-3010-4451-a901-74c6c647ddb2": {"__data__": {"id_": "ffa4d15c-3010-4451-a901-74c6c647ddb2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8", "node_type": "1", "metadata": {}, "hash": "7c3a7591d51c62367d9b84324f0637418d5d6574ad0ce16c1e042ab05c664fec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c8728a5-d95e-437b-9d93-7413fab31327", "node_type": "1", "metadata": {}, "hash": "02c96c2b8ed27336b2ae8feb0f076a6b9cf68b24c442baeb2d8eb6984a06daad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`BigInt`s are written with an `n` suffix: `0n`, `1n`, `2n`, ... or created with `BigInt(\"123\")`\nor `BigInt(123)`.\n\n## Board (Agoric Board)", "mimetype": "text/plain", "start_char_idx": 6405, "end_char_idx": 6543, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c8728a5-d95e-437b-9d93-7413fab31327": {"__data__": {"id_": "4c8728a5-d95e-437b-9d93-7413fab31327", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffa4d15c-3010-4451-a901-74c6c647ddb2", "node_type": "1", "metadata": {}, "hash": "6946db93d0a4f24669c5bf9961af7290e0fe1352553af73c747bc6161d603b6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a", "node_type": "1", "metadata": {}, "hash": "75c46cfcf90d64fa844df3397080b2f725d4999353f9944a0e3bbbadf57e5218", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Board (Agoric Board)\n\nThe Board is a shared, on-chain location where users can post a value and make it\naccessible to others. When a user posts a value, they receive a unique ID for the value.\nOthers can get the value just by knowing the ID. You can make an ID known by any\ncommunication method&mdash;a DM or email or other private message, a phone call/voicemail,\nan email blast to a mailing list, publishing it on a website, etc.", "mimetype": "text/plain", "start_char_idx": 6520, "end_char_idx": 6954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a": {"__data__": {"id_": "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c8728a5-d95e-437b-9d93-7413fab31327", "node_type": "1", "metadata": {}, "hash": "02c96c2b8ed27336b2ae8feb0f076a6b9cf68b24c442baeb2d8eb6984a06daad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62e79afd-828c-42b0-a158-6caae2fb113d", "node_type": "1", "metadata": {}, "hash": "1c3a8e041f19e9577b550e62a46961545c08742004c0e8a3676e93af78701008", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note**: Publishing an object to the board makes it publicly accessible. If this is not\nappropriate for an object, do not use the board to communicate access to it.\n\n## Brand\n\nIdentifies the type of [issuer](#issuer), such as \"[Quatloos](#quatloos)\",\n\"[Moola](#moola)\", etc. Brands are one of the two elements that\nmake up an [amount](#amount).\nFor more information, see the [ERTP documentation's Brand section](/guides/ertp/amounts#brands)\nand the [ERTP API's Brand section](/reference/ertp-api/brand).", "mimetype": "text/plain", "start_char_idx": 6956, "end_char_idx": 7460, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62e79afd-828c-42b0-a158-6caae2fb113d": {"__data__": {"id_": "62e79afd-828c-42b0-a158-6caae2fb113d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a", "node_type": "1", "metadata": {}, "hash": "75c46cfcf90d64fa844df3397080b2f725d4999353f9944a0e3bbbadf57e5218", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8f6246c-eff6-40bb-b06e-f72fdf938c83", "node_type": "1", "metadata": {}, "hash": "206f0201eb750f3928cf8624d4c1910b3aa09acd4a8605a04a09a76e52f8828c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Bundle\n\nBefore a contract can be installed on Zoe, its source code must be bundled. This is done by:\n\n```js\nimport bundleSource from '@endo/bundle-source';\nconst atomicSwapBundle = await bundleSource(\n  require.resolve('@agoric/zoe/src/contracts/atomicSwap')\n);\n```", "mimetype": "text/plain", "start_char_idx": 7462, "end_char_idx": 7730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8f6246c-eff6-40bb-b06e-f72fdf938c83": {"__data__": {"id_": "d8f6246c-eff6-40bb-b06e-f72fdf938c83", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62e79afd-828c-42b0-a158-6caae2fb113d", "node_type": "1", "metadata": {}, "hash": "1c3a8e041f19e9577b550e62a46961545c08742004c0e8a3676e93af78701008", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3", "node_type": "1", "metadata": {}, "hash": "5addb7e92b405a93a75518cbf945e7ce62ac5c1cf88ab6fe0e54c8eac98449dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The installation operation returns an `installation`, which is an object with a single\n`getBundle()` method for accessing an installed contract's source code.\nIn most cases, the bundle contains a base64-encoded zip file that you can\nextract for review.\n\n```js\nconst { endoZipBase64 } = await E(installation).getBundle();\n```\n\n```sh\necho \"$endoZipBase64\" | base64 -d > bundle.zip\nunzip bundle.zip\n```\n\n## Burn", "mimetype": "text/plain", "start_char_idx": 7732, "end_char_idx": 8140, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3": {"__data__": {"id_": "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8f6246c-eff6-40bb-b06e-f72fdf938c83", "node_type": "1", "metadata": {}, "hash": "206f0201eb750f3928cf8624d4c1910b3aa09acd4a8605a04a09a76e52f8828c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31babf25-57a9-471d-8916-3f46f260fb17", "node_type": "1", "metadata": {}, "hash": "91a668e2b383d597d3fa26d08edeebdfe39252e6d926925e8f67204ee8283900", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Burn\n\nDestroy digital assets. Burning a [payment](#payment) additionally makes it\nunavailable for later use. See\n[anIssuer.burn()](/reference/ertp-api/issuer#anissuer-burn-payment-optamount).\n\n## Comparable\n\nComparable is a deprecated synonym of [Key](#key).\n\n## Continuing Invitation Pattern", "mimetype": "text/plain", "start_char_idx": 8133, "end_char_idx": 8428, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31babf25-57a9-471d-8916-3f46f260fb17": {"__data__": {"id_": "31babf25-57a9-471d-8916-3f46f260fb17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3", "node_type": "1", "metadata": {}, "hash": "5addb7e92b405a93a75518cbf945e7ce62ac5c1cf88ab6fe0e54c8eac98449dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7", "node_type": "1", "metadata": {}, "hash": "165b65f37a0adabbe7d73e7d45c91e87d9bf632534e233a238a8bf3d9bf69cc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Continuing Invitation Pattern\n\nA continuing invitation presumes a previous offer\nwhose result includes capabilities to make further\ninvitations. See [`source: 'continuing'`](/guides/getting-started/contract-rpc#source-continuing) in [Specifying Offers](/guides/getting-started/contract-rpc#specifying-offers) for details.\n\n## Contract Installation and Contract Instance", "mimetype": "text/plain", "start_char_idx": 8396, "end_char_idx": 8768, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7": {"__data__": {"id_": "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31babf25-57a9-471d-8916-3f46f260fb17", "node_type": "1", "metadata": {}, "hash": "91a668e2b383d597d3fa26d08edeebdfe39252e6d926925e8f67204ee8283900", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d4ea8ae-c745-4444-957d-d4276c9839c5", "node_type": "1", "metadata": {}, "hash": "c069e364812d8dae1bf482f4d18e52e0acf5da644e32b095bb0defbf275ad886", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In Agoric documentation, _contract_ usually refers to a contract's source code that\ndefines how the contract works. A contract's source code is _installed_ on Zoe. A\ncontract is _instantiated_ to create _contract instances_, which are the active\nexecution of a contract's code running on Zoe.", "mimetype": "text/plain", "start_char_idx": 8770, "end_char_idx": 9062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d4ea8ae-c745-4444-957d-d4276c9839c5": {"__data__": {"id_": "9d4ea8ae-c745-4444-957d-d4276c9839c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7", "node_type": "1", "metadata": {}, "hash": "165b65f37a0adabbe7d73e7d45c91e87d9bf632534e233a238a8bf3d9bf69cc3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97140f40-b9c4-4e09-93aa-f86f2a1b8345", "node_type": "1", "metadata": {}, "hash": "ef83d0a9165492b22241bd321122997cf20d0e899858d24bac6e45176e08cfce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For example, a realtor has a standard house selling agreement. The contract is the\ncode defining how that agreement works. When the realtor has a new house to sell,\nthey instantiate a new instance of their standard contract for that specific property.\nIf they have ten houses for sale, they have ten different contract instances.\n\n## CopyArray", "mimetype": "text/plain", "start_char_idx": 9064, "end_char_idx": 9407, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97140f40-b9c4-4e09-93aa-f86f2a1b8345": {"__data__": {"id_": "97140f40-b9c4-4e09-93aa-f86f2a1b8345", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d4ea8ae-c745-4444-957d-d4276c9839c5", "node_type": "1", "metadata": {}, "hash": "c069e364812d8dae1bf482f4d18e52e0acf5da644e32b095bb0defbf275ad886", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bf3dc36-238f-4fea-afa5-af8d089f7616", "node_type": "1", "metadata": {}, "hash": "3ebaa2f5a7f8e098aa175fc85925eeff4d06517d0f02e89916088e96d2655f94", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## CopyArray\n\nA [hardened](#harden) acyclic array in which each element is [passable](#passable), such as\n`harden(['foo', 'bar'])`.\nFor more information, see the\n[Marshaling section in the JavaScript Distributed Programming Guide](/guides/js-programming/far#marshaling-by-copy-or-by-presence).\n\n## CopyRecord", "mimetype": "text/plain", "start_char_idx": 9395, "end_char_idx": 9703, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4bf3dc36-238f-4fea-afa5-af8d089f7616": {"__data__": {"id_": "4bf3dc36-238f-4fea-afa5-af8d089f7616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97140f40-b9c4-4e09-93aa-f86f2a1b8345", "node_type": "1", "metadata": {}, "hash": "ef83d0a9165492b22241bd321122997cf20d0e899858d24bac6e45176e08cfce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "552da849-a0a9-4b36-848c-22f1ab83a0c8", "node_type": "1", "metadata": {}, "hash": "9bf8ca68ca59963afae8544224d3b885027b57894ca64d1cf7dc22f60aefee16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## CopyRecord\n\nA [hardened](#harden) acyclic plain object [dictionary](https://en.wikipedia.org/wiki/Associative_array)\nin which each key is a string and each value is [passable](#passable), such as\n`harden({ keys: [0, 1], values: ['foo', 'bar'] })`.\nFor more information, see the\n[Marshaling section in the JavaScript Distributed Programming Guide](/guides/js-programming/far#marshaling-by-copy-or-by-presence).\n\n## Creator Invitation", "mimetype": "text/plain", "start_char_idx": 9690, "end_char_idx": 10125, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "552da849-a0a9-4b36-848c-22f1ab83a0c8": {"__data__": {"id_": "552da849-a0a9-4b36-848c-22f1ab83a0c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bf3dc36-238f-4fea-afa5-af8d089f7616", "node_type": "1", "metadata": {}, "hash": "3ebaa2f5a7f8e098aa175fc85925eeff4d06517d0f02e89916088e96d2655f94", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12ecfe58-2bad-4c79-83ae-d459c2d365aa", "node_type": "1", "metadata": {}, "hash": "cb75c9f0e5a15f788eb96980dc43e98f063926d93dcf373fc6f2fec808509005", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Creator Invitation\n\nAn [invitation](#invitation) optionally returned by [`E(zoe).startInstance(...)`](/reference/zoe-api/zoe#e-zoe-startinstance-installation-issuerkeywordrecord-terms-privateargs) that the contract instance\ncreator can use. It is usually used in contracts where the creator immediately\nsells something (auctions, swaps, etc.).\n\n## Deposit Facet", "mimetype": "text/plain", "start_char_idx": 10104, "end_char_idx": 10468, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12ecfe58-2bad-4c79-83ae-d459c2d365aa": {"__data__": {"id_": "12ecfe58-2bad-4c79-83ae-d459c2d365aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "552da849-a0a9-4b36-848c-22f1ab83a0c8", "node_type": "1", "metadata": {}, "hash": "9bf8ca68ca59963afae8544224d3b885027b57894ca64d1cf7dc22f60aefee16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8f792fa-e5a0-41a3-881f-381f0321c017", "node_type": "1", "metadata": {}, "hash": "cb1ae0404235c952dc925089da32c6233283ab414b489f7902f219b4216d1b9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Deposit Facet\n\nA [facet](#facet) of a [purse](#purse). Anyone with a reference to its deposit facet object can add\nappropriately branded assets to the purse, but cannot withdraw assets from the purse or find out its balance.\n\n## dIBC\n\nDynamic version of the [Inter-Blockchain Communication](#ibc) protocol.\nFor more details, see the [agoric-sdk `network` package](https://github.com/Agoric/agoric-sdk/tree/master/packages/network).\n\n## E()", "mimetype": "text/plain", "start_char_idx": 10452, "end_char_idx": 10894, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8f792fa-e5a0-41a3-881f-381f0321c017": {"__data__": {"id_": "c8f792fa-e5a0-41a3-881f-381f0321c017", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12ecfe58-2bad-4c79-83ae-d459c2d365aa", "node_type": "1", "metadata": {}, "hash": "cb75c9f0e5a15f788eb96980dc43e98f063926d93dcf373fc6f2fec808509005", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5c39875-baf0-4e01-b493-90a909501702", "node_type": "1", "metadata": {}, "hash": "e3454bcea488d232d27d07ef1b00d682da0bd8d1623a4b5f802e48a406e96592", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(Also referred to as _eventual send_) `E()` is a local \"bridge\" function that\nasynchronously invokes methods on local or remote objects, for example those\nin another vat, machine, or blockchain. It takes as its argument either a local object\nor a [presence](#presence) for a remote object or a promise for a local or remote object, and\nsends messages to the object using normal message-sending syntax. The local proxy forwards all messages to the remote object to deal with.", "mimetype": "text/plain", "start_char_idx": 10896, "end_char_idx": 11370, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5c39875-baf0-4e01-b493-90a909501702": {"__data__": {"id_": "b5c39875-baf0-4e01-b493-90a909501702", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8f792fa-e5a0-41a3-881f-381f0321c017", "node_type": "1", "metadata": {}, "hash": "cb1ae0404235c952dc925089da32c6233283ab414b489f7902f219b4216d1b9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "974356d5-94a3-4d51-bfea-f1f80d94d206", "node_type": "1", "metadata": {}, "hash": "9d7d6c490230aeac8831de7aca0503dd2656e0bdacf7e823020832d5bb170d19", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All `E()` calls return a promise for the eventual result. For more detail, see\nthe [`E()` section in the Distributed JavaScript page](/guides/js-programming/eventual-send).", "mimetype": "text/plain", "start_char_idx": 11371, "end_char_idx": 11543, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "974356d5-94a3-4d51-bfea-f1f80d94d206": {"__data__": {"id_": "974356d5-94a3-4d51-bfea-f1f80d94d206", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5c39875-baf0-4e01-b493-90a909501702", "node_type": "1", "metadata": {}, "hash": "e3454bcea488d232d27d07ef1b00d682da0bd8d1623a4b5f802e48a406e96592", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736", "node_type": "1", "metadata": {}, "hash": "6ff5171cf73f79bbeb08994299605331972b356ff5e5c4601412247fb44ba81d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Endo", "mimetype": "text/plain", "start_char_idx": 11545, "end_char_idx": 11552, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736": {"__data__": {"id_": "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "974356d5-94a3-4d51-bfea-f1f80d94d206", "node_type": "1", "metadata": {}, "hash": "9d7d6c490230aeac8831de7aca0503dd2656e0bdacf7e823020832d5bb170d19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79451cf1-1a07-4cbd-b91b-f5e51503bc08", "node_type": "1", "metadata": {}, "hash": "dc10b77cc8550deaf7ca773293062e961f9ca51b6cb80e58c8c0016ddde91381", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "What Node.js does for JavaScript, Endo does for [Hardened\nJavaScript](#hardened-javascript-ses).\nEndo guest programs run in Hardened JavaScript and communicate with their host\nand other guests through hardened interfaces and object-to-object\nmessage-passing.\nFor example, an Agoric smart contract is an Endo program that runs in an Endo\nhost.\nEndo is responsible for linking and isolating Node.js packages and modules in\nHardened JavaScript compartments and providing limited access to host\nresources.", "mimetype": "text/plain", "start_char_idx": 11554, "end_char_idx": 12055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79451cf1-1a07-4cbd-b91b-f5e51503bc08": {"__data__": {"id_": "79451cf1-1a07-4cbd-b91b-f5e51503bc08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736", "node_type": "1", "metadata": {}, "hash": "6ff5171cf73f79bbeb08994299605331972b356ff5e5c4601412247fb44ba81d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2", "node_type": "1", "metadata": {}, "hash": "ae64641dd4b6d588886b03297f3ae9992c46b3513dc7d39d0df2360984a37d95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "resources.\nThe scope of vision for the Endo project includes the creation of other Endo\nhost programs like an Endo browser, an Endo browser extension, and `endo`\ncommand line tools, as well allowing programs to limit the powers they delegate\nto dependencies, to limit exposure to supply-chain attacks.\nFor more information, see the [Endo and Hardened JavaScript Programming\nGuide](https://github.com/endojs/endo/blob/HEAD/packages/ses/docs/guide.md)", "mimetype": "text/plain", "start_char_idx": 12045, "end_char_idx": 12494, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2": {"__data__": {"id_": "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79451cf1-1a07-4cbd-b91b-f5e51503bc08", "node_type": "1", "metadata": {}, "hash": "dc10b77cc8550deaf7ca773293062e961f9ca51b6cb80e58c8c0016ddde91381", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8e58ae8-d038-4383-9e86-d530f8a76c76", "node_type": "1", "metadata": {}, "hash": "271e062dfddd489dd80f5b72068cf81e2db4e4fe480aa319165c28aa3f2611f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ERTP\n\n_Electronic Rights Transfer Protocol_ is a uniform way of transferring tokens and other digital assets,\nboth [fungible](#fungible) and [non-fungible](#non-fungible), in JavaScript. All kinds of digital assets\ncan easily be created and they can be all be transferred in exactly the same ways, with exactly the same security properties.", "mimetype": "text/plain", "start_char_idx": 12496, "end_char_idx": 12839, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8e58ae8-d038-4383-9e86-d530f8a76c76": {"__data__": {"id_": "e8e58ae8-d038-4383-9e86-d530f8a76c76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2", "node_type": "1", "metadata": {}, "hash": "ae64641dd4b6d588886b03297f3ae9992c46b3513dc7d39d0df2360984a37d95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51bfaba8-2c88-4489-9d57-2fbee54f4100", "node_type": "1", "metadata": {}, "hash": "87d0842d5d844c78f48a63300881a8908d1a9603571aaf21cdf4b970b53c90f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It uses [object capabilities](#object-capabilities) to enforce access control. Instead of having\nto prove ownership of a corresponding private key, if your program has a\nreference to an object, it can call methods on that object. If it doesn't\nhave a reference, it can't. For more on object capabilities, see [this post](http://habitatchronicles.com/2017/05/what-are-capabilities/).", "mimetype": "text/plain", "start_char_idx": 12841, "end_char_idx": 13223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51bfaba8-2c88-4489-9d57-2fbee54f4100": {"__data__": {"id_": "51bfaba8-2c88-4489-9d57-2fbee54f4100", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8e58ae8-d038-4383-9e86-d530f8a76c76", "node_type": "1", "metadata": {}, "hash": "271e062dfddd489dd80f5b72068cf81e2db4e4fe480aa319165c28aa3f2611f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b56645f1-f516-4018-a113-9bec70b6d6b3", "node_type": "1", "metadata": {}, "hash": "3d3208dfd5360bc4f643140429ce2e869bc5f941c42a6a18f81a03c09d7da464", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Key ERTP concepts include [Issuers](#issuer), [Mints](#mint),\n[Purses](#purse), [Payments](#payment), [Brands](#brand), and [Amounts](#amount). Also\nsee the [ERTP documentation](/guides/ertp/) and [ERTP API documentation](/reference/ertp-api/).\n\n## Escrow", "mimetype": "text/plain", "start_char_idx": 13225, "end_char_idx": 13480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b56645f1-f516-4018-a113-9bec70b6d6b3": {"__data__": {"id_": "b56645f1-f516-4018-a113-9bec70b6d6b3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51bfaba8-2c88-4489-9d57-2fbee54f4100", "node_type": "1", "metadata": {}, "hash": "87d0842d5d844c78f48a63300881a8908d1a9603571aaf21cdf4b970b53c90f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8af97c82-fb2e-4dc3-8f81-785a3e6db16a", "node_type": "1", "metadata": {}, "hash": "75ea2ddbce87ba207193921824a86417b4c070053b6a1cc176ad3dedee709ce9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Escrow\n\nTo give assets for a possible transaction to an impartial third party, who keeps them until specified conditions are satisfied.\nFor example, Alice wants to sell Bob a ticket for $100. Alice escrows the ticket, and Bob escrows the $100, with Zoe. Zoe\ndoes not give Alice the \\$100 or Bob the ticket until it has both items. Since neither Alice nor Bob ever holds both items at\nonce, they don't have to trust each other to do the transaction. Zoe automatically escrows payments for transaction offers.", "mimetype": "text/plain", "start_char_idx": 13471, "end_char_idx": 13981, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8af97c82-fb2e-4dc3-8f81-785a3e6db16a": {"__data__": {"id_": "8af97c82-fb2e-4dc3-8f81-785a3e6db16a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b56645f1-f516-4018-a113-9bec70b6d6b3", "node_type": "1", "metadata": {}, "hash": "3d3208dfd5360bc4f643140429ce2e869bc5f941c42a6a18f81a03c09d7da464", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0d00453-d0b2-4ef6-b420-4323bc503b7e", "node_type": "1", "metadata": {}, "hash": "0d0f93fdf335c18c7c09e477a92ca21f2f7d42328b7f5840f447bfc36ef91670", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Eventual Send\n\nSee [`E()`](#e) above.\n\n## Exit Rule\n\nAn object specifying how an [offer](#offer) can be cancelled, such as on demand or by a deadline.\nFor details, see [`E(zoe).offer(...)`](/reference/zoe-api/zoe#proposals).\n\n## Exo\n\nAn Exo object is an exposed Remotable object with methods (aka a [`Far`](/guides/js-programming/far) object) which is\nnormally defined with an `InterfaceGuard` as a protective outer layer, providing the first\nlayer of defensiveness.", "mimetype": "text/plain", "start_char_idx": 13983, "end_char_idx": 14452, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0d00453-d0b2-4ef6-b420-4323bc503b7e": {"__data__": {"id_": "a0d00453-d0b2-4ef6-b420-4323bc503b7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8af97c82-fb2e-4dc3-8f81-785a3e6db16a", "node_type": "1", "metadata": {}, "hash": "75ea2ddbce87ba207193921824a86417b4c070053b6a1cc176ad3dedee709ce9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f763b8e6-200a-41df-a7c5-8cba5ced845c", "node_type": "1", "metadata": {}, "hash": "ec0d95bca26fe7b1423be8b1dd5f1a69c574c0c69ad50b4aa19be4f6834c8e22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This [`@endo/exo` package](https://github.com/endojs/endo/tree/master/packages/exo) defines\nthe APIs for making Exo objects, and for defining ExoClasses and ExoClassKits for making Exo\nobjects.\n\n## Facet\n\nA _facet_ is an object that exposes an API or particular view of some larger entity, which may be an object itself.\nYou can make any number of facets of an entity. In JavaScript, you often make a facet that forwards method calls:", "mimetype": "text/plain", "start_char_idx": 14454, "end_char_idx": 14888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f763b8e6-200a-41df-a7c5-8cba5ced845c": {"__data__": {"id_": "f763b8e6-200a-41df-a7c5-8cba5ced845c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0d00453-d0b2-4ef6-b420-4323bc503b7e", "node_type": "1", "metadata": {}, "hash": "0d0f93fdf335c18c7c09e477a92ca21f2f7d42328b7f5840f447bfc36ef91670", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43ad6506-a813-4508-b88f-eb7d29ec4392", "node_type": "1", "metadata": {}, "hash": "4ff5926f765a9e45a7fdc7b7b5ddb2a04e592c369ea692bb7c76fb2a3e37d934", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { Far } from '@endo/far';\nconst facet = Far('FacetName', {\n  myMethod: (...args) => oldObject.method(...args)\n});\n```\n\nTwo Agoric uses are:\n\n- _Deposit Facet_: A facet of a [purse](#purse). Anyone with a reference to its deposit facet object can add\n  appropriately branded assets to the purse, but cannot withdraw assets from the purse or find out its balance.\n- _Public Facet_: A set of methods and properties for an object that a developer chooses to be publicly visible and usable.", "mimetype": "text/plain", "start_char_idx": 14890, "end_char_idx": 15388, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43ad6506-a813-4508-b88f-eb7d29ec4392": {"__data__": {"id_": "43ad6506-a813-4508-b88f-eb7d29ec4392", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f763b8e6-200a-41df-a7c5-8cba5ced845c", "node_type": "1", "metadata": {}, "hash": "ec0d95bca26fe7b1423be8b1dd5f1a69c574c0c69ad50b4aa19be4f6834c8e22", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "203c5b7f-916d-4eb5-89c9-95b3f891ad21", "node_type": "1", "metadata": {}, "hash": "40604a556e92b4bb3722a538c080f84d3ef437003f7b4c0f224b2087510edb4b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Fungible\n\nA fungible asset is one where all exemplars of the asset are interchangeable. For example, if you\nhave 100 one dollar bills and need to pay someone five dollars, it does not matter which\nfive one dollar bills you use. Also see [non-fungible](#non-fungible).\n\n## Handle", "mimetype": "text/plain", "start_char_idx": 15390, "end_char_idx": 15671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "203c5b7f-916d-4eb5-89c9-95b3f891ad21": {"__data__": {"id_": "203c5b7f-916d-4eb5-89c9-95b3f891ad21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43ad6506-a813-4508-b88f-eb7d29ec4392", "node_type": "1", "metadata": {}, "hash": "4ff5926f765a9e45a7fdc7b7b5ddb2a04e592c369ea692bb7c76fb2a3e37d934", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a048a40-df1c-4a0d-9615-0b293ebfc74a", "node_type": "1", "metadata": {}, "hash": "404955933bb615a1fb716e11f12329f8ce63db672c3c9fc1d443504a6e648afc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Handle\n\nA handle is a unique identifier implemented as a JavaScript object. Only its identity\nis meaningful, so handles do not have properties. Unlike number or string identifiers,\nhandles are unforgeable. This means the only way to know a handle identity is being given\nan object reference, and no identity can be guessed and no fake identity will succeed.\n\n## Harden", "mimetype": "text/plain", "start_char_idx": 15662, "end_char_idx": 16033, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a048a40-df1c-4a0d-9615-0b293ebfc74a": {"__data__": {"id_": "1a048a40-df1c-4a0d-9615-0b293ebfc74a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "203c5b7f-916d-4eb5-89c9-95b3f891ad21", "node_type": "1", "metadata": {}, "hash": "40604a556e92b4bb3722a538c080f84d3ef437003f7b4c0f224b2087510edb4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b", "node_type": "1", "metadata": {}, "hash": "c47590c2069ee5e75ee2d11c4475bc899e4d7877b36ccc7ca54d938b91900138", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Harden\n\nA hardened object\u2019s properties cannot be changed, so the only way to interact with a hardened object is through its methods.\n`harden()` is similar to `Object.freeze()` but more powerful. For more about `harden()`, see\nits [section in the JavaScript Distributed Programming Guide](https://github.com/endojs/endo/blob/HEAD/packages/ses/docs/guide.md)\n\n## Hardened JavaScript (SES)", "mimetype": "text/plain", "start_char_idx": 16024, "end_char_idx": 16413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b": {"__data__": {"id_": "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a048a40-df1c-4a0d-9615-0b293ebfc74a", "node_type": "1", "metadata": {}, "hash": "404955933bb615a1fb716e11f12329f8ce63db672c3c9fc1d443504a6e648afc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d34e89aa-72a1-4707-8c83-087d5f6961d9", "node_type": "1", "metadata": {}, "hash": "b561efd53291fa4778f470533ffad6191a4e63886da65261830fa08be81d0a20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Hardened JavaScript (SES)\n\nHardened JavaScript is a standards-track extension to the JavaScript standard.\nHardening JavaScript turns the sandbox into firm ground, where you can run code\nyou don't completely trust, without being vulnerable to their bugs or bad\nintentions.\nSee the [Endo and Hardened JavaScript Programming\nGuide](https://github.com/endojs/endo/blob/HEAD/packages/ses/docs/guide.md) for more details.\n\n## IBC", "mimetype": "text/plain", "start_char_idx": 16385, "end_char_idx": 16811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d34e89aa-72a1-4707-8c83-087d5f6961d9": {"__data__": {"id_": "d34e89aa-72a1-4707-8c83-087d5f6961d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b", "node_type": "1", "metadata": {}, "hash": "c47590c2069ee5e75ee2d11c4475bc899e4d7877b36ccc7ca54d938b91900138", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c", "node_type": "1", "metadata": {}, "hash": "5c783de075dd26a38ffe465e3821eecdedd99b2df2830a4909ce4faf37a6c1f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## IBC\n\nThe Inter-Blockchain Communication protocol, used by blockchains to communicate with each other.\nFor more details, see [What developers need to know about inter-blockchain communication](https://www.computerweekly.com/blog/Open-Source-Insider/What-developers-need-to-know-about-inter-blockchain-communication).\n\n## Interchain Account (ICA)", "mimetype": "text/plain", "start_char_idx": 16805, "end_char_idx": 17152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c": {"__data__": {"id_": "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d34e89aa-72a1-4707-8c83-087d5f6961d9", "node_type": "1", "metadata": {}, "hash": "b561efd53291fa4778f470533ffad6191a4e63886da65261830fa08be81d0a20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c385dac4-cb89-4d26-b44c-b47bc17bf629", "node_type": "1", "metadata": {}, "hash": "a8aa96e5d363b5ba3524af79f389c24306e01b5d9509eaf2c61c95e30385069c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Interchain Account (ICA)\n\nInterchain Accounts are an [IBC](#ibc) feature used in Agoric's [Orchestration API](#orchestration) to enable an Agoric smart contract to control an account on another blockchain within the Cosmos ecosystem. This feature leverages the [Inter-Blockchain Communication (IBC)](#ibc) protocol to facilitate interactions and transactions across different blockchains seamlessly.\n\n## Invitation", "mimetype": "text/plain", "start_char_idx": 17125, "end_char_idx": 17542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c385dac4-cb89-4d26-b44c-b47bc17bf629": {"__data__": {"id_": "c385dac4-cb89-4d26-b44c-b47bc17bf629", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c", "node_type": "1", "metadata": {}, "hash": "5c783de075dd26a38ffe465e3821eecdedd99b2df2830a4909ce4faf37a6c1f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "475ed658-6e95-4734-b74f-8fd2599bfd95", "node_type": "1", "metadata": {}, "hash": "45d6a8b931fcab3cf87e4bd1da82ef582963d0b1300582807834b1b3ed000160", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A [payment](#payment) whose amount represents (and is required for) participation in a contract instance.\nContracts often return a creator invitation on their instantiation, in case the contract instantiator wants\nto immediately participate. Otherwise, the contract instance must create any additional invitations.", "mimetype": "text/plain", "start_char_idx": 17544, "end_char_idx": 17858, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "475ed658-6e95-4734-b74f-8fd2599bfd95": {"__data__": {"id_": "475ed658-6e95-4734-b74f-8fd2599bfd95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c385dac4-cb89-4d26-b44c-b47bc17bf629", "node_type": "1", "metadata": {}, "hash": "a8aa96e5d363b5ba3524af79f389c24306e01b5d9509eaf2c61c95e30385069c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94d9772c-c6db-41d7-9819-2f91db5bf3b5", "node_type": "1", "metadata": {}, "hash": "f5c3ccf60af4d63cfd2dc7bfe93ed5cb47a7ff9f010bd0259f1efd3ea03e2436", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Every [offer](#offer) to participate in a contract instance must include an invitation to that instance in the first argument to [`E(zoe).offer(...)`](/reference/zoe-api/zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs), and any wallet receiving one will validate it via the [InvitationIssuer](#invitationissuer).", "mimetype": "text/plain", "start_char_idx": 17859, "end_char_idx": 18191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94d9772c-c6db-41d7-9819-2f91db5bf3b5": {"__data__": {"id_": "94d9772c-c6db-41d7-9819-2f91db5bf3b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "475ed658-6e95-4734-b74f-8fd2599bfd95", "node_type": "1", "metadata": {}, "hash": "45d6a8b931fcab3cf87e4bd1da82ef582963d0b1300582807834b1b3ed000160", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac147761-b92f-4820-b2a6-94b19762b43a", "node_type": "1", "metadata": {}, "hash": "360c18eec43c46f131b3c5861e873e98fc2104c5e301c63302a029acf9582fd2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An invitation's [amount](#amount) includes the following properties:\n\n- The contract's installation in Zoe, including access to its source code.\n- The contract instance this invitation is for.\n- A handle used to refer to this invitation.\n- A description of this invitation's purpose.\n\n## InvitationIssuer\n\nSince [invitations](#invitation) are [payments](#payment), invitations\nmust have a dedicated [issuer](#issuer), which is the InvitationIssuer.", "mimetype": "text/plain", "start_char_idx": 18193, "end_char_idx": 18641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac147761-b92f-4820-b2a6-94b19762b43a": {"__data__": {"id_": "ac147761-b92f-4820-b2a6-94b19762b43a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94d9772c-c6db-41d7-9819-2f91db5bf3b5", "node_type": "1", "metadata": {}, "hash": "f5c3ccf60af4d63cfd2dc7bfe93ed5cb47a7ff9f010bd0259f1efd3ea03e2436", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83475700-619d-4004-a7a5-af96b87af83e", "node_type": "1", "metadata": {}, "hash": "96dda88da11004d2e4b0c04decfefcb0170fd8abfdf0700dc4b0b348a7f92490", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Zoe has a single `InvitationIssuer` for its entire lifetime. By having a reference to Zoe,\na user can get the `InvitationIssuer`. This lets them claim any invitation they\nreceive from someone else by calling `E(invitationIssuer).claim()` with the untrusted\ninvitation as the argument. During the claiming process, the invitationIssuer validates\nthe invitation. A successful claim also means that invitation is exclusively yours.", "mimetype": "text/plain", "start_char_idx": 18643, "end_char_idx": 19071, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83475700-619d-4004-a7a5-af96b87af83e": {"__data__": {"id_": "83475700-619d-4004-a7a5-af96b87af83e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac147761-b92f-4820-b2a6-94b19762b43a", "node_type": "1", "metadata": {}, "hash": "360c18eec43c46f131b3c5861e873e98fc2104c5e301c63302a029acf9582fd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16b0870b-6936-4811-9f41-0c229440daac", "node_type": "1", "metadata": {}, "hash": "73cb18ef1463a0a2f13ca1ff811adbd6b74fbbd7dc673ad46161d4158cfefd57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note**: Depositing into an invitation-branded purse also validates an invitation. This is\nwhat the [wallet](#wallet) does.\n\n## Issuer\n\nIssuers are a one-to-one relationship with both a [mint](#mint) and a [brand](#brand), so each issuer works\nwith one and only one asset type, such as only working with [Quatloos](#quatloos)\nor only working with [Moola](#moola). This association cannot change to another type.", "mimetype": "text/plain", "start_char_idx": 19073, "end_char_idx": 19485, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16b0870b-6936-4811-9f41-0c229440daac": {"__data__": {"id_": "16b0870b-6936-4811-9f41-0c229440daac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83475700-619d-4004-a7a5-af96b87af83e", "node_type": "1", "metadata": {}, "hash": "96dda88da11004d2e4b0c04decfefcb0170fd8abfdf0700dc4b0b348a7f92490", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f", "node_type": "1", "metadata": {}, "hash": "cbbbf4b194bbc7be3a41aa08d40ee51b251bf7358da995f19d366916b7666fdb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Issuers can create empty [purses](#purse) for\ntheir asset type, but cannot mint new [amounts](#amount). Issuers can also transform\npayments of their asset type (splitting, combining, burning, and exclusively claiming\npayments). An issuer from a trusted source can determine if an untrusted payment of\nits asset type is valid.\n\nFor more information, see the [ERTP documentation's Issuer section](/guides/ertp/issuers-and-mints)\nand the [ERTP API's Issuer section](/reference/ertp-api/issuer).\n\n## Key", "mimetype": "text/plain", "start_char_idx": 19487, "end_char_idx": 19986, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f": {"__data__": {"id_": "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16b0870b-6936-4811-9f41-0c229440daac", "node_type": "1", "metadata": {}, "hash": "73cb18ef1463a0a2f13ca1ff811adbd6b74fbbd7dc673ad46161d4158cfefd57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "995b01e8-3865-4767-b669-23cea91b0898", "node_type": "1", "metadata": {}, "hash": "54bcc0c39b1ba0aac98d4fa58c568ba131263e58a067466bc687efe650e9f4eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Key\n\nA _Key_ is a [passable](#passable) containing no promises or errors, and can\nthus be synchronously compared for structural equivalence with another piece of data.\nIf either side of the comparison contains promises and/or errors, equality is indeterminable.\nIf both are fulfilled down to [presences](#presence) and local state, then either they're the\nsame all the way down, or they represent different objects.", "mimetype": "text/plain", "start_char_idx": 19980, "end_char_idx": 20398, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "995b01e8-3865-4767-b669-23cea91b0898": {"__data__": {"id_": "995b01e8-3865-4767-b669-23cea91b0898", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f", "node_type": "1", "metadata": {}, "hash": "cbbbf4b194bbc7be3a41aa08d40ee51b251bf7358da995f19d366916b7666fdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab112447-8fd8-4194-af97-470add9bc483", "node_type": "1", "metadata": {}, "hash": "6b894ebd4546e3c994823f310f04b60ef6ad79f1d230ad41526e84ec3ce1898f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Keys can be used as elements of CopySets and CopyBags and as keys of CopyMaps (see [AmountMath](#amountmath)). [AmountValues](#amountvalue) must be Keys.\n\n## Keyword\n\nA _Keyword_ is a string that is an ASCII-only [identifier](https://developer.mozilla.org/en-US/docs/Glossary/Identifier),\nstarts with an upper case letter, and is not equal to \"NaN\" or \"Infinity\".\nSee **[Zoe Data Types](/reference/zoe-api/zoe-data-types#keyword)**.\n\n## Mint", "mimetype": "text/plain", "start_char_idx": 20400, "end_char_idx": 20841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab112447-8fd8-4194-af97-470add9bc483": {"__data__": {"id_": "ab112447-8fd8-4194-af97-470add9bc483", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "995b01e8-3865-4767-b669-23cea91b0898", "node_type": "1", "metadata": {}, "hash": "54bcc0c39b1ba0aac98d4fa58c568ba131263e58a067466bc687efe650e9f4eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db685fb7-50ad-4b79-836d-55d67ba05546", "node_type": "1", "metadata": {}, "hash": "71c09bbfdb4340cfb42b0716b38f9a7c1012d0560f90df9666d237fd83ec4314", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Mint\n\n[ERTP](#ertp) has a _mint_ object, which creates digital assets. [ZCF](#zcf) provides a different interface to an ERTP mint, called a\n_ZCFMint_. Assets and AssetHolders created using ZCFMints can be used in all the same ways as assets created by other ERTP Mints.\nThey interact with Purses, Payments, Brands, and Issuers in the same ways.", "mimetype": "text/plain", "start_char_idx": 20834, "end_char_idx": 21181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db685fb7-50ad-4b79-836d-55d67ba05546": {"__data__": {"id_": "db685fb7-50ad-4b79-836d-55d67ba05546", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab112447-8fd8-4194-af97-470add9bc483", "node_type": "1", "metadata": {}, "hash": "6b894ebd4546e3c994823f310f04b60ef6ad79f1d230ad41526e84ec3ce1898f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15cb455e-0ea9-4b86-8c46-50cdc04af8ef", "node_type": "1", "metadata": {}, "hash": "0793affdb5b000510889449f46b1c5e1e94639fd602ae243f297b46f3c76b5e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- ERTP mints create digital assets and are the only ERTP objects with the authority to do so.\n  Access to an ERTP mint gives you the power to create more digital assets of its type at will. Mints\n  can only create one type of asset and cannot change to create a different type.", "mimetype": "text/plain", "start_char_idx": 21183, "end_char_idx": 21460, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15cb455e-0ea9-4b86-8c46-50cdc04af8ef": {"__data__": {"id_": "15cb455e-0ea9-4b86-8c46-50cdc04af8ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db685fb7-50ad-4b79-836d-55d67ba05546", "node_type": "1", "metadata": {}, "hash": "71c09bbfdb4340cfb42b0716b38f9a7c1012d0560f90df9666d237fd83ec4314", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "007a1963-19bc-42ed-919b-c41dd2e33dfd", "node_type": "1", "metadata": {}, "hash": "89020907faef2f41a6334f787b9172484c6221403e1ce2c908989e79dd2d143e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There is a one-to-one relationship between an [issuer](#issuer) and its mint, and a mint is an administrative [facet](#facet) of its issuer.\n  ERTP mints are also in a one-to-one relationship with that issuer's associated [brand](#brand).", "mimetype": "text/plain", "start_char_idx": 21464, "end_char_idx": 21702, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "007a1963-19bc-42ed-919b-c41dd2e33dfd": {"__data__": {"id_": "007a1963-19bc-42ed-919b-c41dd2e33dfd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15cb455e-0ea9-4b86-8c46-50cdc04af8ef", "node_type": "1", "metadata": {}, "hash": "0793affdb5b000510889449f46b1c5e1e94639fd602ae243f297b46f3c76b5e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d94257e-6511-40b1-8abe-654ff32d3fd1", "node_type": "1", "metadata": {}, "hash": "64d0e0f406dc9a4226e4f7428add46fec7b073c725b18ef4015e6f2eb3ac8ff4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- ZCFMints give contract code a simpler interface to interact with an ERTP mint from inside a contract.\n  Because ZCFMints encapsulate an internal ERTP mint, they have the same one-to-one relationships\n  with an issuer and its associated brand. A ZCFMint can mint assets and assign them to a seat without having to escrow\n  payments, and burn seat-associated assets without corresponding payout.", "mimetype": "text/plain", "start_char_idx": 21704, "end_char_idx": 22099, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d94257e-6511-40b1-8abe-654ff32d3fd1": {"__data__": {"id_": "4d94257e-6511-40b1-8abe-654ff32d3fd1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "007a1963-19bc-42ed-919b-c41dd2e33dfd", "node_type": "1", "metadata": {}, "hash": "89020907faef2f41a6334f787b9172484c6221403e1ce2c908989e79dd2d143e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2", "node_type": "1", "metadata": {}, "hash": "cbd169d88d587af0758dbe2608315c92dce1717bcc29f1c640497dc32a2fe3b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ZCFMints and ERTP mints do **not** have the same methods. Do not try to use ERTP methods on a ZCFMint or vice versa.\nHowever, issuers and brands associated with either an ERTP mint or a ZCFMint are the same concepts and have the same methods.", "mimetype": "text/plain", "start_char_idx": 22101, "end_char_idx": 22343, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2": {"__data__": {"id_": "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d94257e-6511-40b1-8abe-654ff32d3fd1", "node_type": "1", "metadata": {}, "hash": "64d0e0f406dc9a4226e4f7428add46fec7b073c725b18ef4015e6f2eb3ac8ff4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910", "node_type": "1", "metadata": {}, "hash": "10f85b60e4cb5dab7741001a08021b909911ba15c09743671ce6c96462cf53fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information on ERTP mints, see the [ERTP documentation's Mint section](/guides/ertp/issuers-and-mints)\nand the [ERTP API's Mint section](/reference/ertp-api/mint). For more information about ZCFMints,\nsee the [ZCF API `zcf.makeZCFMint()`](/reference/zoe-api/zoe-contract-facet#zcf-makezcfmint-keyword-assetkind-displayinfo).\n\n## Moola\n\nAn imaginary currency Agoric documentation uses in examples.\n\n## Non-fungible", "mimetype": "text/plain", "start_char_idx": 22345, "end_char_idx": 22767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910": {"__data__": {"id_": "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2", "node_type": "1", "metadata": {}, "hash": "cbd169d88d587af0758dbe2608315c92dce1717bcc29f1c640497dc32a2fe3b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5118a26-3baa-4af0-bab5-a68e8adb2e69", "node_type": "1", "metadata": {}, "hash": "8d625f9ae65ed2ce17e294718b086b94eb5d3a99dc367daff2bf6c56fc255e2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A non-fungible asset is one where each incidence of the asset has unique individual properties and\nis not interchangeable with another incidence. For example, if your asset is theater tickets, it matters to the buyer\nwhat the date and time of the show is, which row the seat is in, and where in the row the\nseat is (and likely other factors as well). You can't just give them any ticket in your supply,\nas they are not interchangeable (and may have different prices). See also [fungible](#fungible).", "mimetype": "text/plain", "start_char_idx": 22769, "end_char_idx": 23268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5118a26-3baa-4af0-bab5-a68e8adb2e69": {"__data__": {"id_": "c5118a26-3baa-4af0-bab5-a68e8adb2e69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910", "node_type": "1", "metadata": {}, "hash": "10f85b60e4cb5dab7741001a08021b909911ba15c09743671ce6c96462cf53fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "daab7363-2c3d-4792-9635-6849f4a430d9", "node_type": "1", "metadata": {}, "hash": "2a446c389d4ce238f81bbc7ea9d3b6074fa6771326558c90b5eee70f1356c836", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Notifier\n\nA notifier provides a stream of updates describing changes to the state of an [offer](#offer) or other object.\nFor more information, see [Notifiers and Subscriptions](/guides/js-programming/notifiers).\n\n## Object Capabilities", "mimetype": "text/plain", "start_char_idx": 23270, "end_char_idx": 23508, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "daab7363-2c3d-4792-9635-6849f4a430d9": {"__data__": {"id_": "daab7363-2c3d-4792-9635-6849f4a430d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5118a26-3baa-4af0-bab5-a68e8adb2e69", "node_type": "1", "metadata": {}, "hash": "8d625f9ae65ed2ce17e294718b086b94eb5d3a99dc367daff2bf6c56fc255e2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9010bcf1-c75e-4046-a517-4674f5c266f7", "node_type": "1", "metadata": {}, "hash": "dd1e1ac6314a2f47e48a737b80ce3ceb87be80603511a5f08dd004134e8e1d83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Object Capabilities\n\nObjects have state, behavior, and references. Let's say Object A has references to Objects B\nand C, while B and C do not have references to each other. Thus, A can communicate with B and C,\nand B and C cannot communicate with each other. There is an effective zero-cost firewall between B and C.\n\nAn _object capability system_ constrains how references are obtained. You can't get one just by\nknowing the name of a global variable or a public class. You can only get a reference via:", "mimetype": "text/plain", "start_char_idx": 23486, "end_char_idx": 23993, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9010bcf1-c75e-4046-a517-4674f5c266f7": {"__data__": {"id_": "9010bcf1-c75e-4046-a517-4674f5c266f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "daab7363-2c3d-4792-9635-6849f4a430d9", "node_type": "1", "metadata": {}, "hash": "2a446c389d4ce238f81bbc7ea9d3b6074fa6771326558c90b5eee70f1356c836", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0", "node_type": "1", "metadata": {}, "hash": "2f1edb14fba34ba80704cb373a6077e2f4b8327d758aa2d32a8aa31558caf698", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Creation: Functions that create objects get a reference to them.\n- Construction: Constructors can endow their constructed objects with references, including inherited references.\n- Introduction:\n  - A has references to B and C.\n  - B and C do _not_ have references to each other\n  - A sends B a reference to C.\n    - B now has a reference to C and can communicate with C.", "mimetype": "text/plain", "start_char_idx": 23995, "end_char_idx": 24368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0": {"__data__": {"id_": "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9010bcf1-c75e-4046-a517-4674f5c266f7", "node_type": "1", "metadata": {}, "hash": "dd1e1ac6314a2f47e48a737b80ce3ceb87be80603511a5f08dd004134e8e1d83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d760f539-07d7-42c2-b60b-e2d86c50fc4c", "node_type": "1", "metadata": {}, "hash": "30a1f69664123cbed3d2a1fa651fc749f14a428c5eed1c4d5c689d6ab6f3d39a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If references can only be obtained by creation, construction, or introduction, you may have a safe\nsystem. If they can be obtained in any other way, your system is unsafe.\n\nFor more information, see [Douglas Crockford on Object Capabilities](https://frontendmasters.com/courses/good-parts-javascript-web/object-capabilities/).\n\n## Offer", "mimetype": "text/plain", "start_char_idx": 24370, "end_char_idx": 24706, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d760f539-07d7-42c2-b60b-e2d86c50fc4c": {"__data__": {"id_": "d760f539-07d7-42c2-b60b-e2d86c50fc4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0", "node_type": "1", "metadata": {}, "hash": "2f1edb14fba34ba80704cb373a6077e2f4b8327d758aa2d32a8aa31558caf698", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68bf8e09-1bed-43f3-a602-5952890c30be", "node_type": "1", "metadata": {}, "hash": "c3e3c83b872483d6f342c988614e66d3193696db822b77fda387079522169d84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Users interact with contract instances by making offers. In Zoe, an offer consists of a [proposal](#proposal) (what\nthe offer making party is willing to give up and what they want in exchange) and [payments](#payment) corresponding\nto the amount in the proposal they're willing to give. The payments are automatically [escrowed](#escrow) by Zoe, and reallocated\naccording to the contract code. An offer gets a [payout](#payout) of some combination of what the party originally contributed", "mimetype": "text/plain", "start_char_idx": 24708, "end_char_idx": 25196, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68bf8e09-1bed-43f3-a602-5952890c30be": {"__data__": {"id_": "68bf8e09-1bed-43f3-a602-5952890c30be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d760f539-07d7-42c2-b60b-e2d86c50fc4c", "node_type": "1", "metadata": {}, "hash": "30a1f69664123cbed3d2a1fa651fc749f14a428c5eed1c4d5c689d6ab6f3d39a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ff16f70-720d-4896-91ec-fbb8e6ba392b", "node_type": "1", "metadata": {}, "hash": "39d3f1009c0b3a6e64525cf9faa99ad02106e4d5c7da9320b3e276c71950518f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "and what others have contributed. The specific payout is determined by the contract code.", "mimetype": "text/plain", "start_char_idx": 25197, "end_char_idx": 25286, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8ff16f70-720d-4896-91ec-fbb8e6ba392b": {"__data__": {"id_": "8ff16f70-720d-4896-91ec-fbb8e6ba392b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68bf8e09-1bed-43f3-a602-5952890c30be", "node_type": "1", "metadata": {}, "hash": "c3e3c83b872483d6f342c988614e66d3193696db822b77fda387079522169d84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1920e19c-61d4-4f4a-9614-bc6c093a808b", "node_type": "1", "metadata": {}, "hash": "4936c75b1d3ea731cfb4bdb54a9e162825883fda296597ca224fbc02a5a8ad19", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See [Offers](/guides/zoe/proposal).\n\n## Offer Safety\n\nZoe guarantees offer safety. When a user makes an [offer](#offer) and its payments are [escrowed](#escrow) with Zoe, Zoe guarantees that\nthe user either gets what they said they wanted, or gets back what they originally offered and\nescrowed (a refund). One reason this is possible is if a [proposal](#proposal) doesn't match what the contract expects to do, it\ncan immediately cause the [seat](#seat) to exit, getting back the amount it offered.", "mimetype": "text/plain", "start_char_idx": 25288, "end_char_idx": 25787, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1920e19c-61d4-4f4a-9614-bc6c093a808b": {"__data__": {"id_": "1920e19c-61d4-4f4a-9614-bc6c093a808b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ff16f70-720d-4896-91ec-fbb8e6ba392b", "node_type": "1", "metadata": {}, "hash": "39d3f1009c0b3a6e64525cf9faa99ad02106e4d5c7da9320b3e276c71950518f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "621de3c5-08bd-4507-9e01-093153e92c0c", "node_type": "1", "metadata": {}, "hash": "b91496e2537761e0a7964428637dc469eb35b62584bff5b4bf3fa39845b73a82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Orchestration", "mimetype": "text/plain", "start_char_idx": 25789, "end_char_idx": 25805, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "621de3c5-08bd-4507-9e01-093153e92c0c": {"__data__": {"id_": "621de3c5-08bd-4507-9e01-093153e92c0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1920e19c-61d4-4f4a-9614-bc6c093a808b", "node_type": "1", "metadata": {}, "hash": "4936c75b1d3ea731cfb4bdb54a9e162825883fda296597ca224fbc02a5a8ad19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f70d633-79cd-45a9-b13c-c1b5df27836d", "node_type": "1", "metadata": {}, "hash": "cad8e6b368e64afbfef3790ae7011be4035676cffd9efa79b5f6335cd3f5914c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Orchestration API is a tool to help developers build seamless applications out of disparate interoperable chains and services.\nThis composability allows for the development of user-centric applications\nthat leverage the unique strengths of different blockchain ecosystems.\nOrchestration integrates with existing Agoric components ([SwingSet](/guides/platform/#swingset), Cosmos modules) and introduces", "mimetype": "text/plain", "start_char_idx": 25807, "end_char_idx": 26208, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f70d633-79cd-45a9-b13c-c1b5df27836d": {"__data__": {"id_": "9f70d633-79cd-45a9-b13c-c1b5df27836d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "621de3c5-08bd-4507-9e01-093153e92c0c", "node_type": "1", "metadata": {}, "hash": "b91496e2537761e0a7964428637dc469eb35b62584bff5b4bf3fa39845b73a82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b53a19d9-986c-454a-aae1-867e9632c8eb", "node_type": "1", "metadata": {}, "hash": "2c032ba8c006cc7cdd5a709177e2f37b92d7b023689df4d113780dc75530d779", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "vat-orchestration. This [vat](/glossary/#vat) manages [Inter-Chain Account (ICA)](#interchain-account-ica) identities and connections to host\nchains, ensuring proper transaction authorization.\nFor more information, see the [Orchestration API](/guides/orchestration/).", "mimetype": "text/plain", "start_char_idx": 26209, "end_char_idx": 26476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b53a19d9-986c-454a-aae1-867e9632c8eb": {"__data__": {"id_": "b53a19d9-986c-454a-aae1-867e9632c8eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f70d633-79cd-45a9-b13c-c1b5df27836d", "node_type": "1", "metadata": {}, "hash": "cad8e6b368e64afbfef3790ae7011be4035676cffd9efa79b5f6335cd3f5914c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "163f1355-3af8-49c0-8dcc-bc0cbbd10383", "node_type": "1", "metadata": {}, "hash": "0a6b75db1f69ebd9c8924104fa8a7cc2225e6043b66212fdcdf60524a3fada23", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Orthogonal Persistence\n\nOrthogonal Persistence refers to a persistence model in which it appears to the programmer as if the program's memory is always there forever.\nThe system automatically keeps the entire memory state in such a way that computation can always resume after events like crashes or restarts.\nThis means the programmer doesn't need to explicitly save or restore any data, making for an easy and convenient programming model.\n\nOrthogonal persistence is contrasted with:", "mimetype": "text/plain", "start_char_idx": 26478, "end_char_idx": 26966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "163f1355-3af8-49c0-8dcc-bc0cbbd10383": {"__data__": {"id_": "163f1355-3af8-49c0-8dcc-bc0cbbd10383", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b53a19d9-986c-454a-aae1-867e9632c8eb", "node_type": "1", "metadata": {}, "hash": "2c032ba8c006cc7cdd5a709177e2f37b92d7b023689df4d113780dc75530d779", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16c7850f-f07d-4c67-80cd-a07159a8ccea", "node_type": "1", "metadata": {}, "hash": "13ef87f805614dd14e0daf42b50af9f5cb66e3cc1289f1d26dd5c1ee9500c79c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Manual Persistence: Where all in-memory state is volatile, and anything you want saved you have to explicitly save yourself, such as by writing\n  to a file or database. All acts of recording and recovering state are deliberate actions performed by the code.\n- Automatic Persistence: Where certain data is designated to be kept, either declaratively or through procedural interfaces.", "mimetype": "text/plain", "start_char_idx": 26968, "end_char_idx": 27352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16c7850f-f07d-4c67-80cd-a07159a8ccea": {"__data__": {"id_": "16c7850f-f07d-4c67-80cd-a07159a8ccea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "163f1355-3af8-49c0-8dcc-bc0cbbd10383", "node_type": "1", "metadata": {}, "hash": "0a6b75db1f69ebd9c8924104fa8a7cc2225e6043b66212fdcdf60524a3fada23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a04371b-80f7-4dd3-96d0-72760242cac3", "node_type": "1", "metadata": {}, "hash": "3ac08890588cb71b4bc1d6302fd0a32644a50ceb1a64a87b855b0878d05d5e0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Updates to this data are automatically saved and available upon resuming execution, but the programmer may still need to manually\n  reestablish in-memory invariants when the program starts or restarts.", "mimetype": "text/plain", "start_char_idx": 27355, "end_char_idx": 27556, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a04371b-80f7-4dd3-96d0-72760242cac3": {"__data__": {"id_": "6a04371b-80f7-4dd3-96d0-72760242cac3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16c7850f-f07d-4c67-80cd-a07159a8ccea", "node_type": "1", "metadata": {}, "hash": "13ef87f805614dd14e0daf42b50af9f5cb66e3cc1289f1d26dd5c1ee9500c79c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e", "node_type": "1", "metadata": {}, "hash": "cfa58f6e13335c69b3f32d34ab1ad05ab558673b26662ee459169fd0429a39b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Passable\n\nA _passable_ is something that can be sent to and from remote objects.\nPassables include pass-by-copy primitive values such as numbers and strings and\npass-by-reference values such as Remotables and Promises.\nPassables also include [CopyArrays](#copyarray) and [CopyRecords](#copyrecord), which are\n[hardened](#harden) acyclic pass-by-copy containers that\nrecursively terminate in non-container passables.", "mimetype": "text/plain", "start_char_idx": 27558, "end_char_idx": 27976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e": {"__data__": {"id_": "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a04371b-80f7-4dd3-96d0-72760242cac3", "node_type": "1", "metadata": {}, "hash": "3ac08890588cb71b4bc1d6302fd0a32644a50ceb1a64a87b855b0878d05d5e0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbd72bdc-d820-46b9-b987-2f3b4bf57796", "node_type": "1", "metadata": {}, "hash": "ed371c79a8bca8395d57821d9a80e5545730aba5f550f88cd070bcea8942df22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the\n[Marshaling section in the JavaScript Distributed Programming Guide](/guides/js-programming/far#marshaling-by-copy-or-by-presence).\n\n## Payment\n\nPayments hold assets created by [mints](#mint), specifically assets intended for transfer\nfrom one party to another. All assets of a payment are of the same [brand](#brand).", "mimetype": "text/plain", "start_char_idx": 27978, "end_char_idx": 28326, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbd72bdc-d820-46b9-b987-2f3b4bf57796": {"__data__": {"id_": "cbd72bdc-d820-46b9-b987-2f3b4bf57796", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e", "node_type": "1", "metadata": {}, "hash": "cfa58f6e13335c69b3f32d34ab1ad05ab558673b26662ee459169fd0429a39b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78e75182-8e1f-486c-9434-173a8d8a9b80", "node_type": "1", "metadata": {}, "hash": "8264f1a855b4ba5fec018a96e259cf8730bbb9fc2a18ea84b2cfe817725861aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [ERTP documentation's Payments section](/guides/ertp/purses-and-payments#payments)\nand the [ERTP API's Payments section](/reference/ertp-api/payment).\n\n## Payout\n\nThe assets paid out to a user when an [seat](#seat) exits, either successfully or not. The payout is always\nwhat the seat's current [allocation](#allocation) is.", "mimetype": "text/plain", "start_char_idx": 28328, "end_char_idx": 28682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78e75182-8e1f-486c-9434-173a8d8a9b80": {"__data__": {"id_": "78e75182-8e1f-486c-9434-173a8d8a9b80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbd72bdc-d820-46b9-b987-2f3b4bf57796", "node_type": "1", "metadata": {}, "hash": "ed371c79a8bca8395d57821d9a80e5545730aba5f550f88cd070bcea8942df22", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b61df57-d759-4f6d-85e2-984a6f261373", "node_type": "1", "metadata": {}, "hash": "81aab3ec9ac21fd7a20e45fbc4f17919837fdcf4ca215310b90062499da20d38", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If there was a reallocation, the payout may be different than what the user escrowed\n(but still constrained by [offer safety](#offer-safety)).\nOtherwise, the payout is the same as what they escrowed.\n\n## Petname", "mimetype": "text/plain", "start_char_idx": 28684, "end_char_idx": 28895, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b61df57-d759-4f6d-85e2-984a6f261373": {"__data__": {"id_": "6b61df57-d759-4f6d-85e2-984a6f261373", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78e75182-8e1f-486c-9434-173a8d8a9b80", "node_type": "1", "metadata": {}, "hash": "8264f1a855b4ba5fec018a96e259cf8730bbb9fc2a18ea84b2cfe817725861aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f198c1d8-f63e-4c3e-8786-2366abc50833", "node_type": "1", "metadata": {}, "hash": "c206e78ade32afc0a84de2d3f44dedb52e8dd882c9df70fd46154ba0b54b7e62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Petname\n\nPetnames are your personal names for objects. No one else can see or modify a petname without your permission.\nThink of them as similar to a phone's contacts list. The actual phone number is what a phone uses to call\nsomeone, but to more easily tell who a number is associated with, it's assigned a petname, such\nas Mom, Grandpa, Kate S., etc. In the Agoric platform, petnames are used in [wallets](#wallet).\n\n## Presence", "mimetype": "text/plain", "start_char_idx": 28885, "end_char_idx": 29318, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f198c1d8-f63e-4c3e-8786-2366abc50833": {"__data__": {"id_": "f198c1d8-f63e-4c3e-8786-2366abc50833", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b61df57-d759-4f6d-85e2-984a6f261373", "node_type": "1", "metadata": {}, "hash": "81aab3ec9ac21fd7a20e45fbc4f17919837fdcf4ca215310b90062499da20d38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c49c6e4-0051-40af-8112-715dff8c1e80", "node_type": "1", "metadata": {}, "hash": "740c38f1f7a446031340aefd413619c6e886528142bcbcf5024c80f733added2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Presence\n\nA local version of a remote object that serves as the remote object's proxy.\nIf `obj` is a presence of a remote object, you can send messages to the remote object by using `E()` on `obj`.\nFor more information, see the [JavaScript Distributed Programming Guide](/guides/js-programming/).\n\n## Proposal", "mimetype": "text/plain", "start_char_idx": 29307, "end_char_idx": 29619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c49c6e4-0051-40af-8112-715dff8c1e80": {"__data__": {"id_": "1c49c6e4-0051-40af-8112-715dff8c1e80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f198c1d8-f63e-4c3e-8786-2366abc50833", "node_type": "1", "metadata": {}, "hash": "c206e78ade32afc0a84de2d3f44dedb52e8dd882c9df70fd46154ba0b54b7e62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef18dcb0-60c2-47a3-b396-f9a56c60d71d", "node_type": "1", "metadata": {}, "hash": "90d7cbea38987ba9b88c6a6287711fc13ba1912ba5a1fed5ae7f48afc52f3905", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposal\n\nProposals are records with `give`, `want`, and/or `exit` properties respectively\nexpressing [offer](#offer) conditions regarding what assets will be given,\nwhat is desired in exchange (protected by [offer safety](#offer-safety)), and\nan [exit rule](#exit-rule) defining how/when the offer can be canceled.\nFor example:\n\n```js\nconst myProposal = harden({\n  give: { Asset: AmountMath.make(quatloosBrand, 4n) },\n  want: { Price: AmountMath.make(moolaBrand, 15n) },\n  exit: { onDemand: null }\n});\n```", "mimetype": "text/plain", "start_char_idx": 29608, "end_char_idx": 30117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef18dcb0-60c2-47a3-b396-f9a56c60d71d": {"__data__": {"id_": "ef18dcb0-60c2-47a3-b396-f9a56c60d71d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c49c6e4-0051-40af-8112-715dff8c1e80", "node_type": "1", "metadata": {}, "hash": "740c38f1f7a446031340aefd413619c6e886528142bcbcf5024c80f733added2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02a34f66-8b09-4746-9ff5-b6189d4efd51", "node_type": "1", "metadata": {}, "hash": "144597d752fa344dfdcab244c1dea115416efdaf7a6ca9102dd91ebd3bf68802", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`give` and `want` each associate [Keywords](#keyword) defined by the contract with corresponding [Amounts](#amount) describing respectively what will be given and what is being requested in exchange.\n\nSee [Offers](/guides/zoe/proposal).\n\n## Purse\n\nA purse holds [amounts](#amount) of assets issued by a particular [mint](#mint) that are all of the same [brand](#brand), often for arbitrarily long periods of time.\nWhen transfer is desired, a purse can move part of its held balance to a [payment](#payment).", "mimetype": "text/plain", "start_char_idx": 30119, "end_char_idx": 30626, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02a34f66-8b09-4746-9ff5-b6189d4efd51": {"__data__": {"id_": "02a34f66-8b09-4746-9ff5-b6189d4efd51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef18dcb0-60c2-47a3-b396-f9a56c60d71d", "node_type": "1", "metadata": {}, "hash": "90d7cbea38987ba9b88c6a6287711fc13ba1912ba5a1fed5ae7f48afc52f3905", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f036865-6783-4d63-a057-f1587deec6f7", "node_type": "1", "metadata": {}, "hash": "89e16a66252d569825a64608f308b7af6cc52471481a7e464e51fd2cb0c1aae3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [ERTP documentation's Purses section](/guides/ertp/purses-and-payments#purses-and-payments) and the\n[ERTP API's Purses section](/reference/ertp-api/purse).\n\n## Quatloos\n\nAn imaginary currency Agoric documentation uses in examples. For its origins, see the Wikipedia entry for the Star Trek\nepisode [The Gamesters of Triskelion](https://en.wikipedia.org/wiki/The_Gamesters_of_Triskelion).\n\n## Reallocation", "mimetype": "text/plain", "start_char_idx": 30628, "end_char_idx": 31062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f036865-6783-4d63-a057-f1587deec6f7": {"__data__": {"id_": "8f036865-6783-4d63-a057-f1587deec6f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02a34f66-8b09-4746-9ff5-b6189d4efd51", "node_type": "1", "metadata": {}, "hash": "144597d752fa344dfdcab244c1dea115416efdaf7a6ca9102dd91ebd3bf68802", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd97167a-3eea-4a96-a953-ada055f34071", "node_type": "1", "metadata": {}, "hash": "77243fcfe51d8a28a58aefdd3192e938ecd4525aae19a6702ffcef06d2453149", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Reallocation\n\nA transfer of [amounts](#amount) between [seats](#seat) within Zoe; i.e. a change in their [allocations](#allocation). When a seat exits, it gets its\ncurrent allocation as a [payout](#payout).\n\n## Seat", "mimetype": "text/plain", "start_char_idx": 31047, "end_char_idx": 31265, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd97167a-3eea-4a96-a953-ada055f34071": {"__data__": {"id_": "dd97167a-3eea-4a96-a953-ada055f34071", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f036865-6783-4d63-a057-f1587deec6f7", "node_type": "1", "metadata": {}, "hash": "89e16a66252d569825a64608f308b7af6cc52471481a7e464e51fd2cb0c1aae3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbf9560f-f803-4e07-81d7-9d7e68409808", "node_type": "1", "metadata": {}, "hash": "dd2011af2a0ddfd2e4ef5c24c9beda16668afba27414b6018f3f9dd17ed688fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Seat\n\nZoe uses a seat to represent an [offer](#offer) in progress, and has two seat [facets](#facet) representing\ntwo views of the same seat; a `ZCFSeat` and a `UserSeat`. The `UserSeat` is returned to the user who made an\noffer, and can check [payout](#payout) status or retrieve their results. The `ZCFSeat` is the argument passed to\nthe `offerHandler` in the contract code. It is used within contracts and with [`zcf` methods](/reference/zoe-api/zoe-contract-facet).", "mimetype": "text/plain", "start_char_idx": 31258, "end_char_idx": 31730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbf9560f-f803-4e07-81d7-9d7e68409808": {"__data__": {"id_": "bbf9560f-f803-4e07-81d7-9d7e68409808", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd97167a-3eea-4a96-a953-ada055f34071", "node_type": "1", "metadata": {}, "hash": "77243fcfe51d8a28a58aefdd3192e938ecd4525aae19a6702ffcef06d2453149", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62d74454-cb4f-4e06-ab46-376c1f954e44", "node_type": "1", "metadata": {}, "hash": "92f5695f730c8788977d22b1a464c7630a8b9c5fbe0e88c13502872d3d3d52aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The two seat facets have slightly different methods but represent the same seat and offer in progress.\nThe term comes from the expression \"having a seat at the table\" with regards to participating in a negotiation.\n\nFor more details, see the [ZCFSeat documentation](/reference/zoe-api/zcfseat) and\nthe [UserSeat documentation](/reference/zoe-api/user-seat).\n\n## Semi-fungible", "mimetype": "text/plain", "start_char_idx": 31732, "end_char_idx": 32107, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62d74454-cb4f-4e06-ab46-376c1f954e44": {"__data__": {"id_": "62d74454-cb4f-4e06-ab46-376c1f954e44", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbf9560f-f803-4e07-81d7-9d7e68409808", "node_type": "1", "metadata": {}, "hash": "dd2011af2a0ddfd2e4ef5c24c9beda16668afba27414b6018f3f9dd17ed688fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9f14453-34d5-487f-8b8b-dec6f260b2c0", "node_type": "1", "metadata": {}, "hash": "9d3893aa401843a904e72f01869d1a1254db02eec0321a71c2df68512e7cdf59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Semi-fungible\n\nA semi-fungible asset is one that has distinct forms which are not interchangeable\nwith each other, but in which instances of a single form may be interchangeable with\nother instances of the same form.\nAs a variation on the [non-fungible](#non-fungible) theater ticket example, tickets\nmight specify only a section, where the holder may sit in any seat of that section.\nFor each section, the number of theater tickets minted should not exceed the number\nof seats in that section.\n\n## SES", "mimetype": "text/plain", "start_char_idx": 32091, "end_char_idx": 32596, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9f14453-34d5-487f-8b8b-dec6f260b2c0": {"__data__": {"id_": "c9f14453-34d5-487f-8b8b-dec6f260b2c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62d74454-cb4f-4e06-ab46-376c1f954e44", "node_type": "1", "metadata": {}, "hash": "92f5695f730c8788977d22b1a464c7630a8b9c5fbe0e88c13502872d3d3d52aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c5529d2-515d-4bbc-a360-fe25e3128401", "node_type": "1", "metadata": {}, "hash": "e0b8756a0b998a9b274842c9079720f76f93dc5dab8828fb2d7c2a4d9c287b44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## SES\n\nSecure ECMAScript has been renamed to [Hardened JavaScript](#hardened-javascript-ses).\n\n## Simoleons\n\nAn imaginary currency Agoric documentation uses in examples.\n\n## Smart Contract\n\nA smart contract is a contract-\u200blike arrangement expressed in code, where the behavior of the\nprogram enforces the terms of the contract.", "mimetype": "text/plain", "start_char_idx": 32590, "end_char_idx": 32918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c5529d2-515d-4bbc-a360-fe25e3128401": {"__data__": {"id_": "5c5529d2-515d-4bbc-a360-fe25e3128401", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9f14453-34d5-487f-8b8b-dec6f260b2c0", "node_type": "1", "metadata": {}, "hash": "9d3893aa401843a904e72f01869d1a1254db02eec0321a71c2df68512e7cdf59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c725368-f3d5-48bc-8bca-7ff10382fda8", "node_type": "1", "metadata": {}, "hash": "9761e4ba9e1d6429a336aac3eb74bee54b0ec186e2e26fe6b772b4b8b1ab5ddb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the context of the Agoric blockchain, smart contracts are written using JavaScript and leverage\nAgoric's [secure environment](#offer-safety) to build and deploy reliable decentralized applications.\n\n## Terms", "mimetype": "text/plain", "start_char_idx": 32920, "end_char_idx": 33130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c725368-f3d5-48bc-8bca-7ff10382fda8": {"__data__": {"id_": "0c725368-f3d5-48bc-8bca-7ff10382fda8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c5529d2-515d-4bbc-a360-fe25e3128401", "node_type": "1", "metadata": {}, "hash": "e0b8756a0b998a9b274842c9079720f76f93dc5dab8828fb2d7c2a4d9c287b44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b6aa85f-0d70-4c98-9f4c-6beef9956de7", "node_type": "1", "metadata": {}, "hash": "e299bce9e8415ec0a70ce40aa38821ccbbdba358c9c98f3261ee47969221d2e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Contract instances have associated terms, gotten via [`E(zoe).getTerms(instance)`](/reference/zoe-api/zoe#e-zoe-getterms-instance),\nwhich include the instance's associated [issuers](#issuer), [brands](#brand), and any custom terms. For\nexample, you might have a general auction contract. When someone instantiates it,\nthey provide terms applicable only to that instance. For some instances of\nthe auction, they want the minimum bid set at $1000. At other instances, they'd like", "mimetype": "text/plain", "start_char_idx": 33132, "end_char_idx": 33609, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b6aa85f-0d70-4c98-9f4c-6beef9956de7": {"__data__": {"id_": "7b6aa85f-0d70-4c98-9f4c-6beef9956de7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c725368-f3d5-48bc-8bca-7ff10382fda8", "node_type": "1", "metadata": {}, "hash": "9761e4ba9e1d6429a336aac3eb74bee54b0ec186e2e26fe6b772b4b8b1ab5ddb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6", "node_type": "1", "metadata": {}, "hash": "58e6c9374bc595ab7b0a95b87319b98cc5a44ce935ac216ec771f1062aaf84f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "it set at $10. They can specify the instance's minimum bid amount in its terms.", "mimetype": "text/plain", "start_char_idx": 33610, "end_char_idx": 33689, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6": {"__data__": {"id_": "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b6aa85f-0d70-4c98-9f4c-6beef9956de7", "node_type": "1", "metadata": {}, "hash": "e299bce9e8415ec0a70ce40aa38821ccbbdba358c9c98f3261ee47969221d2e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7113224a-24bd-473f-8bfd-864c590a37bb", "node_type": "1", "metadata": {}, "hash": "8c9b4d424afce83fd1165af1635ef9ea4bacdf1ff096b9a686f0e33f05b170aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For example, see [starting the offer-up contract](/guides/zoe/contract-walkthru.html#starting-a-contract-instance).\n\n## Vat\n\nA vat is a unit of isolation.\nObjects and functions in a JavaScript vat can communicate synchronously with one another. Vats and their contents can\ncommunicate with other vats and their objects and functions, but can only communicate asynchronously.", "mimetype": "text/plain", "start_char_idx": 33691, "end_char_idx": 34065, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7113224a-24bd-473f-8bfd-864c590a37bb": {"__data__": {"id_": "7113224a-24bd-473f-8bfd-864c590a37bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6", "node_type": "1", "metadata": {}, "hash": "58e6c9374bc595ab7b0a95b87319b98cc5a44ce935ac216ec771f1062aaf84f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c57cefdd-ffbf-4806-abe8-cc9de9927260", "node_type": "1", "metadata": {}, "hash": "477afb2339cf66a16c50b3791fa6d6e2da401ca1587a6759fa56040ab7811cba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information, see the [Vat section in the Distributed JS Programming documentation](/guides/js-programming/#vats-the-unit-of-synchrony).", "mimetype": "text/plain", "start_char_idx": 34067, "end_char_idx": 34211, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c57cefdd-ffbf-4806-abe8-cc9de9927260": {"__data__": {"id_": "c57cefdd-ffbf-4806-abe8-cc9de9927260", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7113224a-24bd-473f-8bfd-864c590a37bb", "node_type": "1", "metadata": {}, "hash": "8c9b4d424afce83fd1165af1635ef9ea4bacdf1ff096b9a686f0e33f05b170aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cf9642c-89a1-4772-9a3f-aa973c2af612", "node_type": "1", "metadata": {}, "hash": "8fd4444bd23a45ea1a6c4e3a281e6c380199650ad6f96c8fdf2adb23ae01d2e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The concept of a vat is metaphorically inspired by the philosophical experiment known as \u201cBrain in a Vat.\u201d This thought experiment, explored in philosophy, posits a scenario in which a brain is sustained in a vat and connected to a computer that simulates reality, raising questions about knowledge, reality, and perception. Similarly, in the context of distributed systems, a vat isolates and encapsulates its contents, maintaining strict boundaries on synchronous and asynchronous communication, much like the", "mimetype": "text/plain", "start_char_idx": 34213, "end_char_idx": 34724, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cf9642c-89a1-4772-9a3f-aa973c2af612": {"__data__": {"id_": "1cf9642c-89a1-4772-9a3f-aa973c2af612", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c57cefdd-ffbf-4806-abe8-cc9de9927260", "node_type": "1", "metadata": {}, "hash": "477afb2339cf66a16c50b3791fa6d6e2da401ca1587a6759fa56040ab7811cba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d12d27fe-b142-4f41-b591-2f0ad9f14aa2", "node_type": "1", "metadata": {}, "hash": "3207861648abd505536c2e753a8a7814977dcf3e19b6cfd6a8da204e20deaa7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "communication, much like the hypothetical brain\u2019s isolated and controlled environment. For more details, see the Wikipedia page on [Brain in a Vat](https://en.wikipedia.org/wiki/Brain_in_a_vat).", "mimetype": "text/plain", "start_char_idx": 34696, "end_char_idx": 34890, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d12d27fe-b142-4f41-b591-2f0ad9f14aa2": {"__data__": {"id_": "d12d27fe-b142-4f41-b591-2f0ad9f14aa2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cf9642c-89a1-4772-9a3f-aa973c2af612", "node_type": "1", "metadata": {}, "hash": "8fd4444bd23a45ea1a6c4e3a281e6c380199650ad6f96c8fdf2adb23ae01d2e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c8bca3c-4a85-4505-a822-6b6044159374", "node_type": "1", "metadata": {}, "hash": "4b5e97991992831b9e6a0a00162be97e2303fc8695045cb2ab0c4070ae2636ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Vow\n\nVows are objects that represent promises that can be stored durably. Native promises are not compatible with Agoric's durable stores, which means that on the Agoric platform, such promises disconnect their clients when their creator vat is upgraded.\n\n## Wallet", "mimetype": "text/plain", "start_char_idx": 34892, "end_char_idx": 35160, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c8bca3c-4a85-4505-a822-6b6044159374": {"__data__": {"id_": "7c8bca3c-4a85-4505-a822-6b6044159374", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d12d27fe-b142-4f41-b591-2f0ad9f14aa2", "node_type": "1", "metadata": {}, "hash": "3207861648abd505536c2e753a8a7814977dcf3e19b6cfd6a8da204e20deaa7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a96121f-659e-4549-9d09-aa8a303cebdd", "node_type": "1", "metadata": {}, "hash": "e32bd03eb519fd1fc4a24abdac36d2088e7f2c43b3435c893abd76e050a774e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Wallet\n\nThe overall place a party keeps their assets of all brands. For example, your wallet might contain 5 Quatloos\n[purses](#purse), 8 Moola purses, and 2 Simoleons purses. A wallet can distinguish between [issuers](#issuer).\nDapps can propose [offers](#offer) to a wallet. If a user accepts the offer proposal,\nthe wallet makes an offer on the user's behalf and deposits the [payout](#payout) in the user's [purses](#purse).\nSee the [Wallet Guide and API](/guides/wallet/).\n\n## ZCF", "mimetype": "text/plain", "start_char_idx": 35151, "end_char_idx": 35639, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a96121f-659e-4549-9d09-aa8a303cebdd": {"__data__": {"id_": "1a96121f-659e-4549-9d09-aa8a303cebdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c8bca3c-4a85-4505-a822-6b6044159374", "node_type": "1", "metadata": {}, "hash": "4b5e97991992831b9e6a0a00162be97e2303fc8695045cb2ab0c4070ae2636ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1291dc64-e9d9-464a-aba6-bde852af764c", "node_type": "1", "metadata": {}, "hash": "6814dec868256b69be4e096a38cd0004bd399fb2793af9e0bc3ae04e846373e2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ZCF\n\n_ZCF (Zoe Contract Facet)_ is the [facet](#facet) of Zoe exposed to contract code. The Zoe\nContract Facet methods can be called synchronously by contract code.\n\nSee the [ZCF API](/reference/zoe-api/zoe-contract-facet).\n\n## ZCFMint\n\nSee [Mint](#mint).\n\n## Zoe Helpers\n\nA set of API helper methods for writing contracts. These methods extract common contract code and\npatterns into reusable helpers. See the [Zoe Helpers API](/reference/zoe-api/zoe-helpers).\n\n## Zoe Service", "mimetype": "text/plain", "start_char_idx": 35633, "end_char_idx": 36113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1291dc64-e9d9-464a-aba6-bde852af764c": {"__data__": {"id_": "1291dc64-e9d9-464a-aba6-bde852af764c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a96121f-659e-4549-9d09-aa8a303cebdd", "node_type": "1", "metadata": {}, "hash": "e32bd03eb519fd1fc4a24abdac36d2088e7f2c43b3435c893abd76e050a774e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8855523d-e78a-43b0-8403-f3389f9c4e6b", "node_type": "1", "metadata": {}, "hash": "ade653a63b20bfcad61ed2db8ff52d7a0c6b9801d57ebe1d7d2ab420d6058b50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Zoe Service\n\nA set of API methods for deploying and working with smart contracts. See [Zoe Service API](/reference/zoe-api/zoe).\n\n## Zone", "mimetype": "text/plain", "start_char_idx": 36099, "end_char_idx": 36239, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8855523d-e78a-43b0-8403-f3389f9c4e6b": {"__data__": {"id_": "8855523d-e78a-43b0-8403-f3389f9c4e6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1291dc64-e9d9-464a-aba6-bde852af764c", "node_type": "1", "metadata": {}, "hash": "6814dec868256b69be4e096a38cd0004bd399fb2793af9e0bc3ae04e846373e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e782d97d-8cab-4559-8606-3547af44472d", "node_type": "1", "metadata": {}, "hash": "29cf5b5bce92e63c1cbf06ef12746f87a2396477253f769810eef43bb420c3f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Zone\n\nEach Zone provides an API that allows the allocation of [Exo objects](#exo) and [Stores (object collections)](https://github.com/Agoric/agoric-sdk/tree/master/packages/store/README.md) which use the same underlying persistence mechanism. This allows library code to be agnostic to whether its objects are backed purely by the JS heap (ephemeral), pageable out to disk (virtual) or can be revived after a vat upgrade (durable).", "mimetype": "text/plain", "start_char_idx": 36232, "end_char_idx": 36667, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e782d97d-8cab-4559-8606-3547af44472d": {"__data__": {"id_": "e782d97d-8cab-4559-8606-3547af44472d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_glossary_index.md", "node_type": "4", "metadata": {}, "hash": "fce76f35c55e0e6d51ce5d750d341f55c34f2b4003a1862d502aeb65c10c9b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8855523d-e78a-43b0-8403-f3389f9c4e6b", "node_type": "1", "metadata": {}, "hash": "ade653a63b20bfcad61ed2db8ff52d7a0c6b9801d57ebe1d7d2ab420d6058b50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See [SwingSet vat upgrade documentation](https://github.com/Agoric/agoric-sdk/tree/master/packages/SwingSet/docs/vat-upgrade.md) for more example use of the zone API.", "mimetype": "text/plain", "start_char_idx": 36669, "end_char_idx": 36835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f86571a-18ab-49e9-ad39-53e83535d71a": {"__data__": {"id_": "7f86571a-18ab-49e9-ad39-53e83535d71a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_chainlink-integration.md", "node_type": "4", "metadata": {}, "hash": "8592c85f73a0553c56a39120f74e79c3c764c5c0f8a040cb7d7d47db4023a76e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See\n\n- [Price Authorty Guide](./zoe/price-authority)\n- [PriceAuthority API](../reference/zoe-api/price-authority)\n- [Deployed Zoe Contracts](./zoe/actual-contracts/)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 165, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5dcd91a-fe74-4d8b-bf2c-87c6a09e7137": {"__data__": {"id_": "e5dcd91a-fe74-4d8b-bf2c-87c6a09e7137", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_index.md", "node_type": "4", "metadata": {}, "hash": "9a394df6273d25485fa853499769e5a83d5a443889648e847ca6e3d7d8d69471", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is the non-API section of the Agoric documentation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 56, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d65da903-2c7a-48bd-b9c8-03f5b8d2177d": {"__data__": {"id_": "d65da903-2c7a-48bd-b9c8-03f5b8d2177d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a43a7238-5c00-4982-89d1-8c245d2888e7", "node_type": "1", "metadata": {}, "hash": "d4ddd24cac86c26d5cf0badc393ab08e38b07fa7a47801e36d8205c1b8ca2155", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# SubQuery Indexing\n\nThis document explains how to index Agoric blockchain data with SubQuery's open source data indexer.\n\n## Overview\n\nAs described by the SubQuery team:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 170, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a43a7238-5c00-4982-89d1-8c245d2888e7": {"__data__": {"id_": "a43a7238-5c00-4982-89d1-8c245d2888e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d65da903-2c7a-48bd-b9c8-03f5b8d2177d", "node_type": "1", "metadata": {}, "hash": "cfd320f33c99b9f8177732a92f3553a48124413ccdcde3a42272ff8fa410c348", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2098ea5d-be69-48df-8dd1-25540efebfd4", "node_type": "1", "metadata": {}, "hash": "c0de33d32e777766fac277d64c273eda8621cac11df2e93003ea875b9892dc3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As described by the SubQuery team:\n\nSubQuery is a leading blockchain data indexer that provides developers with fast, flexible, universal, open source and decentralised APIs for web3 projects. SubQuery SDK allows developers to get rich indexed data and build intuitive and immersive decentralised applications in a faster and more efficient way. SubQuery supports 100+ ecosystems including Agoric Cosmos, Ethereum, Polygon, Polkadot, Algorand, NEAR, and Avalanche.", "mimetype": "text/plain", "start_char_idx": 136, "end_char_idx": 600, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2098ea5d-be69-48df-8dd1-25540efebfd4": {"__data__": {"id_": "2098ea5d-be69-48df-8dd1-25540efebfd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a43a7238-5c00-4982-89d1-8c245d2888e7", "node_type": "1", "metadata": {}, "hash": "d4ddd24cac86c26d5cf0badc393ab08e38b07fa7a47801e36d8205c1b8ca2155", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b465841d-c391-4b58-9050-d578d26b267a", "node_type": "1", "metadata": {}, "hash": "4d5d6f2dadf19378603ea981eeb21f0a883678429cddf7c1804006c00418c538", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Features include multiple RPC endpoint configurations, multi-worker capabilities and a configurable caching architecture. To find out more, visit our [documentation](https://academy.subquery.network/).\n\n## Getting started\n\nTake a look at this [SubQuery Starter Project](https://github.com/subquery/cosmos-subql-starter/tree/main/Agoric/agoric-starter) that introduces SubQuery's Agoric support by indexing all transfer events and messages on the Agoric network.", "mimetype": "text/plain", "start_char_idx": 602, "end_char_idx": 1063, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b465841d-c391-4b58-9050-d578d26b267a": {"__data__": {"id_": "b465841d-c391-4b58-9050-d578d26b267a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2098ea5d-be69-48df-8dd1-25540efebfd4", "node_type": "1", "metadata": {}, "hash": "c0de33d32e777766fac277d64c273eda8621cac11df2e93003ea875b9892dc3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7131f33-7c3a-4873-90ae-14268b30fc62", "node_type": "1", "metadata": {}, "hash": "a0680dcbcbed49d696993fb992d3e5ad12526ac388fa2f444e9ea46dc8e0652a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can also follow along this [step by step guide](https://academy.subquery.network/quickstart/quickstart_chains/cosmos-agoric.html) to get familiar with SubQuery or check out the [Agoric x SubQuery workshop](https://www.youtube.com/watch?v=QC5wQOcWynU) to see an actual demo.\n\n## Running and Hosting your Agoric SubQuery APIs", "mimetype": "text/plain", "start_char_idx": 1065, "end_char_idx": 1392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7131f33-7c3a-4873-90ae-14268b30fc62": {"__data__": {"id_": "e7131f33-7c3a-4873-90ae-14268b30fc62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b465841d-c391-4b58-9050-d578d26b267a", "node_type": "1", "metadata": {}, "hash": "4d5d6f2dadf19378603ea981eeb21f0a883678429cddf7c1804006c00418c538", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231", "node_type": "1", "metadata": {}, "hash": "25cc594e714d5eeb09c0e29da3a59f2ee95f72817390444a47feac415c225996", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "SubQuery is [open-source](https://opensource.org/osd/), licensed under the [GNU GENERAL PUBLIC LICENSE](https://github.com/subquery/subql/blob/main/LICENSE), meaning you have the freedom to run it in the following three ways:\n\n- Locally on your own computer, or a cloud provider of your choosing. View the [instructions on how to run SubQuery locally](https://academy.subquery.network/run_publish/run.html).", "mimetype": "text/plain", "start_char_idx": 1394, "end_char_idx": 1801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231": {"__data__": {"id_": "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7131f33-7c3a-4873-90ae-14268b30fc62", "node_type": "1", "metadata": {}, "hash": "a0680dcbcbed49d696993fb992d3e5ad12526ac388fa2f444e9ea46dc8e0652a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfddbe2b-48fe-4895-b217-6d01ae321306", "node_type": "1", "metadata": {}, "hash": "2839da2fecbb551411fd45a790dcdd1535a39b671e488dcf176c1adf8896625a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- You can publish it to SubQuery's [Managed Service](https://managedservice.subquery.network/login), where SubQuery will host projects on your behalf. There is also a free tier. [Find out how](https://academy.subquery.network/run_publish/publish.html).\n\n- You can publish it to the [decentralised SubQuery Network](https://kepler.subquery.network/dashboard). The SubQuery Network indexes and services data to the global community in an incentivised and verifiable way and supports Agoric from launch.", "mimetype": "text/plain", "start_char_idx": 1803, "end_char_idx": 2303, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bfddbe2b-48fe-4895-b217-6d01ae321306": {"__data__": {"id_": "bfddbe2b-48fe-4895-b217-6d01ae321306", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231", "node_type": "1", "metadata": {}, "hash": "25cc594e714d5eeb09c0e29da3a59f2ee95f72817390444a47feac415c225996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2683698-ab71-4def-a6ad-e40f3bab6203", "node_type": "1", "metadata": {}, "hash": "9f38fae9d7e5cccda0c7ec8a5e322369ae499f1d40d8b9d3b98ce1a103da2386", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Resources\n\nHere are some additional resources to help you get started using SubQuery with Agoric:", "mimetype": "text/plain", "start_char_idx": 2305, "end_char_idx": 2405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2683698-ab71-4def-a6ad-e40f3bab6203": {"__data__": {"id_": "c2683698-ab71-4def-a6ad-e40f3bab6203", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfddbe2b-48fe-4895-b217-6d01ae321306", "node_type": "1", "metadata": {}, "hash": "2839da2fecbb551411fd45a790dcdd1535a39b671e488dcf176c1adf8896625a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "157a71a7-065f-47fc-9d09-6e16182509d0", "node_type": "1", "metadata": {}, "hash": "9338c9c0f44c3661e4864061d3851b37711854c381f962c5f6ac6da21d97b1ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [SubQuery Website](https://subquery.network/?utm_source=agoric&utm_medium=partner-docs)\n- [Documentation](https://academy.subquery.network/?utm_source=agoric&utm_medium=partner-docs)\n- [SubQuery Agoric Support Announcement](https://subquery.medium.com/subquery-now-supports-builders-on-agoric-with-fast-data-indexing-27da34a9050c?utm_source=agoric&utm_medium=partner-docs)", "mimetype": "text/plain", "start_char_idx": 2407, "end_char_idx": 2781, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "157a71a7-065f-47fc-9d09-6e16182509d0": {"__data__": {"id_": "157a71a7-065f-47fc-9d09-6e16182509d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_subquery-indexing.md", "node_type": "4", "metadata": {}, "hash": "530eaaaeebffc79caf803c7d32101f991bbbe1c2d783bdef457a5140c9cef0a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2683698-ab71-4def-a6ad-e40f3bab6203", "node_type": "1", "metadata": {}, "hash": "9f38fae9d7e5cccda0c7ec8a5e322369ae499f1d40d8b9d3b98ce1a103da2386", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [Agoric Quick Start Guide](https://academy.subquery.network/quickstart/quickstart_chains/cosmos-agoric.html?utm_source=agoric&utm_medium=partner-docs)\n- [Agoric Starter Project](https://github.com/subquery/cosmos-subql-starter/tree/main/Agoric/agoric-starter?utm_source=agoric&utm_medium=partner-docs)\n- [Discord Support](https://discord.com/invite/subquery/?utm_source=agoric&utm_medium=partner-docs)", "mimetype": "text/plain", "start_char_idx": 2782, "end_char_idx": 3185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b95fa57-80e9-4282-a695-ccd9a49e4d69": {"__data__": {"id_": "5b95fa57-80e9-4282-a695-ccd9a49e4d69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a50ea75-d594-4b07-bf88-00d0622ea19d", "node_type": "1", "metadata": {}, "hash": "395208b65c2698e0611945aa89b564bb3b0044c737c27415e94dd43430cbbb5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Using `agd` to make queries and transactions\n\n`agd` is the Agoric Cosmos App, analagous to `simd` in the [Cosmos SDK](https://docs.cosmos.network/) simapp or `gaiad` in\nthe Cosmos hub. Most of the `simd` [query commands](https://docs.cosmos.network/v0.46/core/cli.html#query-commands) and [transaction commands](https://docs.cosmos.network/v0.46/core/cli.html#transaction-commands) work similarly in `agd`.\n\n::: tip agd for Building Dapps", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 440, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a50ea75-d594-4b07-bf88-00d0622ea19d": {"__data__": {"id_": "9a50ea75-d594-4b07-bf88-00d0622ea19d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b95fa57-80e9-4282-a695-ccd9a49e4d69", "node_type": "1", "metadata": {}, "hash": "3489c12dcf60cecb5008048edc0028533140f504fc953c1a4752a7183ef3464e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "536df46a-8268-41be-a569-82a3cfef7656", "node_type": "1", "metadata": {}, "hash": "db11b7893160458a8a487e7cff9b58a932364d0ac2a435202f3ec2852540d2f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip agd for Building Dapps\n\nThis section focusses on commands relevant to developing and deploying smart contracts and dapps. See also:\n\n- [Validators topics \\- Agoric Community Forum](https://community.agoric.com/c/validators/9)\n- [Governance topics \\- Agoric Community Forum](https://community.agoric.com/c/governance/6)\n- [Delegator Guide \\(CLI\\) \\| Cosmos Hub](https://hub.cosmos.network/delegators/delegator-guide-cli.html)\n\n:::\n\n::: tip Installing agd\n\nOptions include:", "mimetype": "text/plain", "start_char_idx": 410, "end_char_idx": 889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "536df46a-8268-41be-a569-82a3cfef7656": {"__data__": {"id_": "536df46a-8268-41be-a569-82a3cfef7656", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a50ea75-d594-4b07-bf88-00d0622ea19d", "node_type": "1", "metadata": {}, "hash": "395208b65c2698e0611945aa89b564bb3b0044c737c27415e94dd43430cbbb5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e488cd2-607d-44eb-8940-9cb0ed443848", "node_type": "1", "metadata": {}, "hash": "040c5235bc0e117c632998769cc9d9c66ec2e501c00e564777ba34383c176dbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Options include:\n\n- Use the [basic dapp local chain](../getting-started/#starting-a-local-agoric-blockchain) docker container: to run `agd status`, enter `yarn docker:bash` followed by `agd status`; or use `docker-compose exec agd agd status`.\n- Install from an [agoric-sdk release](https://github.com/Agoric/agoric-sdk/releases).\n\n:::\n\nIf we invoke `agd` without arguments, it prints a list of available commands including:\n\n```\nAvailable Commands:", "mimetype": "text/plain", "start_char_idx": 873, "end_char_idx": 1322, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e488cd2-607d-44eb-8940-9cb0ed443848": {"__data__": {"id_": "7e488cd2-607d-44eb-8940-9cb0ed443848", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "536df46a-8268-41be-a569-82a3cfef7656", "node_type": "1", "metadata": {}, "hash": "db11b7893160458a8a487e7cff9b58a932364d0ac2a435202f3ec2852540d2f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0160ab76-5c23-4a8b-bb00-be2a76b1e33e", "node_type": "1", "metadata": {}, "hash": "7b232a4d9a42114098bc44542374a29a0c1b087dc4c83fc6d6ad10998d6a640a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nAvailable Commands:\n\n  help                Help about any command\n  keys                Manage your application's keys\n  query               Querying subcommands\n  status              Query remote node for status\n  tx                  Transactions subcommands\n  version             Print the application binary version information\n\nFlags:\n  -h, --help                help for agd\n      --home string         directory for config and data (default $HOME)\n```\n\n## Query Commands", "mimetype": "text/plain", "start_char_idx": 1299, "end_char_idx": 1779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0160ab76-5c23-4a8b-bb00-be2a76b1e33e": {"__data__": {"id_": "0160ab76-5c23-4a8b-bb00-be2a76b1e33e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e488cd2-607d-44eb-8940-9cb0ed443848", "node_type": "1", "metadata": {}, "hash": "040c5235bc0e117c632998769cc9d9c66ec2e501c00e564777ba34383c176dbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38b71b14-cb13-4c12-9981-67ea7cd91aaa", "node_type": "1", "metadata": {}, "hash": "2e68738cd81e9a7f2b6bbe7632c55fcef7da89bf55125c6ca9e33d997e2b8c2f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Query Commands\n\nIn most cases, `agd query ...` is followed by a module name such as `bank`. An exception is `agd status`:\n\n## agd status\n\nQuery remote node for status\n\nExample:\n\n```console\n$ agd status\n{\"NodeInfo\":{\"protocol_version\":{\"p2p\":\"8\",\"block\":\"11\" ... }}}\n```\n\n::: tip Formatting with jq\n\nFor pretty-printed JSON, or to select parts, pipe the output through [jq](https://jqlang.github.io/jq/).\n\n```console\n$ agd status | jq .ValidatorInfo\n```", "mimetype": "text/plain", "start_char_idx": 1762, "end_char_idx": 2217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38b71b14-cb13-4c12-9981-67ea7cd91aaa": {"__data__": {"id_": "38b71b14-cb13-4c12-9981-67ea7cd91aaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0160ab76-5c23-4a8b-bb00-be2a76b1e33e", "node_type": "1", "metadata": {}, "hash": "7b232a4d9a42114098bc44542374a29a0c1b087dc4c83fc6d6ad10998d6a640a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37e27b3b-7fdd-4325-81bf-a425eb68b933", "node_type": "1", "metadata": {}, "hash": "7635f0667ee6b264bec17420376934c09fcef84a0ebdb1532bd4afd18c3f5aa4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n{\n  \"Address\": \"B4167E20C19D9B30ACD93865B854555D3823B31C\",\n  \"PubKey\": {\n    \"type\": \"tendermint/PubKeyEd25519\",\n    \"value\": \"F9rO2FZ5sliRSRUVYnwWYVS0Ptf8Ll1dIOb6SQkgmTA=\"\n  },\n  \"VotingPower\": \"5000\"\n}\n```\n\n:::\n\nThe query goes to a local node at `tcp://localhost:26657` by default. To use another node:\n\n```console\n$ agd status --node https://devnet.rpc.agoric.net:443\n{\"NodeInfo\":{\"protocol_version\":{\"p2p\":\"8\",\"block\":\"11\" ... }}}\n```\n\n::: tip Port is required", "mimetype": "text/plain", "start_char_idx": 2219, "end_char_idx": 2691, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37e27b3b-7fdd-4325-81bf-a425eb68b933": {"__data__": {"id_": "37e27b3b-7fdd-4325-81bf-a425eb68b933", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38b71b14-cb13-4c12-9981-67ea7cd91aaa", "node_type": "1", "metadata": {}, "hash": "2e68738cd81e9a7f2b6bbe7632c55fcef7da89bf55125c6ca9e33d997e2b8c2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0a2bf66-eb5d-4491-a81e-28afcd10caff", "node_type": "1", "metadata": {}, "hash": "b0bef9c45e3a245a71988f208df229ff263384d31f7c291a384bf72d8f07db62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Port is required\n\nTypically, `:443` can be left implicit in `https` URLs.\nBut not here. Without it, we get:\n\n```\nError: post failed: Post \"https://devnet.rpc.agoric.net\": dial tcp: address devnet.rpc.agoric.net: missing port in address\n```\n\n:::\n\n## agd query bank balances\n\nQuery for account balances by address\n\nExample:\n\n```\n$ addr=agoric14pfrxg63jn6ha0cp6wxkm4nlvswtscrh2pymwm\n$ agd query bank balances $addr\nbalances:\n- amount: \"331000000\"\n  denom: ubld\n- amount: \"4854000000\"\n  denom: uist\n```", "mimetype": "text/plain", "start_char_idx": 2667, "end_char_idx": 3173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0a2bf66-eb5d-4491-a81e-28afcd10caff": {"__data__": {"id_": "d0a2bf66-eb5d-4491-a81e-28afcd10caff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37e27b3b-7fdd-4325-81bf-a425eb68b933", "node_type": "1", "metadata": {}, "hash": "7635f0667ee6b264bec17420376934c09fcef84a0ebdb1532bd4afd18c3f5aa4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae22187c-c600-4da2-b134-ab97da0adfb8", "node_type": "1", "metadata": {}, "hash": "89da560ff2ddc4474c2cf9faef022de7b16d9e973a3001dafc975f8478ffa812", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To get **JSON output** rather than YAML:\n\n```console\n$ agd query bank balances $addr -o json\n{\"balances\":[{\"denom\":\"ubld\",\"amount\":\"331000000\"},{\"denom\":\"uist\",\"amount\":\"4854000000\"}],...}\n```\n\n## agd query gov proposals\n\nQuery for a all paginated proposals that match optional filters.\n\nExample:", "mimetype": "text/plain", "start_char_idx": 3175, "end_char_idx": 3471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae22187c-c600-4da2-b134-ab97da0adfb8": {"__data__": {"id_": "ae22187c-c600-4da2-b134-ab97da0adfb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0a2bf66-eb5d-4491-a81e-28afcd10caff", "node_type": "1", "metadata": {}, "hash": "b0bef9c45e3a245a71988f208df229ff263384d31f7c291a384bf72d8f07db62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e07ec439-9563-4656-b66b-548e6fc2e7da", "node_type": "1", "metadata": {}, "hash": "145c6d927afb46567227e012e2461e630d6799e28e77ffe9e41cad84fff62a12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Example:\n\n```\n$ agd query gov proposals --output json | \\\n  jq -c '.proposals[] | [.proposal_id,.voting_end_time,.status]'\n[\"1\",\"2023-11-14T17:32:16.665791640Z\",\"PROPOSAL_STATUS_PASSED\"]\n[\"2\",\"2023-11-14T17:40:16.450879296Z\",\"PROPOSAL_STATUS_PASSED\"]\n[\"3\",\"2023-11-14T17:44:37.432643476Z\",\"PROPOSAL_STATUS_PASSED\"]\n```\n\n## agd query vstorage keys\n\nQuery for the data residing at specified path in VStorage.\n\nExample:", "mimetype": "text/plain", "start_char_idx": 3463, "end_char_idx": 3879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e07ec439-9563-4656-b66b-548e6fc2e7da": {"__data__": {"id_": "e07ec439-9563-4656-b66b-548e6fc2e7da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae22187c-c600-4da2-b134-ab97da0adfb8", "node_type": "1", "metadata": {}, "hash": "89da560ff2ddc4474c2cf9faef022de7b16d9e973a3001dafc975f8478ffa812", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23f54097-b698-400e-800b-879732b4a9ea", "node_type": "1", "metadata": {}, "hash": "f8f365bfae4ea2b21d5cf8b1f5c1a2d94c6506cd6832f0a4e898269a935ffac3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Example:\n\n```\n$ agd query vstorage keys 'published.vaultFactory.managers.manager0.vaults'\nchildren:\n- vault0\n```\n\n## Transaction Commands\n\nMaking transactions requires setting up an **account** with a private key for signing. The [basic dapp local chain](../getting-started/#starting-a-local-agoric-blockchain) container has a number of keys set up for use with `--keyring-backend=test`. Use `agd keys list --keyring-backend=test` to see them.", "mimetype": "text/plain", "start_char_idx": 3871, "end_char_idx": 4314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23f54097-b698-400e-800b-879732b4a9ea": {"__data__": {"id_": "23f54097-b698-400e-800b-879732b4a9ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e07ec439-9563-4656-b66b-548e6fc2e7da", "node_type": "1", "metadata": {}, "hash": "145c6d927afb46567227e012e2461e630d6799e28e77ffe9e41cad84fff62a12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2264a7d-3da8-494e-b123-d2f061f8023c", "node_type": "1", "metadata": {}, "hash": "65d19aaf5acb8e458bc7846f5cc2882245f2e9a794ef90247114b5d6663dfc81", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For accounts that control real negotiable assets, using\na [consumer grade wallet](https://agoric.com/ecosystem/category/wallets) such as [Keplr](https://www.keplr.app/) is more straightforward.\n_Consider a hardware wallet such as a Ledger as well._\n\n## agd keys add\n\nDerive a new private key and encrypt to disk.\n\nUsage:\n\n```\n  agd keys add <name> [flags]\n```", "mimetype": "text/plain", "start_char_idx": 4316, "end_char_idx": 4675, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2264a7d-3da8-494e-b123-d2f061f8023c": {"__data__": {"id_": "e2264a7d-3da8-494e-b123-d2f061f8023c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23f54097-b698-400e-800b-879732b4a9ea", "node_type": "1", "metadata": {}, "hash": "f8f365bfae4ea2b21d5cf8b1f5c1a2d94c6506cd6832f0a4e898269a935ffac3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "441f3d0c-2948-4d30-91b1-635af77b878d", "node_type": "1", "metadata": {}, "hash": "b5da9d8b167a09d4f505844360bc95882a34cc6922d8bdeb232e325fb50f4321", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If run with `-i`, it will prompt the user for BIP44 path, BIP39 mnemonic, and passphrase.\nThe flag `--recover` allows one to recover a key from a seed passphrase.\n\n- For compatibility with the ledger cosmos app, use `--ledger --coin-type 118` rather than the default 564.\n- To avoid signature prompts for testing, use `--keyring-backend=test` rather than the default, which is to use operating system key management. Use `--home=DIR` to store these keys under a different directory than `$HOME/.agoric`.", "mimetype": "text/plain", "start_char_idx": 4677, "end_char_idx": 5180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "441f3d0c-2948-4d30-91b1-635af77b878d": {"__data__": {"id_": "441f3d0c-2948-4d30-91b1-635af77b878d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2264a7d-3da8-494e-b123-d2f061f8023c", "node_type": "1", "metadata": {}, "hash": "65d19aaf5acb8e458bc7846f5cc2882245f2e9a794ef90247114b5d6663dfc81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9841f3ea-79db-487e-b17a-06403cf3a95c", "node_type": "1", "metadata": {}, "hash": "c8d9b2e1e3345324b30354126c8201f2a6ca97242d304c4339c2b8008af10874", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## agd tx bank send\n\nSend funds from one account to another.\n\n```\n$ src=agoric14pfrxg63jn6ha0cp6wxkm4nlvswtscrh2pymwm\n$ dest=agoric1a3zu5aqw255q0tuxzy9aftvgheekw2wedz3xwq\n$ amt=12000000ubld\n$ agd tx bank send $src $dest $amt \\\n  --keyring-backend=test --chain-id=agoriclocal \\\n\t\t--gas=auto --gas-adjustment=1.2 \\\n\t\t--yes -b block\n```\n\nAs usual, use `agd tx bank send --help` for documentation on\nflags such as `--yes`, `-b`, etc.\n\n## agd tx swingset provision-one", "mimetype": "text/plain", "start_char_idx": 5182, "end_char_idx": 5645, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9841f3ea-79db-487e-b17a-06403cf3a95c": {"__data__": {"id_": "9841f3ea-79db-487e-b17a-06403cf3a95c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "441f3d0c-2948-4d30-91b1-635af77b878d", "node_type": "1", "metadata": {}, "hash": "b5da9d8b167a09d4f505844360bc95882a34cc6922d8bdeb232e325fb50f4321", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb78972b-179a-4e5a-ab2a-db637bee16c7", "node_type": "1", "metadata": {}, "hash": "37da61df339d6adb6d568317d55429813accd3592a26a4a1c9165708b8a174fb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## agd tx swingset provision-one\n\nProvision a smart wallet to interact with Zoe smart contracts.\n\nUsage:\n\n```sh\nagd tx swingset provision-one <nickname> <address> [<power-flag>[,...]] [flags]\n```\n\nExample:\n\n```sh\nKEY_NAME=user1\nNICKNAME=my-wallet\nKEYRING_BACKEND=\"--keyring-backend=test\"\nADDRESS=$(agd keys show $KEY_NAME $KEYRING_BACKEND | grep address | awk '{print $3}')\n\nagd tx swingset provision-one $NICKNAME $ADDRESS SMART_WALLET --from $KEY_NAME $KEYRING_BACKEND --chain-id agoriclocal -y -b block\n```", "mimetype": "text/plain", "start_char_idx": 5613, "end_char_idx": 6122, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb78972b-179a-4e5a-ab2a-db637bee16c7": {"__data__": {"id_": "bb78972b-179a-4e5a-ab2a-db637bee16c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9841f3ea-79db-487e-b17a-06403cf3a95c", "node_type": "1", "metadata": {}, "hash": "c8d9b2e1e3345324b30354126c8201f2a6ca97242d304c4339c2b8008af10874", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eea2320-b789-4df5-8183-22b4cea30a92", "node_type": "1", "metadata": {}, "hash": "ce65a87448a90c986fb8af597ac6d1558e68212e5b5124dfa88b009953ef0937", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See `MsgProvision` in [swingset/msgs.proto](https://github.com/Agoric/agoric-sdk/tree/agoric-upgrade-15/golang/cosmos/proto/agoric/swingset/msgs.proto#L86-L109) for more details.\n\n## agd tx swingset install-bundle\n\n```\nagd tx swingset install-bundle --compress \"@bundle1.json\" \\\n  --from user1 --keyring-backend=test --gas=auto \\\n  --chain-id=agoriclocal -bblock --yes -o json\n```\n\nSee also the [Agoric Gov Proposal Builder](https://cosgov.org/) web interface, especially for understanding storage fees.", "mimetype": "text/plain", "start_char_idx": 6124, "end_char_idx": 6627, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9eea2320-b789-4df5-8183-22b4cea30a92": {"__data__": {"id_": "9eea2320-b789-4df5-8183-22b4cea30a92", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb78972b-179a-4e5a-ab2a-db637bee16c7", "node_type": "1", "metadata": {}, "hash": "37da61df339d6adb6d568317d55429813accd3592a26a4a1c9165708b8a174fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93600326-4596-47ee-9d4e-f05fffe5d563", "node_type": "1", "metadata": {}, "hash": "879a26071445d725b745368dd00dce742457e18c57792648d65a20331be33e08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## agd tx gov submit-proposal swingset-core-eval\n\nUsage:\n\n```sh\n  agd tx gov submit-proposal swingset-core-eval [[permit.json] [code.js]]... [flags]\n```\n\nExample:\n\n```\n$ SCRIPT=start-game1.js\n$ PERMIT=start-game1-permit.json\nagd tx gov submit-proposal swingset-core-eval \"$PERMIT\" \"$SCRIPT\" \\\n  --title=\"Start Game Place Contract\" --description=\"Evaluate $SCRIPT\" \\\n  --deposit=10000000ubld --gas=auto --gas-adjustment=1.2 \\\n  --from user1 --chain-id agoriclocal --keyring-backend=test \\\n  --yes -b block\n```", "mimetype": "text/plain", "start_char_idx": 6629, "end_char_idx": 7137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93600326-4596-47ee-9d4e-f05fffe5d563": {"__data__": {"id_": "93600326-4596-47ee-9d4e-f05fffe5d563", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9eea2320-b789-4df5-8183-22b4cea30a92", "node_type": "1", "metadata": {}, "hash": "ce65a87448a90c986fb8af597ac6d1558e68212e5b5124dfa88b009953ef0937", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c518f376-cafe-48d9-b3d2-a55fdae2a216", "node_type": "1", "metadata": {}, "hash": "ffabe68ef4a13d36ab0aef992a1758355826587cf48c0ca3913ca675852e4fdf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [Agoric Gov Proposal Builder](https://cosgov.org/) web interface provides a nice interface for this as well.\n\n## agd tx gov vote\n\nSubmit a vote for an active proposal. You can\nfind the proposal-id by running [agd query gov proposals](#agd-query-gov-proposals).\n\nUsage:\n\n```\n  agd tx gov vote [proposal-id] [option] [flags]\n```\n\nExample:", "mimetype": "text/plain", "start_char_idx": 7139, "end_char_idx": 7479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c518f376-cafe-48d9-b3d2-a55fdae2a216": {"__data__": {"id_": "c518f376-cafe-48d9-b3d2-a55fdae2a216", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_agd-query-tx.md", "node_type": "4", "metadata": {}, "hash": "ec3cf6b92242a080348219732c6a1c429cf1787444cf65d6b0df4890f38da3c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93600326-4596-47ee-9d4e-f05fffe5d563", "node_type": "1", "metadata": {}, "hash": "879a26071445d725b745368dd00dce742457e18c57792648d65a20331be33e08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Example:\n\n```sh\nPROPOSAL=13\nagd tx gov vote $PROPOSAL yes \\\n  --keyring-backend test --chain-id agoriclocal --from validator \\\n  --gas auto --gas-adjustment 1.4 \\\n  --broadcast-mode block --output json --yes\n```", "mimetype": "text/plain", "start_char_idx": 7471, "end_char_idx": 7682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb651255-4072-4803-bd24-fd2e430524f2": {"__data__": {"id_": "eb651255-4072-4803-bd24-fd2e430524f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee50d33d-f4a6-44b0-9876-04013a898564", "node_type": "1", "metadata": {}, "hash": "43e47a3363c036c6effa795ed878032e119be50b79eebb3b019695612d0bf1b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Agoric CLI Reference\n\n## agoric help\n\nDisplays the Agoric CLI commands and arguments with brief descriptions.\n\n**Usage**:\n\n```sh\nagoric [command]\n```\n\nBy default, lists all commands:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 184, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee50d33d-f4a6-44b0-9876-04013a898564": {"__data__": {"id_": "ee50d33d-f4a6-44b0-9876-04013a898564", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb651255-4072-4803-bd24-fd2e430524f2", "node_type": "1", "metadata": {}, "hash": "7dc854c4241e9f55286bc331a906beb26e467167b17585261cf145bb54d913bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac360a1a-2faa-4a45-9b74-6dddd757f7e7", "node_type": "1", "metadata": {}, "hash": "d35c76fa425fcae331c5c7585441a56d200f60c09ea88b5920d2fd097197c150", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n  cosmos <command...>                            client for an Agoric Cosmos chain\n  ibc-setup <command...>                         set up Inter Blockchain Communication\n  open [options]                                 launch the Agoric UI\n  init [options] <project>                       create a new Dapp directory named <project>\n  set-defaults [options] <program> <config-dir>  update the configuration files for <program> in <config-dir>", "mimetype": "text/plain", "start_char_idx": 186, "end_char_idx": 632, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac360a1a-2faa-4a45-9b74-6dddd757f7e7": {"__data__": {"id_": "ac360a1a-2faa-4a45-9b74-6dddd757f7e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee50d33d-f4a6-44b0-9876-04013a898564", "node_type": "1", "metadata": {}, "hash": "43e47a3363c036c6effa795ed878032e119be50b79eebb3b019695612d0bf1b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "225d49f5-1748-4873-8185-8992901cc3eb", "node_type": "1", "metadata": {}, "hash": "7032c3be220a8432a14c3aee651f2d22eece19adc6ddbdbf645a1c4952d10ab3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ibc-relayer                                    run an Inter Blockchain Communications relayer\n  install [force-sdk-version]                    install Dapp dependencies\n  follow [options] <path-spec...>                follow an Agoric Casting leader\n  run <script> [script-args...]                  run a script with all your user privileges and some Agoric endowments\n  deploy [options] [script...]                   run multiple scripts with all your user privileges against the local Agoric", "mimetype": "text/plain", "start_char_idx": 635, "end_char_idx": 1128, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "225d49f5-1748-4873-8185-8992901cc3eb": {"__data__": {"id_": "225d49f5-1748-4873-8185-8992901cc3eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac360a1a-2faa-4a45-9b74-6dddd757f7e7", "node_type": "1", "metadata": {}, "hash": "d35c76fa425fcae331c5c7585441a56d200f60c09ea88b5920d2fd097197c150", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74b6ab25-bd2e-4780-832c-ed9e1752e987", "node_type": "1", "metadata": {}, "hash": "7a7f42cb43682574206c35b6417a6aa387e6fe2e9c9cb99fc4ccda0689912e66", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "VM\n  publish [options] [bundle...]                  publish a bundle to a Cosmos chain\n  wallet [options]                               wallet commands\n  start [options] [profile] [args...]            start an Agoric VM\n  help [command]                                 display help for command\n```", "mimetype": "text/plain", "start_char_idx": 1178, "end_char_idx": 1475, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74b6ab25-bd2e-4780-832c-ed9e1752e987": {"__data__": {"id_": "74b6ab25-bd2e-4780-832c-ed9e1752e987", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "225d49f5-1748-4873-8185-8992901cc3eb", "node_type": "1", "metadata": {}, "hash": "7032c3be220a8432a14c3aee651f2d22eece19adc6ddbdbf645a1c4952d10ab3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc", "node_type": "1", "metadata": {}, "hash": "07f23c12f2aff6399de45c22d03ae78f92c93069aa0d6cb171d48b6240250d04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## agoric run\n\nRun a script with all your user privileges and some Agoric endowments.\n\n**Usage**:\n\n```sh\nagoric run [options] <script> [script-args...]\n```\n\nSee also:\n\n- [`agoric run` supports bundling proposal modules with writeCoreProposal](https://github.com/Agoric/agoric-sdk/discussions/8087#discussioncomment-6534378) discussion [#8087](https://github.com/Agoric/agoric-sdk/discussions/8087) 2023-07\n\n## agoric follow", "mimetype": "text/plain", "start_char_idx": 1477, "end_char_idx": 1900, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc": {"__data__": {"id_": "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74b6ab25-bd2e-4780-832c-ed9e1752e987", "node_type": "1", "metadata": {}, "hash": "7a7f42cb43682574206c35b6417a6aa387e6fe2e9c9cb99fc4ccda0689912e66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15b09f4a-5911-4a9c-96a5-8301e8e35e8e", "node_type": "1", "metadata": {}, "hash": "c0842901f550800991a628e2a43798a960d2c8cb8f5a9fee870347d716eae996", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## agoric follow\n\nFollow an Agoric (Casting)[https://www.npmjs.com/package/@agoric/casting] leader (or validator) to support vstorage query along with some of the marshalling conventions.\n\n**Usage**:\n\n```sh\nagoric follow [options] <path-spec...>\n```\n\n**Optional arguments**:", "mimetype": "text/plain", "start_char_idx": 1884, "end_char_idx": 2158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15b09f4a-5911-4a9c-96a5-8301e8e35e8e": {"__data__": {"id_": "15b09f4a-5911-4a9c-96a5-8301e8e35e8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc", "node_type": "1", "metadata": {}, "hash": "07f23c12f2aff6399de45c22d03ae78f92c93069aa0d6cb171d48b6240250d04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2870d7e-3c69-4530-9321-616e55e1de8c", "node_type": "1", "metadata": {}, "hash": "ae42bf6f02606ab2069891487c3d8e60719775654418cbd5361eec8df1e67b0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **--proof &lt;strict | optimistic | none>**: set proof mode (default: \"optimistic\")\n- **--sleep &lt;seconds>**: sleep `seconds>` between polling (may be fractional) (default: 5)\n- **--jitter &lt;max-seconds>**: jitter up to `<max-seconds>` (may be fractional) (default: 5)\n- **-F, --first-value-only**: only display the first value of each `<path-spec>`\n- **-o, --output &lt;format>**: value output format (default: \"justin\")\n- **-l, --lossy**: show only the most recent value for each sample interval", "mimetype": "text/plain", "start_char_idx": 2160, "end_char_idx": 2663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2870d7e-3c69-4530-9321-616e55e1de8c": {"__data__": {"id_": "d2870d7e-3c69-4530-9321-616e55e1de8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15b09f4a-5911-4a9c-96a5-8301e8e35e8e", "node_type": "1", "metadata": {}, "hash": "c0842901f550800991a628e2a43798a960d2c8cb8f5a9fee870347d716eae996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7b67f23-ae6b-4479-a468-d7fa55b73f0c", "node_type": "1", "metadata": {}, "hash": "f928edb7120cc8c4b8b57f550055238a385f06034b47bb877b47549ede827124", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **-b, --block-height**: show first block height when each value was stored\n- **-c, --current-block-height**: show current block height when each value is reported\n- **-B, --bootstrap &lt;config>**: network bootstrap configuration\n- **-h, --help**: display help for command", "mimetype": "text/plain", "start_char_idx": 2664, "end_char_idx": 2938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7b67f23-ae6b-4479-a468-d7fa55b73f0c": {"__data__": {"id_": "d7b67f23-ae6b-4479-a468-d7fa55b73f0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2870d7e-3c69-4530-9321-616e55e1de8c", "node_type": "1", "metadata": {}, "hash": "ae42bf6f02606ab2069891487c3d8e60719775654418cbd5361eec8df1e67b0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59e3bf80-82ea-4317-95b9-214db38bc30f", "node_type": "1", "metadata": {}, "hash": "6461d48c9ab67925087fda0073db8ca8b1347703ee04fa0658a3019c32077536", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Examples**:\n\n```sh\n$ agoric follow -lF :published.agoricNames.brand\n[\n  [\n    \"BLD\",\n    slotToVal(\"board0566\",\"Alleged: BLD brand\"),\n  ],\n  [\n    \"IST\",\n    slotToVal(\"board0257\",\"Alleged: IST brand\"),\n  ],\n...\n]\n```\n\n## ~~agoric init~~\n\n_Deprecated in favor of [yarn create @agoric/dapp](../getting-started/#creating-your-dapp-from-a-template)_\n\nCreates a new dapp directory named `<project>` with contents copied from the `dapp-template` argument template.\n\n**Usage**:", "mimetype": "text/plain", "start_char_idx": 2940, "end_char_idx": 3413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59e3bf80-82ea-4317-95b9-214db38bc30f": {"__data__": {"id_": "59e3bf80-82ea-4317-95b9-214db38bc30f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7b67f23-ae6b-4479-a468-d7fa55b73f0c", "node_type": "1", "metadata": {}, "hash": "f928edb7120cc8c4b8b57f550055238a385f06034b47bb877b47549ede827124", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfa93330-e59b-4171-9818-9ba3ac1b3dcf", "node_type": "1", "metadata": {}, "hash": "99bd6b97ce2243b1c0b73ae2c3f91856a0a8b9f9d3dd15acad6db043296b96aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Usage**:\n\n```\nagoric init [options] <project>\n```\n\n- **projectName**: Name of the new project to initialize.\n\n**Optional arguments**:", "mimetype": "text/plain", "start_char_idx": 3403, "end_char_idx": 3538, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfa93330-e59b-4171-9818-9ba3ac1b3dcf": {"__data__": {"id_": "dfa93330-e59b-4171-9818-9ba3ac1b3dcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59e3bf80-82ea-4317-95b9-214db38bc30f", "node_type": "1", "metadata": {}, "hash": "6461d48c9ab67925087fda0073db8ca8b1347703ee04fa0658a3019c32077536", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "805dd3b2-8893-49a0-807e-166823c399c2", "node_type": "1", "metadata": {}, "hash": "783759f7ec5bdbeb8d44b6b2bc41865a9c79331fe1f9847aad062e0609784e36", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **--dapp-template &lt;name>**: Use the template specified by `<name>`. If this argument isn't passed, then the default dapp `dapp-fungible-faucet` is used.\n- **--dapp-base &lt;base-url>**: The location where the dapp template can be found. If this argument isn't passed, then the default value of `git://github.com/Agoric/` is used.\n- **-V**, **--version**: Outputs the version number.\n- **--docker-tag &lt;tag>**: Uses the specified tag of any started Docker containers. Defaults to `latest`.", "mimetype": "text/plain", "start_char_idx": 3540, "end_char_idx": 4035, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "805dd3b2-8893-49a0-807e-166823c399c2": {"__data__": {"id_": "805dd3b2-8893-49a0-807e-166823c399c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfa93330-e59b-4171-9818-9ba3ac1b3dcf", "node_type": "1", "metadata": {}, "hash": "99bd6b97ce2243b1c0b73ae2c3f91856a0a8b9f9d3dd15acad6db043296b96aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3d76a27-049a-4d6c-b705-87da438993ff", "node_type": "1", "metadata": {}, "hash": "5ea8f2d1113d972dc3fdf184d891c13dc819f38a2c6c2739a630825671e58231", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **--sdk**: Uses the Agoric SDK containing this program.\n- **-v**, **--verbose**: Causes the command to be run in verbose mode.\n- **-h**, **--help**: Displays help for the command.", "mimetype": "text/plain", "start_char_idx": 4036, "end_char_idx": 4217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3d76a27-049a-4d6c-b705-87da438993ff": {"__data__": {"id_": "b3d76a27-049a-4d6c-b705-87da438993ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "805dd3b2-8893-49a0-807e-166823c399c2", "node_type": "1", "metadata": {}, "hash": "783759f7ec5bdbeb8d44b6b2bc41865a9c79331fe1f9847aad062e0609784e36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed663210-3d49-4326-8daa-2ced753f4859", "node_type": "1", "metadata": {}, "hash": "13df49a3116aa4db4d57499e291ef669d2e9b8be7406f95261dd2dcdecbf0258", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Examples**:\n\n```\nagoric init demo\n```\n\nCreates a directory named \"demo\" with contents copied from the default dapp-template _dapp-fungible-faucet_.\n\n```\nagoric init my-first-contract --dapp-template dapp-simple-exchange\n```\n\nCreates a directory named _my-first-contract_ with contents copied from the dapp-template _dapp-simple-exchange_.\n\n```\nagoric init my-contract --dapp-template dapp-skeleton --dapp-base file:///home/contracts\n```", "mimetype": "text/plain", "start_char_idx": 4219, "end_char_idx": 4657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed663210-3d49-4326-8daa-2ced753f4859": {"__data__": {"id_": "ed663210-3d49-4326-8daa-2ced753f4859", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3d76a27-049a-4d6c-b705-87da438993ff", "node_type": "1", "metadata": {}, "hash": "5ea8f2d1113d972dc3fdf184d891c13dc819f38a2c6c2739a630825671e58231", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dabc9d59-40a4-4d42-b045-7eb24b4992f8", "node_type": "1", "metadata": {}, "hash": "ffd35449da2b930cf906d7ccc03103d341e449e050e8949231fa3192ff82709e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates a directory named _my-contract_ with contents copied from a dapp-template named _dapp-skeleton_ located under the URL _file:///home/contracts_.\n\n## ~~agoric install~~\n\n_Deprecated_", "mimetype": "text/plain", "start_char_idx": 4659, "end_char_idx": 4847, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dabc9d59-40a4-4d42-b045-7eb24b4992f8": {"__data__": {"id_": "dabc9d59-40a4-4d42-b045-7eb24b4992f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed663210-3d49-4326-8daa-2ced753f4859", "node_type": "1", "metadata": {}, "hash": "13df49a3116aa4db4d57499e291ef669d2e9b8be7406f95261dd2dcdecbf0258", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30665d03-45fa-4bbe-b51b-00b9fd640c68", "node_type": "1", "metadata": {}, "hash": "d9fabf309df071bde11aaea2d15761aa2cacb15c639a0e9af7a42e956749912c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_Deprecated_\n\nInstalls dapp JavaScript dependencies. This may take a while. You use this instead of established npm install tools. The reason is that there is both an SDK (`--sdk`) and NPM mode. Currently we only support SDK mode, which allows you to link your dapp against the SDK dependencies. This allows you to modify any package in the SDK against the SDK dependencies (and see the changes) without having to register those packages with Yarn or NPM.\n\n**Syntax**:", "mimetype": "text/plain", "start_char_idx": 4835, "end_char_idx": 5303, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30665d03-45fa-4bbe-b51b-00b9fd640c68": {"__data__": {"id_": "30665d03-45fa-4bbe-b51b-00b9fd640c68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dabc9d59-40a4-4d42-b045-7eb24b4992f8", "node_type": "1", "metadata": {}, "hash": "ffd35449da2b930cf906d7ccc03103d341e449e050e8949231fa3192ff82709e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16a066ac-946b-4088-9a09-074754f573df", "node_type": "1", "metadata": {}, "hash": "b59143db1c50c5c21e2a31395fbaeb79ab8ed82e43279fd356d35b40c9c8b34f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Syntax**:\n\n```\nagoric install <optional arguments>\n```\n\n**Optional arguments**:\n\n- **-V**, **--version**: Outputs the version number.\n- **--docker-tag &lt;tag>**: Uses the specified tag of any started Docker containers. Defaults to `latest`.\n- **--sdk**: Uses the Agoric SDK containing this program.\n- **-v**, **--verbose**: Causes the command to be run in verbose mode.\n- **-h**, **--help**: Displays help for the command.\n\n## agoric start local-chain\n\n**Usage**:", "mimetype": "text/plain", "start_char_idx": 5292, "end_char_idx": 5758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16a066ac-946b-4088-9a09-074754f573df": {"__data__": {"id_": "16a066ac-946b-4088-9a09-074754f573df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30665d03-45fa-4bbe-b51b-00b9fd640c68", "node_type": "1", "metadata": {}, "hash": "d9fabf309df071bde11aaea2d15761aa2cacb15c639a0e9af7a42e956749912c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac42eff5-c57a-4cbb-b408-a713a05bb10a", "node_type": "1", "metadata": {}, "hash": "7449d47bf2a3fa15edc8920c5790aa9109746ac8d07c73369e0bc227b6a4ece3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Usage**:\n\n```\nagoric start local-chain [portNum] -- [initArgs] - local chain\n\nOptions:\n  --reset                      clear all VM state before starting\n  --no-restart                 do not actually start the VM\n  --pull                       for Docker-based VM, pull the image before running\n  --rebuild                    rebuild VM dependencies before running\n  -h, --help                   display help for command\n```\n\n## ~~agoric start~~\n\n_Deprecated: Beta Feature_", "mimetype": "text/plain", "start_char_idx": 5748, "end_char_idx": 6223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac42eff5-c57a-4cbb-b408-a713a05bb10a": {"__data__": {"id_": "ac42eff5-c57a-4cbb-b408-a713a05bb10a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16a066ac-946b-4088-9a09-074754f573df", "node_type": "1", "metadata": {}, "hash": "b59143db1c50c5c21e2a31395fbaeb79ab8ed82e43279fd356d35b40c9c8b34f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7", "node_type": "1", "metadata": {}, "hash": "397e521dd759643591648c3d3f9ae82d32ee26e8d17f3ae441a6170c7351a4e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_Deprecated: Beta Feature_\n\nRuns an Agoric VM on which contracts can run.\n\n**Syntax**:\n\n```\nagoric start <optional arguments>\n```\n\n**Optional arguments**:", "mimetype": "text/plain", "start_char_idx": 6197, "end_char_idx": 6351, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7": {"__data__": {"id_": "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac42eff5-c57a-4cbb-b408-a713a05bb10a", "node_type": "1", "metadata": {}, "hash": "7449d47bf2a3fa15edc8920c5790aa9109746ac8d07c73369e0bc227b6a4ece3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03dbaf87-3e51-4c2d-a884-e3fba224bfe9", "node_type": "1", "metadata": {}, "hash": "3bf92a5e09d4f2a2d001fdc237a841e221761fb2576034ca8dbd85cf95d3200f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **profile**: Specifies the environment for the VM. Setting this argument to `testnet` connects the VM to our current testnet. If this argument isn't passed, then the default value of `dev` (representing the development mode) is used.\n- **--reset**: Clears all VM state before starting.\n- **--pull**: For Docker-based VMs, pulls the images before running.", "mimetype": "text/plain", "start_char_idx": 6353, "end_char_idx": 6709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03dbaf87-3e51-4c2d-a884-e3fba224bfe9": {"__data__": {"id_": "03dbaf87-3e51-4c2d-a884-e3fba224bfe9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7", "node_type": "1", "metadata": {}, "hash": "397e521dd759643591648c3d3f9ae82d32ee26e8d17f3ae441a6170c7351a4e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7929a37a-2537-4df9-a013-ed94e9ac1205", "node_type": "1", "metadata": {}, "hash": "39851d92b1085d7f9d48bb4a1561f875d03fccfb57cf0e1ce31f80ef640c7425", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **--delay [seconds]**: Accounts for processing time in the simulated chain by delaying each round-trip to it by the specified number of seconds. The default value is `1`, which lets you easily count the number of trips in your head. If this argument isn't passed, then the seconds of delay will be set from the numeric value of the FAKE_CHAIN_DELAY environment variable (or zero if there is no such variable).", "mimetype": "text/plain", "start_char_idx": 6710, "end_char_idx": 7121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7929a37a-2537-4df9-a013-ed94e9ac1205": {"__data__": {"id_": "7929a37a-2537-4df9-a013-ed94e9ac1205", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03dbaf87-3e51-4c2d-a884-e3fba224bfe9", "node_type": "1", "metadata": {}, "hash": "3bf92a5e09d4f2a2d001fdc237a841e221761fb2576034ca8dbd85cf95d3200f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1744ec40-603b-4a04-ac1c-59cf00758c57", "node_type": "1", "metadata": {}, "hash": "5113b8d71885b7d101cb0deb60112ee86932a581c20ef194d51b10a09c7cf8ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **--inspect [host[:port]]**: Activates inspector on host:port. The default value is \"127.0.0.1:9229\".\n- **--inspect-brk [host[:port]]**: Activates inspector on host:port and breaks at start of script. The default value is \"127.0.0.1:9229\".\n- **-V**, **--version**: Outputs the version number.\n- **--docker-tag &lt;tag>**: Uses the specified tag of any started Docker containers. Defaults to `latest`.\n- **--sdk**: Uses the Agoric SDK containing this program.", "mimetype": "text/plain", "start_char_idx": 7122, "end_char_idx": 7582, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1744ec40-603b-4a04-ac1c-59cf00758c57": {"__data__": {"id_": "1744ec40-603b-4a04-ac1c-59cf00758c57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7929a37a-2537-4df9-a013-ed94e9ac1205", "node_type": "1", "metadata": {}, "hash": "39851d92b1085d7f9d48bb4a1561f875d03fccfb57cf0e1ce31f80ef640c7425", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33a4875f-68f9-4c6d-ba4c-995d7a427cc6", "node_type": "1", "metadata": {}, "hash": "6cde33cff32d690f38eee79bdb2bcb8ca53184b1b4e074354f40ad4535c44b7e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **-v**, **--verbose**: Causes the command to be run in verbose mode.\n- **-h**, **--help**: Displays help for the command.", "mimetype": "text/plain", "start_char_idx": 4094, "end_char_idx": 4217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33a4875f-68f9-4c6d-ba4c-995d7a427cc6": {"__data__": {"id_": "33a4875f-68f9-4c6d-ba4c-995d7a427cc6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1744ec40-603b-4a04-ac1c-59cf00758c57", "node_type": "1", "metadata": {}, "hash": "5113b8d71885b7d101cb0deb60112ee86932a581c20ef194d51b10a09c7cf8ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c", "node_type": "1", "metadata": {}, "hash": "17c384af7aa59106416c512274a9549b6e2d262c94b85122344ff3915ef37df6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Examples**:\n\n```\nagoric start --reset\n```\n\nRestarts the Agoric VM, clearing all existing state before doing so.\n\n```\nagoric start --pull\n```\n\nBefore running docker-based VMs, pulls the image.\n\n```\nagoric start --delay 5\n```\n\nConfigures a 5 second processing time for each round-trip to the simulated chain.\n\n## ~~agoric deploy~~\n\n_Deprecated: Beta Feature_\n\nRuns one or more deployment scripts against the local Agoric VM. You may optionally specify which host and port to connect to the VM on.\n\n**Syntax**:", "mimetype": "text/plain", "start_char_idx": 7708, "end_char_idx": 8217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c": {"__data__": {"id_": "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33a4875f-68f9-4c6d-ba4c-995d7a427cc6", "node_type": "1", "metadata": {}, "hash": "6cde33cff32d690f38eee79bdb2bcb8ca53184b1b4e074354f40ad4535c44b7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa3eba86-2b38-4062-80bd-b02bed3517e0", "node_type": "1", "metadata": {}, "hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Syntax**:\n\n```\nagoric deploy <optional arguments>\n```\n\n**Optional arguments**:\n\n- **Positional Arguments**:\n  - `<script...>`: Deployment script(s) to run against the local Agoric instance. You must specify at least one, and may specify more than one.\n- **Options**:\n  - `--hostport <HOST:PORT>`: Host and port on which to connect to the VM.\n  - `-h`, `--help`: Display help for `deploy` command\n\n**Examples**:\n\n```\nagoric init demo\n```", "mimetype": "text/plain", "start_char_idx": 8206, "end_char_idx": 8644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa3eba86-2b38-4062-80bd-b02bed3517e0": {"__data__": {"id_": "fa3eba86-2b38-4062-80bd-b02bed3517e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c", "node_type": "1", "metadata": {}, "hash": "17c384af7aa59106416c512274a9549b6e2d262c94b85122344ff3915ef37df6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ce59e83-4c58-4a05-8154-d7ea0ac2467f", "node_type": "1", "metadata": {}, "hash": "e7259d6be20129097776e40738c9dfe56d6ecefc45419286c072df84968b7127", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nagoric init demo\n```\n\nCreates a directory named \"demo\" with contents copied from the default dapp-template _dapp-fungible-faucet_.\n\n```\nagoric init my-first-contract --dapp-template dapp-simple-exchange\n```\n\nCreates a directory named _my-first-contract_ with contents copied from the dapp-template _dapp-simple-exchange_.\n\n```\nagoric init my-contract --dapp-template dapp-skeleton --dapp-base file:///home/contracts\n```", "mimetype": "text/plain", "start_char_idx": 4234, "end_char_idx": 4657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ce59e83-4c58-4a05-8154-d7ea0ac2467f": {"__data__": {"id_": "7ce59e83-4c58-4a05-8154-d7ea0ac2467f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa3eba86-2b38-4062-80bd-b02bed3517e0", "node_type": "1", "metadata": {}, "hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "248baaa6-4df6-406e-9154-819a74f3ae6a", "node_type": "1", "metadata": {}, "hash": "39dec2e183fb625b0337e598e1e65e57d043ff47c252efd9dc495840d833ef9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates a directory named _my-contract_ with contents copied from a dapp-template named _dapp-skeleton_ located under the URL _file:///home/contracts_.\n\n- **Examples**:\n  - Run the specified `deploy.js` scripts against the local Agoric VM.\n    - `agoric deploy ./contract/deploy.js ./api/deploy.js`\n  - Run the specified `deploy.js` scripts on VM host 128.7.3.139 and\n    port 99.\n    - `agoric deploy --hostport 128.7.3.139:99 ./contract/deploy.js`\n\n## ~~agoric open~~\n\n_Deprecated: Beta Feature_", "mimetype": "text/plain", "start_char_idx": 9045, "end_char_idx": 9542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "248baaa6-4df6-406e-9154-819a74f3ae6a": {"__data__": {"id_": "248baaa6-4df6-406e-9154-819a74f3ae6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ce59e83-4c58-4a05-8154-d7ea0ac2467f", "node_type": "1", "metadata": {}, "hash": "e7259d6be20129097776e40738c9dfe56d6ecefc45419286c072df84968b7127", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9728df7f-3cba-4b20-bab8-bae8e274bbeb", "node_type": "1", "metadata": {}, "hash": "f9111c8b900a761a339b42da09c1bb12807ff2e6a39a744fbff0b4ca8bce3949", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_Deprecated: Beta Feature_\n\nLaunches the Agoric UI. By default, only the UI is shown, not the REPL (Read-Eval-Print-Loop). To show both the UI and REPL, or only the REPL, see the `--repl` optional argument below.\n\n**Syntax**:\n\n```\nagoric open <optional arguments>\n```\n\n**Optional arguments**:", "mimetype": "text/plain", "start_char_idx": 9516, "end_char_idx": 9808, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9728df7f-3cba-4b20-bab8-bae8e274bbeb": {"__data__": {"id_": "9728df7f-3cba-4b20-bab8-bae8e274bbeb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "248baaa6-4df6-406e-9154-819a74f3ae6a", "node_type": "1", "metadata": {}, "hash": "39dec2e183fb625b0337e598e1e65e57d043ff47c252efd9dc495840d833ef9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a722bb4d-28d7-4308-94cf-ef5f01b65b0e", "node_type": "1", "metadata": {}, "hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Optional arguments**:\n\n- **Positional Arguments**\n  - None\n- **Options**\n  - `--hostport <host:port>`: Host and port on which to connect to the VM (default: \"127.0.0.1:8000\").\n  - `--no-browser`: Display the UI's URL, but don't open a browser.\n  - `--repl [yes | only | no]`: Whether to show the Read-Eval-Print loop. Defaults to `yes` if specified (see\n    Examples below)\n  - `-h`, `--help`: Display help for `open` command.\n\n**Examples**:\n\n```\nagoric init demo\n```", "mimetype": "text/plain", "start_char_idx": 9785, "end_char_idx": 10254, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a722bb4d-28d7-4308-94cf-ef5f01b65b0e": {"__data__": {"id_": "a722bb4d-28d7-4308-94cf-ef5f01b65b0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9728df7f-3cba-4b20-bab8-bae8e274bbeb", "node_type": "1", "metadata": {}, "hash": "f9111c8b900a761a339b42da09c1bb12807ff2e6a39a744fbff0b4ca8bce3949", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3366287-831b-471b-a04c-6d93d7c0c09f", "node_type": "1", "metadata": {}, "hash": "41f43c37efa7aad5f775035d5d293bbccccd13f274ea779cab4049c8b0c78cc4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nagoric init demo\n```\n\nCreates a directory named \"demo\" with contents copied from the default dapp-template _dapp-fungible-faucet_.\n\n```\nagoric init my-first-contract --dapp-template dapp-simple-exchange\n```\n\nCreates a directory named _my-first-contract_ with contents copied from the dapp-template _dapp-simple-exchange_.\n\n```\nagoric init my-contract --dapp-template dapp-skeleton --dapp-base file:///home/contracts\n```", "mimetype": "text/plain", "start_char_idx": 4234, "end_char_idx": 4657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3366287-831b-471b-a04c-6d93d7c0c09f": {"__data__": {"id_": "d3366287-831b-471b-a04c-6d93d7c0c09f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a722bb4d-28d7-4308-94cf-ef5f01b65b0e", "node_type": "1", "metadata": {}, "hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0da57717-a68f-432a-a0c3-1713b9639121", "node_type": "1", "metadata": {}, "hash": "f5cce266736eb72da52e200546fcf0f3370bb6ff72bb7cf4feeaf48b007b007b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates a directory named _my-contract_ with contents copied from a dapp-template named _dapp-skeleton_ located under the URL _file:///home/contracts_.", "mimetype": "text/plain", "start_char_idx": 4659, "end_char_idx": 4810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0da57717-a68f-432a-a0c3-1713b9639121": {"__data__": {"id_": "0da57717-a68f-432a-a0c3-1713b9639121", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_agoric-cli_index.md", "node_type": "4", "metadata": {}, "hash": "8a2fdf5708c7977d08e9e83abd24a4ec46cf2299a2e09820e3ae9ee17549c73e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3366287-831b-471b-a04c-6d93d7c0c09f", "node_type": "1", "metadata": {}, "hash": "41f43c37efa7aad5f775035d5d293bbccccd13f274ea779cab4049c8b0c78cc4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Examples**\n  - Launch only the Agoric UI in a browser\n    - `agoric open`\n  - Display the Agoric UI's URL, but don't open it in a browser.\n    - `agoric open --no-browser`\n  - Display only the REPL for the Agoric UI in a browser.\n    - `agoric open --repl only`\n  - Display both the Agoric UI and the REPL in a browser (`--repl` defaults to `yes`).\n    - `agoric open --repl`", "mimetype": "text/plain", "start_char_idx": 10808, "end_char_idx": 11187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c00f136-52dd-4d78-b53f-a37e2841442a": {"__data__": {"id_": "6c00f136-52dd-4d78-b53f-a37e2841442a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_assets_index.md", "node_type": "4", "metadata": {}, "hash": "26623cf71122927eb0dbf1153ae5e7a5609d3bacbba30d5b2ef81dbc8476a3c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Used to store image files for documents in Main.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 48, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "402a6047-bd6a-419e-a2d8-fa9fa59cabc3": {"__data__": {"id_": "402a6047-bd6a-419e-a2d8-fa9fa59cabc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_index.md", "node_type": "4", "metadata": {}, "hash": "8eebbeee54ee1377565d541404f5cfdaf8c45d76c77d8a273e264527d08e0526", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f29edde-99e6-47e8-8f4c-94fe90296c68", "node_type": "1", "metadata": {}, "hash": "1821cfc1e035fd8d00be9a72d0485ba91568d2add973e31937f839596b489639", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Permissioned Contract Deployment\n\nUntil mainnet enters the Mainnet-3 phase of the [multi-phase mainnet rollout](https://agoric.com/blog/announcements/mainnet-phase-0-launch),\npermissionless [contract installation with Zoe](/guides/zoe/contract-walkthru#contract-installation)\nis limited to development environments.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f29edde-99e6-47e8-8f4c-94fe90296c68": {"__data__": {"id_": "0f29edde-99e6-47e8-8f4c-94fe90296c68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_index.md", "node_type": "4", "metadata": {}, "hash": "8eebbeee54ee1377565d541404f5cfdaf8c45d76c77d8a273e264527d08e0526", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "402a6047-bd6a-419e-a2d8-fa9fa59cabc3", "node_type": "1", "metadata": {}, "hash": "c2f2d67c6a4eae724148df76cf72f481539fb3a9dede8acc1eb618673e456b3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267", "node_type": "1", "metadata": {}, "hash": "d9a8db394a57340cdc5d200d237c8fc916883c1f5a250ae2872fc5ec885a0298", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Until then, permission to deploy contracts can be granted using an Agoric extension to [Cosmos SDK Governance](https://hub.cosmos.network/delegators/delegator-guide-cli.html#participating-in-governance) called `swingset.CoreEval`. As discussed in [governance using Hardened JavaScript: swingset\\.CoreEval](https://community.agoric.com/t/bld-staker-governance-using-hardened-javascript-swingset-coreeval/99),", "mimetype": "text/plain", "start_char_idx": 319, "end_char_idx": 726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267": {"__data__": {"id_": "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_index.md", "node_type": "4", "metadata": {}, "hash": "8eebbeee54ee1377565d541404f5cfdaf8c45d76c77d8a273e264527d08e0526", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f29edde-99e6-47e8-8f4c-94fe90296c68", "node_type": "1", "metadata": {}, "hash": "1821cfc1e035fd8d00be9a72d0485ba91568d2add973e31937f839596b489639", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7c80a8e-3d9c-4e0d-9169-dc5e46fd9b4c", "node_type": "1", "metadata": {}, "hash": "38db011f1a8257f961c45e636f485e443c969c78bef29f15ff1898459a5eacbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if such a proposal passes, its JavaScript code is run with ocaps extracted using the proposal's permitted capabilities, which the code can combine to perform privileged tasks.", "mimetype": "text/plain", "start_char_idx": 727, "end_char_idx": 902, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7c80a8e-3d9c-4e0d-9169-dc5e46fd9b4c": {"__data__": {"id_": "e7c80a8e-3d9c-4e0d-9169-dc5e46fd9b4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_index.md", "node_type": "4", "metadata": {}, "hash": "8eebbeee54ee1377565d541404f5cfdaf8c45d76c77d8a273e264527d08e0526", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267", "node_type": "1", "metadata": {}, "hash": "d9a8db394a57340cdc5d200d237c8fc916883c1f5a250ae2872fc5ec885a0298", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To make a proposal to deploy a contract:\n\n1. [Write JavaScript code to deploy the contract](./proposal.md).\n2. [Declare the capabilities that the script requires](./permissions.md).\n3. [Submit transactions to install and deploy the contract](./local-testnet.md).", "mimetype": "text/plain", "start_char_idx": 904, "end_char_idx": 1166, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4565f00f-537a-44b5-a6ff-c415bcf63c21": {"__data__": {"id_": "4565f00f-537a-44b5-a6ff-c415bcf63c21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "992be5a0-29fe-4d0b-97c7-20d024a2f7b2", "node_type": "1", "metadata": {}, "hash": "ddae1743261b832c48d71a1ced7174df4a51f44095e9b9d80e684da737048b57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deploying Contracts using Core Eval Proposals\n\nTo deploy a contract:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 70, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "992be5a0-29fe-4d0b-97c7-20d024a2f7b2": {"__data__": {"id_": "992be5a0-29fe-4d0b-97c7-20d024a2f7b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4565f00f-537a-44b5-a6ff-c415bcf63c21", "node_type": "1", "metadata": {}, "hash": "158c596b8c131781ab355ee696af6174812b59993ef2c6d320376e983cb95d23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a09f16f-4e1a-4f82-bda6-07dca1da22b9", "node_type": "1", "metadata": {}, "hash": "8fe21c9105e23d584822c4d6985314e66ffc07bd7642eb9216fe3bb2b4614018", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Check access and governance norms for your target network / chain.\n   - `agoriclocal` is operated by you and entirely under your control.\n   - [testnets such as `devnet`](#deploying-to-testnets-devnet-emerynet) are shared resources.\n   - _Mainnet deployment is out of scope of this document; see [Mainnet 2 Deployment Checklist #8280](https://github.com/Agoric/agoric-sdk/discussions/8280)._\n2. Build the transaction contents.\n3. Sign and broadcast the transactions using a web UI or CLI tools.", "mimetype": "text/plain", "start_char_idx": 72, "end_char_idx": 569, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a09f16f-4e1a-4f82-bda6-07dca1da22b9": {"__data__": {"id_": "9a09f16f-4e1a-4f82-bda6-07dca1da22b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "992be5a0-29fe-4d0b-97c7-20d024a2f7b2", "node_type": "1", "metadata": {}, "hash": "ddae1743261b832c48d71a1ced7174df4a51f44095e9b9d80e684da737048b57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3c1e119-712e-4a49-a3f1-e82486e65f88", "node_type": "1", "metadata": {}, "hash": "ecbc45fa334f60de03062d291601891b071b49b2eb9b3952e607d30e74d100c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Deploying to a local agoric blockchain\n\n1. Ensure that you have [started your local agoric blockchain](../getting-started/#starting-a-local-agoric-blockchain):\n   use `yarn docker:logs` to check that your chain is running; if not, use `yarn start:docker` to start it.", "mimetype": "text/plain", "start_char_idx": 571, "end_char_idx": 841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a3c1e119-712e-4a49-a3f1-e82486e65f88": {"__data__": {"id_": "a3c1e119-712e-4a49-a3f1-e82486e65f88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a09f16f-4e1a-4f82-bda6-07dca1da22b9", "node_type": "1", "metadata": {}, "hash": "8fe21c9105e23d584822c4d6985314e66ffc07bd7642eb9216fe3bb2b4614018", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d301d5d-8f80-429e-9bc6-f157cf3867f3", "node_type": "1", "metadata": {}, "hash": "4f2c245c4b525fa0616bde6db497985b9dc0d7e8f386738d3284f0f577430af8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "2. Use `yarn start` to automatically\n   1. Build the transaction contents (contract bundle, core eval script).\n   2. Ensure you have enough IST to pay to for the `install-bundle` transaction.\n   3. Sign and broadcast the transactions (`install-bundle`, `submit-proposal`), plus\n   4. Vote on the submitted proposal.\n\n## Bundling Contracts and Core Eval Scripts with Rollup Plugins", "mimetype": "text/plain", "start_char_idx": 843, "end_char_idx": 1223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d301d5d-8f80-429e-9bc6-f157cf3867f3": {"__data__": {"id_": "1d301d5d-8f80-429e-9bc6-f157cf3867f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3c1e119-712e-4a49-a3f1-e82486e65f88", "node_type": "1", "metadata": {}, "hash": "ecbc45fa334f60de03062d291601891b071b49b2eb9b3952e607d30e74d100c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc3f60bc-0320-48fa-aaa5-729cc65a3d51", "node_type": "1", "metadata": {}, "hash": "676144928e640d85fa6b98cf8458be6e10311b7a3451d3b5f93c3d8ad95d5263", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Core eval scripts are evaluated, not loaded as modules; so any `import` or `export` declarations are syntax errors. In **dapp-agoric-basics**, we use [rollup](https://rollupjs.org/) to support developing\na core-eval script and permit as a module:", "mimetype": "text/plain", "start_char_idx": 1225, "end_char_idx": 1471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc3f60bc-0320-48fa-aaa5-729cc65a3d51": {"__data__": {"id_": "cc3f60bc-0320-48fa-aaa5-729cc65a3d51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d301d5d-8f80-429e-9bc6-f157cf3867f3", "node_type": "1", "metadata": {}, "hash": "4f2c245c4b525fa0616bde6db497985b9dc0d7e8f386738d3284f0f577430af8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b9b8867-ee34-40c5-8823-eb745864b190", "node_type": "1", "metadata": {}, "hash": "5bdf2aec4da192b114f36bb4ff16efb2aa6a3ca0aa4c64b1087f2836fc157035", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `import { E } from '@endo/far'`\n  A bundle strips this declaration during bundling\n  since the core-eval scope includes exports of `@endo/far`.\n- `bundleID = ...` is replaced using updated/cached bundle hash\n- `main` is appended as the script completion value\n- the `permit` export is emitted to a `.json` file", "mimetype": "text/plain", "start_char_idx": 1473, "end_char_idx": 1785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b9b8867-ee34-40c5-8823-eb745864b190": {"__data__": {"id_": "7b9b8867-ee34-40c5-8823-eb745864b190", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc3f60bc-0320-48fa-aaa5-729cc65a3d51", "node_type": "1", "metadata": {}, "hash": "676144928e640d85fa6b98cf8458be6e10311b7a3451d3b5f93c3d8ad95d5263", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4f0561f-7f3d-4d4f-a327-638bfbef6a67", "node_type": "1", "metadata": {}, "hash": "a3f4076473a7e20461bc1286c303b08081ed1f3e14cdee6141ef6e9ca25a8628", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See [rollup.config.mjs](https://github.com/Agoric/dapp-agoric-basics/blob/main/contract/rollup.config.mjs) for details on using the\n`moduleToScript`, `configureBundleID`, and `emitPermit` rollup plug-ins.\n\nRunning it looks something like this:\n\n```console\ndapp-agoric-basics/contract$ yarn build:deployer\nyarn run v1.22.19\n$ rollup -c rollup.config.mjs", "mimetype": "text/plain", "start_char_idx": 1787, "end_char_idx": 2139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4f0561f-7f3d-4d4f-a327-638bfbef6a67": {"__data__": {"id_": "e4f0561f-7f3d-4d4f-a327-638bfbef6a67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b9b8867-ee34-40c5-8823-eb745864b190", "node_type": "1", "metadata": {}, "hash": "5bdf2aec4da192b114f36bb4ff16efb2aa6a3ca0aa4c64b1087f2836fc157035", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b33e14af-2e78-433e-aa88-3252b356ca2f", "node_type": "1", "metadata": {}, "hash": "28bc84ea648e01157aacab8621632a5865d3e8f77454cd49f07d0ef438fd19d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "./src/sell-concert-tickets.proposal.js \u2192 bundles/deploy-sell-concert-tickets.js...\nbundles add: sell-concert-tickets from ./src/sell-concert-tickets.contract.js\nbundles bundled 141 files in bundle-sell-concert-tickets.js at 2024-03-09T16:22:08.531Z\ncreated bundles/deploy-sell-concert-tickets.js in 2.4s\n...", "mimetype": "text/plain", "start_char_idx": 2141, "end_char_idx": 2448, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b33e14af-2e78-433e-aa88-3252b356ca2f": {"__data__": {"id_": "b33e14af-2e78-433e-aa88-3252b356ca2f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4f0561f-7f3d-4d4f-a327-638bfbef6a67", "node_type": "1", "metadata": {}, "hash": "a3f4076473a7e20461bc1286c303b08081ed1f3e14cdee6141ef6e9ca25a8628", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98904c73-210c-4da3-bf5c-d7f0829d0811", "node_type": "1", "metadata": {}, "hash": "c4863da1b1eafe886c527050753d2b8a8b5b0a3daab3e730b581c2c60f5fed12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "dapp-agoric-basics/contract$ cd bundles\ndapp-agoric-basics/contract/bundles$ ls deploy-sell* bundle-sell*\nbundle-sell-concert-tickets.js          deploy-sell-concert-tickets-permit.json deploy-sell-concert-tickets.js\n```\n\n## Ensuring you have enough IST to install a bundle\n\nThe price to install a contract is subject to chain governance.\nAs of [proposal #61](https://agoric.explorers.guru/proposal/61) Nov 2023, it's 0.02IST per kilobyte.", "mimetype": "text/plain", "start_char_idx": 2450, "end_char_idx": 2889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98904c73-210c-4da3-bf5c-d7f0829d0811": {"__data__": {"id_": "98904c73-210c-4da3-bf5c-d7f0829d0811", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b33e14af-2e78-433e-aa88-3252b356ca2f", "node_type": "1", "metadata": {}, "hash": "28bc84ea648e01157aacab8621632a5865d3e8f77454cd49f07d0ef438fd19d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82257bb1-9b3e-4144-8b3e-791d0e0127c7", "node_type": "1", "metadata": {}, "hash": "d6ff30f37975d80f12477bd7559229e7107ad5e8d80f9385c464024e0380ad52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "On a local chain, `yarn start` includes a `yarn docker:make mint100` step to get 100 IST, which should be enough. _`mint100` works by sending some ATOM from a `validator` account and using the ATOM to open a vault._\n\n## Installing, submitting to agoriclocal with `scripts/deploy-contract.js`", "mimetype": "text/plain", "start_char_idx": 2891, "end_char_idx": 3182, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82257bb1-9b3e-4144-8b3e-791d0e0127c7": {"__data__": {"id_": "82257bb1-9b3e-4144-8b3e-791d0e0127c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98904c73-210c-4da3-bf5c-d7f0829d0811", "node_type": "1", "metadata": {}, "hash": "c4863da1b1eafe886c527050753d2b8a8b5b0a3daab3e730b581c2c60f5fed12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a18388b9-6972-4f83-a570-621a66e2617f", "node_type": "1", "metadata": {}, "hash": "f2454808905955afd9ca12775fa94cf6573cb68f83fe3ee575db14d395977a2a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In **dapp-agoric-basics**, [contract/scripts/deploy-contract.js](https://github.com/Agoric/dapp-agoric-basics/blob/main/contract/scripts/deploy-contract.js) automates much of the process. `yarn start` automatically runs it. The `--install src/sell-concert-tickets.contract.js` option tells it to install the contract (using [agd tx swingset install-bundle](/guides/agoric-cli/agd-query-tx#agd-tx-swingset-install-bundle) from within the docker container), after bundling it if necessary:", "mimetype": "text/plain", "start_char_idx": 3184, "end_char_idx": 3671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a18388b9-6972-4f83-a570-621a66e2617f": {"__data__": {"id_": "a18388b9-6972-4f83-a570-621a66e2617f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82257bb1-9b3e-4144-8b3e-791d0e0127c7", "node_type": "1", "metadata": {}, "hash": "d6ff30f37975d80f12477bd7559229e7107ad5e8d80f9385c464024e0380ad52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da2e878b-aca5-497b-880a-f453edd4515d", "node_type": "1", "metadata": {}, "hash": "166ecf4cca6f465db306524ee5885f099889a432343ea1aa4230a9bf4b76a9a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\ndapp-agoric-basics/contract$ yarn start\nyarn run v1.22.19\n$ yarn docker:make clean start-contract print-key\n$ docker compose exec agd make -C /workspace/contract clean start-contract print-key\nmake: Entering directory '/workspace/contract'\nyarn node ./scripts/deploy-contract.js --service . \\\n        --install src/sell-concert-tickets.contract.js \\\n        --eval ./src/sell-concert-tickets.proposal.js\nyarn node v1.22.21\nbundles add: sell-concert-tickets from src/sell-concert-tickets.contract.js", "mimetype": "text/plain", "start_char_idx": 3673, "end_char_idx": 4175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da2e878b-aca5-497b-880a-f453edd4515d": {"__data__": {"id_": "da2e878b-aca5-497b-880a-f453edd4515d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a18388b9-6972-4f83-a570-621a66e2617f", "node_type": "1", "metadata": {}, "hash": "f2454808905955afd9ca12775fa94cf6573cb68f83fe3ee575db14d395977a2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9607b04a-f417-4b93-82d3-75c1c997b9d7", "node_type": "1", "metadata": {}, "hash": "58e042455166cd60996eb23bffc9b09c5efd555560e7e46374e6a7c995341cd0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "bundles bundled 141 files in bundle-sell-concert-tickets.js at 2024-03-09T16:49:54.859Z\ninstalling sell-concert-tickets b1-8dd96\n$$$ agd tx swingset install-bundle @bundles/bundle-sell-concert-tickets.json --gas auto --keyring-backend test --chain-id agoriclocal --from agoric1uddt8l5y2sfanzal42358az5dus563f2wk7ssm --broadcast-mode block --gas auto --gas-adjustment 1.4 --yes --output json\ngas estimate: 53922087\n{\n  id: 'b1-8dd96',", "mimetype": "text/plain", "start_char_idx": 4176, "end_char_idx": 4609, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9607b04a-f417-4b93-82d3-75c1c997b9d7": {"__data__": {"id_": "9607b04a-f417-4b93-82d3-75c1c997b9d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da2e878b-aca5-497b-880a-f453edd4515d", "node_type": "1", "metadata": {}, "hash": "166ecf4cca6f465db306524ee5885f099889a432343ea1aa4230a9bf4b76a9a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f67044c8-a87f-426e-8029-e49c4dd3cc40", "node_type": "1", "metadata": {}, "hash": "2adaeb92ee58ef336716b439b64838c2a86e381a874bc5f6f11405d41746c729", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  id: 'b1-8dd96',\n  installTx: 'F18DF8CE296D29BD0283780C402D7C3D22345E13DD04D6B12CEE6AE5B4B9212B',\n  height: '1594'\n}\nfollow { delay: 2 } ...\n{\n  name: 'sell-concert-tickets',\n  id: 'b1-8dd96',\n  installHeight: '1594',\n  installed: true\n}\n...\n```", "mimetype": "text/plain", "start_char_idx": 4590, "end_char_idx": 4838, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f67044c8-a87f-426e-8029-e49c4dd3cc40": {"__data__": {"id_": "f67044c8-a87f-426e-8029-e49c4dd3cc40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9607b04a-f417-4b93-82d3-75c1c997b9d7", "node_type": "1", "metadata": {}, "hash": "58e042455166cd60996eb23bffc9b09c5efd555560e7e46374e6a7c995341cd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2116b6e4-4cdb-4cae-af08-7b06193f7525", "node_type": "1", "metadata": {}, "hash": "523d07aa6ac21c041379595d4aa089cc50f99bd967b8b19901eee72301dfd726", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As a by-product, it writes a `bundles/bundle-sell-concert-tickets.json.installed` file. If you run `yarn start` again, `deploy-contract.js` uses the `Makefile` to check whether the `.installed` file is up-to-date and only repeats `agd tx swingset install-bundle` if you change the contract.\n\nThe `--eval ./src/sell-concert-tickets.proposal.js` option tells it to submit a `swingset-core-eval` governance proposal, after building the script and permit if necessary:", "mimetype": "text/plain", "start_char_idx": 4840, "end_char_idx": 5304, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2116b6e4-4cdb-4cae-af08-7b06193f7525": {"__data__": {"id_": "2116b6e4-4cdb-4cae-af08-7b06193f7525", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f67044c8-a87f-426e-8029-e49c4dd3cc40", "node_type": "1", "metadata": {}, "hash": "2adaeb92ee58ef336716b439b64838c2a86e381a874bc5f6f11405d41746c729", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ca15e48-743d-450f-bb87-720394163530", "node_type": "1", "metadata": {}, "hash": "c11f09551e2bb212a8f013afe80fd27b0050fa704b2a2bbeacdb7eac94b75d40", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```console\n...\nsubmit proposal sell-concert-tickets\n[\n  'bundles/deploy-sell-concert-tickets-permit.json',\n  'bundles/deploy-sell-concert-tickets.js'\n]\nawait tx [\n  'bundles/deploy-sell-concert-tickets-permit.json',\n  'bundles/deploy-sell-concert-tickets.js'\n]", "mimetype": "text/plain", "start_char_idx": 5306, "end_char_idx": 5566, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ca15e48-743d-450f-bb87-720394163530": {"__data__": {"id_": "7ca15e48-743d-450f-bb87-720394163530", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2116b6e4-4cdb-4cae-af08-7b06193f7525", "node_type": "1", "metadata": {}, "hash": "523d07aa6ac21c041379595d4aa089cc50f99bd967b8b19901eee72301dfd726", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a87b73ed-fb5e-475e-80d2-6f2cfe058d73", "node_type": "1", "metadata": {}, "hash": "0dcca4720b9ec5715c33afb59669bef6e2d54528631a47f03f381a736bee0318", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "]\n$$$ agd tx gov submit-proposal swingset-core-eval bundles/deploy-sell-concert-tickets-permit.json bundles/deploy-sell-concert-tickets.js --title sell-concert-tickets --description sell-concert-tickets --deposit 10000000ubld --keyring-backend test --chain-id agoriclocal --from agoric1jkfphfd8fd7vd7erdttne3k4c0rucu8l22ndhk --broadcast-mode block --gas auto --gas-adjustment 1.4 --yes --output json\ngas estimate: 1443920\n{\n  txhash: '010C912FFC47AE59C33A36906DA5096C8EA8A64247699ABF958F58600E57C59E',", "mimetype": "text/plain", "start_char_idx": 5565, "end_char_idx": 6066, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a87b73ed-fb5e-475e-80d2-6f2cfe058d73": {"__data__": {"id_": "a87b73ed-fb5e-475e-80d2-6f2cfe058d73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ca15e48-743d-450f-bb87-720394163530", "node_type": "1", "metadata": {}, "hash": "c11f09551e2bb212a8f013afe80fd27b0050fa704b2a2bbeacdb7eac94b75d40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f578d8e4-794e-4f9c-b556-797671e6aff1", "node_type": "1", "metadata": {}, "hash": "5520205f18125d5bd116e2ca792d5714b86a3641d26c77075cb50186741d02ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "code: 0,\n  height: '1626',\n  gas_used: '1028352'\n}\n...\n```", "mimetype": "text/plain", "start_char_idx": 6069, "end_char_idx": 6127, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f578d8e4-794e-4f9c-b556-797671e6aff1": {"__data__": {"id_": "f578d8e4-794e-4f9c-b556-797671e6aff1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a87b73ed-fb5e-475e-80d2-6f2cfe058d73", "node_type": "1", "metadata": {}, "hash": "0dcca4720b9ec5715c33afb59669bef6e2d54528631a47f03f381a736bee0318", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d979538-c804-4db8-9803-d9557ca01b46", "node_type": "1", "metadata": {}, "hash": "ef8edf32fa4b0094880526e9f5de1ce203bc5873ccfde5ac60a3089ffab97f72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `deploy-contract.js` automates adding a deposit and voting on the proposal and waiting for voting to complete:", "mimetype": "text/plain", "start_char_idx": 6129, "end_char_idx": 6243, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d979538-c804-4db8-9803-d9557ca01b46": {"__data__": {"id_": "1d979538-c804-4db8-9803-d9557ca01b46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f578d8e4-794e-4f9c-b556-797671e6aff1", "node_type": "1", "metadata": {}, "hash": "5520205f18125d5bd116e2ca792d5714b86a3641d26c77075cb50186741d02ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83334ca6-ace6-47bd-804a-65c6b6bc38de", "node_type": "1", "metadata": {}, "hash": "a1460af8666fba09c2f8b95bbc2f41fc15ba2c1c2be0347bd535b8888ff91a73", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n...\nawait voteLatestProposalAndWait [\n  'bundles/deploy-sell-concert-tickets-permit.json',\n  'bundles/deploy-sell-concert-tickets.js'\n]\n{ before: 'deposit', on: '13', delay: 1 } ...\n$$$ agd tx gov deposit 13 50000000ubld --keyring-backend test --chain-id agoriclocal --from validator --broadcast-mode block --gas auto --gas-adjustment 1.4 --yes --output json\ngas estimate: 418391", "mimetype": "text/plain", "start_char_idx": 6245, "end_char_idx": 6628, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83334ca6-ace6-47bd-804a-65c6b6bc38de": {"__data__": {"id_": "83334ca6-ace6-47bd-804a-65c6b6bc38de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d979538-c804-4db8-9803-d9557ca01b46", "node_type": "1", "metadata": {}, "hash": "ef8edf32fa4b0094880526e9f5de1ce203bc5873ccfde5ac60a3089ffab97f72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "974578ce-ac9a-4472-9fc4-2a7be4676698", "node_type": "1", "metadata": {}, "hash": "95a007379e10983d4b7434d4aa304ed8bbd246869115ad7911525c85e9313222", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "gas estimate: 418391\n$$$ agd tx gov vote 13 yes --keyring-backend test --chain-id agoriclocal --from validator --broadcast-mode block --gas auto --gas-adjustment 1.4 --yes --output json\ngas estimate: 105278\nWaiting for proposal 13 to pass (status=PROPOSAL_STATUS_VOTING_PERIOD)\n...\nWaiting for proposal 13 to pass (status=PROPOSAL_STATUS_PASSED)\n13 2024-03-09T16:50:36.973940196Z PROPOSAL_STATUS_PASSED\n{ step: 'run', propsal: '13', delay: 1 } ...\n{\n  proposal_id: '13',\n  content: {", "mimetype": "text/plain", "start_char_idx": 6608, "end_char_idx": 7091, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "974578ce-ac9a-4472-9fc4-2a7be4676698": {"__data__": {"id_": "974578ce-ac9a-4472-9fc4-2a7be4676698", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83334ca6-ace6-47bd-804a-65c6b6bc38de", "node_type": "1", "metadata": {}, "hash": "a1460af8666fba09c2f8b95bbc2f41fc15ba2c1c2be0347bd535b8888ff91a73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40b1f23b-2065-4c31-b4b6-19e08588258f", "node_type": "1", "metadata": {}, "hash": "317e002b2a2ecf2a8c7b1264a5832023cb54fd4aab688225fac5e1aba2f95664", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  proposal_id: '13',\n  content: {\n    '@type': '/agoric.swingset.CoreEvalProposal',\n    title: 'sell-concert-tickets',\n    description: 'sell-concert-tickets',\n    evals: [ [Object] ]\n  },\n  status: 'PROPOSAL_STATUS_PASSED',\n  final_tally_result: { yes: '5000000000', abstain: '0', no: '0', no_with_veto: '0' },\n  submit_time: '2024-03-09T16:50:26.973940196Z',\n  deposit_end_time: '2024-03-11T16:50:26.973940196Z',\n  total_deposit: [ { denom: 'ubld', amount: '60000000' } ],", "mimetype": "text/plain", "start_char_idx": 7056, "end_char_idx": 7532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40b1f23b-2065-4c31-b4b6-19e08588258f": {"__data__": {"id_": "40b1f23b-2065-4c31-b4b6-19e08588258f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "974578ce-ac9a-4472-9fc4-2a7be4676698", "node_type": "1", "metadata": {}, "hash": "95a007379e10983d4b7434d4aa304ed8bbd246869115ad7911525c85e9313222", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4", "node_type": "1", "metadata": {}, "hash": "2ac66db94c1dbd024bd6fa3eb24e85a43fa68a87acd3ec6e0872d03147442df2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "voting_start_time: '2024-03-09T16:50:26.973940196Z',\n  voting_end_time: '2024-03-09T16:50:36.973940196Z'\n}\n```", "mimetype": "text/plain", "start_char_idx": 7535, "end_char_idx": 7645, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4": {"__data__": {"id_": "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40b1f23b-2065-4c31-b4b6-19e08588258f", "node_type": "1", "metadata": {}, "hash": "317e002b2a2ecf2a8c7b1264a5832023cb54fd4aab688225fac5e1aba2f95664", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afe88ab3-beda-424d-aadc-e006b70a0920", "node_type": "1", "metadata": {}, "hash": "380bff711d42c539f0483a83f5f0caf3d780dde964a4638b08e17067800fbea2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When the proposal passes, `deploy-contract.js` writes a `deploy-sell-concert-tickets.js.done` file to avoid running it again unnecessarily.\n\n::: tip Troubleshooting Local Core Eval Proposals\n\nUse `yarn docker:logs` to check for any errors in the execution of the core eval script.\n\n:::\n\n## Deploying to testnets (devnet, emerynet, ...)", "mimetype": "text/plain", "start_char_idx": 7647, "end_char_idx": 7982, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "afe88ab3-beda-424d-aadc-e006b70a0920": {"__data__": {"id_": "afe88ab3-beda-424d-aadc-e006b70a0920", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4", "node_type": "1", "metadata": {}, "hash": "2ac66db94c1dbd024bd6fa3eb24e85a43fa68a87acd3ec6e0872d03147442df2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b578df7-6f5d-4191-94f6-1252d19d0613", "node_type": "1", "metadata": {}, "hash": "d034d3f0e3a2948cdda4409c32a96cbac702988fc69744d1346c06f08009c86f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For testnet access and governance norms, see [Guide to Agoric Testnets \\- Agoric Community Forum](https://community.agoric.com/t/guide-to-agoric-testnets/515). In particular:", "mimetype": "text/plain", "start_char_idx": 7984, "end_char_idx": 8158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b578df7-6f5d-4191-94f6-1252d19d0613": {"__data__": {"id_": "8b578df7-6f5d-4191-94f6-1252d19d0613", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afe88ab3-beda-424d-aadc-e006b70a0920", "node_type": "1", "metadata": {}, "hash": "380bff711d42c539f0483a83f5f0caf3d780dde964a4638b08e17067800fbea2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48504be5-dc85-4c9b-a4de-6e66dfe8ab65", "node_type": "1", "metadata": {}, "hash": "92681e7f6c68195d412250c2033683b25a58db48e1bcc573bff722677159551c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Community developers who are interested to move beyond testing in a local chain are welcome to try their apps on **devnet**. https://devnet.agoric.net/ provides details such as curreint chain-id, RPC endpoints, software version, explorer, and faucet.\n- Feel free to join us at [office hours](https://github.com/Agoric/agoric-sdk/wiki/Office-Hours), whether you're just getting started or you're struggling with a detailed issue.", "mimetype": "text/plain", "start_char_idx": 8160, "end_char_idx": 8590, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48504be5-dc85-4c9b-a4de-6e66dfe8ab65": {"__data__": {"id_": "48504be5-dc85-4c9b-a4de-6e66dfe8ab65", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b578df7-6f5d-4191-94f6-1252d19d0613", "node_type": "1", "metadata": {}, "hash": "d034d3f0e3a2948cdda4409c32a96cbac702988fc69744d1346c06f08009c86f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "929d50e5-8ce8-48f8-90f4-36428c1cdf1f", "node_type": "1", "metadata": {}, "hash": "3be8c90c00d0e6f28a918e325260c724acb93e50c9d0249bf6076e0a585e957b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Let the community know what you propose to deploy by posting to [community.agoric.com](https://community.agoric.com/).\n- Choose appropriate and distinct names for any entries in the [agoricNames](../integration/name-services#agoricnames-agoricnamesadmin-well-known-names) name service.\n- Chat with peers on [Agoric Discord](https://agoric.com/discord). See [#get-roles](https://discord.com/channels/585576150827532298/966411985833050164) to add roles for access to channels such as `#dev` and `#devnet`.", "mimetype": "text/plain", "start_char_idx": 8591, "end_char_idx": 9096, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "929d50e5-8ce8-48f8-90f4-36428c1cdf1f": {"__data__": {"id_": "929d50e5-8ce8-48f8-90f4-36428c1cdf1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48504be5-dc85-4c9b-a4de-6e66dfe8ab65", "node_type": "1", "metadata": {}, "hash": "92681e7f6c68195d412250c2033683b25a58db48e1bcc573bff722677159551c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fffac374-8a60-41a4-b0b1-ca2a8007b17a", "node_type": "1", "metadata": {}, "hash": "95abf25d2b6bebfe6b162d3d415101169d6124ce9000b06270c898f2c587a309", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- For troubleshooting, access to network node logs is important. Contact a [devnet validator](https://devnet.explorer.agoric.net/agoric/uptime) or [operate your own follower node](https://github.com/Agoric/agoric-sdk/wiki/Validator-Guide-for-Devnet).\n- `emerynet` is primarily used for the qualification of production-ready software before it is promoted to mainnet.", "mimetype": "text/plain", "start_char_idx": 9097, "end_char_idx": 9463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fffac374-8a60-41a4-b0b1-ca2a8007b17a": {"__data__": {"id_": "fffac374-8a60-41a4-b0b1-ca2a8007b17a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "929d50e5-8ce8-48f8-90f4-36428c1cdf1f", "node_type": "1", "metadata": {}, "hash": "3be8c90c00d0e6f28a918e325260c724acb93e50c9d0249bf6076e0a585e957b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c062cfc5-8437-4f0f-a435-08fd2113aece", "node_type": "1", "metadata": {}, "hash": "892c8d48e93fdb7ca3605ec300a84bf6fc2648a00a829a49645b243656964d02", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In [Getting Started](/guides/getting-started/), we [set up a keplr wallet demo account](/guides/getting-started/#setting-up-a-keplr-wallet-demo-account) with a previously generated key and address for use on the `agoriclocal` chain. You should have your own account and address for **devnet** and other chains. Generate a key and address with [Keplr](https://www.keplr.app/) or [other wallets](https://agoric.com/ecosystem/category/wallets) or with [agd keys add](../agoric-cli/agd-query-tx#agd-keys-add).", "mimetype": "text/plain", "start_char_idx": 9465, "end_char_idx": 9970, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c062cfc5-8437-4f0f-a435-08fd2113aece": {"__data__": {"id_": "c062cfc5-8437-4f0f-a435-08fd2113aece", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fffac374-8a60-41a4-b0b1-ca2a8007b17a", "node_type": "1", "metadata": {}, "hash": "95abf25d2b6bebfe6b162d3d415101169d6124ce9000b06270c898f2c587a309", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e6dac54-1596-48a9-9ec1-33454a896588", "node_type": "1", "metadata": {}, "hash": "31c96e08eb57d5873d9c02a4b24d1503b21bf211cbc158a3f1212c37601b0136", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "With the [devnet faucet](https://devnet.faucet.agoric.net/), you can\n\n- get BLD to stake and vote on your proposal\n- get IST to pay for contract storage and execution.\n\n### Installing, submitting with **cosgov** Web UI\n\nThe Cosmos Proposal Builder at [cosgov.org](https://cosgov.org) is a convenient way to submit the transactions. It supports deploying to the local chain as well as **devnet** etc.\n\nYou'll need a `.json` formatted contract bundle:", "mimetype": "text/plain", "start_char_idx": 9972, "end_char_idx": 10421, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e6dac54-1596-48a9-9ec1-33454a896588": {"__data__": {"id_": "6e6dac54-1596-48a9-9ec1-33454a896588", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c062cfc5-8437-4f0f-a435-08fd2113aece", "node_type": "1", "metadata": {}, "hash": "892c8d48e93fdb7ca3605ec300a84bf6fc2648a00a829a49645b243656964d02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14", "node_type": "1", "metadata": {}, "hash": "839c65c11d9d4796bc8e5116de67dbc255965851f612767cb8f3962fc1cf3211", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```console\ndapp-agoric-basics/contract$ yarn bundle-source --cache-json bundles/ src/sell-concert-tickets.contract.js sell-concert-tickets\nbundles/ add: sell-concert-tickets from src/sell-concert-tickets.contract.js\nbundles/ bundled 141 files in bundle-sell-concert-tickets.json at 2024-03-09T20:48:43.784Z\n```\n\n<img src='../assets/cosgov-install-bundle.png' alt='Install Bundle screenshot' width=\"600\" />\n\nThen drop your permit and core eval script on the **CoreEval Proposal** tab:", "mimetype": "text/plain", "start_char_idx": 10423, "end_char_idx": 10906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14": {"__data__": {"id_": "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e6dac54-1596-48a9-9ec1-33454a896588", "node_type": "1", "metadata": {}, "hash": "31c96e08eb57d5873d9c02a4b24d1503b21bf211cbc158a3f1212c37601b0136", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b08591a-cdab-49bd-b5c8-b71a1000e0a8", "node_type": "1", "metadata": {}, "hash": "778a42003f27ae251496ec73aa745f09a1777c433835a2527cde06368d4bc197", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src='../assets/cosgov-core-eval.png' alt='Install Bundle screenshot' width=\"600\" />\n\nNote the required deposit and voting period.\n\n## Voting on Core Eval Proposals", "mimetype": "text/plain", "start_char_idx": 10908, "end_char_idx": 11076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b08591a-cdab-49bd-b5c8-b71a1000e0a8": {"__data__": {"id_": "0b08591a-cdab-49bd-b5c8-b71a1000e0a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14", "node_type": "1", "metadata": {}, "hash": "839c65c11d9d4796bc8e5116de67dbc255965851f612767cb8f3962fc1cf3211", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "177fdb14-d27b-455a-881d-14fa3a389052", "node_type": "1", "metadata": {}, "hash": "dd302a8b3270ee2405d989056884e841cfc657d9252adaab88a72b0e6f665a25", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting on Core Eval Proposals\n\nAs usual with cosmos governance, stakers vote on proposals. A deposit is required to start the voting period. The deposit is returned unless the proposal is vetoed. Governance parameters such as the minimum deposit and voting period are subject to chain governance. Use an explorer or `agd query gov params` to find the current value. Typical values are:", "mimetype": "text/plain", "start_char_idx": 11044, "end_char_idx": 11432, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "177fdb14-d27b-455a-881d-14fa3a389052": {"__data__": {"id_": "177fdb14-d27b-455a-881d-14fa3a389052", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b08591a-cdab-49bd-b5c8-b71a1000e0a8", "node_type": "1", "metadata": {}, "hash": "778a42003f27ae251496ec73aa745f09a1777c433835a2527cde06368d4bc197", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae081631-ed78-4f86-ad5b-a942db39bf5d", "node_type": "1", "metadata": {}, "hash": "a78d236afa2d92e5bfa35b8be42e0258cfcc23ff5678826e610e96d61748c7da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| chain         | voting time | deposit (min) |\n| ------------- | ----------- | ------------- |\n| `agoriclocal` | 10 sec      | 1 BLD         |\n| **devnet**    | 5 min       | 1 BLD         |\n| **emerynet**  | 2 hrs       | 1 BLD         |\n| **mainnet**   | 3 days      | 5000 BLD      |\n\nOn **devnet**, it's best to get others to vote on your proposal as well,\nthough if your community post is well received, it's reasonable to\nstake enough BLD to unilaterally pass your proposal.", "mimetype": "text/plain", "start_char_idx": 11434, "end_char_idx": 11915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae081631-ed78-4f86-ad5b-a942db39bf5d": {"__data__": {"id_": "ae081631-ed78-4f86-ad5b-a942db39bf5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_local-testnet.md", "node_type": "4", "metadata": {}, "hash": "6b2fa41803912d7d4288b60c4266da8688d0a1284d36784667d07712e3cfd22a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "177fdb14-d27b-455a-881d-14fa3a389052", "node_type": "1", "metadata": {}, "hash": "dd302a8b3270ee2405d989056884e841cfc657d9252adaab88a72b0e6f665a25", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To vote on a proposal in devnet, find it among [Governance Proposals](https://devnet.explorer.agoric.net/agoric/gov) in the devnet explorer and use Keplr to vote. Or use [agd tx gov vote](../agoric-cli/agd-query-tx.md#agd-tx-gov-vote).", "mimetype": "text/plain", "start_char_idx": 11917, "end_char_idx": 12152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02a5ba2f-42ad-4e43-b5e7-f102085eda18": {"__data__": {"id_": "02a5ba2f-42ad-4e43-b5e7-f102085eda18", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90cffeda-466c-4783-8c18-334deabe8241", "node_type": "1", "metadata": {}, "hash": "6827853f3639992e53dbe8c8998f50c9903ca0a9e0fb430d2df38aa6e0604659", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Declaring Required Capabilities", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 33, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90cffeda-466c-4783-8c18-334deabe8241": {"__data__": {"id_": "90cffeda-466c-4783-8c18-334deabe8241", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02a5ba2f-42ad-4e43-b5e7-f102085eda18", "node_type": "1", "metadata": {}, "hash": "62669cac289dd3cc99b84d9d3b3f671b49a21b85cfc15c06dc797069c1dd8574", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebf8501e-8105-4345-84aa-8e6418571489", "node_type": "1", "metadata": {}, "hash": "f08813a0d9aa704b995095ff78a83cd3128ba54e941fdcf2b8a3fc29b39571df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Most contract deployments don't need everything in `BootstrapPowers`.\nVerifying by inspection that they don't use any more than they need\nis notoriously difficult. So proposals come with\na `BootstrapManifestPermit` to declare an upper limit on the capabilities they access. For a property access `powers.P`, if the permit has `{ P: true }`, then the access succeeds. In fact, any _truthy_ value will do.\nAnd recursively, a property access `powers.P.Q.R` succeeds if\nthe permit has `{ P: { Q: { R: true } } }`.", "mimetype": "text/plain", "start_char_idx": 35, "end_char_idx": 544, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebf8501e-8105-4345-84aa-8e6418571489": {"__data__": {"id_": "ebf8501e-8105-4345-84aa-8e6418571489", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90cffeda-466c-4783-8c18-334deabe8241", "node_type": "1", "metadata": {}, "hash": "6827853f3639992e53dbe8c8998f50c9903ca0a9e0fb430d2df38aa6e0604659", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4244256-901f-4a14-8c9d-6ec14bd33c4a", "node_type": "1", "metadata": {}, "hash": "a07790150b966e448fb37a7ce4350c6b20cb19409d4b0f787165a9d8575efa8c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The permit for `startSellConcertTicketsContract` is:", "mimetype": "text/plain", "start_char_idx": 546, "end_char_idx": 598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4244256-901f-4a14-8c9d-6ec14bd33c4a": {"__data__": {"id_": "d4244256-901f-4a14-8c9d-6ec14bd33c4a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebf8501e-8105-4345-84aa-8e6418571489", "node_type": "1", "metadata": {}, "hash": "f08813a0d9aa704b995095ff78a83cd3128ba54e941fdcf2b8a3fc29b39571df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3aa61952-6a5b-42a8-98d1-0d3873534ee0", "node_type": "1", "metadata": {}, "hash": "3c58a7f1a5762a1420fb8c815609eaaa28f145dc3c07231259a04e1439400aa8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n/** @type { import(\"@agoric/vats/src/core/lib-boot\").BootstrapManifestPermit } */\nexport const permit = harden({\n  consume: {\n    agoricNames: true,\n    brandAuxPublisher: true,\n    startUpgradable: true, // to start contract and save adminFacet\n    zoe: true // to get contract terms, including issuer/brand\n  },\n  installation: {\n    consume: { [contractName]: true },\n    produce: { [contractName]: true }\n  },\n  instance: { produce: { [contractName]: true } },", "mimetype": "text/plain", "start_char_idx": 600, "end_char_idx": 1070, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3aa61952-6a5b-42a8-98d1-0d3873534ee0": {"__data__": {"id_": "3aa61952-6a5b-42a8-98d1-0d3873534ee0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4244256-901f-4a14-8c9d-6ec14bd33c4a", "node_type": "1", "metadata": {}, "hash": "a07790150b966e448fb37a7ce4350c6b20cb19409d4b0f787165a9d8575efa8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "595d478d-1feb-43b2-a981-d16365a63929", "node_type": "1", "metadata": {}, "hash": "1d7d2ed216fc3af77d01b8c37c351153ad316e474e76b22618819009632a1a17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "issuer: { consume: { IST: true }, produce: { Ticket: true } },\n  brand: { consume: { IST: true }, produce: { Ticket: true } }\n});", "mimetype": "text/plain", "start_char_idx": 1073, "end_char_idx": 1202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "595d478d-1feb-43b2-a981-d16365a63929": {"__data__": {"id_": "595d478d-1feb-43b2-a981-d16365a63929", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3aa61952-6a5b-42a8-98d1-0d3873534ee0", "node_type": "1", "metadata": {}, "hash": "3c58a7f1a5762a1420fb8c815609eaaa28f145dc3c07231259a04e1439400aa8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5", "node_type": "1", "metadata": {}, "hash": "11edc00660e6f11d07283a643571649323a97263faa16fe4710376ee2e9871e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export const main = startSellConcertTicketsContract;\n```\n\n## Selected BootstrapPowers\n\nIn the top level promise space, we have:\n\n- **agoricNames**: read-only access to the [agoricNames](../integration/name-services#agoricnames-agoricnamesadmin-well-known-names) name service.", "mimetype": "text/plain", "start_char_idx": 1204, "end_char_idx": 1479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5": {"__data__": {"id_": "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "595d478d-1feb-43b2-a981-d16365a63929", "node_type": "1", "metadata": {}, "hash": "1d7d2ed216fc3af77d01b8c37c351153ad316e474e76b22618819009632a1a17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "380e2530-4682-449c-b742-af422b03431f", "node_type": "1", "metadata": {}, "hash": "a8d4876225a1459f4a9053912bdd00d2a5213388e3132c4dfdd17e165043c25c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **agoricNamesAdmin**: admin / update access to [agoricNames](../integration/name-services#agoricnames-agoricnamesadmin-well-known-names) and the name hubs it contains.\n  **Warning: this includes the right to over-write existing bindings to instances, brands, etc.**\n\n- **bankManager**: to manage reflection of cosmos\n  assets as ERTP assets: to register an issuer to correspond to a denom or to get a bank of purses for any address. **Warning: this includes the right to spend assets for any account.**", "mimetype": "text/plain", "start_char_idx": 1481, "end_char_idx": 1985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "380e2530-4682-449c-b742-af422b03431f": {"__data__": {"id_": "380e2530-4682-449c-b742-af422b03431f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5", "node_type": "1", "metadata": {}, "hash": "11edc00660e6f11d07283a643571649323a97263faa16fe4710376ee2e9871e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9fef657-d080-42eb-b2e8-6bec78a7ade3", "node_type": "1", "metadata": {}, "hash": "9fee767140e31597302f768ffb6a138a2ed0d6bd02df68150176155a7c864ff9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **board**: the [board](../integration/name-services.md#the-board-publishing-under-arbitrary-names) name service.\n  **Note: the board only grows; no mechanism to reclaim storage has been established.**\n\n- **chainStorage**: to make storage nodes to [write to vstorage](../zoe/pub-to-storage).\n  **Warning: this includes access to over-write previously allocated storage nodes.**", "mimetype": "text/plain", "start_char_idx": 1987, "end_char_idx": 2365, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9fef657-d080-42eb-b2e8-6bec78a7ade3": {"__data__": {"id_": "f9fef657-d080-42eb-b2e8-6bec78a7ade3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "380e2530-4682-449c-b742-af422b03431f", "node_type": "1", "metadata": {}, "hash": "a8d4876225a1459f4a9053912bdd00d2a5213388e3132c4dfdd17e165043c25c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67055ff3-2584-402c-a068-22a306099574", "node_type": "1", "metadata": {}, "hash": "8cf1ce61caebbcae129acc56b39023ff8b19d0dac5d137b5d924e03bf2e53911", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **chainTimerService**: for getting the current timer and setting timer wake-ups; for example, at the conclusion of a governance vote.\n  See [Timer Service API](/reference/repl/timerServices).\n  **Note: this includes access to schedule infinitely repeating events.**\n\n- **namesByAddress**: for [looking up objects published under an address](../integration/name-services#namesbyaddress-namesbyaddressadmin-and-depositfacet-per-account-namespace); in particular,\n  a `depositFacet`.", "mimetype": "text/plain", "start_char_idx": 2367, "end_char_idx": 2849, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "67055ff3-2584-402c-a068-22a306099574": {"__data__": {"id_": "67055ff3-2584-402c-a068-22a306099574", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9fef657-d080-42eb-b2e8-6bec78a7ade3", "node_type": "1", "metadata": {}, "hash": "9fee767140e31597302f768ffb6a138a2ed0d6bd02df68150176155a7c864ff9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13dc74f2-2aeb-4709-baa6-f1c4082b7bf0", "node_type": "1", "metadata": {}, "hash": "4d32faf7cd38011651dd406023f98998b37429255160e1814fa0e50681a9f185", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **namesByAddressAdmin**: admin (write) access to **namesByAddress**.\n  **Warning: this includes access to re-direct where payments to an address go.**\n\n- **priceAuthority**: access to get price quotes and triggers; see [Price Authority Guide](../zoe/price-authority).", "mimetype": "text/plain", "start_char_idx": 2851, "end_char_idx": 3120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13dc74f2-2aeb-4709-baa6-f1c4082b7bf0": {"__data__": {"id_": "13dc74f2-2aeb-4709-baa6-f1c4082b7bf0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_permissions.md", "node_type": "4", "metadata": {}, "hash": "91b3a11aa886ab7ef92ef7866cc4f617ba8c8fb4c72f1de2cbdc706c7d7d40c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67055ff3-2584-402c-a068-22a306099574", "node_type": "1", "metadata": {}, "hash": "8cf1ce61caebbcae129acc56b39023ff8b19d0dac5d137b5d924e03bf2e53911", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **priceAuthorityAdmin**: access to add and replace sources of price quotes using [E(priceAuthorityAdmin).registerPriceAuthority()](/reference/zoe-api/price-authority-admin#e-priceauthorityregistryadmin-registerpriceauthority-priceauthority-brandin-brandout-force)\n\n- **zoe**: the [Zoe service](/reference/zoe-api/zoe)", "mimetype": "text/plain", "start_char_idx": 3122, "end_char_idx": 3441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6717b83-1fd8-475e-8e1e-7c706e96702a": {"__data__": {"id_": "a6717b83-1fd8-475e-8e1e-7c706e96702a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef7937b9-b529-40fb-8113-0051fd8b0998", "node_type": "1", "metadata": {}, "hash": "619e77966ed8e2bc63505fe71f01473a89206fd77e505d69ba05cbc34bb711e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Writing a Core Eval Script to Deploy a Contract\n\nWhen a core eval script is evaluated, the completion value is expected\nto be a function. The function is invoked with a _BootstrapPowers_ object\nwith various capabilities useful for deploying contracts.\n\nFor example, in [dapp-agoric-basics](https://github.com/Agoric/dapp-agoric-basics/),\nthere's a contract to sell concert tickets. To deploy it, we", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef7937b9-b529-40fb-8113-0051fd8b0998": {"__data__": {"id_": "ef7937b9-b529-40fb-8113-0051fd8b0998", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6717b83-1fd8-475e-8e1e-7c706e96702a", "node_type": "1", "metadata": {}, "hash": "bc5630ceffb2b3e0bead2f22a2887ea3ad4ac89926786cc77376917dc691e611", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ea9c631-902f-467d-8f57-d9f0ece2f7e7", "node_type": "1", "metadata": {}, "hash": "dd9aaa21e9bf35136658634b9da588a3be5bef5a6ec488f823ecf7a7ede6372c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- install the contract bundle as a Zoe installation\n- start the contract instance, using the **IST** brand to make price amounts for terms\n- publish the installation and instance in the [agoricNames](../integration/name-services.md#agoricnames-agoricnamesadmin-well-known-names) name service under the name **sellConcertTickets**\n  in the **installation** and **instance** section, respectively\n- publish its **Ticket** issuer and brand in the **agoricNames** **issuer** and **brand** sections, respectively.", "mimetype": "text/plain", "start_char_idx": 402, "end_char_idx": 910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ea9c631-902f-467d-8f57-d9f0ece2f7e7": {"__data__": {"id_": "1ea9c631-902f-467d-8f57-d9f0ece2f7e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef7937b9-b529-40fb-8113-0051fd8b0998", "node_type": "1", "metadata": {}, "hash": "619e77966ed8e2bc63505fe71f01473a89206fd77e505d69ba05cbc34bb711e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f", "node_type": "1", "metadata": {}, "hash": "9d66fc8c8fa7c84bdf59ca6248129b278da0b2ff810e974e45b18e786fcb5224", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "After some preliminaries, ...\n\n::: details imports, makeTerms etc.\n\n```js\n// @ts-check\nimport { allValues } from './objectTools.js';\nimport {\n  AmountMath,\n  installContract,\n  startContract\n} from './platform-goals/start-contract.js';\n\nconst { Fail } = assert;\nconst IST_UNIT = 1_000_000n;", "mimetype": "text/plain", "start_char_idx": 912, "end_char_idx": 1202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f": {"__data__": {"id_": "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ea9c631-902f-467d-8f57-d9f0ece2f7e7", "node_type": "1", "metadata": {}, "hash": "dd9aaa21e9bf35136658634b9da588a3be5bef5a6ec488f823ecf7a7ede6372c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44001b6d-5067-4fe3-8cbf-2a3e18217388", "node_type": "1", "metadata": {}, "hash": "56c6c683c91dda24b263508ddb9e0877dc1abae8072ba2d69dea00b93bdd2c15", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export const makeInventory = (brand, baseUnit) => {\n  return {\n    frontRow: {\n      tradePrice: AmountMath.make(brand, baseUnit * 3n),\n      maxTickets: 3n\n    },\n    middleRow: {\n      tradePrice: AmountMath.make(brand, baseUnit * 2n),\n      maxTickets: 3n\n    },\n    lastRow: {\n      tradePrice: AmountMath.make(brand, baseUnit * 1n),\n      maxTickets: 3n\n    }\n  };\n};\n\nexport const makeTerms = (brand, baseUnit) => {\n  return {\n    inventory: makeInventory(brand, baseUnit)\n  };\n};", "mimetype": "text/plain", "start_char_idx": 1204, "end_char_idx": 1690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44001b6d-5067-4fe3-8cbf-2a3e18217388": {"__data__": {"id_": "44001b6d-5067-4fe3-8cbf-2a3e18217388", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f", "node_type": "1", "metadata": {}, "hash": "9d66fc8c8fa7c84bdf59ca6248129b278da0b2ff810e974e45b18e786fcb5224", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f4c0291-af37-463c-9957-60de8a5caec2", "node_type": "1", "metadata": {}, "hash": "5729d645ad355b32b88da6b635ef418fdc7f651236c8eb291028a6b8b742d2ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/**\n * @typedef {{\n *   brand: PromiseSpaceOf<{ Ticket: Brand }>;\n *   issuer: PromiseSpaceOf<{ Ticket: Issuer }>;\n *   instance: PromiseSpaceOf<{ sellConcertTickets: Instance }>\n * }} SellTicketsSpace\n */\n```\n\n:::\n\n... the function for deploying the contract is `startSellConcertTicketsContract`:\n\n```js\nconst contractName = 'sellConcertTickets';", "mimetype": "text/plain", "start_char_idx": 1692, "end_char_idx": 2039, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f4c0291-af37-463c-9957-60de8a5caec2": {"__data__": {"id_": "7f4c0291-af37-463c-9957-60de8a5caec2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44001b6d-5067-4fe3-8cbf-2a3e18217388", "node_type": "1", "metadata": {}, "hash": "56c6c683c91dda24b263508ddb9e0877dc1abae8072ba2d69dea00b93bdd2c15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ac7c1de-f22e-4ad5-a083-15909afcd61f", "node_type": "1", "metadata": {}, "hash": "0f76a6979f1e8935f7260b81bc3047e7c24bc3e81f0ee2fc9bfe21ecb8df092d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/**\n * Core eval script to start contract\n *\n * @param {BootstrapPowers} permittedPowers\n * @param {*} config\n */\nexport const startSellConcertTicketsContract = async (powers, config) => {\n  console.log('core eval for', contractName);\n  const {\n    // must be supplied by caller or template-replaced\n    bundleID = Fail`no bundleID`\n  } = config?.options?.[contractName] ?? {};\n\n  const installation = await installContract(powers, {\n    name: contractName,\n    bundleID\n  });", "mimetype": "text/plain", "start_char_idx": 2041, "end_char_idx": 2517, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ac7c1de-f22e-4ad5-a083-15909afcd61f": {"__data__": {"id_": "4ac7c1de-f22e-4ad5-a083-15909afcd61f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f4c0291-af37-463c-9957-60de8a5caec2", "node_type": "1", "metadata": {}, "hash": "5729d645ad355b32b88da6b635ef418fdc7f651236c8eb291028a6b8b742d2ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef", "node_type": "1", "metadata": {}, "hash": "560f0cf55a4f2a1e4e2be59d6c5bf36e3fc8d7ac8deccc387a28506da9dbbd35", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const ist = await allValues({\n    brand: powers.brand.consume.IST,\n    issuer: powers.issuer.consume.IST\n  });\n\n  const terms = makeTerms(ist.brand, 1n * IST_UNIT);\n\n  await startContract(powers, {\n    name: contractName,\n    startArgs: {\n      installation,\n      issuerKeywordRecord: { Price: ist.issuer },\n      terms\n    },\n    issuerNames: ['Ticket']\n  });\n\n  console.log(contractName, '(re)started');\n};\n```", "mimetype": "text/plain", "start_char_idx": 2521, "end_char_idx": 2934, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef": {"__data__": {"id_": "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ac7c1de-f22e-4ad5-a083-15909afcd61f", "node_type": "1", "metadata": {}, "hash": "0f76a6979f1e8935f7260b81bc3047e7c24bc3e81f0ee2fc9bfe21ecb8df092d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d519f79-f4e9-4c88-886d-d76310b43877", "node_type": "1", "metadata": {}, "hash": "da3d127644700650f9d4c5bff73a533fdf31dd17b17da08f712949fa7dfe0726", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A `BootstrapPowers` object is composed of several _promise spaces_.\nA promise space is a `{ produce, consume }` pair where\n\n- `consume[name]` is a promise associated with a specific name.\n- `produce[name].resolve(value)` resolves the promise associated with the same name by providing a value.\n\nThere is one such space at the top, so that `powers.consume.zoe` is a promise for the Zoe Service. _This promise was resolved early in the execution of the virtual machine._", "mimetype": "text/plain", "start_char_idx": 2936, "end_char_idx": 3404, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d519f79-f4e9-4c88-886d-d76310b43877": {"__data__": {"id_": "4d519f79-f4e9-4c88-886d-d76310b43877", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef", "node_type": "1", "metadata": {}, "hash": "560f0cf55a4f2a1e4e2be59d6c5bf36e3fc8d7ac8deccc387a28506da9dbbd35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60d51012-ce75-4a26-bdee-7dcb36e73480", "node_type": "1", "metadata": {}, "hash": "ef22382520d9dfe3da334d4f84da074dd7eb11f489a5c7906cdf6dbdc93dede1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There are also several more promise spaces one level down, including:\n\n- `powers.installation`\n- `powers.instance`\n- `powers.issuer`\n- `powers.brand`\n\nThe `installContract` helper calls `E(zoe).installBundleID(bundleID)` to create an `Installation`, much like our earlier discussion of [Contract installation](/guides/zoe/contract-walkthru#contract-installation).\nIt also calls `powers.installation[name].resolve(installation)`.", "mimetype": "text/plain", "start_char_idx": 3406, "end_char_idx": 3834, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60d51012-ce75-4a26-bdee-7dcb36e73480": {"__data__": {"id_": "60d51012-ce75-4a26-bdee-7dcb36e73480", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d519f79-f4e9-4c88-886d-d76310b43877", "node_type": "1", "metadata": {}, "hash": "da3d127644700650f9d4c5bff73a533fdf31dd17b17da08f712949fa7dfe0726", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4", "node_type": "1", "metadata": {}, "hash": "de33a9eaf9b7ac186cbd1c9b661457243487f8b6d059d55938010585d4553c0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n/**\n * Given a bundleID and a permitted name, install a bundle and \"produce\"\n * the installation, which also publishes it via agoricNames.\n *\n * @param {BootstrapPowers} powers - zoe, installation.produce[name]\n * @param {{ name: string, bundleID: string }} opts\n */\nexport const installContract = async (\n  { consume: { zoe }, installation: { produce: produceInstallation } },\n  { name, bundleID }\n) => {\n  const installation = await E(zoe).installBundleID(bundleID);", "mimetype": "text/plain", "start_char_idx": 3836, "end_char_idx": 4310, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4": {"__data__": {"id_": "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60d51012-ce75-4a26-bdee-7dcb36e73480", "node_type": "1", "metadata": {}, "hash": "ef22382520d9dfe3da334d4f84da074dd7eb11f489a5c7906cdf6dbdc93dede1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0", "node_type": "1", "metadata": {}, "hash": "03f19daca3e98497a70cbd58361539be613c2f747470971b2bf7779adc3a759b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "produceInstallation[name].reset();\n  produceInstallation[name].resolve(installation);\n  console.log(name, 'installed as', bundleID.slice(0, 8));\n  return installation;\n};\n```", "mimetype": "text/plain", "start_char_idx": 4313, "end_char_idx": 4487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0": {"__data__": {"id_": "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4", "node_type": "1", "metadata": {}, "hash": "de33a9eaf9b7ac186cbd1c9b661457243487f8b6d059d55938010585d4553c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f32d6413-af32-4a52-8cde-dac749d22ddc", "node_type": "1", "metadata": {}, "hash": "b0f76e0857f85b32b7a3570ae8e2f5572d8e01f7828cda37054fd6050d3b35f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This `installation` promise space is linked to the `E(agoricNames).lookup('installation')` NameHub: when you call `produce[name].resolve(value)` on the installation promise space, it triggers an update in the NameHub. The update associates the provided name with the provided value so that `E(agoricNames).lookup('installation', name)` is a promise for `value`.", "mimetype": "text/plain", "start_char_idx": 4489, "end_char_idx": 4850, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f32d6413-af32-4a52-8cde-dac749d22ddc": {"__data__": {"id_": "f32d6413-af32-4a52-8cde-dac749d22ddc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0", "node_type": "1", "metadata": {}, "hash": "03f19daca3e98497a70cbd58361539be613c2f747470971b2bf7779adc3a759b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4916c442-c7f3-4c43-9002-deb5d2e415fa", "node_type": "1", "metadata": {}, "hash": "c139390882a39618c017ca933ff1f4f7f5564a4d857efdc8c98c6c40fca6c160", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Similarly, the `startContract()` helper does `E(zoe).startInstance(...)` as\nin our earlier discussion of [starting a contract instance](../zoe/#starting-a-contract-instance). Plus, it \"produces\" the instance\nso that it's available as `E(agoricNames).lookup('instance', 'sellConcertTickets')`. Once the contract is started, the helper\nuses the `issuerNames` argument to get the `Ticket` issuer and", "mimetype": "text/plain", "start_char_idx": 4852, "end_char_idx": 5248, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4916c442-c7f3-4c43-9002-deb5d2e415fa": {"__data__": {"id_": "4916c442-c7f3-4c43-9002-deb5d2e415fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_coreeval_proposal.md", "node_type": "4", "metadata": {}, "hash": "f7e0a6a8dab34bc85c9627b0b174ead6ca7d168d0f546de7158286ebfef8fd19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f32d6413-af32-4a52-8cde-dac749d22ddc", "node_type": "1", "metadata": {}, "hash": "b0f76e0857f85b32b7a3570ae8e2f5572d8e01f7828cda37054fd6050d3b35f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "brand and \"produces\" them likewise as `E(agoricNames).lookup('issuer', 'Ticket')` and `E(agoricNames).lookup('brand', 'Ticket')`.", "mimetype": "text/plain", "start_char_idx": 5249, "end_char_idx": 5378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4b9e08b-2506-4b0a-9563-00f8ad97df39": {"__data__": {"id_": "f4b9e08b-2506-4b0a-9563-00f8ad97df39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_dapp-templates.md", "node_type": "4", "metadata": {}, "hash": "756fb21b08e8e6b4843ba3e35250109ca90fb2f6dae3603aa21dce09539d5362", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2", "node_type": "1", "metadata": {}, "hash": "dfe9378dca82f1cadcbb5fca25d37bc4aefc4efcda4bd92ae68a54bec6d41056", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Dapp Templates\n\nWhen creating a new dapp using `agoric init`, you have the option of\nstarting from a number of templates. To use a template other than the default, add the\n`--dapp-template` option:\n\n```sh\nagoric init --dapp-template dapp-fungible-faucet my-fungible-faucet\n```\n\n### Fungible Faucet Dapp\n\n[Github:\ndapp-fungible-faucet](https://github.com/Agoric/dapp-fungible-faucet#fungible-faucet-dapp)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2": {"__data__": {"id_": "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_dapp-templates.md", "node_type": "4", "metadata": {}, "hash": "756fb21b08e8e6b4843ba3e35250109ca90fb2f6dae3603aa21dce09539d5362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4b9e08b-2506-4b0a-9563-00f8ad97df39", "node_type": "1", "metadata": {}, "hash": "623348039f4e30314e9afd5c258413d782588ec0c5b49c862e28b10382f75ff0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e14352f-bb88-4bcf-b3f8-6057ec6687f9", "node_type": "1", "metadata": {}, "hash": "f1247e2c93e7386c28f95397d777c6f3ba3ffb0caef0e0dec1aacdb87c0a553e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Gives fungible tokens on request. The front end is raw JavaScript with\n[Material Design Components](https://material-components.github.io/material-components-web-catalog/#/).\n\n### Card Store Dapp\n\n[Github: dapp-card-store](https://github.com/Agoric/dapp-card-store#baseball-card-store-dapp)", "mimetype": "text/plain", "start_char_idx": 408, "end_char_idx": 698, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e14352f-bb88-4bcf-b3f8-6057ec6687f9": {"__data__": {"id_": "9e14352f-bb88-4bcf-b3f8-6057ec6687f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_dapp-templates.md", "node_type": "4", "metadata": {}, "hash": "756fb21b08e8e6b4843ba3e35250109ca90fb2f6dae3603aa21dce09539d5362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2", "node_type": "1", "metadata": {}, "hash": "dfe9378dca82f1cadcbb5fca25d37bc4aefc4efcda4bd92ae68a54bec6d41056", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc522e63-c8d4-448b-bdc8-0b82ca6aaf36", "node_type": "1", "metadata": {}, "hash": "d41c1b899c9b6061f6de6d903f99c77c5beb5b822d450735d4105c23f7fdfea7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Mints NFT (non-fungible token) baseball cards and lets users buy them with their\nfungible tokens from the Fungible Faucet Dapp. The front end is raw\nJavaScript with [Material Design\nComponents](https://material-components.github.io/material-components-web-catalog/#/).\n\n### OTC Desk Dapp\n\n[Github: dapp-otc](https://github.com/Agoric/dapp-otc)", "mimetype": "text/plain", "start_char_idx": 700, "end_char_idx": 1043, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc522e63-c8d4-448b-bdc8-0b82ca6aaf36": {"__data__": {"id_": "dc522e63-c8d4-448b-bdc8-0b82ca6aaf36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_dapp-templates.md", "node_type": "4", "metadata": {}, "hash": "756fb21b08e8e6b4843ba3e35250109ca90fb2f6dae3603aa21dce09539d5362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e14352f-bb88-4bcf-b3f8-6057ec6687f9", "node_type": "1", "metadata": {}, "hash": "f1247e2c93e7386c28f95397d777c6f3ba3ffb0caef0e0dec1aacdb87c0a553e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Gives custom quotes to users, in the form of an exercisable call\noption. This dapp has no front end, but it does have [a video\ntutorial](https://www.youtube.com/watch?v=faxrecQgEio) that walks\nthrough the development.\n\n### Oracle Dapp\n\n[Github: dapp-oracle](https://github.com/Agoric/dapp-oracle)\n\nA generic way to interact with oracles such as the [Chainlink](https://chain.link)\ndecentralized oracle network. The front end is raw JavaScript.", "mimetype": "text/plain", "start_char_idx": 1045, "end_char_idx": 1488, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42f0b4a3-acfb-470d-af20-c735433f1853": {"__data__": {"id_": "42f0b4a3-acfb-470d-af20-c735433f1853", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304", "node_type": "1", "metadata": {}, "hash": "1628898037e1dbf498df09809e0f1e28c8e5160f0c5b6245b3409d57c49aef74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Agoric Dapps\n\n**This is a generic guide to Agoric Dapp projects**\n\nA dapp is a _decentralized application_ which typically has a browser-based user interface, a public API server, and a contract running on the Agoric blockchain.\n\n## Using a Dapp\n\nIf you have installed the [Agoric CLI](../getting-started/) and you want to try running a dapp locally on a simulated Agoric VM (i.e., it won't be running on an actual public chain), do the following:\n\n1. Checkout the latest beta release of the SDK.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304": {"__data__": {"id_": "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42f0b4a3-acfb-470d-af20-c735433f1853", "node_type": "1", "metadata": {}, "hash": "315d05a14140cb57b6cc1c63f00082526a9130bd32e6d2746d1e1540d0d2207a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06e78dd6-19e0-4ecd-9545-53395f2045cd", "node_type": "1", "metadata": {}, "hash": "f9913cf9d9c12839d251cb4af27e579b26319572211f2111b87779cfd37771ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n   cd agoric-sdk\n   git checkout beta\n   yarn && yarn build\n   ```\n\n2. Run `agoric init` to make a new local copy of a dapp template.\n\n   ```sh\n   # Here we chose the Fungible Faucet Dapp.\n   # You can replace `my-fungible-faucet` with a name of your choice.\n   agoric init --dapp-template dapp-fungible-faucet --dapp-branch beta my-fungible-faucet\n   cd my-fungible-faucet\n   # Install the project dependencies\n   agoric install\n   # Start the Agoric VM\n   agoric start --reset\n   ```", "mimetype": "text/plain", "start_char_idx": 503, "end_char_idx": 994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "06e78dd6-19e0-4ecd-9545-53395f2045cd": {"__data__": {"id_": "06e78dd6-19e0-4ecd-9545-53395f2045cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304", "node_type": "1", "metadata": {}, "hash": "1628898037e1dbf498df09809e0f1e28c8e5160f0c5b6245b3409d57c49aef74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc22fdca-0c29-4622-bc10-f20a72a0d559", "node_type": "1", "metadata": {}, "hash": "7aaf2369478f0618dce5dff0921d9d069efbabf117ef135a0b3f4dca231d511c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. Leave this command running (it is your simulated environment).\n4. In a separate terminal, deploy the contract and API to the VM.\n\n   ```sh secondary style2\n   # Deploy a new instance of the contract to the VM\n   agoric deploy contract/deploy.js\n   # Reset the VM's API server\n   agoric deploy api/deploy.js\n   ```\n\n5. In a third terminal, run the following.\n\n   ```sh secondary style3\n   # Start the user interface\n   cd ui && yarn start\n   ```", "mimetype": "text/plain", "start_char_idx": 996, "end_char_idx": 1443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc22fdca-0c29-4622-bc10-f20a72a0d559": {"__data__": {"id_": "dc22fdca-0c29-4622-bc10-f20a72a0d559", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06e78dd6-19e0-4ecd-9545-53395f2045cd", "node_type": "1", "metadata": {}, "hash": "f9913cf9d9c12839d251cb4af27e579b26319572211f2111b87779cfd37771ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79fb16cc-bf0a-4324-a6f5-607e82fd8bef", "node_type": "1", "metadata": {}, "hash": "12efe4fc2532e3750953785aaa2ad6af14fa850b7c61f3f127486775cfab3085", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "6. You can now navigate to [http://localhost:3000](http://localhost:3000) to view your dapp.\n\n## Modifying this Dapp\n\nIn the Agoric system, components are written in Javascript.\n\n## Components\n\nThe following are the important directories in an Agoric dapp project:", "mimetype": "text/plain", "start_char_idx": 1445, "end_char_idx": 1709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79fb16cc-bf0a-4324-a6f5-607e82fd8bef": {"__data__": {"id_": "79fb16cc-bf0a-4324-a6f5-607e82fd8bef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc22fdca-0c29-4622-bc10-f20a72a0d559", "node_type": "1", "metadata": {}, "hash": "7aaf2369478f0618dce5dff0921d9d069efbabf117ef135a0b3f4dca231d511c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b", "node_type": "1", "metadata": {}, "hash": "20a0db68d93201729ce3f759a38cc85b90031d6b58a6ef4747d4bb26f9f07ffe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [`contract/`](#contract-directory) defines the on-chain smart contract.\n- [`api/`](#api-directory) defines the chain-connected server's `/api` HTTP endpoint.\n- [`ui/`](#ui-directory) defines the browser user interface connecting users' personal wallets and the API server.\n\nOther files and directories in this top-level folder should not typically be modified.\n\n### Contract Directory\n\nIn the `contract` directory, you can find the following files to edit:", "mimetype": "text/plain", "start_char_idx": 1711, "end_char_idx": 2169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b": {"__data__": {"id_": "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79fb16cc-bf0a-4324-a6f5-607e82fd8bef", "node_type": "1", "metadata": {}, "hash": "12efe4fc2532e3750953785aaa2ad6af14fa850b7c61f3f127486775cfab3085", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ae37cd7-0cbc-4f6c-a687-8e940939c7ec", "node_type": "1", "metadata": {}, "hash": "56ac843137828ab89587e124f6c91190c36ecd927a8660c46884168f22f4a73e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **src directory**: Contract source code, starting with `src/contract.js`.\n\nThere are also files and folders that you usually shouldn't edit:\n\n- **deploy.js**: Generic Agoric contract deployment script.\n\n### API Directory\n\nIn the `api` directory, you can find the following files to edit:\n\n- **src directory**: Handler for API HTTP endpoints, starting with `src/handler.js`.\n\nThere are also files and folders that you usually shouldn't edit:\n\n- **deploy.js**: Generic Agoric API handler deployment script.", "mimetype": "text/plain", "start_char_idx": 2171, "end_char_idx": 2677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ae37cd7-0cbc-4f6c-a687-8e940939c7ec": {"__data__": {"id_": "9ae37cd7-0cbc-4f6c-a687-8e940939c7ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_index.md", "node_type": "4", "metadata": {}, "hash": "0c34c0e7a975e7ea05639bdee3296a9e08607effc6c44f08c76ad502b9e3ca0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b", "node_type": "1", "metadata": {}, "hash": "20a0db68d93201729ce3f759a38cc85b90031d6b58a6ef4747d4bb26f9f07ffe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### UI Directory\n\nThe `ui` directory is almost completely under your control. The only files and folders that you usually shouldn't edit are:\n\n- **public/lib**: The Agoric UI library.\n- **public/conf**: Configuration files that are generated by the `contract/deploy.js` script.\n\n## More Information\n\nYou can [learn more about the Agoric smart contract platform](https://agoric.com).", "mimetype": "text/plain", "start_char_idx": 2679, "end_char_idx": 3061, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "421741b5-896b-4704-bc4f-eda7a55355fd": {"__data__": {"id_": "421741b5-896b-4704-bc4f-eda7a55355fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "524367bc-b7ae-44e8-bfc4-3159b1d372a8", "node_type": "1", "metadata": {}, "hash": "f070379e668b3eb5ee1324cc860198d6d263687556a4a33984d459c0391233da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Starting Multiuser Dapps\n\nWhen developing a dapp, you may need to test how it behaves with multiple users before deploying it publicly. These users could have different roles, such as the contract deployer, an auctioneer, a bidder, a buyer, a seller, etc.\n\nThe Agoric CLI (Command Line Interface) implements a local-chain-multiuser scenario for developing and testing multiuser dapps.\n\n## Usage", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 396, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "524367bc-b7ae-44e8-bfc4-3159b1d372a8": {"__data__": {"id_": "524367bc-b7ae-44e8-bfc4-3159b1d372a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "421741b5-896b-4704-bc4f-eda7a55355fd", "node_type": "1", "metadata": {}, "hash": "279ca5981bac4a540623478d16a67c9f95ae406619fbd107bf91ba4d5dbff545", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8794f683-12ff-40c9-907a-3411c0dbbe0f", "node_type": "1", "metadata": {}, "hash": "2eb8e40e04743320189c2ef58f69f930419f4c5de03e0de53f58bcf86519c3be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Usage\n\n1. Initialize your dapp as described in the [Starting a Project](../getting-started/) documentation.\n2. After using `agoric start` to test with the simulated chain, stop the simulated chain with Control-C.\n3. Compile the Golang dependencies in the Agoric SDK by running\n\n   ```sh\n   cd agoric-sdk/packages/cosmic-swingset && make\n   ```\n\n4. Check that the `agd` binary is in your `$PATH` by running the following.", "mimetype": "text/plain", "start_char_idx": 388, "end_char_idx": 811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8794f683-12ff-40c9-907a-3411c0dbbe0f": {"__data__": {"id_": "8794f683-12ff-40c9-907a-3411c0dbbe0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "524367bc-b7ae-44e8-bfc4-3159b1d372a8", "node_type": "1", "metadata": {}, "hash": "f070379e668b3eb5ee1324cc860198d6d263687556a4a33984d459c0391233da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3", "node_type": "1", "metadata": {}, "hash": "4fd5e183ddd7fdf5bbb931f6746f200bd721951955ea3da593047b8846fe6120", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n   # Display the directory that should be in your $PATH.\n   echo ${GOBIN-${GOPATH-$HOME/go}/bin}\n   # Attempt to run a binary that was installed there.\n   agd version --long\n   ```\n\n   (If the binary doesn't work, you need to add it to your `$PATH`.)\n\n5. Start a real local chain by running the following command. If you want to start the Agoric process afresh, add the `--reset` option at the end.\n\n   ```sh\n   agoric start local-chain --rebuild\n   ```", "mimetype": "text/plain", "start_char_idx": 816, "end_char_idx": 1275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3": {"__data__": {"id_": "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8794f683-12ff-40c9-907a-3411c0dbbe0f", "node_type": "1", "metadata": {}, "hash": "2eb8e40e04743320189c2ef58f69f930419f4c5de03e0de53f58bcf86519c3be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9", "node_type": "1", "metadata": {}, "hash": "1cbc1592b62a8cdb8f17e2bbb8ca5a06fc60d7c3bfe7a7ec059c4d9849fa8988", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There won\u2019t be any running clients yet, but the chain will start and be fully functional.\n\nYou'll want to run the chain in the background, so you must know how to manage background processes on your system. For example, Unix-like systems can use the following to start an Agoric process in the background and log it to _chain.log_.\n\n```sh\nagoric start local-chain >& chain.log &\n```\n\nTo start a local solo machine connected to the above local chain (i.e., your API ag-solo), run the following.", "mimetype": "text/plain", "start_char_idx": 1277, "end_char_idx": 1770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9": {"__data__": {"id_": "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3", "node_type": "1", "metadata": {}, "hash": "4fd5e183ddd7fdf5bbb931f6746f200bd721951955ea3da593047b8846fe6120", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a56295f5-1996-4e92-b9bf-d051e714ddb7", "node_type": "1", "metadata": {}, "hash": "f338f14ef43d6054de74907cbc4730737a41fe6b5b00a44e99d993202e66f43e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nagoric start local-solo 8000\n```\n\nNote that this should either give an error or take a long time (i.e., over a minute), during which your local chain should be logging something like `validTxs=1`. There are over 50 round trips (at 2 seconds apiece) before the local ag-solo is ready to use.\n\nThis starts a solo machine listening for HTTP on TCP port 8000.\n\nTo start other local ag-solos, use a unique port number for each one (e.g., 8001 or 8002).\n\n```sh\nagoric start local-solo <PORT-NUMBER>\n```", "mimetype": "text/plain", "start_char_idx": 1772, "end_char_idx": 2274, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a56295f5-1996-4e92-b9bf-d051e714ddb7": {"__data__": {"id_": "a56295f5-1996-4e92-b9bf-d051e714ddb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9", "node_type": "1", "metadata": {}, "hash": "1cbc1592b62a8cdb8f17e2bbb8ca5a06fc60d7c3bfe7a7ec059c4d9849fa8988", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c949c44-2315-49b9-ba09-80e5a35e5bb2", "node_type": "1", "metadata": {}, "hash": "be17a78567b8a78e927fa139766663f493e34c3fc15c73fb8494430d8e33f55e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For each new local ag-solo, you need to either:\n\n- Open the wallet corresponding to each local-solo port number by running:\n  - `agoric open --hostport=localhost:<local-solo-portnumber>`\n- Or open the wallet, get its displayed URL, and then copy/paste the URL into the browser you want to\n  view the wallet in:\n  - `agoric open --no-browser --hostport=localhost:<local-solo-portnumber>`", "mimetype": "text/plain", "start_char_idx": 2276, "end_char_idx": 2662, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c949c44-2315-49b9-ba09-80e5a35e5bb2": {"__data__": {"id_": "6c949c44-2315-49b9-ba09-80e5a35e5bb2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a56295f5-1996-4e92-b9bf-d051e714ddb7", "node_type": "1", "metadata": {}, "hash": "f338f14ef43d6054de74907cbc4730737a41fe6b5b00a44e99d993202e66f43e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df9ff320-6be1-4d3b-8828-fbdccc079dab", "node_type": "1", "metadata": {}, "hash": "b82e13521fcac59038484703d33cc93a7dc8d89e4c213884a316940d8597e812", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Test that each of your ag-solos is running and has a wallet by connecting to `http://localhost:<PORT-NUMBER>/` for each port you used.\n\nRun your contract and API deployment scripts against the API ag-solo using the following command.\n\n```sh\nagoric deploy <PATH-TO-DEPLOY.JS>\n```\n\nNote that port 8000 is the default for `agoric deploy` operations. To deploy to an ag-solo running on a different port, use `agoric deploy --hostport=127.0.0.1:<PORT-NUMBER>`.", "mimetype": "text/plain", "start_char_idx": 2664, "end_char_idx": 3119, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df9ff320-6be1-4d3b-8828-fbdccc079dab": {"__data__": {"id_": "df9ff320-6be1-4d3b-8828-fbdccc079dab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c949c44-2315-49b9-ba09-80e5a35e5bb2", "node_type": "1", "metadata": {}, "hash": "be17a78567b8a78e927fa139766663f493e34c3fc15c73fb8494430d8e33f55e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37a9ff48-c2aa-46b8-bc99-790b5faa2772", "node_type": "1", "metadata": {}, "hash": "30c1b38edcc47de51855d77dd58e8441a079df5f9e968cdc0053af535affb5e2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To use your dapp UI with different clients, you\u2019ll need to connect to https://wallet.agoric.app/locator/ in different browsers (or different profiles of the same browser). You'll then need to fill out the localhost address of the ag-solo that you want to use with that browser. This connects the processes in the browser to their own wallets so they do not share per-client data such as cookies, storage, etc. You should test your UI in each browser.\n\n## Example\n\nHere is an example usage scenario.", "mimetype": "text/plain", "start_char_idx": 3121, "end_char_idx": 3619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37a9ff48-c2aa-46b8-bc99-790b5faa2772": {"__data__": {"id_": "37a9ff48-c2aa-46b8-bc99-790b5faa2772", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df9ff320-6be1-4d3b-8828-fbdccc079dab", "node_type": "1", "metadata": {}, "hash": "b82e13521fcac59038484703d33cc93a7dc8d89e4c213884a316940d8597e812", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "753a4db2-c4f9-4e09-b2ac-3aa9914635c6", "node_type": "1", "metadata": {}, "hash": "9355b7815a8177bd3b0dd61b691401d2b11cea0355919e78d9500936c14dca2f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Here is an example usage scenario.\n\n1. Start the local chain and ag-solos.", "mimetype": "text/plain", "start_char_idx": 3585, "end_char_idx": 3659, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "753a4db2-c4f9-4e09-b2ac-3aa9914635c6": {"__data__": {"id_": "753a4db2-c4f9-4e09-b2ac-3aa9914635c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37a9ff48-c2aa-46b8-bc99-790b5faa2772", "node_type": "1", "metadata": {}, "hash": "30c1b38edcc47de51855d77dd58e8441a079df5f9e968cdc0053af535affb5e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24bc96a4-c981-400e-8771-8777b8bdcd9f", "node_type": "1", "metadata": {}, "hash": "18ad8557cffd93aaf7e4163f63b6084e8f16daedcccce5e6079e825108a4da93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n   # Build the Golang dependencies.\n   (cd agoric-sdk/packages/cosmic-swingset && make)\n   # Check that agd binary is in your $PATH and working\n   agd version --long\n   # Initialize a Dapp directory.\n   agoric init foo\n   # Change to the Dapp directory.\n   cd foo\n   # Install NPM dependencies.\n   agoric install\n   # Start the local chain, logging to chain.log.\n   agoric start local-chain >& chain.log &\n   # Start a local API ag-solo (takes over a minute to finish)", "mimetype": "text/plain", "start_char_idx": 3664, "end_char_idx": 4138, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24bc96a4-c981-400e-8771-8777b8bdcd9f": {"__data__": {"id_": "24bc96a4-c981-400e-8771-8777b8bdcd9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "753a4db2-c4f9-4e09-b2ac-3aa9914635c6", "node_type": "1", "metadata": {}, "hash": "9355b7815a8177bd3b0dd61b691401d2b11cea0355919e78d9500936c14dca2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c4c9c11-4ac5-438b-8be7-b797bc1effff", "node_type": "1", "metadata": {}, "hash": "f421d54e166a5994055acc86451cdc52486e21ab8285e48f71488fef66f64e74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "agoric start local-solo 8000 >& solo-8000.log &\n   # Open the associated wallet\n   agoric open --hostport=localhost:8000\n   # Start a second ag-solo.\n   agoric start local-solo 8001 >& solo-8001.log &\n   # Open the second associated wallet\n   agoric open --hostport=localhost:8001\n   # Repeat for any other ag-solos you wish to start (8002, 8003, etc)\n   ```", "mimetype": "text/plain", "start_char_idx": 4142, "end_char_idx": 4500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c4c9c11-4ac5-438b-8be7-b797bc1effff": {"__data__": {"id_": "8c4c9c11-4ac5-438b-8be7-b797bc1effff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24bc96a4-c981-400e-8771-8777b8bdcd9f", "node_type": "1", "metadata": {}, "hash": "18ad8557cffd93aaf7e4163f63b6084e8f16daedcccce5e6079e825108a4da93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec075498-2f8d-40fa-8892-28aa861c9e87", "node_type": "1", "metadata": {}, "hash": "2a14814ac71e52f46c37160f0059e272c0e097673f61f44209e32152af6f6386", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "2. Configure the first client browser.\n3. Open a browser (or a new profile), and navigate to https://wallet.agoric.app/locator/.\n\n   ![Agoric Registration](./assets/Agoric-Registration.png)\n\n4. Keep the recommended address (`http://localhost:8000`).\n5. Click **Open** and verify that it opens a wallet and REPL (Read-Eval-Print-Loop).\n6. In the REPL, type `console.log(8000)`.\n7. Hit **Enter**, and see the command and output in the REPL history.\n\n   ![REPL](./assets/REPL-1.png)", "mimetype": "text/plain", "start_char_idx": 4502, "end_char_idx": 4981, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec075498-2f8d-40fa-8892-28aa861c9e87": {"__data__": {"id_": "ec075498-2f8d-40fa-8892-28aa861c9e87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c4c9c11-4ac5-438b-8be7-b797bc1effff", "node_type": "1", "metadata": {}, "hash": "f421d54e166a5994055acc86451cdc52486e21ab8285e48f71488fef66f64e74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed381a68-7295-4917-b777-aa707e0639a2", "node_type": "1", "metadata": {}, "hash": "57263f4c5d6dd6be7981467b0f1a825a3eef91959008f2b47433bd5fbb8009d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![REPL](./assets/REPL-1.png)\n\n### Configure an Additional Client Browser", "mimetype": "text/plain", "start_char_idx": 4953, "end_char_idx": 5025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed381a68-7295-4917-b777-aa707e0639a2": {"__data__": {"id_": "ed381a68-7295-4917-b777-aa707e0639a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec075498-2f8d-40fa-8892-28aa861c9e87", "node_type": "1", "metadata": {}, "hash": "2a14814ac71e52f46c37160f0059e272c0e097673f61f44209e32152af6f6386", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a485419e-d341-4a86-8693-2cfa00abb55b", "node_type": "1", "metadata": {}, "hash": "c5afea9950fc24af16c4b1847cbc96209754fed62ec08400970243f5dcd699b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Open a different browser. Not just another tab or window, but a completely different browser or browser profile that doesn\u2019t share cookies with any other ag-solo\u2019s browser. For example, if you had an open Chrome window, create a new Chrome profile, or open a Firefox or Safari window.\n2. Navigate to `https://wallet.agoric.app/locator/` and, in the resulting page, set the address to `http://localhost:8001`.\n3. Click **Save**.", "mimetype": "text/plain", "start_char_idx": 5027, "end_char_idx": 5457, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a485419e-d341-4a86-8693-2cfa00abb55b": {"__data__": {"id_": "a485419e-d341-4a86-8693-2cfa00abb55b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed381a68-7295-4917-b777-aa707e0639a2", "node_type": "1", "metadata": {}, "hash": "57263f4c5d6dd6be7981467b0f1a825a3eef91959008f2b47433bd5fbb8009d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5644b0df-d58a-4801-a0b2-557c9b0584b7", "node_type": "1", "metadata": {}, "hash": "024678cfb913a9514c46ace2012e126a1c8db819695ffd23dac91021838c6025", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. Click **Save**.\n4. Click **Open** and verify that it opens a wallet page. (**Note**: You won't have access yet.)\n5. Type `console.log(8001)` in the REPL, hit **Enter**, and see the `console.log` command and output in the REPL's history.", "mimetype": "text/plain", "start_char_idx": 5439, "end_char_idx": 5678, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5644b0df-d58a-4801-a0b2-557c9b0584b7": {"__data__": {"id_": "5644b0df-d58a-4801-a0b2-557c9b0584b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a485419e-d341-4a86-8693-2cfa00abb55b", "node_type": "1", "metadata": {}, "hash": "c5afea9950fc24af16c4b1847cbc96209754fed62ec08400970243f5dcd699b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40688c04-b9cc-43bf-996f-eafcc28e2536", "node_type": "1", "metadata": {}, "hash": "ba4273aa6286e933c30f33ace9ac42748cbc28e3130f9d5dbdb2ee6582e9ab20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![REPL](./assets/REPL-2.png)\n\nYou can repeat this section for as many other ports as you ran ag-solos for.\n\n### Test the UI\n\n```sh\n# Deploy the contract and API service.\nagoric deploy contract/deploy.js api/deploy.js\n# Start the UI\n(cd ui && yarn start)\n```", "mimetype": "text/plain", "start_char_idx": 5683, "end_char_idx": 5940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40688c04-b9cc-43bf-996f-eafcc28e2536": {"__data__": {"id_": "40688c04-b9cc-43bf-996f-eafcc28e2536", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_dapps_starting-multiuser-dapps.md", "node_type": "4", "metadata": {}, "hash": "da7eae66f1aeb1e5d1ced2a12f269143e0b2b88aa85cb9e82a2a044d81395ad4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5644b0df-d58a-4801-a0b2-557c9b0584b7", "node_type": "1", "metadata": {}, "hash": "024678cfb913a9514c46ace2012e126a1c8db819695ffd23dac91021838c6025", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Navigate to `http://localhost:3000` in each browser/profile for which you want to use the UI.  \nWhen the UI opens your wallet, the browser should navigate to the same URL you entered in that browser\nor profile\u2019s `https://wallet.agoric.app/locator/` page.", "mimetype": "text/plain", "start_char_idx": 5942, "end_char_idx": 6196, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10871c33-da19-49db-8d27-b9bdcb3844d8": {"__data__": {"id_": "10871c33-da19-49db-8d27-b9bdcb3844d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fca449d-4530-4ff2-af62-0d08356a4580", "node_type": "1", "metadata": {}, "hash": "a72a44f97f51294c1e88fc6500905ef28514bcdbb322277a37374d1e4da4e1c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# AmountMath\n\n![AmountMath methods](./assets/amount-math.svg)\n\nDepositing and withdrawing assets from a\n`purse` and manipulating `payment` amounts\nall require adding and subtracting digital assets.\nERTP uses the `AmountMath` library for all these operations.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fca449d-4530-4ff2-af62-0d08356a4580": {"__data__": {"id_": "6fca449d-4530-4ff2-af62-0d08356a4580", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10871c33-da19-49db-8d27-b9bdcb3844d8", "node_type": "1", "metadata": {}, "hash": "6848eae8d0283f36e194242c44249f518e902bf902037ea190a7e7d77f9e7b3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6995b1ee-cb0e-41b2-8474-bb38438b929b", "node_type": "1", "metadata": {}, "hash": "6011709589f4397a81a361d16ea85266a4d9f43ad259df30c898d3c8db63454a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `AmountMath` library functions work for both fungible and nonfungible tokens.\nThere are two `AssetKinds`, each of which implements the same methods. Which kind is used\nfor a particular `brand` depends on what was specified when the `brand` and\nits `issuer` were created. They are:", "mimetype": "text/plain", "start_char_idx": 260, "end_char_idx": 544, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6995b1ee-cb0e-41b2-8474-bb38438b929b": {"__data__": {"id_": "6995b1ee-cb0e-41b2-8474-bb38438b929b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fca449d-4530-4ff2-af62-0d08356a4580", "node_type": "1", "metadata": {}, "hash": "a72a44f97f51294c1e88fc6500905ef28514bcdbb322277a37374d1e4da4e1c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e", "node_type": "1", "metadata": {}, "hash": "1b90b49b61e5a8fc620c89f225e8e1aba02e300bf2fe849fab54bd66d84e67f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `AssetKind.NAT` (\"nat\"): Used with fungible assets. Values are natural numbers using the JavaScript [BigInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) type to avoid overflow risks from using the usual JavaScript `Number` type.\n- `AssetKind.SET` (\"set\"): Used with non-fungible assets. Values are [copyArray](../js-programming/far#passstyleof-api)s such as hardened arrays of strings.\n\n## AmountMath Methods", "mimetype": "text/plain", "start_char_idx": 546, "end_char_idx": 1001, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e": {"__data__": {"id_": "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6995b1ee-cb0e-41b2-8474-bb38438b929b", "node_type": "1", "metadata": {}, "hash": "6011709589f4397a81a361d16ea85266a4d9f43ad259df30c898d3c8db63454a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f28211c-3c10-497b-be67-369b1e853e5d", "node_type": "1", "metadata": {}, "hash": "38ac5f4ea7057d62592f2620dc318b1937620163af3ddeb8b3bf2f8d8d384512", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AmountMath Methods\n\nThe following is a brief description and example of each `AmountMath` method. For\nmore detail, click the method's name to go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/).\n\nNote that many methods have a `brand` argument, either required or\noptional. Where optional, use the `brand` you got from an issuer (or from Zoe)\nto add verification that the `brand` of \"amount\" argument(s) corresponds with that `brand`.", "mimetype": "text/plain", "start_char_idx": 980, "end_char_idx": 1430, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f28211c-3c10-497b-be67-369b1e853e5d": {"__data__": {"id_": "3f28211c-3c10-497b-be67-369b1e853e5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e", "node_type": "1", "metadata": {}, "hash": "1b90b49b61e5a8fc620c89f225e8e1aba02e300bf2fe849fab54bd66d84e67f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5ee96fc-1547-4dda-8449-74e3e899b79f", "node_type": "1", "metadata": {}, "hash": "80f93a8beceb437c3bef221a57d6e73f7706a22e6f95f3e92e06083f043040ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Information Getting Methods**\n  - [AmountMath.getValue(brand, amount)](/reference/ertp-api/amount-math#amountmath-getvalue-brand-amount)\n    - Returns the `value` of the `amount` argument. For fungible assets, this will be a `BigInt`.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#getValue\n- **Comparison Methods**\n  - [AmountMath.isEmpty(amount, brand?)](/reference/ertp-api/amount-math#amountmath-isempty-amount-brand)\n    - Returns `true` if its `amount` argument is empty, otherwise `false`.", "mimetype": "text/plain", "start_char_idx": 1432, "end_char_idx": 1940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5ee96fc-1547-4dda-8449-74e3e899b79f": {"__data__": {"id_": "f5ee96fc-1547-4dda-8449-74e3e899b79f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f28211c-3c10-497b-be67-369b1e853e5d", "node_type": "1", "metadata": {}, "hash": "38ac5f4ea7057d62592f2620dc318b1937620163af3ddeb8b3bf2f8d8d384512", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aee65302-eea5-4cba-9357-c88ecf0a1794", "node_type": "1", "metadata": {}, "hash": "b96db6b4175e170d3c883b0262a79b0067b9126109b50e0a7d818b32858c029c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Throws an error if the optional `brand` argument isn't the same as the `amount` argument brand.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#isEmpty\n  - [AmountMath.isGTE(leftAmount, rightAmount, brand?)](/reference/ertp-api/amount-math#amountmath-isgte-leftamount-rightamount-brand)\n    - Returns `true` if the `leftAmount` argument is greater than or equal\n      to the `rightAmount` argument, otherwise `false`.", "mimetype": "text/plain", "start_char_idx": 1947, "end_char_idx": 2371, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aee65302-eea5-4cba-9357-c88ecf0a1794": {"__data__": {"id_": "aee65302-eea5-4cba-9357-c88ecf0a1794", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5ee96fc-1547-4dda-8449-74e3e899b79f", "node_type": "1", "metadata": {}, "hash": "80f93a8beceb437c3bef221a57d6e73f7706a22e6f95f3e92e06083f043040ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13a9b0e9-7561-497c-bc8c-4c78dcd59e61", "node_type": "1", "metadata": {}, "hash": "7fa62ba7050abb85a360d1dbe7a8eca7700ad9768965858476c6e00df34aa54a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Throws an error if the optional `brand` argument isn't the same as the `amount` arguments brands.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#isGTE\n  - [AmountMath.isEqual(leftAmount, rightAmount, brand?)](/reference/ertp-api/amount-math#amountmath-isequal-leftamount-rightamount-brand)\n    - Returns `true` if the `leftAmount` argument equals the\n      `rightAmount` argument. Throws an error if the optional `brand` argument isn't the same as the `amount` arguments brands.", "mimetype": "text/plain", "start_char_idx": 2378, "end_char_idx": 2864, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13a9b0e9-7561-497c-bc8c-4c78dcd59e61": {"__data__": {"id_": "13a9b0e9-7561-497c-bc8c-4c78dcd59e61", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aee65302-eea5-4cba-9357-c88ecf0a1794", "node_type": "1", "metadata": {}, "hash": "b96db6b4175e170d3c883b0262a79b0067b9126109b50e0a7d818b32858c029c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae", "node_type": "1", "metadata": {}, "hash": "7aaac63667edc80520381c8e32b10d069d509ff83d279d5a3d5043dd410deead", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-amount-math.js#isEqual\n  - [AmountMath.coerce(brand, allegedAmount)](/reference/ertp-api/amount-math#amountmath-coerce-brand-allegedamount)\n    - Takes an `amount` and returns it if it's a valid `amount`.\n      If invalid, it throws an error.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#coerce\n- **Manipulator Methods**\n  - [AmountMath.add(leftAmount, rightAmount, brand?)](/reference/ertp-api/amount-math#amountmath-add-leftamount-rightamount-brand)", "mimetype": "text/plain", "start_char_idx": 2869, "end_char_idx": 3366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae": {"__data__": {"id_": "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13a9b0e9-7561-497c-bc8c-4c78dcd59e61", "node_type": "1", "metadata": {}, "hash": "7fa62ba7050abb85a360d1dbe7a8eca7700ad9768965858476c6e00df34aa54a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01e2e06e-0d99-40c4-83a6-b79ad9e18776", "node_type": "1", "metadata": {}, "hash": "70b432e3e5c4843ce8da9d2110a2a178d61f3362f75857ae367f17e7876ed44d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns an `amount` that is the union of the `leftAmount` and `rightAmount`\n      `amount` arguments. For a fungible `amount`, this means add their\n      values. For a non-fungible `amount`, it usually means\n      including all elements from both `leftAmount` and `rightAmount`.\n      Throws an error if the optional `brand` argument isn't the same as the `amount` arguments brands.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#add", "mimetype": "text/plain", "start_char_idx": 3371, "end_char_idx": 3814, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01e2e06e-0d99-40c4-83a6-b79ad9e18776": {"__data__": {"id_": "01e2e06e-0d99-40c4-83a6-b79ad9e18776", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae", "node_type": "1", "metadata": {}, "hash": "7aaac63667edc80520381c8e32b10d069d509ff83d279d5a3d5043dd410deead", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7239c255-bcd7-4d71-b854-798332a6662c", "node_type": "1", "metadata": {}, "hash": "c8dbe36e72c5493694882645199ddbaaf49fe1d70a24c8409c506a0fb6eabd1a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [AmountMath.subtract(leftAmount, rightAmount, brand?)](/reference/ertp-api/amount-math#amountmath-subtract-leftamount-rightamount-brand)\n    - Returns a new `amount` that is the `leftAmount` argument minus\n      the `rightAmount` argument (i.e., for strings or objects\n      everything in `leftAmount` not in `rightAmount`). If `leftAmount`\n      doesn't include the contents of `rightAmount`, it throws an error.\n      It also throws an error if the optional `brand` argument isn't the", "mimetype": "text/plain", "start_char_idx": 3817, "end_char_idx": 4305, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7239c255-bcd7-4d71-b854-798332a6662c": {"__data__": {"id_": "7239c255-bcd7-4d71-b854-798332a6662c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01e2e06e-0d99-40c4-83a6-b79ad9e18776", "node_type": "1", "metadata": {}, "hash": "70b432e3e5c4843ce8da9d2110a2a178d61f3362f75857ae367f17e7876ed44d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ceed0ed1-4694-41cb-acfd-23c3d80b570f", "node_type": "1", "metadata": {}, "hash": "51a279040a75ad685e48987f1a6057c0e319f75b281d657699d57287e32ccdc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "same as the `amount` arguments brands.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#subtract\n- **Amount Creation Methods**\n  - [AmountMath.make(brand, allegedValue)](/reference/ertp-api/amount-math#amountmath-make-brand-allegedvalue)\n    - Takes a `value` argument and returns an `amount` by making a record\n      with the `value` and the `brand` associated with the `AmountMath`. The `value`\n      argument should be represented as a `BigInt` e.g. `10n` rather than `10`.", "mimetype": "text/plain", "start_char_idx": 4312, "end_char_idx": 4794, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ceed0ed1-4694-41cb-acfd-23c3d80b570f": {"__data__": {"id_": "ceed0ed1-4694-41cb-acfd-23c3d80b570f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7239c255-bcd7-4d71-b854-798332a6662c", "node_type": "1", "metadata": {}, "hash": "c8dbe36e72c5493694882645199ddbaaf49fe1d70a24c8409c506a0fb6eabd1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da214069-f851-4e0a-9d26-9bee8533a2dc", "node_type": "1", "metadata": {}, "hash": "c6084a67bb43fd62c49ba2a2b36f1e69eca21113dab67a5afd824aafb0451a0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-amount-math.js#make\n  - [AmountMath.makeEmpty(brand, assetKind)](/reference/ertp-api/amount-math#amountmath-makeempty-brand-assetkind)\n    - Returns an `amount` representing an empty `amount`, which is the identity\n      element for the `AmountMath` `add()` and `subtract()`\n      operations. Note that this value varies depending on the\n      `brand` and whether it is of kind `AssetKind.NAT` or `AssetKind.SET`.", "mimetype": "text/plain", "start_char_idx": 4799, "end_char_idx": 5248, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da214069-f851-4e0a-9d26-9bee8533a2dc": {"__data__": {"id_": "da214069-f851-4e0a-9d26-9bee8533a2dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ceed0ed1-4694-41cb-acfd-23c3d80b570f", "node_type": "1", "metadata": {}, "hash": "51a279040a75ad685e48987f1a6057c0e319f75b281d657699d57287e32ccdc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b619538c-3603-4d01-925c-eb77723ebb37", "node_type": "1", "metadata": {}, "hash": "fb4e179b4485c647e0915eae4fb8ee41d134716db1f4347f7193cec65cd5881c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-amount-math.js#makeEmpty\n  - [AmountMath.makeEmptyFromAmount(amount)](/reference/ertp-api/amount-math#amountmath-makeemptyfromamount-amount)\n    - Returns an `amount` representing an empty `amount`, using another `amount`\n      as the template for the new empty amount's `brand` and `assetKind`.\n    - <<< @/../snippets/ertp/guide/test-amount-math.js#makeEmptyFromAmount", "mimetype": "text/plain", "start_char_idx": 5253, "end_char_idx": 5659, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b619538c-3603-4d01-925c-eb77723ebb37": {"__data__": {"id_": "b619538c-3603-4d01-925c-eb77723ebb37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da214069-f851-4e0a-9d26-9bee8533a2dc", "node_type": "1", "metadata": {}, "hash": "c6084a67bb43fd62c49ba2a2b36f1e69eca21113dab67a5afd824aafb0451a0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5879be56-bfd5-4aac-8f28-0e6d053a851e", "node_type": "1", "metadata": {}, "hash": "943e7b223f0a257aeb4e4d4c78b2cf51925efe1920dccb2475f8822e1a51ab1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Methods On Other Objects\n\nThese methods return an **[AssetKind](/reference/ertp-api/ertp-data-types#assetkind)**:", "mimetype": "text/plain", "start_char_idx": 5661, "end_char_idx": 5777, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5879be56-bfd5-4aac-8f28-0e6d053a851e": {"__data__": {"id_": "5879be56-bfd5-4aac-8f28-0e6d053a851e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amount-math.md", "node_type": "4", "metadata": {}, "hash": "71d9888d9cd288d5522890dae1fe9288cc1d7709812aebdd287420e3931c0692", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b619538c-3603-4d01-925c-eb77723ebb37", "node_type": "1", "metadata": {}, "hash": "fb4e179b4485c647e0915eae4fb8ee41d134716db1f4347f7193cec65cd5881c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.getAssetKind()](/reference/ertp-api/issuer#anissuer-getassetkind)\n  - Returns the `AssetKind` of the `issuer`'s `brand`. (`AssetKind.NAT` or `AssetKind.SET`).\n  - <<< @/../snippets/ertp/guide/test-amount-math.js#getAssetKind2\n- [zcf.getAssetKind(brand)](/reference/zoe-api/zoe-contract-facet#zcf-getassetkind-brand)\n  - Returns the `AssetKind` of the `brand` argument.\n  - <<< @/../snippets/ertp/guide/test-amount-math.js#zcfGetAssetKind", "mimetype": "text/plain", "start_char_idx": 5779, "end_char_idx": 6228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f33a94d7-a238-4d67-a282-03f217b05dfc": {"__data__": {"id_": "f33a94d7-a238-4d67-a282-03f217b05dfc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be83c6d3-0151-40d7-a556-b47732fbe3d8", "node_type": "1", "metadata": {}, "hash": "823b6566aef277ca42a9103b484107f7acf184e66318890f436b0a92a90e93d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Amounts, Values, and Brands\n\n## Amounts\n\n![Amount methods](./assets/amount.svg)\n\nAn `amount` describes digital assets. There are no `amount` API methods,\nbut [AmountMath](/reference/ertp-api/amount-math) methods take `amounts` as arguments\nto get information about and manipulate them.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 287, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be83c6d3-0151-40d7-a556-b47732fbe3d8": {"__data__": {"id_": "be83c6d3-0151-40d7-a556-b47732fbe3d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f33a94d7-a238-4d67-a282-03f217b05dfc", "node_type": "1", "metadata": {}, "hash": "bd64aae6cdffb2ed37682d2bf0ac6dd88cc896f5c96bd7bd4b9c5cf825773a76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980", "node_type": "1", "metadata": {}, "hash": "ea153f3f5bdbe038928945a38fb994d3ca0f3e3d39205b5aa0f03239287affce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`AmountMath.make()` is generally how you make new `amounts`.\nHowever, you can also make an `amount` as an object literal by making a record of\na `brand` and a `value`. While `AmountMath.make()` is recommended for proper\nobject-oriented programming, this produces the same result:\n\n<<< @/../snippets/ertp/guide/test-amounts.js#manualMake\nEach `amount` has two properties:", "mimetype": "text/plain", "start_char_idx": 289, "end_char_idx": 659, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980": {"__data__": {"id_": "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be83c6d3-0151-40d7-a556-b47732fbe3d8", "node_type": "1", "metadata": {}, "hash": "823b6566aef277ca42a9103b484107f7acf184e66318890f436b0a92a90e93d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4df398f-b4ac-4b55-acf3-190c6e03e3fa", "node_type": "1", "metadata": {}, "hash": "32f19d5d96edf34551d90f421e7f784aa13a38a37301d227bfaac00d9e695908", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **brand**: The type of digital asset, such as our imaginary `Quatloos` currency or,\n  in a game, a powerful magic sword with a brand of `Plus3Sword-ABCGames` or similar.\n- **value**: How much/many of the asset. Fungible values are natural\n  numbers represented as BigInts. Non-fungible values may be represented as strings naming a\n  particular right, or an arbitrary object representing the rights at\n  issue (e.g., a theater ticket's date, time, row, and seat positions).", "mimetype": "text/plain", "start_char_idx": 661, "end_char_idx": 1136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4df398f-b4ac-4b55-acf3-190c6e03e3fa": {"__data__": {"id_": "d4df398f-b4ac-4b55-acf3-190c6e03e3fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980", "node_type": "1", "metadata": {}, "hash": "ea153f3f5bdbe038928945a38fb994d3ca0f3e3d39205b5aa0f03239287affce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b", "node_type": "1", "metadata": {}, "hash": "39c7bddfdb42c029c1797995a6313e85ab62f991d5be6b97e52344f8b1bd7c69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`amounts` and their `values` and `brands` can be manipulated by the\n`AmountMath` library. It executes the logic of how `amounts` change when\ndigital assets are merged, separated, or otherwise manipulated. For\nexample, you make an offer for something, which is declined. You want\nto change your offer, represented as an `amount`, to be of a greater\n`value` by adding to it.\n\n## Brands\n\n![Brand methods](./assets/brand.svg)", "mimetype": "text/plain", "start_char_idx": 1138, "end_char_idx": 1559, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b": {"__data__": {"id_": "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4df398f-b4ac-4b55-acf3-190c6e03e3fa", "node_type": "1", "metadata": {}, "hash": "32f19d5d96edf34551d90f421e7f784aa13a38a37301d227bfaac00d9e695908", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4736734-f482-4176-997e-9082d129dcf3", "node_type": "1", "metadata": {}, "hash": "71cd1a7f31dfd34000e901e4111600fbf6f045efe4c27f50a94de83d8c73ee97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A `brand` object is an `amount` object's type of digital asset, such as\nour imaginary Quatloos currency or, in a game, a powerful magic\nsword.\n\nIn ERTP, `mint` objects create new asset `payment`\nobjects. Each `mint` has a one-to-one relationship with an `issuer`\nobject. And each `issuer` object has a one-to-one\nrelationship with a `brand` object. This means:", "mimetype": "text/plain", "start_char_idx": 1561, "end_char_idx": 1921, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4736734-f482-4176-997e-9082d129dcf3": {"__data__": {"id_": "c4736734-f482-4176-997e-9082d129dcf3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b", "node_type": "1", "metadata": {}, "hash": "39c7bddfdb42c029c1797995a6313e85ab62f991d5be6b97e52344f8b1bd7c69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b3503d2-ee3d-4f16-a334-0408af2d375a", "node_type": "1", "metadata": {}, "hash": "a2a7c37749a4acc41dd2e975cf0083e00188508a0ae22f679de73c13be31589e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- A `mint` can only create a `payment` for one specific `brand`, which\n  must be the same `brand` as their associated `issuer`.\n- An `issuer` can only create a new empty `purse`\n  for one specific `brand`.\n- An `amount` is either _fungible_ or _non-fungible_, as determined by which\n  its `issuer`, and thus its `brand`, was created to be.", "mimetype": "text/plain", "start_char_idx": 1923, "end_char_idx": 2262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b3503d2-ee3d-4f16-a334-0408af2d375a": {"__data__": {"id_": "9b3503d2-ee3d-4f16-a334-0408af2d375a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4736734-f482-4176-997e-9082d129dcf3", "node_type": "1", "metadata": {}, "hash": "71cd1a7f31dfd34000e901e4111600fbf6f045efe4c27f50a94de83d8c73ee97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e1910a0-413a-462a-b70d-acf2c1ded4c0", "node_type": "1", "metadata": {}, "hash": "2a10241a5e67899dbc080eeeeffcd23b706c942a8c6cd6a3fd2ea054b093897b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A `brand` has three associated methods. The following is a brief description\nand example of each `brand` method. For more detail, click the method's name\nto go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/).", "mimetype": "text/plain", "start_char_idx": 2264, "end_char_idx": 2487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e1910a0-413a-462a-b70d-acf2c1ded4c0": {"__data__": {"id_": "9e1910a0-413a-462a-b70d-acf2c1ded4c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b3503d2-ee3d-4f16-a334-0408af2d375a", "node_type": "1", "metadata": {}, "hash": "a2a7c37749a4acc41dd2e975cf0083e00188508a0ae22f679de73c13be31589e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88bedc9b-2b35-424f-bf4d-038f087d6eff", "node_type": "1", "metadata": {}, "hash": "e2e98a2efaa1ebd822c04a154317c5cd761ad5500217450c1eafe917f116c343", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aBrand.isMyIssuer()](/reference/ertp-api/brand#abrand-ismyissuer-allegedissuer)\n  - Returns `true` if the `issuer` argument matches the `issuer` associated with the `brand`.\n    We have this method because the `issuer` is authoritative and the `brand` is not. You can\n    create a `payment`, `purse`, or `amount` with a `brand` that claims a particular `issuer`,\n    without that `issuer` having been involved. But if you use that `payment` or `purse`, it won't be", "mimetype": "text/plain", "start_char_idx": 2489, "end_char_idx": 2956, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "88bedc9b-2b35-424f-bf4d-038f087d6eff": {"__data__": {"id_": "88bedc9b-2b35-424f-bf4d-038f087d6eff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e1910a0-413a-462a-b70d-acf2c1ded4c0", "node_type": "1", "metadata": {}, "hash": "2a10241a5e67899dbc080eeeeffcd23b706c942a8c6cd6a3fd2ea054b093897b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e2c09d7-5d84-412a-891c-af1a5b30591d", "node_type": "1", "metadata": {}, "hash": "0e58d9203f3c5223310d19c5dd4611cbb7800a9602e73966482c51d3c77360dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "accepted by genuine ones. So to know, you have to verify with the `issuer` to see if it agrees.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#isMyIssuer\n- [aBrand.getAllegedName()](/reference/ertp-api/brand#abrand-getallegedname)\n  - Returns the `brand`'s alleged name, but should not be trusted as accurate.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#getAllegedName\n- [aBrand.getDisplayInfo()](/reference/ertp-api/brand#abrand-getdisplayinfo)", "mimetype": "text/plain", "start_char_idx": 2961, "end_char_idx": 3413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e2c09d7-5d84-412a-891c-af1a5b30591d": {"__data__": {"id_": "6e2c09d7-5d84-412a-891c-af1a5b30591d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88bedc9b-2b35-424f-bf4d-038f087d6eff", "node_type": "1", "metadata": {}, "hash": "e2e98a2efaa1ebd822c04a154317c5cd761ad5500217450c1eafe917f116c343", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95b7d143-0696-4bca-930b-8847ec163444", "node_type": "1", "metadata": {}, "hash": "e68aa3ae051e8ae3d06512217bc4ce6d46efa9b306a4a51d9c4119f83869205e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns the `DisplayInfo` associated with the `brand`. The `DisplayInfo`\n    tells the UI how to correctly display `values` associated with the `brand`.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#getDisplayInfo", "mimetype": "text/plain", "start_char_idx": 3416, "end_char_idx": 3634, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95b7d143-0696-4bca-930b-8847ec163444": {"__data__": {"id_": "95b7d143-0696-4bca-930b-8847ec163444", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e2c09d7-5d84-412a-891c-af1a5b30591d", "node_type": "1", "metadata": {}, "hash": "0e58d9203f3c5223310d19c5dd4611cbb7800a9602e73966482c51d3c77360dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97d80703-ac16-4f70-a4cf-1d563ce9b697", "node_type": "1", "metadata": {}, "hash": "dd95c84f3dcefea9f9aa46b22b06d75b75dae05df7ff88fb1a684aeff52137d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following methods on other ERTP components also either operate on or\nreturn a `brand`.", "mimetype": "text/plain", "start_char_idx": 3636, "end_char_idx": 3726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97d80703-ac16-4f70-a4cf-1d563ce9b697": {"__data__": {"id_": "97d80703-ac16-4f70-a4cf-1d563ce9b697", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95b7d143-0696-4bca-930b-8847ec163444", "node_type": "1", "metadata": {}, "hash": "e68aa3ae051e8ae3d06512217bc4ce6d46efa9b306a4a51d9c4119f83869205e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb", "node_type": "1", "metadata": {}, "hash": "28fba86dad4b75b4f09043a9c11d9bcd48531e0ad512544833f9c9043bcf5c47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.getBrand()](/reference/ertp-api/issuer#anissuer-getbrand)\n  - Returns the `brand` for the `issuer`. The `brand` is not closely\n    held, so this should not be trusted to identify an `issuer`\n    alone. Fake digital assets and `amount`s can use the `brand` of another `issuer`.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#getBrand\n- [aPayment.getAllegedBrand()](/reference/ertp-api/payment#apayment-getallegedbrand)\n  - Return the `payment`'s alleged `brand`. Because a `payment`", "mimetype": "text/plain", "start_char_idx": 3728, "end_char_idx": 4223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb": {"__data__": {"id_": "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97d80703-ac16-4f70-a4cf-1d563ce9b697", "node_type": "1", "metadata": {}, "hash": "dd95c84f3dcefea9f9aa46b22b06d75b75dae05df7ff88fb1a684aeff52137d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c897090-e00b-4ed3-a79d-068fc0080609", "node_type": "1", "metadata": {}, "hash": "a9838d76e9f934046106d4b0346b9ac3073749a26b2a36f239f588e5adac7dce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "is not trusted, this should be treated with suspicion and verified\n    elsewhere. This example code determines if a `payment` we got from untrusted sources\n    is valid. It uses the `brand` to find a `purse` we want to deposit it in, then verifies\n    that it's genuine.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#depositSomewhere", "mimetype": "text/plain", "start_char_idx": 4228, "end_char_idx": 4564, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c897090-e00b-4ed3-a79d-068fc0080609": {"__data__": {"id_": "4c897090-e00b-4ed3-a79d-068fc0080609", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb", "node_type": "1", "metadata": {}, "hash": "28fba86dad4b75b4f09043a9c11d9bcd48531e0ad512544833f9c9043bcf5c47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebb0613c-5d9f-45e6-9b43-f2fe8df45788", "node_type": "1", "metadata": {}, "hash": "c1771f5bcc998bef9bd218a7797df78947f8a0e361e02c6d8781672f3b90cfdd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<a id=\"values\"></a>\n\n## AmountValues\n\n![Value methods](./assets/value.svg)\n\nAmountValues are the \"how many\" part of an `amount`.\n\nNote that number values (for fungible assets) are represented as `BigInt`s and\nnot `Number`s. Write `10n` rather than `10`.\n\nThere are no `value`\nmethods, but two `AmountMath` methods use or return them.", "mimetype": "text/plain", "start_char_idx": 4566, "end_char_idx": 4899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebb0613c-5d9f-45e6-9b43-f2fe8df45788": {"__data__": {"id_": "ebb0613c-5d9f-45e6-9b43-f2fe8df45788", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_amounts.md", "node_type": "4", "metadata": {}, "hash": "8baac71329f306ff4ff9f042aecf3d309997117de3fcf538202cf225b22f8e04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c897090-e00b-4ed3-a79d-068fc0080609", "node_type": "1", "metadata": {}, "hash": "a9838d76e9f934046106d4b0346b9ac3073749a26b2a36f239f588e5adac7dce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [AmountMath.getValue(brand, amount)](/reference/ertp-api/amount-math#amountmath-getvalue-brand-amount)\n  - Return the `amount` argument's `value`\n  - <<< @/../snippets/ertp/guide/test-amounts.js#getValue\n- [AmountMath.make(brand, allegedValue)](/reference/ertp-api/amount-math#amountmath-make-brand-allegedvalue)\n  - Make an `amount`from a `brand` and a `value`.\n  - <<< @/../snippets/ertp/guide/test-amounts.js#make", "mimetype": "text/plain", "start_char_idx": 4901, "end_char_idx": 5319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ccb8b86-1e6a-4efe-a734-c217e4dbdf22": {"__data__": {"id_": "4ccb8b86-1e6a-4efe-a734-c217e4dbdf22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4459991-d649-49cd-87be-ac4e7426f651", "node_type": "1", "metadata": {}, "hash": "4f4d6f9ef512d74405aa26dd35576c4ed5d21922f0314f97e80dbd3f459a446a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ERTP Overview\n\nERTP (_Electronic Rights Transfer Protocol_)\nis Agoric's token standard for transferring tokens and other digital assets in\nJavaScript. Using the [ERTP API](/reference/ertp-api/),\nyou can easily create and use digital assets, all of which are\ntransferred exactly the same way and with exactly the same security properties.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 339, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4459991-d649-49cd-87be-ac4e7426f651": {"__data__": {"id_": "b4459991-d649-49cd-87be-ac4e7426f651", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ccb8b86-1e6a-4efe-a734-c217e4dbdf22", "node_type": "1", "metadata": {}, "hash": "c64be4e199f1496b9e6d2801f0535781c6a6887bf7e5ee7d869cf98c9e970409", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b497dac6-bed4-4a94-8345-c5639deda1ab", "node_type": "1", "metadata": {}, "hash": "98fe265a7e681e315761c3f381fc642c9eb166e30697700a5a55e9874d10860e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ERTP uses [OCaps (object capabilities)](/glossary/#object-capabilities)\nto enforce access control. If your program has a reference to an\nobject, it can call methods on that object. If it doesn't have a\nreference, it can't. For more on object capabilities, see\n[Chip Morningstar's post](http://habitatchronicles.com/2017/05/what-are-capabilities/).\n\n## ERTP Concepts Overview\n\n### Asset", "mimetype": "text/plain", "start_char_idx": 341, "end_char_idx": 726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b497dac6-bed4-4a94-8345-c5639deda1ab": {"__data__": {"id_": "b497dac6-bed4-4a94-8345-c5639deda1ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4459991-d649-49cd-87be-ac4e7426f651", "node_type": "1", "metadata": {}, "hash": "4f4d6f9ef512d74405aa26dd35576c4ed5d21922f0314f97e80dbd3f459a446a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c049708-e3a8-4b33-8b95-f5d08c11d539", "node_type": "1", "metadata": {}, "hash": "02133d250c685e34766d8f4db21453e86f0b025459a56a63d682567133605ec1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Asset\n\nThere are three kinds of assets:\n[fungible](/glossary/#fungible),\n[non-fungible](/glossary/#non-fungible), and\n[semi-fungible](/glossary/#semi-fungible).\n\nFungible assets are interchangeable. For example, if you have 100\none-dollar bills and need to pay someone 5 dollars, it doesn't matter\nwhich five of your one-dollar bills you give them.", "mimetype": "text/plain", "start_char_idx": 717, "end_char_idx": 1069, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c049708-e3a8-4b33-8b95-f5d08c11d539": {"__data__": {"id_": "1c049708-e3a8-4b33-8b95-f5d08c11d539", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b497dac6-bed4-4a94-8345-c5639deda1ab", "node_type": "1", "metadata": {}, "hash": "98fe265a7e681e315761c3f381fc642c9eb166e30697700a5a55e9874d10860e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8df443e-be20-4278-b054-f19a57541426", "node_type": "1", "metadata": {}, "hash": "3c7e9d839679dacab3d01951c9a4caf6500cc14822e49f6d5e062ecf6efd66cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Non-fungible assets have the same brand, but are not interchangeable. For example, you might have 100\ntheater tickets. But someone wanting to buy even a General Admission ticket from you will want one\nfor a specific date and time. This might also affect the price; you'll want to charge more\nfor a Friday evening ticket than a Wednesday matinee ticket, even if it's for the same show.", "mimetype": "text/plain", "start_char_idx": 1071, "end_char_idx": 1455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8df443e-be20-4278-b054-f19a57541426": {"__data__": {"id_": "a8df443e-be20-4278-b054-f19a57541426", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c049708-e3a8-4b33-8b95-f5d08c11d539", "node_type": "1", "metadata": {}, "hash": "02133d250c685e34766d8f4db21453e86f0b025459a56a63d682567133605ec1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edcf4254-fea7-4bd8-9224-3ad5a6e8522e", "node_type": "1", "metadata": {}, "hash": "ec630201067478208b2e7a90bec86d8b13a9ad2da17cbc84b4449e5f0a567c45", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Semi-fungible assets have distinct forms which are not interchangeable\nwith each other, but in which instances of a single form may interchangeable with\nother instances of the same form.\nFor example, theater tickets for a single show might be partitioned into General Admission\nand Balcony sections, where a holder may sit in any seat of the respective section.\n\n### Amount\n\nAssets are described by **[Amount](./amounts)** records consisting of a `brand` and a `value`.", "mimetype": "text/plain", "start_char_idx": 1457, "end_char_idx": 1926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edcf4254-fea7-4bd8-9224-3ad5a6e8522e": {"__data__": {"id_": "edcf4254-fea7-4bd8-9224-3ad5a6e8522e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8df443e-be20-4278-b054-f19a57541426", "node_type": "1", "metadata": {}, "hash": "3c7e9d839679dacab3d01951c9a4caf6500cc14822e49f6d5e062ecf6efd66cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0", "node_type": "1", "metadata": {}, "hash": "6c65bb6fa8945af18bb1e1e952dd67b7cf0d8e46919ec1e74ae9b377b9116be9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **[Brand](./amounts#brands)**: An asset's type.\n  You can think of this as the answer to the question \"What is it?\" about an asset.\n- **[AmountValue](./amounts#amountvalues)**: An asset's size.\n  You can think of this as the answer to the questions \"how many?\" or \"how much?\" about an asset.\n\n**Important**: Amounts are _descriptions_ of digital assets, not the actual assets. They have no\neconomic scarcity or intrinsic value.", "mimetype": "text/plain", "start_char_idx": 1928, "end_char_idx": 2357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0": {"__data__": {"id_": "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edcf4254-fea7-4bd8-9224-3ad5a6e8522e", "node_type": "1", "metadata": {}, "hash": "ec630201067478208b2e7a90bec86d8b13a9ad2da17cbc84b4449e5f0a567c45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a", "node_type": "1", "metadata": {}, "hash": "c3495c6a47fbba2e1cd1b0c5d075c6221da9ffbfc261474f26e0345ef9706557", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "So, using the fictional currency Quatloos, you could have an asset described as being \"400 Quatloos\",\nwhere `400n` is the `value` and `Quatloos` is the `brand`. For now, we'll just look at fungible assets\nwhose values have to be non-negative integers represented as BigInts (thus the appended \"n\" on that `value`).\n\n![ERTP object relationships](./assets/ertp-interfaces-3.svg)\n\n### AmountMath", "mimetype": "text/plain", "start_char_idx": 2359, "end_char_idx": 2751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a": {"__data__": {"id_": "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0", "node_type": "1", "metadata": {}, "hash": "6c65bb6fa8945af18bb1e1e952dd67b7cf0d8e46919ec1e74ae9b377b9116be9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc7d04ee-9618-4331-ab38-a8c9f5813776", "node_type": "1", "metadata": {}, "hash": "a433734ff6b1578beb904910a234df5c946bb1e861a5a10ac514486c77bfc47e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### AmountMath\n\nERTP uses the **[AmountMath](./amount-math)** library for operations such as adding, subtracting,\nand comparing amount values (such as when depositing to or withdrawing assets from a purse).\n\n### Brand", "mimetype": "text/plain", "start_char_idx": 2737, "end_char_idx": 2954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc7d04ee-9618-4331-ab38-a8c9f5813776": {"__data__": {"id_": "dc7d04ee-9618-4331-ab38-a8c9f5813776", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a", "node_type": "1", "metadata": {}, "hash": "c3495c6a47fbba2e1cd1b0c5d075c6221da9ffbfc261474f26e0345ef9706557", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1", "node_type": "1", "metadata": {}, "hash": "42c644eab6f8a69010a6eb9f86fe301dabf4c0c884b5f2e42371bcb02927903b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Brand\n\nMost ERTP objects have a permanent constraint to working with or on one specific\n**[Brand](./amounts#brands)** established at their creation. If one is\ninitially associated with Quatloos, it always associated with Quatloos and Quatloos only.\nIn particular, a `brand` and its `mint` and its `issuer` are all in unchangeable respective\none-to-one relationships with each other.", "mimetype": "text/plain", "start_char_idx": 2945, "end_char_idx": 3331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1": {"__data__": {"id_": "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc7d04ee-9618-4331-ab38-a8c9f5813776", "node_type": "1", "metadata": {}, "hash": "a433734ff6b1578beb904910a234df5c946bb1e861a5a10ac514486c77bfc47e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "525551fd-93db-4300-b2c4-ab04c736a6a7", "node_type": "1", "metadata": {}, "hash": "e079ca0a4f5d6f57ddda098eecb3bf01a74a7988f1bb85c412e45bd65e3b0ccd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **[Mint](./issuers-and-mints#mints)**:\n  The unique creator of digital assets of a particular `brand`.\n- **[Issuer](./issuers-and-mints#issuers)**:\n  The source of truth of how many digital assets each `purse` and `payment` holds. An `issuer`\n  is used to validate `payments` received from untrusted parties for the `brand` with which\n  it is associated.\n\n<!-- ![ERTP object relationships](./assets/relationships1.svg)  -->", "mimetype": "text/plain", "start_char_idx": 3333, "end_char_idx": 3758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "525551fd-93db-4300-b2c4-ab04c736a6a7": {"__data__": {"id_": "525551fd-93db-4300-b2c4-ab04c736a6a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1", "node_type": "1", "metadata": {}, "hash": "42c644eab6f8a69010a6eb9f86fe301dabf4c0c884b5f2e42371bcb02927903b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4682af4-446c-4e52-9bc4-0aa9c640bdab", "node_type": "1", "metadata": {}, "hash": "7ba12c9cd1473b19ae3e1951202a122b2b75ea4f2a799d40f62bf61d248578ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let's look at an example. Suppose there is the \"Quatloos\" `brand`. That means there is also:\n\n- A \"Quatloos `mint`\" that is the only ERTP `mint` that can ever create new Quatloos assets.\n- A \"Quatloos `issuer`\" that is the only `issuer` that can create a new `purse` to contain Quatloos and\n  operate on a `payment` containing Quatloos.\n\n<!-- ![ERTP object relationships 2](./assets/relationships2.svg)  -->\n\n![ERTP object relationships 2](./assets/ertp-interfaces-1.svg){ width=200 height=200 }", "mimetype": "text/plain", "start_char_idx": 3760, "end_char_idx": 4255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4682af4-446c-4e52-9bc4-0aa9c640bdab": {"__data__": {"id_": "f4682af4-446c-4e52-9bc4-0aa9c640bdab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "525551fd-93db-4300-b2c4-ab04c736a6a7", "node_type": "1", "metadata": {}, "hash": "e079ca0a4f5d6f57ddda098eecb3bf01a74a7988f1bb85c412e45bd65e3b0ccd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53fac140-e073-4153-845e-5b1d5f5a63f5", "node_type": "1", "metadata": {}, "hash": "889a7cf989b7ffc773855838b0fbcf7c68f21e2bb45cbaae10a5a9601526604e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Purses and Payments\n\nWe've already mentioned our final two concepts:\n\n- **[Purse](./purses-and-payments#purses)**: An\n  object for holding digital assets of a specific `brand`.\n- **[Payment](./purses-and-payments#payments)**:\n  An object for transferring digital assets of a specific `brand` to another party.", "mimetype": "text/plain", "start_char_idx": 4257, "end_char_idx": 4570, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53fac140-e073-4153-845e-5b1d5f5a63f5": {"__data__": {"id_": "53fac140-e073-4153-845e-5b1d5f5a63f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4682af4-446c-4e52-9bc4-0aa9c640bdab", "node_type": "1", "metadata": {}, "hash": "7ba12c9cd1473b19ae3e1951202a122b2b75ea4f2a799d40f62bf61d248578ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490", "node_type": "1", "metadata": {}, "hash": "17b5559c5b2af97af86a870239eef0b3a7619094d9e88b4a38af001aea738671", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Similar to other component instances, a `purse` and a `payment` only work with one\n`brand`. So a `purse` or `payment` that holds Quatloos cannot hold an asset of `brand` Moola or vice versa.\nYou cannot change the `brand` a `purse` or `payment` was originally associated with. Once you create a\nQuatloos purse or Quatloos payment, it can never hold anything other than Quatloos.", "mimetype": "text/plain", "start_char_idx": 4572, "end_char_idx": 4949, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490": {"__data__": {"id_": "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53fac140-e073-4153-845e-5b1d5f5a63f5", "node_type": "1", "metadata": {}, "hash": "889a7cf989b7ffc773855838b0fbcf7c68f21e2bb45cbaae10a5a9601526604e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d", "node_type": "1", "metadata": {}, "hash": "0d72fcfdd4f881a9be345fd1a64ddc9bf21ce77dbe148093bf8b4d22c2d147fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "However, these are not one-to-one relationships. There can be thousands or more\n`purses` or `payments` that hold Quatloos or any other `brand`.\n\n![ERTP object relationships](./assets/ertp-interfaces-2.svg)\n\n## Method Naming Structure\n\nERTP methods use a template for their names. Knowing what a particular method name prefix represents\ncan help you when reading code. For consistency, you may want to also use this template for your Agoric\ncode.", "mimetype": "text/plain", "start_char_idx": 4951, "end_char_idx": 5396, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d": {"__data__": {"id_": "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490", "node_type": "1", "metadata": {}, "hash": "17b5559c5b2af97af86a870239eef0b3a7619094d9e88b4a38af001aea738671", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75abb573-ffb2-4c91-b47a-ddf781dc8222", "node_type": "1", "metadata": {}, "hash": "12bbd4e6cbd8c104687918d12580925a327a48a6566d7c84ae4af6539fa7aadd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `make<Foo>()`: Creates a new Foo object and returns only that object.\n- `make<Foo>Kit()`: Creates a new Foo object as well as other things. It returns some combination of useful things, usually including the new Foo object. But not always; sometimes Foo is conceptual, and, for example, instead of a single object, two facets are returned.\n- `create<Foo>()`: Creates a new Foo, but doesn't return it.\n- `get<Foo>()`: Returns a Foo that already exists.", "mimetype": "text/plain", "start_char_idx": 5398, "end_char_idx": 5851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75abb573-ffb2-4c91-b47a-ddf781dc8222": {"__data__": {"id_": "75abb573-ffb2-4c91-b47a-ddf781dc8222", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d", "node_type": "1", "metadata": {}, "hash": "0d72fcfdd4f881a9be345fd1a64ddc9bf21ce77dbe148093bf8b4d22c2d147fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9db5f350-a66e-41c8-812e-747dc1b46fa0", "node_type": "1", "metadata": {}, "hash": "13336c0d89f3b44e867de263d0776ed3d76216c6e7183476842f432bedce32e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `provide<Foo>()`: If Foo already exists, returns it. If not, it creates a new Foo and returns that.", "mimetype": "text/plain", "start_char_idx": 5852, "end_char_idx": 5953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9db5f350-a66e-41c8-812e-747dc1b46fa0": {"__data__": {"id_": "9db5f350-a66e-41c8-812e-747dc1b46fa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75abb573-ffb2-4c91-b47a-ddf781dc8222", "node_type": "1", "metadata": {}, "hash": "12bbd4e6cbd8c104687918d12580925a327a48a6566d7c84ae4af6539fa7aadd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f16b178c-2e12-461b-a183-b848712624fe", "node_type": "1", "metadata": {}, "hash": "762633daffb3725a2746e2e5bd3a36335b5c23d395aa6c0205136323f57daa45", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Life of Assets\n\nLet's look at some asset operation lifecycles. While it's very rare for an asset to be destroyed, as opposed to being\nredistributed, these lifecycles show assets from their creation through common usage patterns. These are\ndeliberately stripped down to their basic, core, functionality. Optional parameters and non-core operations\nare not shown, nor are some significant concepts which would make this introduction more confusing. Those\nare covered on the component-specific pages.", "mimetype": "text/plain", "start_char_idx": 5955, "end_char_idx": 6455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f16b178c-2e12-461b-a183-b848712624fe": {"__data__": {"id_": "f16b178c-2e12-461b-a183-b848712624fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9db5f350-a66e-41c8-812e-747dc1b46fa0", "node_type": "1", "metadata": {}, "hash": "13336c0d89f3b44e867de263d0776ed3d76216c6e7183476842f432bedce32e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "877196b2-4c48-4215-b8c5-99076cb17840", "node_type": "1", "metadata": {}, "hash": "99ab86c2e0b05ed813f138ffede76a0818c4ee2286fc0cd16739915931c43228", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Asset Creation and Storage\n\n![Asset creation](./assets/asset-creation.svg)\n\n<<< @/../snippets/ertp/guide/test-readme.js#makeIssuerKit", "mimetype": "text/plain", "start_char_idx": 6457, "end_char_idx": 6594, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "877196b2-4c48-4215-b8c5-99076cb17840": {"__data__": {"id_": "877196b2-4c48-4215-b8c5-99076cb17840", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f16b178c-2e12-461b-a183-b848712624fe", "node_type": "1", "metadata": {}, "hash": "762633daffb3725a2746e2e5bd3a36335b5c23d395aa6c0205136323f57daa45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0349de8-81a5-48d4-b299-2c23609db07e", "node_type": "1", "metadata": {}, "hash": "7bda15e117809a6b87f2b40a762c57cce24305faa1917c893488615e82830edd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "First, you pass a string naming a new `brand` to\n`makeIssuerKit()`. As noted above, a `make<Foo>Kit()` method creates both a new Foo, in this case an `issuer`, and some other things.\nHere it also creates a new `mint` and formal `brand`\nfor the argument, and returns all three new objects. The `mint`, `issuer`, and `brand`\nare all in unchangeable one-to-one relationships with each other.\n\nIn this case, you used the string 'quatloos' to name the `brand`.\n\n<<< @/../snippets/ertp/guide/test-readme.js#seven", "mimetype": "text/plain", "start_char_idx": 6596, "end_char_idx": 7102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0349de8-81a5-48d4-b299-2c23609db07e": {"__data__": {"id_": "c0349de8-81a5-48d4-b299-2c23609db07e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "877196b2-4c48-4215-b8c5-99076cb17840", "node_type": "1", "metadata": {}, "hash": "99ab86c2e0b05ed813f138ffede76a0818c4ee2286fc0cd16739915931c43228", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d55be897-3987-44c6-beff-013354421eee", "node_type": "1", "metadata": {}, "hash": "bede5633a706823bcdc7cd35cabc4bbebbd783099965c2596a12125d225d89e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Here you use `AmountMath` to make a new `amount` description of the asset you want to create.\nYou need to specify what you want for the `value` of the new `amount`, in this case `7n`, as\nwell as what `brand` it will be.\n\nThis returns an `amount` description stored in `quatloosSeven`. Remember, an `amount` is only a description\nof an asset, not an asset itself. `quatloosSeven` has no intrinsic value.\n\n<<< @/../snippets/ertp/guide/test-readme.js#mintPayment", "mimetype": "text/plain", "start_char_idx": 7104, "end_char_idx": 7563, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d55be897-3987-44c6-beff-013354421eee": {"__data__": {"id_": "d55be897-3987-44c6-beff-013354421eee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0349de8-81a5-48d4-b299-2c23609db07e", "node_type": "1", "metadata": {}, "hash": "7bda15e117809a6b87f2b40a762c57cce24305faa1917c893488615e82830edd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea07c262-d66d-4847-b91f-545ee5f54e0a", "node_type": "1", "metadata": {}, "hash": "153e394e7dc609db84cf55afb5a48fa18c19e7304fb8a9d91b26ac6686c74deb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This mints a new asset of 7 Quatloos. In this case, since it's a `mint` operation, you are creating\na new digital asset of 7 Quatloos. It's returned as a `payment`, so you want a place to store it for\nthe longer term.\n\n<<< @/../snippets/ertp/guide/test-readme.js#deposit", "mimetype": "text/plain", "start_char_idx": 7565, "end_char_idx": 7835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea07c262-d66d-4847-b91f-545ee5f54e0a": {"__data__": {"id_": "ea07c262-d66d-4847-b91f-545ee5f54e0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d55be897-3987-44c6-beff-013354421eee", "node_type": "1", "metadata": {}, "hash": "bede5633a706823bcdc7cd35cabc4bbebbd783099965c2596a12125d225d89e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91236bc1-20ef-44ed-a79b-44ea658d1dd1", "node_type": "1", "metadata": {}, "hash": "f92a5640c08750440c287e54565dd917ff506f0dc54d6d694f022254c72b95e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For long term storage, we prefer using a `purse`. `payments` are generally used to transfer assets rather than\nhold them for extended periods. First you create a new empty `purse` for Quatloos using\nthe Quatloos associated `issuer`. Then you deposit the `payment` into the `purse`. When this happens,\nthe `payment` is automatically consumed and the 7 Quatloos are now resident\nin the `purse`. If you'd used an existing `purse` that contained, say, 17 Quatloos, these 7 would have been", "mimetype": "text/plain", "start_char_idx": 7837, "end_char_idx": 8321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91236bc1-20ef-44ed-a79b-44ea658d1dd1": {"__data__": {"id_": "91236bc1-20ef-44ed-a79b-44ea658d1dd1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea07c262-d66d-4847-b91f-545ee5f54e0a", "node_type": "1", "metadata": {}, "hash": "153e394e7dc609db84cf55afb5a48fa18c19e7304fb8a9d91b26ac6686c74deb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99011ab1-d3cf-4052-9bc4-63d742163593", "node_type": "1", "metadata": {}, "hash": "38a683bdde2af22e316000144bcb285aa8b95d776f527a24bb112db25445b4c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "added to them so the `purse` balance would be 24 Quatloos.", "mimetype": "text/plain", "start_char_idx": 8322, "end_char_idx": 8380, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99011ab1-d3cf-4052-9bc4-63d742163593": {"__data__": {"id_": "99011ab1-d3cf-4052-9bc4-63d742163593", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91236bc1-20ef-44ed-a79b-44ea658d1dd1", "node_type": "1", "metadata": {}, "hash": "f92a5640c08750440c287e54565dd917ff506f0dc54d6d694f022254c72b95e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff7f3e8-3e75-41a4-b097-1160a83fd480", "node_type": "1", "metadata": {}, "hash": "602dabe3dfaf822bd4d1dfde5a4bdf21037df4c004332e3ed3a2e664795c0c68", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Transferring an Asset\n\n![Asset transfer](./assets/asset-transfer.svg)\nStart with your `quatloosPurse` that holds 7 Quatloos. You decide you want to send 5 Quatloos to\nanother party named Alice.\n\n<<< @/../snippets/ertp/guide/test-readme.js#five\n\nFirst you create a new Quatloos branded `amount` with a `value` of 5 to describe what you want to withdraw.\nRemember, an `amount` is just a description of assets, not the actual assets.\n\n<<< @/../snippets/ertp/guide/test-readme.js#withdraw", "mimetype": "text/plain", "start_char_idx": 8382, "end_char_idx": 8870, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ff7f3e8-3e75-41a4-b097-1160a83fd480": {"__data__": {"id_": "0ff7f3e8-3e75-41a4-b097-1160a83fd480", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99011ab1-d3cf-4052-9bc4-63d742163593", "node_type": "1", "metadata": {}, "hash": "38a683bdde2af22e316000144bcb285aa8b95d776f527a24bb112db25445b4c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "658df245-b1fa-44e0-89b3-82186a2c4644", "node_type": "1", "metadata": {}, "hash": "09fe7a448995c7ac6d6db7e6f35890519e57dd8e8bf142d4e50b9ea5e3afb6cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now you tell your Quatloos containing `purse` that you want to withdraw the specified `amount` from\nit. The withdrawn 5 Quatloos goes into a `payment`\n\nYou've got your `payment` for 5 Quatloos, but how do you get it to Alice? She needs to\ndo some work first so there's somewhere for her to put it and a way of getting it to\nher rather than someone else.\n\n<div class=\"language-js secondary\">\n\n<<< @/../snippets/ertp/guide/test-readme.js#depositFacet\n\n</div>", "mimetype": "text/plain", "start_char_idx": 8872, "end_char_idx": 9328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "658df245-b1fa-44e0-89b3-82186a2c4644": {"__data__": {"id_": "658df245-b1fa-44e0-89b3-82186a2c4644", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ff7f3e8-3e75-41a4-b097-1160a83fd480", "node_type": "1", "metadata": {}, "hash": "602dabe3dfaf822bd4d1dfde5a4bdf21037df4c004332e3ed3a2e664795c0c68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dd60e80-730b-42f1-91be-e97a836c969e", "node_type": "1", "metadata": {}, "hash": "94e1ccc6c785dbfe1434276b86fe62a457d1cd58d6d4ea2334641dfea5b20e3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</div>\n\nAssume Alice already has a Quatloos `purse` of her own. To let other\nparties safely deposit Quatloos into it, she creates\na [deposit facet](/glossary/#deposit-facet) for that `purse`.\nAnyone who has access to a deposit facet can deposit\nassets to its `purse` but cannot either make a withdrawal from the `purse` or get its balance. It's like\nbeing able to send money to a friend via their email address; you can't then take money out\nof your friend's accounts or find out how much is in them.", "mimetype": "text/plain", "start_char_idx": 9322, "end_char_idx": 9822, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6dd60e80-730b-42f1-91be-e97a836c969e": {"__data__": {"id_": "6dd60e80-730b-42f1-91be-e97a836c969e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "658df245-b1fa-44e0-89b3-82186a2c4644", "node_type": "1", "metadata": {}, "hash": "09fe7a448995c7ac6d6db7e6f35890519e57dd8e8bf142d4e50b9ea5e3afb6cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e6ac798-6fe2-4668-8e55-383c380bb34c", "node_type": "1", "metadata": {}, "hash": "f05de7f3257c79c98ba22e68b3247af305d5a7a57a3dbd8acf3e5e6dfed540eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div class=\"language-js secondary\">\n\n<<< @/../snippets/ertp/guide/test-readme.js#getId\n\n</div>\n\nAlice puts her deposit facet on Agoric's [Board](/glossary/#board-agoric-board),\na key-value \"bulletin board\" that lets her make it generally available for use.", "mimetype": "text/plain", "start_char_idx": 9824, "end_char_idx": 10080, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e6ac798-6fe2-4668-8e55-383c380bb34c": {"__data__": {"id_": "7e6ac798-6fe2-4668-8e55-383c380bb34c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dd60e80-730b-42f1-91be-e97a836c969e", "node_type": "1", "metadata": {}, "hash": "94e1ccc6c785dbfe1434276b86fe62a457d1cd58d6d4ea2334641dfea5b20e3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bd11e68-ea62-4a64-a4b6-697e1d370a68", "node_type": "1", "metadata": {}, "hash": "f8943beb045c9556a3fe388f09ba200e5c1a6b833b4df9cf2b52d8bc9dc19546", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Board is a basic bulletin board type system where users can post an Id for a value and\nothers can get the value just by knowing the Id. Alice can make her Id(s) known by any\ncommunication method she likes; private email, an email blast to a mailing list or many individuals,\nbuying an ad on a website, tv program, or newspaper, listing it on her website, etc.\n\n<<< @/../snippets/ertp/guide/test-readme.js#getValue", "mimetype": "text/plain", "start_char_idx": 10082, "end_char_idx": 10499, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8bd11e68-ea62-4a64-a4b6-697e1d370a68": {"__data__": {"id_": "8bd11e68-ea62-4a64-a4b6-697e1d370a68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e6ac798-6fe2-4668-8e55-383c380bb34c", "node_type": "1", "metadata": {}, "hash": "f05de7f3257c79c98ba22e68b3247af305d5a7a57a3dbd8acf3e5e6dfed540eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "267a445c-6f91-4c77-87ca-b674127c8090", "node_type": "1", "metadata": {}, "hash": "9a84c5d4ce34ebdf639ef5254d484b5b3eb40a380a201dd2f3883a1699673213", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Remember, ERTP's use of OCaps requires that you have access to an object in order\nto run methods on it. So someone who wants to use Alice's deposit facet\nhas to first get it off the Board.\n\nAlice tells you the Board Id associated with her Quatloos `purse` deposit facet. You get the Id associated value,\nwhich gives you the reference to that deposit facet. You then just tell the facet to receive your `payment`\nof 5 Quatloos.", "mimetype": "text/plain", "start_char_idx": 10501, "end_char_idx": 10927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "267a445c-6f91-4c77-87ca-b674127c8090": {"__data__": {"id_": "267a445c-6f91-4c77-87ca-b674127c8090", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bd11e68-ea62-4a64-a4b6-697e1d370a68", "node_type": "1", "metadata": {}, "hash": "f8943beb045c9556a3fe388f09ba200e5c1a6b833b4df9cf2b52d8bc9dc19546", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bce849b-9e51-4e9e-8494-d58488d5f132", "node_type": "1", "metadata": {}, "hash": "d22575314535a91b86a1e568fa1835831ae33492ed5f503b640e3260968f3ba3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Things end up with your Quatloos `purse` having 2 Quatloos (7 - 5), Alice's Quatloos `purse` having 5 more Quatloos\nin it, and the 5 Quatloos `payment` consumed when the transfer happened.", "mimetype": "text/plain", "start_char_idx": 10929, "end_char_idx": 11117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4bce849b-9e51-4e9e-8494-d58488d5f132": {"__data__": {"id_": "4bce849b-9e51-4e9e-8494-d58488d5f132", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "267a445c-6f91-4c77-87ca-b674127c8090", "node_type": "1", "metadata": {}, "hash": "9a84c5d4ce34ebdf639ef5254d484b5b3eb40a380a201dd2f3883a1699673213", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810", "node_type": "1", "metadata": {}, "hash": "51eab4a0eaec252e0cbeccda8cee3e8c6745976ff38460922f3bedc58e5b0507", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `E()` notation is a local \"bridge\" that lets you invoke methods on remote objects.\nIt takes a local representative (a [presence](/glossary/#presence)) for a remote object\nas an argument and sends messages to the remote object. This is explained in more detail at the\n[`E()` section in the Distributed JavaScript page](../js-programming/eventual-send).\n\n## Creating and Using Non-Fungible Assets", "mimetype": "text/plain", "start_char_idx": 11119, "end_char_idx": 11517, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810": {"__data__": {"id_": "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bce849b-9e51-4e9e-8494-d58488d5f132", "node_type": "1", "metadata": {}, "hash": "d22575314535a91b86a1e568fa1835831ae33492ed5f503b640e3260968f3ba3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf13f7e4-82bf-4412-b759-3889b916f81e", "node_type": "1", "metadata": {}, "hash": "d9dc6c82f0d610fffd1bb52487614b01ba80bf1db21605cac7efec47a6e6f8f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Say you own the Agoric Theatre and want to sell tickets to seats for a play. Tickets are non-fungible assets,\nas they refer to a specific seat for a specific show at a specific time and date. It matters to\nbuyers which ticket they get.\n\nThe Agoric Theatre has 1114 seats numbered `1` to `1114`.\nAn object representing a valid ticket has the properties:", "mimetype": "text/plain", "start_char_idx": 11519, "end_char_idx": 11871, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf13f7e4-82bf-4412-b759-3889b916f81e": {"__data__": {"id_": "cf13f7e4-82bf-4412-b759-3889b916f81e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810", "node_type": "1", "metadata": {}, "hash": "51eab4a0eaec252e0cbeccda8cee3e8c6745976ff38460922f3bedc58e5b0507", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34697399-3d0b-46bd-90b4-4cbd0a47d342", "node_type": "1", "metadata": {}, "hash": "a5eb55aa33fcf04da89d5ea0e87067ab27f60c6867fc334409f6a89e038fbf49", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `seat`: A number.\n- `show`: A string describing the show.\n- `start`: A string representing a [time/date in ISO format](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString).\n\n<<< @/../snippets/ertp/guide/test-readme.js#ticketValues", "mimetype": "text/plain", "start_char_idx": 11873, "end_char_idx": 12151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34697399-3d0b-46bd-90b4-4cbd0a47d342": {"__data__": {"id_": "34697399-3d0b-46bd-90b4-4cbd0a47d342", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf13f7e4-82bf-4412-b759-3889b916f81e", "node_type": "1", "metadata": {}, "hash": "d9dc6c82f0d610fffd1bb52487614b01ba80bf1db21605cac7efec47a6e6f8f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80e22212-d67d-4191-8bfb-2ff07c7508f5", "node_type": "1", "metadata": {}, "hash": "f5fd4d30d6b7dea4c8ad386deb36d0dc198ef6ff7af908aeeebe32227b0d4ecf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To create tickets, you first create JavaScript objects that each represent a ticket.\nThen, because you need to specify the amount of digital assets to be minted,\nyou can use `AmountMath` to make an amount. In this case, you're making tickets\nfor one performance of _Hamilton_.\n\n<<< @/../snippets/ertp/guide/test-readme.js#makeTicketIssuer", "mimetype": "text/plain", "start_char_idx": 12153, "end_char_idx": 12491, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80e22212-d67d-4191-8bfb-2ff07c7508f5": {"__data__": {"id_": "80e22212-d67d-4191-8bfb-2ff07c7508f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34697399-3d0b-46bd-90b4-4cbd0a47d342", "node_type": "1", "metadata": {}, "hash": "a5eb55aa33fcf04da89d5ea0e87067ab27f60c6867fc334409f6a89e038fbf49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e80cb26-25d9-4533-a73c-21030480b6c0", "node_type": "1", "metadata": {}, "hash": "2a363f4a68488574e39d18e08160053ff9586e808650d007596441b6ae529cf6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As before, you use `makeIssuerKit()` to create a `mint` that can create Agoric Theatre ticket assets.\nThe difference from when you created a fungible asset is that you have to use a second argument,\nin this case `AssetKind.SET`.\n\nThere are two `AssetKinds`. Each one polymorphically implements the same set of methods.", "mimetype": "text/plain", "start_char_idx": 12493, "end_char_idx": 12811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e80cb26-25d9-4533-a73c-21030480b6c0": {"__data__": {"id_": "1e80cb26-25d9-4533-a73c-21030480b6c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80e22212-d67d-4191-8bfb-2ff07c7508f5", "node_type": "1", "metadata": {}, "hash": "f5fd4d30d6b7dea4c8ad386deb36d0dc198ef6ff7af908aeeebe32227b0d4ecf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d", "node_type": "1", "metadata": {}, "hash": "1e76eae8a0b91beb7f989fc6e3321ead2d1788f3e6e836bd2b7f7a5740965d0d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `AssetKind.NAT`: Works with natural number `values` and fungible assets. Default value for `makeIssuerKit()`.\n- `AssetKind.SET`: Used with non-fungible assets, operates on an array of records (objects) with keys and values.\n\n<<< @/../snippets/ertp/guide/test-readme.js#ticketPayments\n\nFirst you define an `amount` description for each ticket you want to issue.", "mimetype": "text/plain", "start_char_idx": 12813, "end_char_idx": 13175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d": {"__data__": {"id_": "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e80cb26-25d9-4533-a73c-21030480b6c0", "node_type": "1", "metadata": {}, "hash": "2a363f4a68488574e39d18e08160053ff9586e808650d007596441b6ae529cf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a41ece3-192b-4060-a536-7ecb522ef4b4", "node_type": "1", "metadata": {}, "hash": "95b5ccbcc49eaa6f67b7b26690651bd81e7f24089e66f1f88aec121353feb094", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Then you use your `mint` for the appropriate `brand` to create an asset for each ticket. Each ticket asset\nis a separate `payment`. You can transfer and deposit a non-fungible asset `payment` just like a fungible one.\n\n## Amounts Are Not Assets", "mimetype": "text/plain", "start_char_idx": 13177, "end_char_idx": 13421, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a41ece3-192b-4060-a536-7ecb522ef4b4": {"__data__": {"id_": "4a41ece3-192b-4060-a536-7ecb522ef4b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d", "node_type": "1", "metadata": {}, "hash": "1e76eae8a0b91beb7f989fc6e3321ead2d1788f3e6e836bd2b7f7a5740965d0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0182a6e2-682b-404c-a08d-0c032d2be7a5", "node_type": "1", "metadata": {}, "hash": "936c49bb9eb6e24369d18ca229d29e90596bded970e388a3fa231101e78a70f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Amounts Are Not Assets\n\n**IMPORTANT**: Despite how it may seem, an `amount` is not an asset in and of itself.\nIt merely _describes_ assets along the two axes of what they are and how much there are (`brand` and `value`).\nAmounts are used to negotiate without sending/sharing actual assets until a deal is made.", "mimetype": "text/plain", "start_char_idx": 13396, "end_char_idx": 13709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0182a6e2-682b-404c-a08d-0c032d2be7a5": {"__data__": {"id_": "0182a6e2-682b-404c-a08d-0c032d2be7a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a41ece3-192b-4060-a536-7ecb522ef4b4", "node_type": "1", "metadata": {}, "hash": "95b5ccbcc49eaa6f67b7b26690651bd81e7f24089e66f1f88aec121353feb094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0143294d-9e03-4fad-9c9a-f98729368f24", "node_type": "1", "metadata": {}, "hash": "d04cdd3fc367e5a0ddebb17fc01f4658868ebccd5be326b1ffe7ceaa4f0141de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For example, if I want to make you an offer to buy an asset, let's say a magic sword in a game, I'll send you\nan `amount` describing the asset of 5 Quatloos I'm willing to trade for your sword. I don't send you the actual\n5 Quatloos; that only happens when we agree on the trade terms and I send you a `payment` of 5 Quatloos, the\nactual asset.\nIf you reject my offer, I can change it so the `amount` I specify is for 10 Quatloos. I haven't added actual", "mimetype": "text/plain", "start_char_idx": 13711, "end_char_idx": 14164, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0143294d-9e03-4fad-9c9a-f98729368f24": {"__data__": {"id_": "0143294d-9e03-4fad-9c9a-f98729368f24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0182a6e2-682b-404c-a08d-0c032d2be7a5", "node_type": "1", "metadata": {}, "hash": "936c49bb9eb6e24369d18ca229d29e90596bded970e388a3fa231101e78a70f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec38d657-617d-443e-9a7d-b47a695c2568", "node_type": "1", "metadata": {}, "hash": "8dad16edb7288e98a694f5a0a0afe848efc16a434a7a3056f60d071bbdca6d01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "assets of 5 Quatloos to what I send you, only the description of assets in the offer I'm making for the sword.", "mimetype": "text/plain", "start_char_idx": 14165, "end_char_idx": 14275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec38d657-617d-443e-9a7d-b47a695c2568": {"__data__": {"id_": "ec38d657-617d-443e-9a7d-b47a695c2568", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0143294d-9e03-4fad-9c9a-f98729368f24", "node_type": "1", "metadata": {}, "hash": "d04cdd3fc367e5a0ddebb17fc01f4658868ebccd5be326b1ffe7ceaa4f0141de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e5d0d06-6e33-47ae-9813-6c27776ce69f", "node_type": "1", "metadata": {}, "hash": "4fe12ad0cfbf705ab78c0a1d0c3bf5ca32d50b6eb2ee5d3be0a6f7eb3d04833a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Making a new `amount` does not create any new assets. Nor does adding two `amounts`, since an `amount` is immutable, the\naddition just creates a new `amount` while the original two still exist.\nERTP assets can only be created by their `mint` returning a new `payment` containing them.\nSince an `amount` is just a description of an asset, it's like a drawing of a ten dollar bill, while\nan `asset` is analogous to an actual ten dollar bill printed by an authorized facility with value", "mimetype": "text/plain", "start_char_idx": 14277, "end_char_idx": 14760, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e5d0d06-6e33-47ae-9813-6c27776ce69f": {"__data__": {"id_": "5e5d0d06-6e33-47ae-9813-6c27776ce69f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec38d657-617d-443e-9a7d-b47a695c2568", "node_type": "1", "metadata": {}, "hash": "8dad16edb7288e98a694f5a0a0afe848efc16a434a7a3056f60d071bbdca6d01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b88ad76-505c-4125-82ab-572a461a9a64", "node_type": "1", "metadata": {}, "hash": "5ccb720f2c0c465ba60cfbdb507e32eefc2d1716cb740b61f1cdeba13cca14c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "derived from its government backing.", "mimetype": "text/plain", "start_char_idx": 14761, "end_char_idx": 14797, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b88ad76-505c-4125-82ab-572a461a9a64": {"__data__": {"id_": "5b88ad76-505c-4125-82ab-572a461a9a64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e5d0d06-6e33-47ae-9813-6c27776ce69f", "node_type": "1", "metadata": {}, "hash": "4fe12ad0cfbf705ab78c0a1d0c3bf5ca32d50b6eb2ee5d3be0a6f7eb3d04833a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baad0c41-adb7-4b23-bc42-259a3719fa0d", "node_type": "1", "metadata": {}, "hash": "9b1f6b1395d9b87aec7f84583e9017864944c126a5909ae16d76e1f4cfdfceca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In other words, I don't make you an offer that I'll sell you a ticket to _Hamilton_ for $300 by sending you an actual ticket any more than you'd send me $300 before finding out what I'm willing to give you for it. Instead,\nI make you an offer by sending a description\nof what I'm willing to swap (\"I will exchange a _Hamilton_ ticket for $300\").\nIf the offer is accepted, **then** I send you the actual asset (enjoy the show!) and you send me the actual $300 (I'll enjoy spending it!).", "mimetype": "text/plain", "start_char_idx": 14799, "end_char_idx": 15284, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "baad0c41-adb7-4b23-bc42-259a3719fa0d": {"__data__": {"id_": "baad0c41-adb7-4b23-bc42-259a3719fa0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b88ad76-505c-4125-82ab-572a461a9a64", "node_type": "1", "metadata": {}, "hash": "5ccb720f2c0c465ba60cfbdb507e32eefc2d1716cb740b61f1cdeba13cca14c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a36beaf8-9e16-4495-86e0-4a053255ed91", "node_type": "1", "metadata": {}, "hash": "c5bab5565edaecb1181a0c9fb2f7a2f5720a79dcefd5e5d02a581ab0c2501a06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the Agoric stack, assets of the exchange are escrowed with [Zoe](/guides/zoe/).", "mimetype": "text/plain", "start_char_idx": 15285, "end_char_idx": 15367, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a36beaf8-9e16-4495-86e0-4a053255ed91": {"__data__": {"id_": "a36beaf8-9e16-4495-86e0-4a053255ed91", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baad0c41-adb7-4b23-bc42-259a3719fa0d", "node_type": "1", "metadata": {}, "hash": "9b1f6b1395d9b87aec7f84583e9017864944c126a5909ae16d76e1f4cfdfceca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cace9dfc-8903-4707-9337-a0ed07b4d835", "node_type": "1", "metadata": {}, "hash": "aa8ef50b605225886535a2ef75f62e695059474f7f8ee748fd1390f3266ce852", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Object Capabilities and ERTP", "mimetype": "text/plain", "start_char_idx": 15369, "end_char_idx": 15400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cace9dfc-8903-4707-9337-a0ed07b4d835": {"__data__": {"id_": "cace9dfc-8903-4707-9337-a0ed07b4d835", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a36beaf8-9e16-4495-86e0-4a053255ed91", "node_type": "1", "metadata": {}, "hash": "c5bab5565edaecb1181a0c9fb2f7a2f5720a79dcefd5e5d02a581ab0c2501a06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9af6eaa-d046-4124-bd29-3e2644bfd3d0", "node_type": "1", "metadata": {}, "hash": "da989083f664d4aa5d82187a6b830529b160692f19714cbf0e5f6b70af983fae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ERTP uses [object capabilities](/glossary/#object-capabilities).\nYou can only use an object and issue commands to it if you have access to that object, not\njust its human-readable name or similar. For example, I might know (or make a good guess),\nthat the mint that makes Quatloos has the human-understandable alleged name of 'quatloos-mint'.\nBut unless I have the actual `mint` object associated with the `quatloos` `brand` object, I", "mimetype": "text/plain", "start_char_idx": 15402, "end_char_idx": 15836, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9af6eaa-d046-4124-bd29-3e2644bfd3d0": {"__data__": {"id_": "d9af6eaa-d046-4124-bd29-3e2644bfd3d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cace9dfc-8903-4707-9337-a0ed07b4d835", "node_type": "1", "metadata": {}, "hash": "aa8ef50b605225886535a2ef75f62e695059474f7f8ee748fd1390f3266ce852", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5cba610-58f3-4456-893f-0035752a50ff", "node_type": "1", "metadata": {}, "hash": "2101d6c8db896b90302ad95491436f92b455f1db3a3359198076faf85fae828b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "can't use it to create a million Quatloos and bet them all on Captain Kirk to win his gladiatorial\nmatch on [Triskelion](https://en.wikipedia.org/wiki/The_Gamesters_of_Triskelion).", "mimetype": "text/plain", "start_char_idx": 15837, "end_char_idx": 16017, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5cba610-58f3-4456-893f-0035752a50ff": {"__data__": {"id_": "e5cba610-58f3-4456-893f-0035752a50ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9af6eaa-d046-4124-bd29-3e2644bfd3d0", "node_type": "1", "metadata": {}, "hash": "da989083f664d4aa5d82187a6b830529b160692f19714cbf0e5f6b70af983fae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4db1c527-a072-4642-9cdf-bb196b6d4937", "node_type": "1", "metadata": {}, "hash": "a7e076a0e880b04220c1d913fc723b3068e832480cdc472e567453f409e71ed6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Security Properties\n\nERTP `purses` have a `deposit` method which takes a `payment`\nas its argument. It first checks that the `payment` is\ngenuine and the same asset `brand` as the `purse`\n\nIf everything passes the checks, the asset moves from\nthe `payment` to the `purse`. If there's a problem, it throws an error.\n\nAfter a successful deposit, ERTP guarantees:", "mimetype": "text/plain", "start_char_idx": 16019, "end_char_idx": 16382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4db1c527-a072-4642-9cdf-bb196b6d4937": {"__data__": {"id_": "4db1c527-a072-4642-9cdf-bb196b6d4937", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5cba610-58f3-4456-893f-0035752a50ff", "node_type": "1", "metadata": {}, "hash": "2101d6c8db896b90302ad95491436f92b455f1db3a3359198076faf85fae828b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21979f0a-7c9c-44f6-a421-a535e05ba0ef", "node_type": "1", "metadata": {}, "hash": "6a0ff19d4266f72f8f2d4463a2c85786668aff8b6a9c174d95f6973b83c4d3c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The `payment` is deleted from its `issuer`'s records and no longer has any assets associated with it.\n- Its `issuer` no longer recognizes that `payment`.\n- The `purse` contains all digital assets that were in the `payment`.\n\nWhen the `deposit` call throws an error (i.e. something went wrong), ERTP guarantees\nthat neither the `purse` nor the alleged `payment` are affected by it.", "mimetype": "text/plain", "start_char_idx": 16384, "end_char_idx": 16766, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21979f0a-7c9c-44f6-a421-a535e05ba0ef": {"__data__": {"id_": "21979f0a-7c9c-44f6-a421-a535e05ba0ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4db1c527-a072-4642-9cdf-bb196b6d4937", "node_type": "1", "metadata": {}, "hash": "a7e076a0e880b04220c1d913fc723b3068e832480cdc472e567453f409e71ed6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0dae4689-cd10-46b1-8bbb-b55f4dfb4d48", "node_type": "1", "metadata": {}, "hash": "43dd53b1ee3e7a6257f32744bd3bbc1fb20c007fe66e8fc9251b279c9dc2c1ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In addition, you can create a [deposit facet](/glossary/#deposit-facet) for any `purse`. This is an object associated\nwith a specific `purse` that can be sent to another party instead of a reference to the `purse`.\nThe security advantage is that the other party can only use the deposit facet to make deposits to the associated `purse`. They cannot use it to make a withdrawal from or ask about the balance of a `purse`.\n\n## Promises", "mimetype": "text/plain", "start_char_idx": 16768, "end_char_idx": 17201, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0dae4689-cd10-46b1-8bbb-b55f4dfb4d48": {"__data__": {"id_": "0dae4689-cd10-46b1-8bbb-b55f4dfb4d48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_index.md", "node_type": "4", "metadata": {}, "hash": "c486cfb1f3c34bfef21e398e9426ac3f8034e6aaf3ffcd812e7edf0f198057f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21979f0a-7c9c-44f6-a421-a535e05ba0ef", "node_type": "1", "metadata": {}, "hash": "6a0ff19d4266f72f8f2d4463a2c85786668aff8b6a9c174d95f6973b83c4d3c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Promises\n\nSeveral ERTP methods are _asynchronous_ and instead of immediately returning their expected value, return a _promise_ for that value.\n\nJavaScript implements `Promise` objects, and recently added the two keywords `async` and `await` to simplify working with them. For general, and extensive, information about JavaScript's implementation, see [javascript.info](https://javascript.info/async) or [MDN](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous).", "mimetype": "text/plain", "start_char_idx": 17190, "end_char_idx": 17675, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d833bb26-fe1b-4d77-a436-63cd5d29c43a": {"__data__": {"id_": "d833bb26-fe1b-4d77-a436-63cd5d29c43a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c261d881-93a5-4a57-a1e3-f1ed39c85303", "node_type": "1", "metadata": {}, "hash": "66d68549b5be0ae5620824cde00f152e1eda43396ba4827027c64525ad976457", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Issuers and Mints\n\n## Issuers\n\n![Issuer structure](./assets/issuers-and-assets.svg)\n\n**Note**: You should not create an Issuer in a deploy script. Deploy scripts are ephemeral, so any object\ncreated there dies as soon as the script stops.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 240, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c261d881-93a5-4a57-a1e3-f1ed39c85303": {"__data__": {"id_": "c261d881-93a5-4a57-a1e3-f1ed39c85303", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d833bb26-fe1b-4d77-a436-63cd5d29c43a", "node_type": "1", "metadata": {}, "hash": "286ed42a9c451fe4d0b015c7e070ad795ae48461003237c4b0912ca5f6c79950", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a931622-8048-4cfa-af7c-82b7c293bae2", "node_type": "1", "metadata": {}, "hash": "dd49556743db965aa5d5ff2a5ebed062feb846ecb733fe975ff91914a119755d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Behind the scenes, an `issuer` maps minted digital assets to their location in a `purse`\nor `payment`. An `issuer` verifies, moves, and manipulates digital assets.\nIts special admin facet is a `mint` which it has a one-to-one\nrelationship with. Only a `mint` can issue new digital assets; an `issuer` cannot.\n\nAn `issuer` also has a one-to-one relationship with a `brand`. So, if\nour `brand` is the imaginary currency Quatloos, only\nthe `issuer` in the one-to-one relationship with the Quatloos `brand`\ncan:", "mimetype": "text/plain", "start_char_idx": 242, "end_char_idx": 749, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a931622-8048-4cfa-af7c-82b7c293bae2": {"__data__": {"id_": "4a931622-8048-4cfa-af7c-82b7c293bae2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c261d881-93a5-4a57-a1e3-f1ed39c85303", "node_type": "1", "metadata": {}, "hash": "66d68549b5be0ae5620824cde00f152e1eda43396ba4827027c64525ad976457", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48", "node_type": "1", "metadata": {}, "hash": "aa73bdc90a39be8d693692cfc2f58df1c2c959f68dc7fc959d55cbdd9f462988", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Create a new empty `purse` that can store Quatloos.\n- Manipulate a `payment` in Quatloos to be claimed, split, combined,\n  burned, or have its amount received.\n\nAn `issuer` should be obtained from a trusted source and\nthen relied upon as the authority as to whether an untrusted `payment`\nof the same `brand` is valid.\n\n![Issuer methods](./assets/issuer1.svg)\n\n`Issuer` methods:\n\n- Return information about an `issuer`.\n- Create a new `issuer`.\n- Create a new `purse`.\n- Operate on `payment` arguments.", "mimetype": "text/plain", "start_char_idx": 751, "end_char_idx": 1255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48": {"__data__": {"id_": "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a931622-8048-4cfa-af7c-82b7c293bae2", "node_type": "1", "metadata": {}, "hash": "dd49556743db965aa5d5ff2a5ebed062feb846ecb733fe975ff91914a119755d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "caabaf18-21bb-4431-b239-dca110e98d3a", "node_type": "1", "metadata": {}, "hash": "35beaf95e2953b8eee2c3bbb7d95ad491b215ac772be8dd7041a71342d97925d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following is\na brief description and example of each `Issuer` method. For\nmore detail, click the method's name to go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/).", "mimetype": "text/plain", "start_char_idx": 1257, "end_char_idx": 1441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "caabaf18-21bb-4431-b239-dca110e98d3a": {"__data__": {"id_": "caabaf18-21bb-4431-b239-dca110e98d3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48", "node_type": "1", "metadata": {}, "hash": "aa73bdc90a39be8d693692cfc2f58df1c2c959f68dc7fc959d55cbdd9f462988", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bea1b71-9fc2-4674-86f8-ed4e3578a882", "node_type": "1", "metadata": {}, "hash": "fbc1b139dd087fa62a1574ba19a7b5f6b619a7dc9d5edc8822e9c44de7a595ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Create issuer operation**\n  - [makeIssuerKit()](/reference/ertp-api/issuer#makeissuerkit-allegedname-assetkind-displayinfo-optshutdownwithfailure-elementshape)\n    - Create and return a new `issuer` and its associated `mint` and `brand`.\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#import\n      <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#makeIssuerKit\n- **Get information about the issuer operations**", "mimetype": "text/plain", "start_char_idx": 1443, "end_char_idx": 1877, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4bea1b71-9fc2-4674-86f8-ed4e3578a882": {"__data__": {"id_": "4bea1b71-9fc2-4674-86f8-ed4e3578a882", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "caabaf18-21bb-4431-b239-dca110e98d3a", "node_type": "1", "metadata": {}, "hash": "35beaf95e2953b8eee2c3bbb7d95ad491b215ac772be8dd7041a71342d97925d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85aea3dc-b83f-4526-a6a5-3f7994685445", "node_type": "1", "metadata": {}, "hash": "d074b32a7ab6972fdcfd3b449432d1ca1665160e6a1d7ceb4027108685503f12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.getAllegedName()](/reference/ertp-api/issuer#anissuer-getallegedname)\n    - Return the `allegedName` for the `issuer` (the non-trusted human-readable name of its associated `brand`).\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#getAllegedName\n  - [anIssuer.getAssetKind()](/reference/ertp-api/issuer#anissuer-getassetkind)\n    - Return the kind of the `issuer`'s asset; either `AssetKind.NAT` (\"nat\") or `AssetKind.SET` (\"set\").", "mimetype": "text/plain", "start_char_idx": 1880, "end_char_idx": 2336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85aea3dc-b83f-4526-a6a5-3f7994685445": {"__data__": {"id_": "85aea3dc-b83f-4526-a6a5-3f7994685445", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bea1b71-9fc2-4674-86f8-ed4e3578a882", "node_type": "1", "metadata": {}, "hash": "fbc1b139dd087fa62a1574ba19a7b5f6b619a7dc9d5edc8822e9c44de7a595ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6", "node_type": "1", "metadata": {}, "hash": "f5bd3f93b490885fa7553e61c15b7bd5aeb0f579e8c6097d85972236823f8ba6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#getAssetKind\n  - [anIssuer.getBrand()](/reference/ertp-api/issuer#anissuer-getbrand)\n    - Return the `brand` for the `issuer`.\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#getBrand\n- **Purse operation**\n  - [anIssuer.makeEmptyPurse()](/reference/ertp-api/issuer#anissuer-makeemptypurse)\n    - Make and return an empty `purse` for holding assets of the `brand` associated with the `issuer`.", "mimetype": "text/plain", "start_char_idx": 2341, "end_char_idx": 2804, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6": {"__data__": {"id_": "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85aea3dc-b83f-4526-a6a5-3f7994685445", "node_type": "1", "metadata": {}, "hash": "d074b32a7ab6972fdcfd3b449432d1ca1665160e6a1d7ceb4027108685503f12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "453fe2e8-559f-4868-9e7d-cfe3c4782c3a", "node_type": "1", "metadata": {}, "hash": "6357e08c4e7826f229cc4e7b5c7ed37511150470590c1f4b731d386596269e57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#makeEmptyPurse\n- **Payment operations**\n  - [anIssuer.burn(payment, optAmount)](/reference/ertp-api/issuer#anissuer-burn-payment-optamount)\n    - Destroy all of the digital assets in the `payment`.\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#burn\n  - [anIssuer.getAmountOf(payment)](/reference/ertp-api/issuer#anissuer-getamountof-payment)\n    - Describe the `payment`'s balance as an Amount.", "mimetype": "text/plain", "start_char_idx": 2809, "end_char_idx": 3275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "453fe2e8-559f-4868-9e7d-cfe3c4782c3a": {"__data__": {"id_": "453fe2e8-559f-4868-9e7d-cfe3c4782c3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6", "node_type": "1", "metadata": {}, "hash": "f5bd3f93b490885fa7553e61c15b7bd5aeb0f579e8c6097d85972236823f8ba6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9036b57a-b627-465c-99c6-79004723ff51", "node_type": "1", "metadata": {}, "hash": "c956053a62940673971e9f6a7ccd2c0c88c839836696b7ea19285677aabe268b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#getAmountOf\n  - [anIssuer.isLive(payment)](/reference/ertp-api/issuer#anissuer-islive-payment) - Return `true` if the `payment` was created by the issuer and is available for use (has not been consumed or burned). - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#isLive\n    ::: warning DEPRECATED\n  - [anIssuer.split(payment, paymentAmountA)](/reference/ertp-api/issuer#anissuer-split-payment-paymentamounta)", "mimetype": "text/plain", "start_char_idx": 3280, "end_char_idx": 3753, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9036b57a-b627-465c-99c6-79004723ff51": {"__data__": {"id_": "9036b57a-b627-465c-99c6-79004723ff51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "453fe2e8-559f-4868-9e7d-cfe3c4782c3a", "node_type": "1", "metadata": {}, "hash": "6357e08c4e7826f229cc4e7b5c7ed37511150470590c1f4b731d386596269e57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81cca2eb-641e-4b36-922f-bc43ff084331", "node_type": "1", "metadata": {}, "hash": "99848f98f0d0fa44bf61dc7e7b843d830a63808e1f13b5307e1248ed505d77f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Split a single `payment` into two new Payments.\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#split\n  - [anIssuer.splitMany(payment, paymentAmountArray)](/reference/ertp-api/issuer#anissuer-splitmany-payment-amountarray)\n    - Split a single `payment` into multiple Payments.\n    - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#splitMany", "mimetype": "text/plain", "start_char_idx": 3758, "end_char_idx": 4121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81cca2eb-641e-4b36-922f-bc43ff084331": {"__data__": {"id_": "81cca2eb-641e-4b36-922f-bc43ff084331", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9036b57a-b627-465c-99c6-79004723ff51", "node_type": "1", "metadata": {}, "hash": "c956053a62940673971e9f6a7ccd2c0c88c839836696b7ea19285677aabe268b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "455e243b-e6df-4833-8571-572713544b69", "node_type": "1", "metadata": {}, "hash": "9746733422f05816af3e2fdfef71c50657780ce71276f253dc18b304de97ace5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.claim(payment, optAmount)](/reference/ertp-api/issuer#anissuer-claim-payment-optamount) - Transfer all digital assets from `payment` to a new Payment. - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#claim\n  - [anIssuer.combine(paymentsArray)](/reference/ertp-api/issuer#anissuer-combine-paymentsarray-opttotalamount) - Combine multiple Payments into one new Payment. - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#combine\n    :::", "mimetype": "text/plain", "start_char_idx": 4122, "end_char_idx": 4582, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "455e243b-e6df-4833-8571-572713544b69": {"__data__": {"id_": "455e243b-e6df-4833-8571-572713544b69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81cca2eb-641e-4b36-922f-bc43ff084331", "node_type": "1", "metadata": {}, "hash": "99848f98f0d0fa44bf61dc7e7b843d830a63808e1f13b5307e1248ed505d77f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aab612f1-0795-4f46-91b5-bfcec3454d9a", "node_type": "1", "metadata": {}, "hash": "c04a5dc04499684a3babeeaa4fc2675ac33249c5076f51cb1a90ef91e5147a24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Related Methods:**\n\n**Note**: These methods help you find the right `issuer`, but aren't authoritative.\nA `mint`, `brand`, or `purse` is actually associated with an `issuer` only if\nthe `issuer` itself acknowledges the association.", "mimetype": "text/plain", "start_char_idx": 4584, "end_char_idx": 4817, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aab612f1-0795-4f46-91b5-bfcec3454d9a": {"__data__": {"id_": "aab612f1-0795-4f46-91b5-bfcec3454d9a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "455e243b-e6df-4833-8571-572713544b69", "node_type": "1", "metadata": {}, "hash": "9746733422f05816af3e2fdfef71c50657780ce71276f253dc18b304de97ace5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4ff3aad-dfb9-4c62-a09a-8d00a1841866", "node_type": "1", "metadata": {}, "hash": "83b4e347ea04f6920d5ffe7cdc32349c69baef709a65e3fe5a5bf2f098beca4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aMint.getIssuer()](/reference/ertp-api/mint#amint-getissuer)\n  - Return the `issuer` uniquely associated with the `mint`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#mintGetIssuer\n- [aBrand.isMyIssuer(issuer)](/reference/ertp-api/brand#abrand-ismyissuer-allegedissuer)\n  - Return `true` if `issuer` is the brand's `issuer`, `false` if not.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#isMyIssuer\n\n## Mints\n\n![Mint methods](./assets/mint.svg)", "mimetype": "text/plain", "start_char_idx": 4819, "end_char_idx": 5292, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4ff3aad-dfb9-4c62-a09a-8d00a1841866": {"__data__": {"id_": "c4ff3aad-dfb9-4c62-a09a-8d00a1841866", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aab612f1-0795-4f46-91b5-bfcec3454d9a", "node_type": "1", "metadata": {}, "hash": "c04a5dc04499684a3babeeaa4fc2675ac33249c5076f51cb1a90ef91e5147a24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60ea40f0-4ffa-4df8-8763-91f46169291c", "node_type": "1", "metadata": {}, "hash": "20d9cba8f70dc7683a5e750601de9a0d2a956fa53f61480d73219e9425e25315", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![Mint methods](./assets/mint.svg)\n\nA `mint` issues new digital assets of its associated `brand` as a new\n`payment` object. These assets may be currency-like (our imaginary\nQuatloos currency), goods-like valuables (magic swords for games), or\nelectronic rights (the right to participate in a contract). Only a\nholder of a `mint` object can create new assets from it.", "mimetype": "text/plain", "start_char_idx": 5258, "end_char_idx": 5624, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60ea40f0-4ffa-4df8-8763-91f46169291c": {"__data__": {"id_": "60ea40f0-4ffa-4df8-8763-91f46169291c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4ff3aad-dfb9-4c62-a09a-8d00a1841866", "node_type": "1", "metadata": {}, "hash": "83b4e347ea04f6920d5ffe7cdc32349c69baef709a65e3fe5a5bf2f098beca4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8356eb1-7fd4-442a-9eaf-1c4d6529d470", "node_type": "1", "metadata": {}, "hash": "a2bff4403fb2838212d4add7e0490de11ca879328a2aec0b290ccdbf3c0f0b9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In other words, let's say there\nare 1000 Quatloos in circulation. Only holders of the Quatloos associated\n`mint` can make any more Quatloos that'd boost the amount in circulation to, say, 2000.\n\nSince these relationships are one-to-one and unchangeable:", "mimetype": "text/plain", "start_char_idx": 5626, "end_char_idx": 5879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8356eb1-7fd4-442a-9eaf-1c4d6529d470": {"__data__": {"id_": "c8356eb1-7fd4-442a-9eaf-1c4d6529d470", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60ea40f0-4ffa-4df8-8763-91f46169291c", "node_type": "1", "metadata": {}, "hash": "20d9cba8f70dc7683a5e750601de9a0d2a956fa53f61480d73219e9425e25315", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26b07fe3-ef44-4d78-80da-2b07e6bf9c49", "node_type": "1", "metadata": {}, "hash": "7f12c4c1330cf800381d3e2b0c98b89ed747b7b98400cb79ab9e97b96048b4f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- A `mint` created to make an asset `brand`, say Quatloos, can only create that `brand` asset.\n  For example, only Quatloos, not Moola or anything else.\n- A `mint` that creates an asset `brand` is the only `mint` that can create that `brand`. Only\n  the one Quatloos `mint` can create new Quatloos.\n- A `mint` that creates an asset `brand` can never be changed to create a different `brand`.\n  So a Quatloos `mint` can never become a Moola `mint`, or any other non-Quatloos asset.", "mimetype": "text/plain", "start_char_idx": 5881, "end_char_idx": 6361, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26b07fe3-ef44-4d78-80da-2b07e6bf9c49": {"__data__": {"id_": "26b07fe3-ef44-4d78-80da-2b07e6bf9c49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8356eb1-7fd4-442a-9eaf-1c4d6529d470", "node_type": "1", "metadata": {}, "hash": "a2bff4403fb2838212d4add7e0490de11ca879328a2aec0b290ccdbf3c0f0b9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3210c1aa-e3e5-49ab-9fea-f2309ec8b315", "node_type": "1", "metadata": {}, "hash": "ef9b5de1ab10cf740daf0ba7d44d90308e418e6fd57537b2f002272f21ca1a30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There are two `mint` methods, and the method that creates new mints. Click the method's name to go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/index).", "mimetype": "text/plain", "start_char_idx": 6363, "end_char_idx": 6530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3210c1aa-e3e5-49ab-9fea-f2309ec8b315": {"__data__": {"id_": "3210c1aa-e3e5-49ab-9fea-f2309ec8b315", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26b07fe3-ef44-4d78-80da-2b07e6bf9c49", "node_type": "1", "metadata": {}, "hash": "7f12c4c1330cf800381d3e2b0c98b89ed747b7b98400cb79ab9e97b96048b4f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dceb56c-adc7-4795-9c61-5923e44855ff", "node_type": "1", "metadata": {}, "hash": "b6a66af97dcc4ca226f0c84f46335c18bf18d8006c9621e77d923aecfdbd428e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aMint.getIssuer()](/reference/ertp-api/mint#amint-getissuer)\n  - Return the `issuer` uniquely associated with the `mint`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#mintGetIssuer\n- [aMint.mintPayment()](/reference/ertp-api/mint#amint-mintpayment-newamount)\n  - Create new digital assets of the `mint`'s associated `brand`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#mintMintPayment", "mimetype": "text/plain", "start_char_idx": 6532, "end_char_idx": 6948, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7dceb56c-adc7-4795-9c61-5923e44855ff": {"__data__": {"id_": "7dceb56c-adc7-4795-9c61-5923e44855ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_issuers-and-mints.md", "node_type": "4", "metadata": {}, "hash": "7e6558f482b8592b4242df735e141c56067ad1a43a953670f89ef6582bfbdb30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3210c1aa-e3e5-49ab-9fea-f2309ec8b315", "node_type": "1", "metadata": {}, "hash": "ef9b5de1ab10cf740daf0ba7d44d90308e418e6fd57537b2f002272f21ca1a30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [makeIssuerKit()](/reference/ertp-api/issuer#makeissuerkit-allegedname-assetkind-displayinfo-optshutdownwithfailure-elementshape)\n  - Create and return a new `issuer` and its associated `mint` and `brand`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#makeIssuerKitMint", "mimetype": "text/plain", "start_char_idx": 6949, "end_char_idx": 7233, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05116bc0-7f3a-461d-8d8c-7814f16bf2ae": {"__data__": {"id_": "05116bc0-7f3a-461d-8d8c-7814f16bf2ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5ec5e49-0126-4ad8-ac09-3152a63b734c", "node_type": "1", "metadata": {}, "hash": "45bc28e10e758add265875cae77040f4e2d050f1f22dd008f67f30977141ec04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Purses and Payments\n\nThere are different kinds of digital assets:\n\n- Currency-like, such as our imaginary Quatloos.\n- Goods-like, such as theater tickets or magic weapons for use in a game.\n- Abstract rights, such as participation in a particular contract.\n\nIn ERTP, digital assets always exist in either a **purse** or a **payment** object.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 343, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5ec5e49-0126-4ad8-ac09-3152a63b734c": {"__data__": {"id_": "f5ec5e49-0126-4ad8-ac09-3152a63b734c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05116bc0-7f3a-461d-8d8c-7814f16bf2ae", "node_type": "1", "metadata": {}, "hash": "9ec65bea78c4acc56231c9cbddd3db65fcb28f99b2bfa0a0c5040112053c42a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf769734-80bd-4629-8e85-13619dd5d1f0", "node_type": "1", "metadata": {}, "hash": "78cfa6bd3a3c6f7d5120ac859afc954fd3d0e1d75c7c1746c536e241abcac959", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **purse**: Holds\n  an amount of same-branded digital assets until part or\n  all of them are withdrawn into a payment. A new purse is created\n  by an issuer and can only hold assets of that issuer's brand.\n- **payment**:\n  Holds a quantity of same-branded digital assets to transfer to another party.\n  A payment is created containing either new assets from a mint or existing assets\n  withdrawn from a purse or transferred from one or more other consumed payments.", "mimetype": "text/plain", "start_char_idx": 345, "end_char_idx": 811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf769734-80bd-4629-8e85-13619dd5d1f0": {"__data__": {"id_": "cf769734-80bd-4629-8e85-13619dd5d1f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5ec5e49-0126-4ad8-ac09-3152a63b734c", "node_type": "1", "metadata": {}, "hash": "45bc28e10e758add265875cae77040f4e2d050f1f22dd008f67f30977141ec04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3", "node_type": "1", "metadata": {}, "hash": "2319e24d21466ec77ea0b7b4978a1265ff739d34ba8368cebf49d703e5e1fba1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It can only hold assets of the same brand as its source(s).", "mimetype": "text/plain", "start_char_idx": 814, "end_char_idx": 873, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3": {"__data__": {"id_": "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf769734-80bd-4629-8e85-13619dd5d1f0", "node_type": "1", "metadata": {}, "hash": "78cfa6bd3a3c6f7d5120ac859afc954fd3d0e1d75c7c1746c536e241abcac959", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f", "node_type": "1", "metadata": {}, "hash": "9311b3c8ccc7da9ea6ab069bf5828ee96233295c9c99f4096ad2e1afc09ca784", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Any number of `purses` or `payments` can hold assets\nof any particular `brand`. Neither a `purse` nor a `payment` can ever change their\nassociated `brand`.", "mimetype": "text/plain", "start_char_idx": 875, "end_char_idx": 1030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f": {"__data__": {"id_": "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3", "node_type": "1", "metadata": {}, "hash": "2319e24d21466ec77ea0b7b4978a1265ff739d34ba8368cebf49d703e5e1fba1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9", "node_type": "1", "metadata": {}, "hash": "a10562dc29852dbba033c27746c599ebd63fd478b574e71d6dc72ee7b297c405", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each `purse` and `payment` object contains a specific amount of digital assets,\nwhich may be none at all (\"empty\" in [AmountMath](./amount-math) terms). In the same way\nyou might have separate bank accounts for different purposes,\nyou can have separate purses for the same `brand` of digital asset.\nOne of your purses might hold 2 Quatloos while another holds 9000 Quatloos.", "mimetype": "text/plain", "start_char_idx": 1032, "end_char_idx": 1406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9": {"__data__": {"id_": "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f", "node_type": "1", "metadata": {}, "hash": "9311b3c8ccc7da9ea6ab069bf5828ee96233295c9c99f4096ad2e1afc09ca784", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24e44527-6ae0-4661-bbcf-9c0e6a178c7b", "node_type": "1", "metadata": {}, "hash": "7e4385fbdf42f3054696bad33635fd56f2915ed1bd3e137008de55239bef4ad4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When you deposit assets into a `purse`, they are added to\nwhatever assets already exist there. So a 3 Quatloos deposit\ninto a `purse` with 8 Quatloos results in a `purse` with 11 Quatloos.", "mimetype": "text/plain", "start_char_idx": 1408, "end_char_idx": 1596, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24e44527-6ae0-4661-bbcf-9c0e6a178c7b": {"__data__": {"id_": "24e44527-6ae0-4661-bbcf-9c0e6a178c7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9", "node_type": "1", "metadata": {}, "hash": "a10562dc29852dbba033c27746c599ebd63fd478b574e71d6dc72ee7b297c405", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb3d4c45-25d8-4351-bf79-cc8c9bf46753", "node_type": "1", "metadata": {}, "hash": "467d203b90cc40d6e7596c3cf2f436f4f0b690f456e69077e182fb77a0a7b2ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When adding a `payment` to a `purse`, you must add the entire `payment`. To\nonly add part of a `payment`, you must first call [anIssuer.split()](/reference/ertp-api/issuer#anissuer-split-payment-paymentamounta)\nor [anIssuer.splitMany()](/reference/ertp-api/issuer#anissuer-splitmany-payment-amountarray)\nto split it into two or more new `payments`.", "mimetype": "text/plain", "start_char_idx": 1598, "end_char_idx": 1946, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb3d4c45-25d8-4351-bf79-cc8c9bf46753": {"__data__": {"id_": "bb3d4c45-25d8-4351-bf79-cc8c9bf46753", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24e44527-6ae0-4661-bbcf-9c0e6a178c7b", "node_type": "1", "metadata": {}, "hash": "7e4385fbdf42f3054696bad33635fd56f2915ed1bd3e137008de55239bef4ad4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64153019-8766-45ea-9d2b-f34bdd0e129e", "node_type": "1", "metadata": {}, "hash": "47448421f8764b9d575cd536b18c880a9794529aab4b2a722b9939da1fcfffd0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`mints` create entirely new digital assets and put them in a new `payment`.\nYou also create a `payment` by withdrawing assets from a `purse`, by splitting an\nexisting `payment`, or by combining multiple `payments` into one new one. Note\nthe `brand` of the new `payment` is the same as the associated `brand` of its originating `mint`, `purse`, or `payment`.", "mimetype": "text/plain", "start_char_idx": 1948, "end_char_idx": 2305, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64153019-8766-45ea-9d2b-f34bdd0e129e": {"__data__": {"id_": "64153019-8766-45ea-9d2b-f34bdd0e129e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb3d4c45-25d8-4351-bf79-cc8c9bf46753", "node_type": "1", "metadata": {}, "hash": "467d203b90cc40d6e7596c3cf2f436f4f0b690f456e69077e182fb77a0a7b2ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62540f69-9828-4081-8a3c-f85b84f8556d", "node_type": "1", "metadata": {}, "hash": "c3b06260f16b7dc8589777ee3c90ca43221854cacfecf63e5e0384319d726b63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In ERTP, assets are not transferred directly from one `purse` to another.\nInstead, the transfer must be mediated by a `payment` as demonstrated below.\nIn the Agoric stack, the actual send and receive operations are provided by\n[`E()`](../js-programming/eventual-send).", "mimetype": "text/plain", "start_char_idx": 2307, "end_char_idx": 2575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62540f69-9828-4081-8a3c-f85b84f8556d": {"__data__": {"id_": "62540f69-9828-4081-8a3c-f85b84f8556d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64153019-8766-45ea-9d2b-f34bdd0e129e", "node_type": "1", "metadata": {}, "hash": "47448421f8764b9d575cd536b18c880a9794529aab4b2a722b9939da1fcfffd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed2a842c-985b-44b5-afbf-b23ad6be7332", "node_type": "1", "metadata": {}, "hash": "98284887ef859f62ee439ad7a1032474e7d38f8cca411deae73bd6d0e50207fe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Sender:\n  1. Withdraw assets described by an `amount` from a `purse`, creating a `payment`.\n  2. Send this `payment` to a recipient.\n- Recipient:\n  1. If you don't already have one, create a `purse` for the asset `brand`\n     you'll receive.\n  2. Receive the message with the `payment`.\n  3. Deposit the `payment` into a `brand`-appropriate `purse`.\n\n## Purses", "mimetype": "text/plain", "start_char_idx": 2577, "end_char_idx": 2939, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed2a842c-985b-44b5-afbf-b23ad6be7332": {"__data__": {"id_": "ed2a842c-985b-44b5-afbf-b23ad6be7332", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62540f69-9828-4081-8a3c-f85b84f8556d", "node_type": "1", "metadata": {}, "hash": "c3b06260f16b7dc8589777ee3c90ca43221854cacfecf63e5e0384319d726b63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a09f3479-e4e3-4faa-b242-cbee9dde885c", "node_type": "1", "metadata": {}, "hash": "777c500be2e652c2787d077c2ed5b9e0318e9de5711a423dfbd0ec0d1f47bb1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Purses\n\nYou change a purse's balance by calling either `deposit()` (to add assets) or\n`withdraw()` (to remove assets) on it. A purse can be empty, which for\nfungible assets means it has a value of 0. For non-fungible\nassets, such as theater tickets, it doesn't have any tickets.\n\nUnlike `payments`, `purses` are not meant to be sent to others. To transfer\ndigital assets, you should withdraw a `payment` from a `purse` and send\nthe `payment` to another party.", "mimetype": "text/plain", "start_char_idx": 2930, "end_char_idx": 3392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a09f3479-e4e3-4faa-b242-cbee9dde885c": {"__data__": {"id_": "a09f3479-e4e3-4faa-b242-cbee9dde885c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed2a842c-985b-44b5-afbf-b23ad6be7332", "node_type": "1", "metadata": {}, "hash": "98284887ef859f62ee439ad7a1032474e7d38f8cca411deae73bd6d0e50207fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9143fb54-3728-457a-b14f-110d632011d9", "node_type": "1", "metadata": {}, "hash": "9afeff17fec05e11701e7aabacc7561aed3bfbe4a1b59104e2d66e8ae1b47074", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can create a [deposit facet](/glossary/#deposit-facet) for a `purse`.\nDeposit facets are either sent to other parties or made publicly known. Any party can deposit a `payment` into the\ndeposit facet, which deposits it into its associated `purse`. However, no one can\nuse a deposit facet to either make a withdrawal from its `purse` or get the `purse`'s balance.", "mimetype": "text/plain", "start_char_idx": 3394, "end_char_idx": 3759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9143fb54-3728-457a-b14f-110d632011d9": {"__data__": {"id_": "9143fb54-3728-457a-b14f-110d632011d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a09f3479-e4e3-4faa-b242-cbee9dde885c", "node_type": "1", "metadata": {}, "hash": "777c500be2e652c2787d077c2ed5b9e0318e9de5711a423dfbd0ec0d1f47bb1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7763ada7-d0c7-4a57-87f6-8a9e6782ea16", "node_type": "1", "metadata": {}, "hash": "351c694649f9384f2e30c217ed292c47f0f969e0f7bec52c111357c89114b6b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If you have a deposit facet, you make a deposit to its associated `purse` by calling\n`depositFacet.receive(payment)`. Note that you add a `payment` to a `purse` with a `deposit()` method, while you add a `payment` to a `depositFacet` with a `receive()` method.\n\nThe `payment`'s `brand` must match that of the `purse`.\nOtherwise it throws an error.\nWhen sending a deposit facet object\nto a party, you should tell them what `brand` it accepts.\n\n![Purse methods](./assets/purse.svg)", "mimetype": "text/plain", "start_char_idx": 3761, "end_char_idx": 4240, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7763ada7-d0c7-4a57-87f6-8a9e6782ea16": {"__data__": {"id_": "7763ada7-d0c7-4a57-87f6-8a9e6782ea16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9143fb54-3728-457a-b14f-110d632011d9", "node_type": "1", "metadata": {}, "hash": "9afeff17fec05e11701e7aabacc7561aed3bfbe4a1b59104e2d66e8ae1b47074", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb580bb9-6e19-48b6-9543-70f168db5947", "node_type": "1", "metadata": {}, "hash": "2cd41406c28c7ad6237a522afe217a341836c96732bbbdb3b44f86c4850db447", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following is a brief description and example of each `purse` method. For\nmore detail, click the method's name to go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/).", "mimetype": "text/plain", "start_char_idx": 4242, "end_char_idx": 4425, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb580bb9-6e19-48b6-9543-70f168db5947": {"__data__": {"id_": "bb580bb9-6e19-48b6-9543-70f168db5947", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7763ada7-d0c7-4a57-87f6-8a9e6782ea16", "node_type": "1", "metadata": {}, "hash": "351c694649f9384f2e30c217ed292c47f0f969e0f7bec52c111357c89114b6b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5070a39-897c-4ffc-badb-5131107dd497", "node_type": "1", "metadata": {}, "hash": "3e29e029d58e09049e142da343656dd5e88efb0adc880f490e3f2abf4e1de7f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPurse.getCurrentAmount()](/reference/ertp-api/purse#apurse-getcurrentamount)\n  - Describe the `purse`'s current balance as an Amount. Note that a `purse` can be empty.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#getCurrentAmount\n- [aPurse.withdraw(amount)](/reference/ertp-api/purse#apurse-withdraw-amount)\n  - Withdraw the `amount` of specified digital assets from this `purse` into a new `payment`.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#withdraw", "mimetype": "text/plain", "start_char_idx": 4427, "end_char_idx": 4918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5070a39-897c-4ffc-badb-5131107dd497": {"__data__": {"id_": "e5070a39-897c-4ffc-badb-5131107dd497", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb580bb9-6e19-48b6-9543-70f168db5947", "node_type": "1", "metadata": {}, "hash": "2cd41406c28c7ad6237a522afe217a341836c96732bbbdb3b44f86c4850db447", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b937c616-7f08-4df4-b494-379b75426420", "node_type": "1", "metadata": {}, "hash": "170cc244ecf58c1e0ab3e0b89f7e487518ccbee38b3e48dfb4cadc0202ad83af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPurse.deposit(payment, optAmount)](/reference/ertp-api/purse#apurse-deposit-payment-optamount)\n  - Deposit all the contents of `payment` into this `purse`, returning an `amount` describing the\n    `payment`.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#deposit\n- [aPurse.getDepositFacet()](/reference/ertp-api/purse#apurse-getdepositfacet)\n  - Return a deposit-only facet on the `purse`. Note that the command to add a `payment`'s", "mimetype": "text/plain", "start_char_idx": 4919, "end_char_idx": 5369, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b937c616-7f08-4df4-b494-379b75426420": {"__data__": {"id_": "b937c616-7f08-4df4-b494-379b75426420", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5070a39-897c-4ffc-badb-5131107dd497", "node_type": "1", "metadata": {}, "hash": "3e29e029d58e09049e142da343656dd5e88efb0adc880f490e3f2abf4e1de7f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cf2e780-6535-4fdd-b26e-920749ce7ffc", "node_type": "1", "metadata": {}, "hash": "3734d56e72c2d78ab8192ee4df7a37dda7a813199d85fc2aaa9d50ebd9967b4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "assets via a `DepositFacet` is not `deposit()` but `receive()` as shown here.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#getDepositFacet", "mimetype": "text/plain", "start_char_idx": 5374, "end_char_idx": 5528, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2cf2e780-6535-4fdd-b26e-920749ce7ffc": {"__data__": {"id_": "2cf2e780-6535-4fdd-b26e-920749ce7ffc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b937c616-7f08-4df4-b494-379b75426420", "node_type": "1", "metadata": {}, "hash": "170cc244ecf58c1e0ab3e0b89f7e487518ccbee38b3e48dfb4cadc0202ad83af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb91e209-cf45-4195-899b-877ac51b2dee", "node_type": "1", "metadata": {}, "hash": "955d9c0d39f222790c61767bee7ad83adbf7a7c275500e33c852b54aa6686c0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In addition, the method to create a new, empty, `purse` is called on an `issuer`:\n\n- [anIssuer.makeEmptyPurse()](/reference/ertp-api/issuer#anissuer-makeemptypurse)\n  - Make and return an empty `purse` that holds assets of the `brand` associated with the `issuer`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#makeEmptyPurse\n\n## Payments\n\n![Payment methods](./assets/payment.svg)", "mimetype": "text/plain", "start_char_idx": 5530, "end_char_idx": 5923, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb91e209-cf45-4195-899b-877ac51b2dee": {"__data__": {"id_": "eb91e209-cf45-4195-899b-877ac51b2dee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cf2e780-6535-4fdd-b26e-920749ce7ffc", "node_type": "1", "metadata": {}, "hash": "3734d56e72c2d78ab8192ee4df7a37dda7a813199d85fc2aaa9d50ebd9967b4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bb18441-4e0c-4a1d-94dd-41618d85e299", "node_type": "1", "metadata": {}, "hash": "040156d86b1193bc3501652c567795376154c2b3522c538d717afd49eae92f5c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Payments hold digital assets intended to be transferred to another party.\nThey are linear, meaning that either a `payment` has its full\noriginal balance, or it is used up entirely. It is impossible to\npartially use a `payment`.", "mimetype": "text/plain", "start_char_idx": 5925, "end_char_idx": 6152, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3bb18441-4e0c-4a1d-94dd-41618d85e299": {"__data__": {"id_": "3bb18441-4e0c-4a1d-94dd-41618d85e299", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb91e209-cf45-4195-899b-877ac51b2dee", "node_type": "1", "metadata": {}, "hash": "955d9c0d39f222790c61767bee7ad83adbf7a7c275500e33c852b54aa6686c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51e870d5-5739-4ab5-8747-34b295646d46", "node_type": "1", "metadata": {}, "hash": "ca0dc209daba128a1f8dd4d2308a98c8428c25a51734096708a3f0edf1de1e71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In other words, if you create a `payment` containing\n10 Quatloos, the `payment` will always either contain\n10 Quatloos or it will be deleted from its `issuer` records and no\nlonger have any value. While a `payment` can be either combined with others or\nsplit into multiple `payments`, in both cases the original `payment(s)`\nare consumed and the results put in one or more new `payments`.", "mimetype": "text/plain", "start_char_idx": 6154, "end_char_idx": 6542, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51e870d5-5739-4ab5-8747-34b295646d46": {"__data__": {"id_": "51e870d5-5739-4ab5-8747-34b295646d46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bb18441-4e0c-4a1d-94dd-41618d85e299", "node_type": "1", "metadata": {}, "hash": "040156d86b1193bc3501652c567795376154c2b3522c538d717afd49eae92f5c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fdb71f2-0032-405e-9f14-6cc82b661ce0", "node_type": "1", "metadata": {}, "hash": "d776e1501b7db9999310c64f28468afb99e9ceee470d20becf05019d787ae1a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A `payment` can be deposited into a purse, split into multiple\n`payments`, combined with other `payments`, or claimed (getting an exclusive `payment` and revoking access from anyone else).\n\nA `payment` is often received from other parties, but is not self-verifying\nand cannot be trusted to provide its own true value.\nTo get the verified balance\nof a `payment`, use the `getAmountOf(payment)` method on the trusted `issuer`\nfor the `payment`'s `brand`.", "mimetype": "text/plain", "start_char_idx": 6544, "end_char_idx": 6997, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9fdb71f2-0032-405e-9f14-6cc82b661ce0": {"__data__": {"id_": "9fdb71f2-0032-405e-9f14-6cc82b661ce0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51e870d5-5739-4ab5-8747-34b295646d46", "node_type": "1", "metadata": {}, "hash": "ca0dc209daba128a1f8dd4d2308a98c8428c25a51734096708a3f0edf1de1e71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1650276c-e34c-402d-ac26-58741a8ed698", "node_type": "1", "metadata": {}, "hash": "6710041de17265629bdb955099bb6b05066352e88a6acd8c72f479382e694cc5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To get the `issuer` for a `brand` you didn't create,\nask someone you trust. For example, the venue creating tickets for shows\ncan be trusted to give you the tickets' `issuer`. Or, a friend might have\na cryptocurrency they like, and, if you trust them, you might accept\nthat the `issuer` they give you is valid.\n\nTo consume a `payment` into a new `purse`:\n\n1. Get the `payment`'s trusted `issuer`.\n2. Use the `issuer` to create an empty `purse` for that `brand`.\n3. Deposit the `payment` into the new `purse`.", "mimetype": "text/plain", "start_char_idx": 6999, "end_char_idx": 7507, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1650276c-e34c-402d-ac26-58741a8ed698": {"__data__": {"id_": "1650276c-e34c-402d-ac26-58741a8ed698", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fdb71f2-0032-405e-9f14-6cc82b661ce0", "node_type": "1", "metadata": {}, "hash": "d776e1501b7db9999310c64f28468afb99e9ceee470d20becf05019d787ae1a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "651cf1b7-1dfe-408c-8ed7-56e9eddae243", "node_type": "1", "metadata": {}, "hash": "979faa58501b5dc77438cc48d4587592f0b894c4a101c9d68d2bf1395807c444", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`Payments` have only one API method, but many methods for other ERTP components\nhave `payments` as arguments and effectively operate on a `payment`. The following is a\nbrief description and example of each `payment`-related method. For\nmore detail, click the method's name to go to its entry in the [ERTP\nAPI Reference](/reference/ertp-api/index).", "mimetype": "text/plain", "start_char_idx": 7509, "end_char_idx": 7856, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "651cf1b7-1dfe-408c-8ed7-56e9eddae243": {"__data__": {"id_": "651cf1b7-1dfe-408c-8ed7-56e9eddae243", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1650276c-e34c-402d-ac26-58741a8ed698", "node_type": "1", "metadata": {}, "hash": "6710041de17265629bdb955099bb6b05066352e88a6acd8c72f479382e694cc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60b9d351-92cb-48a9-93be-e2fb735f57a4", "node_type": "1", "metadata": {}, "hash": "43b6688ac402ba63dcf64dd24c717ec10ad25cea30554a027d2d45bc5253ec9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPayment.getAllegedBrand()](/reference/ertp-api/payment#apayment-getallegedbrand)\n  - Return the `brand` indicating the kind of digital asset this `payment` purports to be\n    and which `issuer` to use with it.\n    Because `payments` are not trusted, any method calls on them should be treated\n    with suspicion and verified elsewhere. Any successful operation by an `issuer` on a `payment` verifies it.\n\n### Other Objects' Payment-Related Methods", "mimetype": "text/plain", "start_char_idx": 7858, "end_char_idx": 8309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60b9d351-92cb-48a9-93be-e2fb735f57a4": {"__data__": {"id_": "60b9d351-92cb-48a9-93be-e2fb735f57a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "651cf1b7-1dfe-408c-8ed7-56e9eddae243", "node_type": "1", "metadata": {}, "hash": "979faa58501b5dc77438cc48d4587592f0b894c4a101c9d68d2bf1395807c444", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f", "node_type": "1", "metadata": {}, "hash": "797acf500a1e4a9e016bfd3359c3309fadbc2f8f92662fe2f731709722180cce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.burn(payment, optAmount)](/reference/ertp-api/issuer#anissuer-burn-payment-optamount)\n  - Destroy all of the digital assets in the `payment`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#burn\n- [anIssuer.getAmountOf(payment)](/reference/ertp-api/issuer#anissuer-getamountof-payment)\n  - Describe the `payment`'s balance as an Amount.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#getAmountOf", "mimetype": "text/plain", "start_char_idx": 8311, "end_char_idx": 8741, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f": {"__data__": {"id_": "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60b9d351-92cb-48a9-93be-e2fb735f57a4", "node_type": "1", "metadata": {}, "hash": "43b6688ac402ba63dcf64dd24c717ec10ad25cea30554a027d2d45bc5253ec9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b2217ad-2bc4-45b3-9fff-11511546f855", "node_type": "1", "metadata": {}, "hash": "0e3f3a4ff6392af4d2757ed96b626f3e26c1378e76a054f52759aef1ed872898", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.isLive(payment)](/reference/ertp-api/issuer#anissuer-islive-payment)\n  - Return `true` if the `payment` was created by the issuer and is available for use (has not been consumed or burned).\n- [aMint.mintPayment(newAmount)](/reference/ertp-api/mint#amint-mintpayment-newamount)\n  - Create new digital assets of the `mint`'s associated `brand`.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#mintMintPayment", "mimetype": "text/plain", "start_char_idx": 8742, "end_char_idx": 9171, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b2217ad-2bc4-45b3-9fff-11511546f855": {"__data__": {"id_": "5b2217ad-2bc4-45b3-9fff-11511546f855", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f", "node_type": "1", "metadata": {}, "hash": "797acf500a1e4a9e016bfd3359c3309fadbc2f8f92662fe2f731709722180cce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87", "node_type": "1", "metadata": {}, "hash": "124354f64668ecb8b4e924db008750d321e1f6c482b174c7a34fdfc8e4713281", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPurse.deposit(payment, optAmount)](/reference/ertp-api/purse#apurse-deposit-payment-optamount)\n  - Deposit all the contents of `payment` into `purse`.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#deposit\n- [aPurse.getDepositFacet()](/reference/ertp-api/purse#apurse-getdepositfacet)\n  - Create and return a new deposit-only facet of the `purse` that allows arbitrary other parties to deposit Payments into `purse`.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#getDepositFacet", "mimetype": "text/plain", "start_char_idx": 9172, "end_char_idx": 9683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87": {"__data__": {"id_": "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b2217ad-2bc4-45b3-9fff-11511546f855", "node_type": "1", "metadata": {}, "hash": "0e3f3a4ff6392af4d2757ed96b626f3e26c1378e76a054f52759aef1ed872898", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0ff7af4-83ab-4100-9896-9a3a9747e17b", "node_type": "1", "metadata": {}, "hash": "70a1697929f48c2c85919dd9ce4ea7d1a7261e6c2f3240a5303182f977379121", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPurse.withdraw(amount)](/reference/ertp-api/purse#apurse-withdraw-amount)\n  - Withdraw the `amount` of specified digital assets from `purse` into a new `payment`.\n  - <<< @/../snippets/ertp/guide/test-purses-and-payments.js#withdraw\n    ::: warning DEPRECATED\n- [anIssuer.combine(paymentsArray)](/reference/ertp-api/issuer#anissuer-combine-paymentsarray-opttotalamount)\n  - Combine multiple Payments into one new Payment.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#combine", "mimetype": "text/plain", "start_char_idx": 9684, "end_char_idx": 10176, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0ff7af4-83ab-4100-9896-9a3a9747e17b": {"__data__": {"id_": "c0ff7af4-83ab-4100-9896-9a3a9747e17b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87", "node_type": "1", "metadata": {}, "hash": "124354f64668ecb8b4e924db008750d321e1f6c482b174c7a34fdfc8e4713281", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "969db249-d7f4-415a-8bd4-15bb0b71ab78", "node_type": "1", "metadata": {}, "hash": "2d285ffae467503267b9c1a88142d830d7812a2861f5e5a6b61b746306461891", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIissuer.claim(payment, optAmount)](/reference/ertp-api/issuer#anissuer-claim-payment-optamount)\n  - Transfer all digital assets from `payment` to a new Payment.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#claim\n- [anIssuer.splitMany(payment, amountArray)](/reference/ertp-api/issuer#anissuer-splitmany-payment-amountarray)\n  - Split a single `payment` into multiple Payments.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#splitManyConcise", "mimetype": "text/plain", "start_char_idx": 10177, "end_char_idx": 10648, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "969db249-d7f4-415a-8bd4-15bb0b71ab78": {"__data__": {"id_": "969db249-d7f4-415a-8bd4-15bb0b71ab78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0ff7af4-83ab-4100-9896-9a3a9747e17b", "node_type": "1", "metadata": {}, "hash": "70a1697929f48c2c85919dd9ce4ea7d1a7261e6c2f3240a5303182f977379121", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ac96b95-fe54-44b9-a4a6-da4d9bc046ca", "node_type": "1", "metadata": {}, "hash": "062bf7f915034063b62577127352e48509eb83a881fc8cb4c1b519e89cf90b3d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [anIssuer.split(payment, paymentAmountA)](/reference/ertp-api/issuer#anissuer-split-payment-paymentamounta)\n  - Split a single `payment` into two new Payments.\n  - <<< @/../snippets/ertp/guide/test-issuers-and-mints.js#split\n    :::", "mimetype": "text/plain", "start_char_idx": 10649, "end_char_idx": 10883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ac96b95-fe54-44b9-a4a6-da4d9bc046ca": {"__data__": {"id_": "6ac96b95-fe54-44b9-a4a6-da4d9bc046ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_ertp_purses-and-payments.md", "node_type": "4", "metadata": {}, "hash": "4882d3780b3b4e8a5165da8f2cb186cce1e4ce50cda4cb0b00a2b360976a19a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "969db249-d7f4-415a-8bd4-15bb0b71ab78", "node_type": "1", "metadata": {}, "hash": "2d285ffae467503267b9c1a88142d830d7812a2861f5e5a6b61b746306461891", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Purse and Payment Example\n\nThe following code creates a new `purse` for the `quatloos` brand, deposits\n10 Quatloos into the `purse`, withdraws 3 Quatloos from the `purse` into a\n`payment`, and finally returns an `amount` describing what's currently in the `purse`, 7 Quatloos.\n\n<<< @/../snippets/ertp/guide/test-purses-and-payments.js#example", "mimetype": "text/plain", "start_char_idx": 10885, "end_char_idx": 11230, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "335882b9-9a22-41e2-b5c6-e39aa2b6f1b7": {"__data__": {"id_": "335882b9-9a22-41e2-b5c6-e39aa2b6f1b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7cd0fea-1041-4060-930e-f3fb6cbcef19", "node_type": "1", "metadata": {}, "hash": "86c845c34c17001191a63211669b14f606989ce40a5a9e28fabceec3ef80b307", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Building Client Dapps\n\nThe [Agoric Platform](../platform/) consists of smart contracts\nand services such as [Zoe](../zoe/) running in a [Hardened JavaScript](../js-programming/hardened-js) VM running on top of a Cosmos SDK consensus layer. Clients interact with the consensus layer by making\nqueries and submitting messages in signed transactions. In the Smart\nWallet Architecture, dapps consist of", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7cd0fea-1041-4060-930e-f3fb6cbcef19": {"__data__": {"id_": "e7cd0fea-1041-4060-930e-f3fb6cbcef19", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "335882b9-9a22-41e2-b5c6-e39aa2b6f1b7", "node_type": "1", "metadata": {}, "hash": "0f2d0e34b437bc659f54261b95ca6fcc8d63558277ef775c1e611bbcebd56921", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82edb72c-4056-4bdc-9eff-0b2b4cbff55e", "node_type": "1", "metadata": {}, "hash": "27e74c863a734ec5b127a9a2015b6285d7768ab59ca0a030838578e6dab9feee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Hardened JavaScript smart contracts\n- clients that can submit offers and query status via the consensus layer\n\n![smart wallet dapp sequence diagram](./assets/sw-dapp-arch.svg)", "mimetype": "text/plain", "start_char_idx": 402, "end_char_idx": 579, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82edb72c-4056-4bdc-9eff-0b2b4cbff55e": {"__data__": {"id_": "82edb72c-4056-4bdc-9eff-0b2b4cbff55e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7cd0fea-1041-4060-930e-f3fb6cbcef19", "node_type": "1", "metadata": {}, "hash": "86c845c34c17001191a63211669b14f606989ce40a5a9e28fabceec3ef80b307", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02489dc5-242b-48ee-84fa-2d9782b7d492", "node_type": "1", "metadata": {}, "hash": "082911fba6fbe86dad95763791ed72dcac8a8ceabbb68d4fa79ad762273b5fef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. A client formats an offer, signs it, and broadcasts it.\n2. The offer is routed to the `walletFactory` contract, which finds (or creates) the `smartWallet` object associated with the signer's address and uses it to execute the offer.\n3. The `smartWallet` calls `E(zoe).offer(...)` and monitors the status of\n   the offer, emitting it for clients to query.\n4. Zoe escrows the payments and forwards the proposal to the contract\n   indicated by the offer.\n5. The contract tells Zoe how to reallocate assets.", "mimetype": "text/plain", "start_char_idx": 581, "end_char_idx": 1087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02489dc5-242b-48ee-84fa-2d9782b7d492": {"__data__": {"id_": "02489dc5-242b-48ee-84fa-2d9782b7d492", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82edb72c-4056-4bdc-9eff-0b2b4cbff55e", "node_type": "1", "metadata": {}, "hash": "27e74c863a734ec5b127a9a2015b6285d7768ab59ca0a030838578e6dab9feee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad0d2202-9df6-4485-939f-c54202778cb1", "node_type": "1", "metadata": {}, "hash": "f320d80a2bcd9bd10ee5ab94cc6c6eff75b048f54f6100abc47eb310a24d7a04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "6. Zoe ensures that the reallocations respect offer safety and then provides payouts accordingly.\n7. The client's query tells it that the payouts are available.", "mimetype": "text/plain", "start_char_idx": 1088, "end_char_idx": 1248, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad0d2202-9df6-4485-939f-c54202778cb1": {"__data__": {"id_": "ad0d2202-9df6-4485-939f-c54202778cb1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02489dc5-242b-48ee-84fa-2d9782b7d492", "node_type": "1", "metadata": {}, "hash": "082911fba6fbe86dad95763791ed72dcac8a8ceabbb68d4fa79ad762273b5fef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcdb3dac-7c09-4373-949b-16a2d75a5c47", "node_type": "1", "metadata": {}, "hash": "436f09597e3d79cbc5e319bee443ed5ad9c01a3064b6d04ac2a73c1b81a68691", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Signing and Broadcasting Offers\n\nOne way to sign and broadcast offers is with the `agd tx ...` command. For example:\n\n```sh\nagd tx swingset wallet-action --allow-spend \"$ACTION\" \\\n --chain-id=agoriclocal --from=acct1\n```\n\n<!-- TODO: discuss agoric wallet send? -->\n\nAnother is using a wallet signing UI such as Keplr via the [Keplr API](https://docs.keplr.app/api/).", "mimetype": "text/plain", "start_char_idx": 1250, "end_char_idx": 1619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcdb3dac-7c09-4373-949b-16a2d75a5c47": {"__data__": {"id_": "fcdb3dac-7c09-4373-949b-16a2d75a5c47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad0d2202-9df6-4485-939f-c54202778cb1", "node_type": "1", "metadata": {}, "hash": "f320d80a2bcd9bd10ee5ab94cc6c6eff75b048f54f6100abc47eb310a24d7a04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51a42a31-de51-40d5-aaf6-2002b741e2ff", "node_type": "1", "metadata": {}, "hash": "a0f57c3fe1bc0b92c6214da0e6a2a159345d61d355cb85b5d034a33d564865c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Given sufficient care with key management, a [cosmjs SigningStargateClient](https://cosmos.github.io/cosmjs/latest/stargate/classes/SigningStargateClient.html) or any other client that can deliver a [agoric.swingset.MsgWalletSpendAction](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/golang/cosmos/proto/agoric/swingset/msgs.proto#L70) to a\n[Cosmos SDK endpoint](https://docs.cosmos.network/main/core/grpc_rest) works.", "mimetype": "text/plain", "start_char_idx": 1621, "end_char_idx": 2045, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51a42a31-de51-40d5-aaf6-2002b741e2ff": {"__data__": {"id_": "51a42a31-de51-40d5-aaf6-2002b741e2ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcdb3dac-7c09-4373-949b-16a2d75a5c47", "node_type": "1", "metadata": {}, "hash": "436f09597e3d79cbc5e319bee443ed5ad9c01a3064b6d04ac2a73c1b81a68691", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7defbc3-8c16-4f25-a4ab-d3d9711decbf", "node_type": "1", "metadata": {}, "hash": "6f21ab29ad0481bc0d530c5b83c5b4720beea60d815adb61d4674774f2d0d5e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```proto\nmessage MsgWalletSpendAction {\n    bytes owner = 1;\n    string spend_action = 2;\n}\n```\n\n<!-- TODO: owner field, toAccAddress, base64. working example -->\n\n## Querying VStorage", "mimetype": "text/plain", "start_char_idx": 2047, "end_char_idx": 2231, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7defbc3-8c16-4f25-a4ab-d3d9711decbf": {"__data__": {"id_": "b7defbc3-8c16-4f25-a4ab-d3d9711decbf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51a42a31-de51-40d5-aaf6-2002b741e2ff", "node_type": "1", "metadata": {}, "hash": "a0f57c3fe1bc0b92c6214da0e6a2a159345d61d355cb85b5d034a33d564865c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe8437a8-9d10-411c-bece-9271d1d48636", "node_type": "1", "metadata": {}, "hash": "f28abe546b53df577f86606077550a2916a020453c9de6404c7c290ea956bf93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Querying VStorage\n\n[VStorage](https://github.com/Agoric/agoric-sdk/tree/master/golang/cosmos/x/vstorage#readme) (for \"Virtual Storage\") is a key-value store that is\nread-only for clients of the consensus layer.\nFrom within the JavaScript VM, it is accessed via a `chainStorage` API with a node at each\nkey that is write-only; a bit like a `console`.\n\n![vstorage query diagram](./assets/vstorage-brand-q.svg)", "mimetype": "text/plain", "start_char_idx": 2211, "end_char_idx": 2621, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe8437a8-9d10-411c-bece-9271d1d48636": {"__data__": {"id_": "fe8437a8-9d10-411c-bece-9271d1d48636", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7defbc3-8c16-4f25-a4ab-d3d9711decbf", "node_type": "1", "metadata": {}, "hash": "6f21ab29ad0481bc0d530c5b83c5b4720beea60d815adb61d4674774f2d0d5e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70702526-aa27-4e32-aca1-7a5212719392", "node_type": "1", "metadata": {}, "hash": "cb33e76d04bbcefe3989aa8df3095b3e51afd502c06487509bf157dd46c1ad5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The protobuf definition is [agoric.vstorage.Query](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/golang/cosmos/proto/agoric/vstorage/query.proto#L11):\n\n```proto\nservice Query {\n  // Return an arbitrary vstorage datum.\n  rpc Data(QueryDataRequest) returns (QueryDataResponse) {\n    option (google.api.http).get = \"/agoric/vstorage/data/{path}\";\n  }", "mimetype": "text/plain", "start_char_idx": 2623, "end_char_idx": 2976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70702526-aa27-4e32-aca1-7a5212719392": {"__data__": {"id_": "70702526-aa27-4e32-aca1-7a5212719392", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe8437a8-9d10-411c-bece-9271d1d48636", "node_type": "1", "metadata": {}, "hash": "f28abe546b53df577f86606077550a2916a020453c9de6404c7c290ea956bf93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0538a89b-3a07-4899-9dbd-f5190fd86c2f", "node_type": "1", "metadata": {}, "hash": "3203cba0423d5d30009952fd6f573fe101af104666844d5a127c6135c9270ff0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Return the children of a given vstorage path.\n  rpc Children(QueryChildrenRequest)\n    returns (QueryChildrenResponse) {\n      option (google.api.http).get = \"/agoric/vstorage/children/{path}\";\n  }\n}\n```\n\nWe can issue queries using, `agd query ...`:\n\n```sh\n$ agd query vstorage children 'published.agoricNames'\n\nchildren:\n- brand\n- installation\n- instance\n...\n```\n\nThe [Agoric CLI](../agoric-cli/) `follow` command supports vstorage\nquery plus some of the marshalling conventions discussed below:", "mimetype": "text/plain", "start_char_idx": 2980, "end_char_idx": 3479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0538a89b-3a07-4899-9dbd-f5190fd86c2f": {"__data__": {"id_": "0538a89b-3a07-4899-9dbd-f5190fd86c2f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70702526-aa27-4e32-aca1-7a5212719392", "node_type": "1", "metadata": {}, "hash": "cb33e76d04bbcefe3989aa8df3095b3e51afd502c06487509bf157dd46c1ad5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03b63d16-ab34-465d-a745-6e1fb41d1dbc", "node_type": "1", "metadata": {}, "hash": "12177c83870a9b720c9b551be92ff655423ff90f501c3da605900632e99ab0a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n$ agoric follow -lF :published.agoricNames.brand\n[\n  [\n    \"BLD\",\n    slotToVal(\"board0566\",\"Alleged: BLD brand\"),\n  ],\n  [\n    \"IST\",\n    slotToVal(\"board0257\",\"Alleged: IST brand\"),\n  ],\n...\n]\n```\n\n::: tip VStorage Viewer\n\nThe [vstorage-viewer](https://vstorage.agoric.net/?path=published.agoricNames.oracleBrand&endpoint=https%3A%2F%2Fmain.rpc.agoric.net%3A443) is often _very_ handy:\n\n![vstorage viewer screenshot](https://github.com/user-attachments/assets/7b577b9d-e607-453a-bc28-ac6a6abb27c9)\n\n:::", "mimetype": "text/plain", "start_char_idx": 3481, "end_char_idx": 3991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03b63d16-ab34-465d-a745-6e1fb41d1dbc": {"__data__": {"id_": "03b63d16-ab34-465d-a745-6e1fb41d1dbc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0538a89b-3a07-4899-9dbd-f5190fd86c2f", "node_type": "1", "metadata": {}, "hash": "3203cba0423d5d30009952fd6f573fe101af104666844d5a127c6135c9270ff0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c348799-fa2a-420c-8bde-3379638f96cc", "node_type": "1", "metadata": {}, "hash": "5bc1e70763c45681df2d3ee1ed5da910b8a351eb5139a0e8808e656a054fa116", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n## Specifying Offers\n\nRecall that for an agent within the JavaScript VM,\n[`E(zoe).offer(...)`](/reference/zoe-api/zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs) takes an `Invitation` and optionally a `Proposal` with `{ give, want, exit }`, a `PaymentPKeywordRecord`, and `offerArgs`; it returns a `UserSeat` from which we can [getPayouts()](/reference/zoe-api/user-seat#e-userseat-getpayouts).\n\n![Zoe API diagram, simplified](./assets/zoe-simp.svg)", "mimetype": "text/plain", "start_char_idx": 3988, "end_char_idx": 4463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c348799-fa2a-420c-8bde-3379638f96cc": {"__data__": {"id_": "2c348799-fa2a-420c-8bde-3379638f96cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03b63d16-ab34-465d-a745-6e1fb41d1dbc", "node_type": "1", "metadata": {}, "hash": "12177c83870a9b720c9b551be92ff655423ff90f501c3da605900632e99ab0a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41acaedc-8d1d-4245-a827-8d97ab7be61a", "node_type": "1", "metadata": {}, "hash": "dcb3d83cb74d5f09734941d1a204403d9b6bdb83ed246e196a3ca00ea690f834", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the Smart Wallet architecture, a client uses an `OfferSpec` to\ntell its `SmartWallet` how to conduct an offer.\nIt includes an `invitationSpec` to say what invitation to pass to Zoe. For example:\n\n<<< @/../snippets/test-marshal.js#exInvitationSpec\n\nHere the `SmartWallet` calls `E(zoe).getPublicFacet(instance)` and then\nuses the `publicInvitationMaker` and `invitationArgs` to call the contract's\npublic facet.\n\n![InvitationSpec sequence diagram](./assets/inv-spec.svg)", "mimetype": "text/plain", "start_char_idx": 4465, "end_char_idx": 4937, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41acaedc-8d1d-4245-a827-8d97ab7be61a": {"__data__": {"id_": "41acaedc-8d1d-4245-a827-8d97ab7be61a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c348799-fa2a-420c-8bde-3379638f96cc", "node_type": "1", "metadata": {}, "hash": "5bc1e70763c45681df2d3ee1ed5da910b8a351eb5139a0e8808e656a054fa116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ce374e3-a0c7-40f4-b26a-070d3e166f33", "node_type": "1", "metadata": {}, "hash": "74efa4290f0cd193d2c8344a3211f61d362424ec5b3e0e8f3d4353c127cdd2d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<!-- TODO: SVG diagram in /assets/ -->\n\n::: tip InvitationSpec Usage\n\nSupposing `spec` is an `InvitationSpec`, its `.source` is one of:\n\n- `purse` - to make an offer with an invitation that is already in the Invitation purse of the smart wallet and agrees with `spec` on `.instance` and `.description` properties. For example, in [dapp-econ-gov](https://github.com/Agoric/dapp-econ-gov), committee members use invitations sent to them when the committee was created.", "mimetype": "text/plain", "start_char_idx": 4939, "end_char_idx": 5405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ce374e3-a0c7-40f4-b26a-070d3e166f33": {"__data__": {"id_": "2ce374e3-a0c7-40f4-b26a-070d3e166f33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41acaedc-8d1d-4245-a827-8d97ab7be61a", "node_type": "1", "metadata": {}, "hash": "dcb3d83cb74d5f09734941d1a204403d9b6bdb83ed246e196a3ca00ea690f834", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f011f5cc-dea6-4973-89f4-5c30954c190b", "node_type": "1", "metadata": {}, "hash": "60b24e53e9d805d0fd00122e868127b97e92ddd881024b3391af4585cddca199", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `contract` - the smart wallet makes an invitation by calling a method on the public facet of a specified instance: `E(E(zoe).getPublicFacet(spec.instance)[spec.publicInvitationMaker](...spec.invitationArgs)`\n\n- `agoricContract` - for example, from [dapp-inter](https://github.com/Agoric/dapp-inter):\n\n```js\n{\n   source: 'agoricContract',\n   instancePath: ['VaultFactory'],\n   callPipe: [\n     ['getCollateralManager', [toLock.brand]],\n     ['makeVaultInvitation'],\n   ],\n }\n```", "mimetype": "text/plain", "start_char_idx": 5407, "end_char_idx": 5886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f011f5cc-dea6-4973-89f4-5c30954c190b": {"__data__": {"id_": "f011f5cc-dea6-4973-89f4-5c30954c190b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ce374e3-a0c7-40f4-b26a-070d3e166f33", "node_type": "1", "metadata": {}, "hash": "74efa4290f0cd193d2c8344a3211f61d362424ec5b3e0e8f3d4353c127cdd2d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3fa875d-2e26-4653-9b47-6357ccc196bb", "node_type": "1", "metadata": {}, "hash": "7efe69505c0bc9e4f4b018873a4943ed32ad0e61526902356b1e850245f9c172", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The smart wallet finds the instance using `E(agoricNames).lookup('instance', ...spec.instancePath)` and makes a chain of calls specified by `spec.callPipe`. Each entry in the callPipe is a `[methodName, args?]` pair used to execute a call on the preceding result. The end of the pipe is expected to return an Invitation.\n\n- <a name=\"source-continuing\"></a>`continuing` - For example, `dapp-inter` uses the following `InvitationSpec` to adjust a vault:", "mimetype": "text/plain", "start_char_idx": 5888, "end_char_idx": 6339, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3fa875d-2e26-4653-9b47-6357ccc196bb": {"__data__": {"id_": "b3fa875d-2e26-4653-9b47-6357ccc196bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f011f5cc-dea6-4973-89f4-5c30954c190b", "node_type": "1", "metadata": {}, "hash": "60b24e53e9d805d0fd00122e868127b97e92ddd881024b3391af4585cddca199", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59db4442-5a5d-45e4-ac14-4d2d0d75bb75", "node_type": "1", "metadata": {}, "hash": "253d3e89f3860c9e8ae8fd79e3545e004fa1fbc16b0cd982408ac7209eddc7b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n{\n  source: 'continuing',\n  previousOffer: vaultOfferId,\n  invitationMakerName: 'AdjustBalances',\n}\n```\n\nIn this continuing offer, the smart wallet uses the `spec.previousOffer` id to look up the `.invitationMakers` property of the result of the previous offer. It uses `E(invitationMakers)[spec.invitationMakerName](...spec.invitationArgs)` to make an invitation.\n\n:::\n\nThe client fills in the proposal, which instructs the `SmartWallet`\nto withdraw corresponding payments to send to Zoe.", "mimetype": "text/plain", "start_char_idx": 6341, "end_char_idx": 6836, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59db4442-5a5d-45e4-ac14-4d2d0d75bb75": {"__data__": {"id_": "59db4442-5a5d-45e4-ac14-4d2d0d75bb75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3fa875d-2e26-4653-9b47-6357ccc196bb", "node_type": "1", "metadata": {}, "hash": "7efe69505c0bc9e4f4b018873a4943ed32ad0e61526902356b1e850245f9c172", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edfa931b-80d4-4dd1-950b-163decbb6de9", "node_type": "1", "metadata": {}, "hash": "1a1bbc1de0868ea35ad46e7deb276d4cad73c3500506d687e0362a93eef7dd16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/test-marshal.js#exBridgeAction\n\nBut recall the `spend_action` field in `MsgWalletSpendAction` is a string.\nIn fact, the expected string in this case is of the form:\n\n<<< @/../snippets/test-marshal.js#exSpendActionCk\n\nWe recognize `\"method\":\"executeOffer\"` and such, but\n`body:`, `slots:`, and `$1.Alleged: Gold Brand` need further explanation.\n\n### Marshalling Amounts and Instances\n\n::: tip Watch: Office Hours Discussion of Marshal", "mimetype": "text/plain", "start_char_idx": 6838, "end_char_idx": 7289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edfa931b-80d4-4dd1-950b-163decbb6de9": {"__data__": {"id_": "edfa931b-80d4-4dd1-950b-163decbb6de9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59db4442-5a5d-45e4-ac14-4d2d0d75bb75", "node_type": "1", "metadata": {}, "hash": "253d3e89f3860c9e8ae8fd79e3545e004fa1fbc16b0cd982408ac7209eddc7b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f", "node_type": "1", "metadata": {}, "hash": "c29d90b9205eb0afe191c1b421e9fb41a14f45da4ae6eba630fbcfdc66519593", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [Office Hours: ... marshalling w/board ids, ... \\#8069](https://github.com/Agoric/agoric-sdk/discussions/8069) July 2023\n\n:::\n\nTo start with, amounts include `bigint`s. The `@endo/marshal` API handles those:\n\n<<< @/../snippets/test-marshal.js#marshal-json-steroids\n\nTo marshal brands and instances, recall from the discussion of [marshal in eventual send](../js-programming/eventual-send#e-and-marshal-a-closer-look)\nhow remotables are marshalled with a translation table.", "mimetype": "text/plain", "start_char_idx": 7291, "end_char_idx": 7765, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f": {"__data__": {"id_": "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edfa931b-80d4-4dd1-950b-163decbb6de9", "node_type": "1", "metadata": {}, "hash": "1a1bbc1de0868ea35ad46e7deb276d4cad73c3500506d687e0362a93eef7dd16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed243e69-d224-4342-b007-a637d6e43949", "node_type": "1", "metadata": {}, "hash": "a00b56fc116a66ba0acba137ad93c24ac7e536a2aaa3407dd567f8f45032e313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [Agoric Board](/reference/repl/board) is a well-known name service that issues\nplain string identifiers for object identities and other passable _keys_ (that is: passable values excluding promises and errors).\nContracts and other services can use its table of identifiers as a marshal\ntranslation table:\n\n<<< @/../snippets/test-marshal.js#boardMarshal\n\nTo reverse the process, clients can mirror the on-chain board translation\ntable by synthesizing a remotable for each reference marker received:", "mimetype": "text/plain", "start_char_idx": 7767, "end_char_idx": 8267, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed243e69-d224-4342-b007-a637d6e43949": {"__data__": {"id_": "ed243e69-d224-4342-b007-a637d6e43949", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f", "node_type": "1", "metadata": {}, "hash": "c29d90b9205eb0afe191c1b421e9fb41a14f45da4ae6eba630fbcfdc66519593", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b", "node_type": "1", "metadata": {}, "hash": "354b7ce38142d094c7333c15a54ec31cd6428fee0742c2d61439d23de5a0f923", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/test-marshal.js#makeBoardContext\n\nNow we can take results of vstorage queries for `Data('published.agoricNames.brand')` and `Data('published.agoricNames.instance')` unmarshal (\"ingest\") them:\n\n<<< @/../snippets/test-marshal.js#useBoardContext\n\nAnd now we have all the pieces of the `BridgeAction` above.\nThe marshalled form is:\n\n<<< @/../snippets/test-marshal.js#exBridgeActionEq\n\nWe still don't quite have a single string for the `spend_action` field.\nWe need to `stringify` the `CapData`:", "mimetype": "text/plain", "start_char_idx": 8269, "end_char_idx": 8777, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b": {"__data__": {"id_": "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed243e69-d224-4342-b007-a637d6e43949", "node_type": "1", "metadata": {}, "hash": "a00b56fc116a66ba0acba137ad93c24ac7e536a2aaa3407dd567f8f45032e313", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8c90aec-3349-45dc-82a1-ef7dc5052871", "node_type": "1", "metadata": {}, "hash": "d7d96bedb254ed8407fead5c4434b55a71999966bdead8006af7213c1093e99f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/test-marshal.js#exSpendAction\n\nAnd now we have the `spend_action` in the expected form:\n\n<<< @/../snippets/test-marshal.js#exSpendActionCk\n\nThe wallet factory can now `JSON.parse` this string\ninto `CapData` and unmarshal it using a board marshaller\nto convert board ids back into brands, instances, etc.\n\n## Smart Wallet VStorage Topics\n\nEach smart wallet has a node under `published.wallet`:", "mimetype": "text/plain", "start_char_idx": 8779, "end_char_idx": 9189, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8c90aec-3349-45dc-82a1-ef7dc5052871": {"__data__": {"id_": "f8c90aec-3349-45dc-82a1-ef7dc5052871", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b", "node_type": "1", "metadata": {}, "hash": "354b7ce38142d094c7333c15a54ec31cd6428fee0742c2d61439d23de5a0f923", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "838d2060-8905-4c7b-b3f0-52ac4f013b72", "node_type": "1", "metadata": {}, "hash": "b68e2853a00def75a111112e50b98cac616cf2b32e582300f3cd3ea60c002cc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n$ agd query vstorage children published.wallet\nchildren:\n- agoric1h4d3mdvyqhy2vnw2shq4pm5duz5u8wa33jy6cl\n- agoric1qx2kqqdk80fdasldzkqu86tg4rhtaufs00na3y\n- agoric1rhul0rxa2z829a6xkrvuq8m8wjwekyduv7dzfj\n...\n```\n\nSmart wallet clients should start by getting the **current** state\nat `published.${ADDRESS}.current` and then subscribe to **updates**\nat `published.${ADDRESS}`. For example, we can use `agoric follow -lF`\nto get the latest `.current` record:", "mimetype": "text/plain", "start_char_idx": 9191, "end_char_idx": 9649, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "838d2060-8905-4c7b-b3f0-52ac4f013b72": {"__data__": {"id_": "838d2060-8905-4c7b-b3f0-52ac4f013b72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8c90aec-3349-45dc-82a1-ef7dc5052871", "node_type": "1", "metadata": {}, "hash": "d7d96bedb254ed8407fead5c4434b55a71999966bdead8006af7213c1093e99f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43d27ebe-deb4-433c-aeee-dfcb7caf5df7", "node_type": "1", "metadata": {}, "hash": "686a4bf3aeedcb3e6dfe09ae49c646ce5f8871108b11c90cdcb0b3bcaf283c22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n$ agoric follow -lF :published.wallet.agoric1h4d3mdvyqhy2vnw2shq4pm5duz5u8wa33jy6cl.current\n{\n  liveOffers: [],\n  offerToPublicSubscriberPaths: [\n    [\n      \"openVault-1691526589332\",\n      {\n        vault: \"published.vaultFactory.managers.manager0.vaults.vault2\",\n      },\n    ],\n  ],\n  offerToUsedInvitation: [\n    [\n      \"openVault-1691526589332\",\n      {\n        brand: slotToVal(\"board0074\",\"Alleged: Zoe Invitation brand\"),\n        value: [\n          {", "mimetype": "text/plain", "start_char_idx": 9651, "end_char_idx": 10117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43d27ebe-deb4-433c-aeee-dfcb7caf5df7": {"__data__": {"id_": "43d27ebe-deb4-433c-aeee-dfcb7caf5df7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "838d2060-8905-4c7b-b3f0-52ac4f013b72", "node_type": "1", "metadata": {}, "hash": "b68e2853a00def75a111112e50b98cac616cf2b32e582300f3cd3ea60c002cc6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0713aca4-6e83-482c-be99-f74348d4d551", "node_type": "1", "metadata": {}, "hash": "bf94c7724501c558e5b00452e77781e34689a98dc36d60a20c359110ed04f78d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "value: [\n          {\n            description: \"manager0: MakeVault\",\n            handle: slotToVal(null,\"Alleged: InvitationHandle\"),\n            installation: slotToVal(\"board05815\",\"Alleged: BundleIDInstallation\"),\n            instance: slotToVal(\"board00360\",\"Alleged: InstanceHandle\"),\n          },\n        ],\n      },\n    ],\n  ],\n  purses: [\n    {\n      balance: {\n        brand: slotToVal(\"board0074\"),\n        value: [],\n      },\n      brand: slotToVal(\"board0074\"),\n    },\n  ],\n}\n```", "mimetype": "text/plain", "start_char_idx": 10097, "end_char_idx": 10588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0713aca4-6e83-482c-be99-f74348d4d551": {"__data__": {"id_": "0713aca4-6e83-482c-be99-f74348d4d551", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43d27ebe-deb4-433c-aeee-dfcb7caf5df7", "node_type": "1", "metadata": {}, "hash": "686a4bf3aeedcb3e6dfe09ae49c646ce5f8871108b11c90cdcb0b3bcaf283c22", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ada1309-858a-405e-a67e-d309292e43c3", "node_type": "1", "metadata": {}, "hash": "d04ed461b0ee26b69f5ddf6931aa135da6b226d1920382e1b8201bf0549b8d3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Then we can use `agoric follow` without any options to\nget a stream of updates as they appear.", "mimetype": "text/plain", "start_char_idx": 10590, "end_char_idx": 10684, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ada1309-858a-405e-a67e-d309292e43c3": {"__data__": {"id_": "4ada1309-858a-405e-a67e-d309292e43c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0713aca4-6e83-482c-be99-f74348d4d551", "node_type": "1", "metadata": {}, "hash": "bf94c7724501c558e5b00452e77781e34689a98dc36d60a20c359110ed04f78d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89ff2686-ad42-46e1-b21c-78cd11adfe13", "node_type": "1", "metadata": {}, "hash": "7f86dd675688c4d22be26885beb0b17a94c171578d44f48e285fe5eaf301890f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nagoric follow :published.wallet.agoric1h4d3mdvyqhy2vnw2shq4pm5duz5u8wa33jy6cl\n...\n{\n  status: {\n    id: \"closeVault-1691526597848\",\n    invitationSpec: {\n      invitationMakerName: \"CloseVault\",\n      previousOffer: \"openVault-1691526589332\",\n      source: \"continuing\",\n    },\n    numWantsSatisfied: 1,\n    payouts: {\n      Collateral: {\n        brand: slotToVal(\"board05557\",\"Alleged: ATOM brand\"),\n        value: 13000000n,\n      },\n      Minted: {", "mimetype": "text/plain", "start_char_idx": 10686, "end_char_idx": 11143, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89ff2686-ad42-46e1-b21c-78cd11adfe13": {"__data__": {"id_": "89ff2686-ad42-46e1-b21c-78cd11adfe13", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ada1309-858a-405e-a67e-d309292e43c3", "node_type": "1", "metadata": {}, "hash": "d04ed461b0ee26b69f5ddf6931aa135da6b226d1920382e1b8201bf0549b8d3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c25f4774-30f7-497b-82db-2b914c2640c2", "node_type": "1", "metadata": {}, "hash": "27e4f893bf3a73a206813873fdfcd744df278f88861d95c30e026f772f554c6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n      Minted: {\n        brand: slotToVal(\"board0257\",\"Alleged: IST brand\"),\n        value: 215000n,\n      },\n    },\n    proposal: {\n      give: {\n        Minted: {\n          brand: slotToVal(\"board0257\"),\n          value: 5750000n,\n        },\n      },\n      want: {},\n    },\n    result: \"your vault is closed, thank you for your business\",\n  },\n  updated: \"offerStatus\",\n}\n```", "mimetype": "text/plain", "start_char_idx": 11125, "end_char_idx": 11504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c25f4774-30f7-497b-82db-2b914c2640c2": {"__data__": {"id_": "c25f4774-30f7-497b-82db-2b914c2640c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89ff2686-ad42-46e1-b21c-78cd11adfe13", "node_type": "1", "metadata": {}, "hash": "7f86dd675688c4d22be26885beb0b17a94c171578d44f48e285fe5eaf301890f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe6cb507-ef8e-454d-b83c-bd639b7c2e10", "node_type": "1", "metadata": {}, "hash": "03e4f43f8d46b5e1f3dfc020b0c7b822447828f08c8ee824a35e3f6ca34d7bf0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that status updates are emitted at several points in the handling of\neach offer:\n\n- when the `getOfferResult()` promise settles\n- when the `numWantsSatisfied()` promise settles\n- when the payouts have been deposited.\n\nAnd we may get `balance` updates at any time.\n\nThe data published via vstorage are available within the JavaScript VM\nvia the [getPublicTopics](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/packages/smart-wallet/src/smartWallet.js#L585) API.", "mimetype": "text/plain", "start_char_idx": 11506, "end_char_idx": 11976, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe6cb507-ef8e-454d-b83c-bd639b7c2e10": {"__data__": {"id_": "fe6cb507-ef8e-454d-b83c-bd639b7c2e10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c25f4774-30f7-497b-82db-2b914c2640c2", "node_type": "1", "metadata": {}, "hash": "27e4f893bf3a73a206813873fdfcd744df278f88861d95c30e026f772f554c6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6", "node_type": "1", "metadata": {}, "hash": "50e8e0419071183f7b24740c6d166c3c7f035753ab230a2f42ffb32f1231cf4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [CurrentWalletRecord](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/packages/smart-wallet/src/smartWallet.js#L71-L76) type is:\n\n```ts\n{\n   purses: Array<{brand: Brand, balance: Amount}>,\n   offerToUsedInvitation: Array<[ offerId: string, usedInvitation: Amount ]>,\n   offerToPublicSubscriberPaths: Array<[ offerId: string, publicTopics: { [subscriberName: string]: string } ]>,\n   liveOffers: Array<[import('./offers.js').OfferId, import('./offers.js').OfferStatus]>,\n}\n```", "mimetype": "text/plain", "start_char_idx": 11978, "end_char_idx": 12461, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6": {"__data__": {"id_": "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe6cb507-ef8e-454d-b83c-bd639b7c2e10", "node_type": "1", "metadata": {}, "hash": "03e4f43f8d46b5e1f3dfc020b0c7b822447828f08c8ee824a35e3f6ca34d7bf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb", "node_type": "1", "metadata": {}, "hash": "e019ca5862c40fb5e19e4a7c7a36f4c81cd0d117163fc6e69a6886b560ae8091", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "And [UpdateRecord](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/packages/smart-wallet/src/smartWallet.js#L80-L83) is:\n\n```ts\n     { updated: 'offerStatus', status: import('./offers.js').OfferStatus }\n   | { updated: 'balance'; currentAmount: Amount }\n   | { updated: 'walletAction'; status: { error: string } }\n```\n\nBoth of those types include [OfferStatus](https://github.com/Agoric/agoric-sdk/blob/mainnet1B/packages/smart-wallet/src/offers.js#L21C14-L26C5) by reference:", "mimetype": "text/plain", "start_char_idx": 12463, "end_char_idx": 12943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb": {"__data__": {"id_": "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6", "node_type": "1", "metadata": {}, "hash": "50e8e0419071183f7b24740c6d166c3c7f035753ab230a2f42ffb32f1231cf4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39eda8ef-ad4b-4105-8398-dea8e1e97446", "node_type": "1", "metadata": {}, "hash": "3bc92ec228e742b3a60ea9f3613da44fe30f2141f265608435959283ba112773", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```ts\nimport('./offers.js').OfferSpec & {\n error?: string,\n numWantsSatisfied?: number\n result?: unknown | typeof UNPUBLISHED_RESULT,\n payouts?: AmountKeywordRecord,\n}\n```\n\n## VBank Assets and Cosmos Bank Balances\n\nNote that balances of assets such as **IST** and **BLD** are already\navailable via consensus layer queries to the Cosmos SDK [bank module](https://docs.cosmos.network/main/modules/bank).", "mimetype": "text/plain", "start_char_idx": 12945, "end_char_idx": 13346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "39eda8ef-ad4b-4105-8398-dea8e1e97446": {"__data__": {"id_": "39eda8ef-ad4b-4105-8398-dea8e1e97446", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb", "node_type": "1", "metadata": {}, "hash": "e019ca5862c40fb5e19e4a7c7a36f4c81cd0d117163fc6e69a6886b560ae8091", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "590085d0-697a-4741-ad62-d708b31f9828", "node_type": "1", "metadata": {}, "hash": "3b3eabdaf86a763362b0980d1c27867d5043b820ac20ee0b8fa435690d7114ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n$ agd query bank balances agoric1h4d3mdvyqhy2vnw2shq4pm5duz5u8wa33jy6cl -o json | jq .balances\n[\n  {\n    \"denom\": \"ibc/BA313C4A19DFBF943586C0387E6B11286F9E416B4DD27574E6909CABE0E342FA\",\n    \"amount\": \"100000000\"\n  },\n  {\n    \"denom\": \"ubld\",\n    \"amount\": \"10000000\"\n  },\n  {\n    \"denom\": \"uist\",\n    \"amount\": \"215000\"\n  }\n]\n```\n\nThey are not published redundantly in vstorage and nor does the\nsmart wallet emit `balance` updates for them.", "mimetype": "text/plain", "start_char_idx": 13348, "end_char_idx": 13794, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "590085d0-697a-4741-ad62-d708b31f9828": {"__data__": {"id_": "590085d0-697a-4741-ad62-d708b31f9828", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39eda8ef-ad4b-4105-8398-dea8e1e97446", "node_type": "1", "metadata": {}, "hash": "3bc92ec228e742b3a60ea9f3613da44fe30f2141f265608435959283ba112773", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99c72ddc-5058-4343-bff5-e51115d58224", "node_type": "1", "metadata": {}, "hash": "66a21ade6896fdb2388f4d20c864d0af42e6aaae3bd1423723d3de9010e23b69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To get the correspondence between certain cosmos denoms (chosen by governance)\nand their ERTP brands, issuers, and display info such as `decimalPlaces`,\nsee `published.agoricNames.vbankAsset`:", "mimetype": "text/plain", "start_char_idx": 13796, "end_char_idx": 13988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99c72ddc-5058-4343-bff5-e51115d58224": {"__data__": {"id_": "99c72ddc-5058-4343-bff5-e51115d58224", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "590085d0-697a-4741-ad62-d708b31f9828", "node_type": "1", "metadata": {}, "hash": "3b3eabdaf86a763362b0980d1c27867d5043b820ac20ee0b8fa435690d7114ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7dd41cf-35ae-4be9-9c8b-25689dbda16c", "node_type": "1", "metadata": {}, "hash": "692562ee0fb4bb19c91a6ca0fefb226f973c5f2698bee1708ace4d9eb2adb84b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nagoric follow -lF :published.agoricNames.vbankAsset\n[\n  [\n    \"ibc/BA313C4A19DFBF943586C0387E6B11286F9E416B4DD27574E6909CABE0E342FA\",\n    {\n      brand: slotToVal(\"board05557\",\"Alleged: ATOM brand\"),\n      denom: \"ibc/BA313C4A19DFBF943586C0387E6B11286F9E416B4DD27574E6909CABE0E342FA\",\n      displayInfo: {\n        assetKind: \"nat\",\n        decimalPlaces: 6,\n      },\n      issuer: slotToVal(\"board02656\",\"Alleged: ATOM issuer\"),\n      issuerName: \"ATOM\",\n      proposedName: \"ATOM\",\n    },\n  ],\n  [", "mimetype": "text/plain", "start_char_idx": 13990, "end_char_idx": 14494, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7dd41cf-35ae-4be9-9c8b-25689dbda16c": {"__data__": {"id_": "a7dd41cf-35ae-4be9-9c8b-25689dbda16c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99c72ddc-5058-4343-bff5-e51115d58224", "node_type": "1", "metadata": {}, "hash": "66a21ade6896fdb2388f4d20c864d0af42e6aaae3bd1423723d3de9010e23b69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d48222a3-00c7-4c2e-ac0f-909b32f77c81", "node_type": "1", "metadata": {}, "hash": "b3c4e23baab754545c785411280d062124815d5ac11b4550bc4559b756dc736f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n  ],\n  [\n    \"ubld\",\n    {\n      brand: slotToVal(\"board0566\",\"Alleged: BLD brand\"),\n      denom: \"ubld\",\n      displayInfo: {\n        assetKind: \"nat\",\n        decimalPlaces: 6,\n      },\n      issuer: slotToVal(\"board0592\",\"Alleged: BLD issuer\"),\n      issuerName: \"BLD\",\n      proposedName: \"Agoric staking token\",\n    },\n  ],\n  [\n    \"uist\",\n    {\n      brand: slotToVal(\"board0257\",\"Alleged: IST brand\"),\n      denom: \"uist\",\n      displayInfo: {\n        assetKind: \"nat\",\n        decimalPlaces: 6,", "mimetype": "text/plain", "start_char_idx": 14483, "end_char_idx": 14988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d48222a3-00c7-4c2e-ac0f-909b32f77c81": {"__data__": {"id_": "d48222a3-00c7-4c2e-ac0f-909b32f77c81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_contract-rpc.md", "node_type": "4", "metadata": {}, "hash": "a4221bcea91818d4ae5bbd68d6d66ee6165d5a0e0cccc817257c5769db2f8b8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7dd41cf-35ae-4be9-9c8b-25689dbda16c", "node_type": "1", "metadata": {}, "hash": "692562ee0fb4bb19c91a6ca0fefb226f973c5f2698bee1708ace4d9eb2adb84b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "decimalPlaces: 6,\n      },\n      issuer: slotToVal(\"board0223\",\"Alleged: IST issuer\"),\n      issuerName: \"IST\",\n      proposedName: \"Agoric stable token\",\n    },\n  ],\n...\n]\n```", "mimetype": "text/plain", "start_char_idx": 14971, "end_char_idx": 15147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d6126e2-fb3d-4136-9e89-8837fb880a93": {"__data__": {"id_": "1d6126e2-fb3d-4136-9e89-8837fb880a93", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9474aa26-1fb2-46ad-92d5-a9b39a2423a8", "node_type": "1", "metadata": {}, "hash": "eebb4638104965e79be6f468960760785491752f1e8bb2e9d609fb4ab33b8ec5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deploying Smart Contracts\n\nThe `agoric deploy` command in the [Agoric command line tool](/guides/agoric-cli/index#agoric-deploy) supports deploying contracts and off-chain web applications that talk to those contracts. The command has two primary uses:\n\n- Deploy smart contract source code onto the blockchain.\n- Deploy and set up an application program on a local server running an Agoric process.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9474aa26-1fb2-46ad-92d5-a9b39a2423a8": {"__data__": {"id_": "9474aa26-1fb2-46ad-92d5-a9b39a2423a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d6126e2-fb3d-4136-9e89-8837fb880a93", "node_type": "1", "metadata": {}, "hash": "d5c3b008b23c5365fea5b9d79f2060b9c27d7231d09ea76890ca097155d2e0ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e6a8b56-5ce4-43ab-9934-83af3496c983", "node_type": "1", "metadata": {}, "hash": "c761fc99b132e8923b34a6141d4e62721f93325957eb1455be3ac4799ca3f4e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Use the `agoric deploy` command to run your dapp's `contract/deploy.js`\nand `api/deploy.js` scripts. You can use the deploy scripts copied from an existing\nDapp as they are, or you can modify them as suggested later in this document.\n\nRemember, your Dapp has three primary subdirectories:", "mimetype": "text/plain", "start_char_idx": 402, "end_char_idx": 690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e6a8b56-5ce4-43ab-9934-83af3496c983": {"__data__": {"id_": "4e6a8b56-5ce4-43ab-9934-83af3496c983", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9474aa26-1fb2-46ad-92d5-a9b39a2423a8", "node_type": "1", "metadata": {}, "hash": "eebb4638104965e79be6f468960760785491752f1e8bb2e9d609fb4ab33b8ec5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2", "node_type": "1", "metadata": {}, "hash": "6f27cc1004078f8452f66e8019d1e7a96665d9ea3dd0f269a6294ecfd20d0c8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `contract/` contains files defining your on-chain smart contract.\n- `api/` contains files enabling the UI frontend to communicate via HTTP/WebSocket to an on-chain backend contract instance and start your Dapp contract instance and backend.\n- `ui/` contains files relating to your contract's browser user interface.\n\n## How It Works\n\nAll deployment happens via the local running Agoric process. This is usually the **ag-solo** process,\nsometimes described as an Agoric VM or a local server.", "mimetype": "text/plain", "start_char_idx": 692, "end_char_idx": 1184, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2": {"__data__": {"id_": "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e6a8b56-5ce4-43ab-9934-83af3496c983", "node_type": "1", "metadata": {}, "hash": "c761fc99b132e8923b34a6141d4e62721f93325957eb1455be3ac4799ca3f4e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "940bf617-eaf8-4361-8390-06c0afaaadcf", "node_type": "1", "metadata": {}, "hash": "608f37406e3079bf3e3ccb448ad1950f64df3729d05e3d6bfccc2bf5bd3afc78", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`ag-solo` communicates with either a locally running or remote chain.\nThe local process has a `home` object, which contains references to services on-chain\nthat can be used to call associated API commands.\nSuch references include `zoe`, the `board` for sharing objects, and the application user's `wallet`.", "mimetype": "text/plain", "start_char_idx": 1186, "end_char_idx": 1492, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "940bf617-eaf8-4361-8390-06c0afaaadcf": {"__data__": {"id_": "940bf617-eaf8-4361-8390-06c0afaaadcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2", "node_type": "1", "metadata": {}, "hash": "6f27cc1004078f8452f66e8019d1e7a96665d9ea3dd0f269a6294ecfd20d0c8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9", "node_type": "1", "metadata": {}, "hash": "446c9c36c5cf3a127f54ab61ee794cd293e4d8bd617cd7c482fe7f812374601c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each `deploy.js` runs in its own temporary process connected to `ag-solo`, through which it can reach the chain.\nIt first uploads bundled contract source code to `ag-solo`,\nthen goes through the `home` object to access `zoe` and uses that to install the code on-chain.\n\nAll on-chain commands that deployment scripts use to deploy contracts and Dapps\nare also available to developers via the REPL associated with their wallet.\n\n## Contract Deployment", "mimetype": "text/plain", "start_char_idx": 1494, "end_char_idx": 1943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9": {"__data__": {"id_": "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "940bf617-eaf8-4361-8390-06c0afaaadcf", "node_type": "1", "metadata": {}, "hash": "608f37406e3079bf3e3ccb448ad1950f64df3729d05e3d6bfccc2bf5bd3afc78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "370a8902-de7d-4574-bcb0-1a360944586d", "node_type": "1", "metadata": {}, "hash": "9353facf3bee69865eb28f5861059197ea386d2cb868c75f7e8acc3dd7f74223", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contract Deployment\n\nFirst, let's look at _contract deployment_. `contract/deploy.js` bundles up a contract's source code\n(which may consist of multiple files and modules) and \"installs\"\nit on the blockchain as source code, using `Zoe`.\nThis does _not_ execute contract code; it just makes the code available on-chain.", "mimetype": "text/plain", "start_char_idx": 1921, "end_char_idx": 2242, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "370a8902-de7d-4574-bcb0-1a360944586d": {"__data__": {"id_": "370a8902-de7d-4574-bcb0-1a360944586d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9", "node_type": "1", "metadata": {}, "hash": "446c9c36c5cf3a127f54ab61ee794cd293e4d8bd617cd7c482fe7f812374601c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bfb0178-c02e-46e5-af64-9780b466d337", "node_type": "1", "metadata": {}, "hash": "3755f323f5fe10a480b3729f7422897369eea0a03ff22c45684635f720a526b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The contract deployment process uses [`zoe.install()`](/reference/zoe-api/zoe#e-zoe-install-bundle)\nto install the contract source code on-chain. This returns an _installation_ associated with the\nsource code. In a typical contract deployment, the deploy script adds the installation\nto the default shared board so it is broadly accessible on the chain. The script then writes\nthe board id to a config file in the Dapp's `ui` directory as shown below.", "mimetype": "text/plain", "start_char_idx": 2244, "end_char_idx": 2695, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6bfb0178-c02e-46e5-af64-9780b466d337": {"__data__": {"id_": "6bfb0178-c02e-46e5-af64-9780b466d337", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "370a8902-de7d-4574-bcb0-1a360944586d", "node_type": "1", "metadata": {}, "hash": "9353facf3bee69865eb28f5861059197ea386d2cb868c75f7e8acc3dd7f74223", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b1fa13e-37e9-4581-8d01-32d0deb69a8d", "node_type": "1", "metadata": {}, "hash": "5f4e7a142c85e17a9a72308193a4df0cc6ebd5e6083a4f45388013c40eaee5b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "By default, when you run `agoric init`, your dapp gets\nthe [`dapp-fungible-faucet` `contract/deploy.js` file](https://github.com/Agoric/dapp-fungible-faucet/blob/HEAD/contract/deploy.js),\nwhich is our example of a typical contract deploy script.\n\nDeploying the `dapp-fungible-faucet` contract (e.g., with `agoric deploy contract/deploy.js` after `agoric init`\ncopied it into a local directory) installs it on chain, and generates the\nfile `ui/public/conf/installationConstants.js` with contents like:", "mimetype": "text/plain", "start_char_idx": 2697, "end_char_idx": 3197, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b1fa13e-37e9-4581-8d01-32d0deb69a8d": {"__data__": {"id_": "8b1fa13e-37e9-4581-8d01-32d0deb69a8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bfb0178-c02e-46e5-af64-9780b466d337", "node_type": "1", "metadata": {}, "hash": "3755f323f5fe10a480b3729f7422897369eea0a03ff22c45684635f720a526b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "670bbc3a-27b3-4537-8da3-46e71ac4b7a7", "node_type": "1", "metadata": {}, "hash": "e03593418c6f161b8140e9a5b5d1c5fdba39387bd55840a7b2a922b4ff3a69be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// GENERATED FROM dapp-fungible-faucet/contract/deploy.js\nexport default {\n  CONTRACT_NAME: 'fungibleFaucet',\n  INSTALLATION_BOARD_ID: '1456154132'\n};\n```\n\nThe board provides a unique ID per object, in this case\n`\"1456154132\"`, so it is different for each contract deployment.\n\n## Application Service Deployment and Setup", "mimetype": "text/plain", "start_char_idx": 3199, "end_char_idx": 3526, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "670bbc3a-27b3-4537-8da3-46e71ac4b7a7": {"__data__": {"id_": "670bbc3a-27b3-4537-8da3-46e71ac4b7a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b1fa13e-37e9-4581-8d01-32d0deb69a8d", "node_type": "1", "metadata": {}, "hash": "5f4e7a142c85e17a9a72308193a4df0cc6ebd5e6083a4f45388013c40eaee5b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5", "node_type": "1", "metadata": {}, "hash": "e258f6efd116684a237f9c68e649c70b73eed51985cfb4844d73af5843f2f6d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Next, let's look at _application deployment and setup_. As compared to contract deployment,\nyou need to customize the Agoric API server deployment and setup much more\nfor your particular application and contract. Some Dapps use a singleton contract instance\nwhich presumes that it will be installed once and serve all customers (as opposed to an auction\nor swap contract, which is installed once, but instantiated separately for each sale it manages).\nA singleton may need to:", "mimetype": "text/plain", "start_char_idx": 3528, "end_char_idx": 4004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5": {"__data__": {"id_": "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "670bbc3a-27b3-4537-8da3-46e71ac4b7a7", "node_type": "1", "metadata": {}, "hash": "e03593418c6f161b8140e9a5b5d1c5fdba39387bd55840a7b2a922b4ff3a69be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b38fb33-b26e-42d7-8cd5-d56130368b7d", "node_type": "1", "metadata": {}, "hash": "4573f778f1eb8f6054f17b79e597c3dc001167ca2400d2ebb90b945f82aadea2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Be instantiated\n- Find and connect to on-chain resources such as issuers for specific currencies\n- Create new on-chain resources like new currencies or NFTs\n- Create new Purses for the application to use\n- Seed the on-chain contract instance with initial orders or configuration.\n\nThese example contract `api/deploy.js` scripts show some of the\nrange of the above custom setup actions:", "mimetype": "text/plain", "start_char_idx": 4006, "end_char_idx": 4393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b38fb33-b26e-42d7-8cd5-d56130368b7d": {"__data__": {"id_": "0b38fb33-b26e-42d7-8cd5-d56130368b7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5", "node_type": "1", "metadata": {}, "hash": "e258f6efd116684a237f9c68e649c70b73eed51985cfb4844d73af5843f2f6d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "405a12dd-971c-4897-9c94-969070ea9346", "node_type": "1", "metadata": {}, "hash": "d6309eaa6d691127490240ebc14a29ca841efefefbe2effada526b4897451c0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [`dapp-fungible-faucet`](https://github.com/Agoric/dapp-fungible-faucet/blob/HEAD/api/deploy.js)\n- [`dapp-card-store`](https://github.com/Agoric/dapp-card-store/blob/HEAD/api/deploy.js)\n- [`dapp-simple-exchange`](https://github.com/Agoric/dapp-simple-exchange/blob/HEAD/api/deploy.js)\n\nApplication deployment steps may include:", "mimetype": "text/plain", "start_char_idx": 4395, "end_char_idx": 4724, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "405a12dd-971c-4897-9c94-969070ea9346": {"__data__": {"id_": "405a12dd-971c-4897-9c94-969070ea9346", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b38fb33-b26e-42d7-8cd5-d56130368b7d", "node_type": "1", "metadata": {}, "hash": "4573f778f1eb8f6054f17b79e597c3dc001167ca2400d2ebb90b945f82aadea2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb3a0a62-8dba-46dd-a78d-2c1ff37ae4c8", "node_type": "1", "metadata": {}, "hash": "2f5e5d8d57560972a321dabc4a2c1a6b8dd5a58c063889f589f5f7c852b6bd17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Bundle the `api/` code and deploy it to the running local `ag-solo`\n- Include the contract installation configuration information in the bundle\n- Create new currencies and add them to the application's wallet\n\nSteps for contracts that use a singleton instance for all clients may further include:", "mimetype": "text/plain", "start_char_idx": 4726, "end_char_idx": 5024, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb3a0a62-8dba-46dd-a78d-2c1ff37ae4c8": {"__data__": {"id_": "fb3a0a62-8dba-46dd-a78d-2c1ff37ae4c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_deploying.md", "node_type": "4", "metadata": {}, "hash": "cd7384e088f6de7e3b833958f07d860f2e9f58bc9469031f5e90d7d9a44ea91e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "405a12dd-971c-4897-9c94-969070ea9346", "node_type": "1", "metadata": {}, "hash": "d6309eaa6d691127490240ebc14a29ca841efefefbe2effada526b4897451c0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Instantiate a contract instance using the installation created by contract deployment\n- Use the invitation from that instance creation to configure the new instance\n- Register the contract instance's `instance` with the Board\n- Record the contract instance's Board ID in a configuration file", "mimetype": "text/plain", "start_char_idx": 5026, "end_char_idx": 5319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c40f2c1-c20e-434c-875a-edec18146a62": {"__data__": {"id_": "3c40f2c1-c20e-434c-875a-edec18146a62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42376c7a-fb8e-468e-96f4-76f80623b978", "node_type": "1", "metadata": {}, "hash": "219878d6bd69c6cb4db362c63dd64a789d808bb4bf90ef71f84ea1d982ef7821", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deploying a Smart Contact\n\nIn the `dapp-offer-up` tutorial you just went through you saw how quick and easy it was to deploy a contact on Agoric using the `yarn start:contract` command. Let's take a look at how this command works and what's going on behind the scenes.\n\n## How it Works\n\nRunning the `yarn start:contract` command in the tutorial runs a script which accomplishes several things:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 395, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42376c7a-fb8e-468e-96f4-76f80623b978": {"__data__": {"id_": "42376c7a-fb8e-468e-96f4-76f80623b978", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c40f2c1-c20e-434c-875a-edec18146a62", "node_type": "1", "metadata": {}, "hash": "b15d9c652b1a6934534638d452a1504e1677f091ab6dfa8e60b589ca5b47a3d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00626dab-5499-4f6a-9ea6-6b7766785fc4", "node_type": "1", "metadata": {}, "hash": "7910b87619b027d9ccb37e982327afcc30b9c589c08859873db274b7e3c7cec0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The script bundled the contract with the `agoric run` command\n- The script collected some ATOM with the `agd tx bank send` command\n- The script then used the ATOM to open a vault. This vault was used to mint enough IST to pay to install the bundles on chain with `agops vaults open` command\n- The script then installed the bundles on chain with the `agd tx swingset install-bundle` command\n- From there the script collected enough BLD to pay for a governance deposit with the `agd tx bank send` command", "mimetype": "text/plain", "start_char_idx": 397, "end_char_idx": 901, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00626dab-5499-4f6a-9ea6-6b7766785fc4": {"__data__": {"id_": "00626dab-5499-4f6a-9ea6-6b7766785fc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42376c7a-fb8e-468e-96f4-76f80623b978", "node_type": "1", "metadata": {}, "hash": "219878d6bd69c6cb4db362c63dd64a789d808bb4bf90ef71f84ea1d982ef7821", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11e3ceea-20d2-42f9-b743-caf04480e47a", "node_type": "1", "metadata": {}, "hash": "c6a137e978553e47dfb61e00e1cf6c143c8277f9b09770c92afc01bb4f8d7900", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Next, the script made a governance proposal to start the contract with the `agd tx gov submit-proposal swingset-core-eval` command\n- Finally, the script voted for the proposal and waited for the proposal to pass.", "mimetype": "text/plain", "start_char_idx": 902, "end_char_idx": 1116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11e3ceea-20d2-42f9-b743-caf04480e47a": {"__data__": {"id_": "11e3ceea-20d2-42f9-b743-caf04480e47a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00626dab-5499-4f6a-9ea6-6b7766785fc4", "node_type": "1", "metadata": {}, "hash": "7910b87619b027d9ccb37e982327afcc30b9c589c08859873db274b7e3c7cec0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4aec799-d70e-4850-83b7-bd5e07ecae8b", "node_type": "1", "metadata": {}, "hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once again, we can reference the project's `package.json` file to learn a bit more about what `yarn start:contract` is doing behind the scenes.", "mimetype": "text/plain", "start_char_idx": 1118, "end_char_idx": 1261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4aec799-d70e-4850-83b7-bd5e07ecae8b": {"__data__": {"id_": "f4aec799-d70e-4850-83b7-bd5e07ecae8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11e3ceea-20d2-42f9-b743-caf04480e47a", "node_type": "1", "metadata": {}, "hash": "c6a137e978553e47dfb61e00e1cf6c143c8277f9b09770c92afc01bb4f8d7900", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ba8b9f7-ac39-473b-b4db-1f4be452ca45", "node_type": "1", "metadata": {}, "hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n  \"scripts\": {\n    \"start:docker\": \"cd contract && docker compose up -d\",\n    \"docker:logs\": \"cd contract; docker compose logs --tail 200 -f\",\n    \"docker:bash\": \"cd contract; docker compose exec agd bash\",\n    \"docker:make\": \"cd contract; docker compose exec agd make -C /workspace/contract\",\n    \"make:help\": \"make -C contract list\",\n    \"start:contract\": \"cd contract && yarn start\",\n    \"start:ui\": \"cd ui && yarn dev\",\n    \"lint\": \"yarn workspaces run lint\",", "mimetype": "text/plain", "start_char_idx": 1263, "end_char_idx": 1734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ba8b9f7-ac39-473b-b4db-1f4be452ca45": {"__data__": {"id_": "3ba8b9f7-ac39-473b-b4db-1f4be452ca45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4aec799-d70e-4850-83b7-bd5e07ecae8b", "node_type": "1", "metadata": {}, "hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f", "node_type": "1", "metadata": {}, "hash": "30ac9558b93b20263866be2ef7536f0e9901dca988abb62347499f1f49975347", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"test\": \"yarn workspaces run test\",\n    \"test:e2e\": \"yarn workspace offer-up-ui test:e2e\",\n    \"build\": \"yarn workspaces run build\"\n  }\n```", "mimetype": "text/plain", "start_char_idx": 1739, "end_char_idx": 1878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f": {"__data__": {"id_": "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ba8b9f7-ac39-473b-b4db-1f4be452ca45", "node_type": "1", "metadata": {}, "hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32011c16-b6d3-47ea-88b4-39d23fccb43f", "node_type": "1", "metadata": {}, "hash": "29f1c014ba900e207f69fa591aaf2d1e4b33188df13c7df75956c3c8aa160e04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note the calling the `yarn start:contract` command is the same as running `yarn start` from the contract directory. We can look at `package.json` from the `contract` directory to learn even more:", "mimetype": "text/plain", "start_char_idx": 1880, "end_char_idx": 2075, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32011c16-b6d3-47ea-88b4-39d23fccb43f": {"__data__": {"id_": "32011c16-b6d3-47ea-88b4-39d23fccb43f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f", "node_type": "1", "metadata": {}, "hash": "30ac9558b93b20263866be2ef7536f0e9901dca988abb62347499f1f49975347", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c444b03-20c0-4b15-881d-37ad3572a5c7", "node_type": "1", "metadata": {}, "hash": "911035840aa225351a42f920187a165eb28479fcf3200b6b5a7c46e205c0eb57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n \"scripts\": {\n    \"start:docker\": \"docker compose up -d\",\n    \"docker:logs\": \"docker compose logs --tail 200 -f\",\n    \"docker:bash\": \"docker compose exec agd bash\",\n    \"docker:make\": \"docker compose exec agd make -C /workspace/contract\",\n    \"make:help\": \"make list\",\n    \"start\": \"yarn docker:make clean start-contract\",\n    \"build\": \"agoric run scripts/build-contract-deployer.js\",\n    \"test\": \"ava --verbose\",\n    \"lint\": \"eslint '**/*.js'\",\n    \"lint:fix\": \"eslint --fix '**/*.js'\"\n  },\n```", "mimetype": "text/plain", "start_char_idx": 2077, "end_char_idx": 2580, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c444b03-20c0-4b15-881d-37ad3572a5c7": {"__data__": {"id_": "9c444b03-20c0-4b15-881d-37ad3572a5c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md", "node_type": "4", "metadata": {}, "hash": "6ad247f06d42805a19b474b9d41fa7e9ecef4277b3cc1b9a446a00fbdf894f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32011c16-b6d3-47ea-88b4-39d23fccb43f", "node_type": "1", "metadata": {}, "hash": "29f1c014ba900e207f69fa591aaf2d1e4b33188df13c7df75956c3c8aa160e04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the json snippet above note that the `start` command is running `yarn docker:make clean start-contract`.\n\n::: tip Video Walkthrough\n\nAs you're going through this explainer it may be helpful to watch this video walkthrough.\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/pWZUHJqj_Lo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n:::", "mimetype": "text/plain", "start_char_idx": 2582, "end_char_idx": 3088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d8dc287-31b8-483f-a842-9f338e4b836f": {"__data__": {"id_": "2d8dc287-31b8-483f-a842-9f338e4b836f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-make-an-offer.md", "node_type": "4", "metadata": {}, "hash": "7035125ba1da18861602aa36689c9652f8881614be49cbfdddfe04d80edf1e70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b78d0b74-c7fe-4b25-ac3a-43211fa9f722", "node_type": "1", "metadata": {}, "hash": "cc72688fd52f686732faa22148882c0f5d018f6e6f4563b9ec663915a43a3293", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Making an Offer\n\nAs you saw in the `dapp-offer-up` tutorial you could use the dapp UI to make an offer on up to three items.\n\nTake a look at our detailed [tutorial on how the UI for making offers](/guides/getting-started/ui-tutorial/making-an-offer.html) works in this dapp.\n\n### How it Looks\n\nHere is how the UI looks after completion:\n![The UI look after completing the UI tutorial](./assets/dapp-offer-up-run.gif)\n\n::: tip Video Walkthrough", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b78d0b74-c7fe-4b25-ac3a-43211fa9f722": {"__data__": {"id_": "b78d0b74-c7fe-4b25-ac3a-43211fa9f722", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-make-an-offer.md", "node_type": "4", "metadata": {}, "hash": "7035125ba1da18861602aa36689c9652f8881614be49cbfdddfe04d80edf1e70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d8dc287-31b8-483f-a842-9f338e4b836f", "node_type": "1", "metadata": {}, "hash": "2295c39da9bf92997bb580fad1cd50476acd4f899f84ea2b5da046733224f8ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Video Walkthrough\n\nAs you're going through this explainer it may be helpful to watch this video walkthrough.\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Wy13GLmujhA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n\n:::", "mimetype": "text/plain", "start_char_idx": 420, "end_char_idx": 818, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "39152cf1-198a-4b82-a2cf-10526a2c0ae1": {"__data__": {"id_": "39152cf1-198a-4b82-a2cf-10526a2c0ae1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md", "node_type": "4", "metadata": {}, "hash": "399b9f3f903510abc5a299f95c1bbb8c129ad6615eb55a709af32bfe30e5a3b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf65f27e-651e-4d7c-90c7-7c738b69948c", "node_type": "1", "metadata": {}, "hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Starting a Local Chain\n\nAs you saw in this tutorial, starting a local chain is easy!\n\n## How it Works\n\nIn the `dapp-offer-up` sample dapp, configuration for the Agoric containers is specified in the `package.json` file. Take note of the Docker specific parameters in the `script` section of `package.json` below:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf65f27e-651e-4d7c-90c7-7c738b69948c": {"__data__": {"id_": "bf65f27e-651e-4d7c-90c7-7c738b69948c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md", "node_type": "4", "metadata": {}, "hash": "399b9f3f903510abc5a299f95c1bbb8c129ad6615eb55a709af32bfe30e5a3b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39152cf1-198a-4b82-a2cf-10526a2c0ae1", "node_type": "1", "metadata": {}, "hash": "c3150b2b977b62db0e3aef4d436aff7f4f673a4a37b131421ba633abdf782fc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9687f9c-2d99-48be-9a0c-5c3dc4843625", "node_type": "1", "metadata": {}, "hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n  \"scripts\": {\n    \"start:docker\": \"cd contract && docker compose up -d\",\n    \"docker:logs\": \"cd contract; docker compose logs --tail 200 -f\",\n    \"docker:bash\": \"cd contract; docker compose exec agd bash\",\n    \"docker:make\": \"cd contract; docker compose exec agd make -C /workspace/contract\",\n    \"make:help\": \"make -C contract list\",\n    \"start:contract\": \"cd contract && yarn start\",\n    \"start:ui\": \"cd ui && yarn dev\",\n    \"lint\": \"yarn workspaces run lint\",", "mimetype": "text/plain", "start_char_idx": 316, "end_char_idx": 787, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9687f9c-2d99-48be-9a0c-5c3dc4843625": {"__data__": {"id_": "c9687f9c-2d99-48be-9a0c-5c3dc4843625", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md", "node_type": "4", "metadata": {}, "hash": "399b9f3f903510abc5a299f95c1bbb8c129ad6615eb55a709af32bfe30e5a3b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf65f27e-651e-4d7c-90c7-7c738b69948c", "node_type": "1", "metadata": {}, "hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40115f76-983c-424c-9cee-9711086543ee", "node_type": "1", "metadata": {}, "hash": "c9649fe61b2af72926b9e6a5c1f3b31c0074ba5abbebf1ef817eebda134c9eab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"test\": \"yarn workspaces run test\",\n    \"test:e2e\": \"yarn workspace offer-up-ui test:e2e\",\n    \"build\": \"yarn workspaces run build\"\n  }\n```", "mimetype": "text/plain", "start_char_idx": 792, "end_char_idx": 931, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40115f76-983c-424c-9cee-9711086543ee": {"__data__": {"id_": "40115f76-983c-424c-9cee-9711086543ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md", "node_type": "4", "metadata": {}, "hash": "399b9f3f903510abc5a299f95c1bbb8c129ad6615eb55a709af32bfe30e5a3b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9687f9c-2d99-48be-9a0c-5c3dc4843625", "node_type": "1", "metadata": {}, "hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dc71d77-c903-4428-a7eb-c9b705940c7f", "node_type": "1", "metadata": {}, "hash": "fcca139a8fa2ab89b5b4be418c11c10b5c7d7fec3e7462950bd954465c6a3054", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the tutorial you first used the `yarn create` command to clone the dapp. Next you ran the `yarn install` command to install all required dependencies. Finally you ran the `yarn start:docker` command to start a local chain. You can see from the json code snippet above the this command was running `docker compose up -d` from the `contract` folder.\n\n::: tip Video Walkthrough\n\nAs you're going through this explainer it may be helpful to watch this video walkthrough.", "mimetype": "text/plain", "start_char_idx": 933, "end_char_idx": 1401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9dc71d77-c903-4428-a7eb-c9b705940c7f": {"__data__": {"id_": "9dc71d77-c903-4428-a7eb-c9b705940c7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md", "node_type": "4", "metadata": {}, "hash": "399b9f3f903510abc5a299f95c1bbb8c129ad6615eb55a709af32bfe30e5a3b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40115f76-983c-424c-9cee-9711086543ee", "node_type": "1", "metadata": {}, "hash": "c9649fe61b2af72926b9e6a5c1f3b31c0074ba5abbebf1ef817eebda134c9eab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/WJ1MlHudpuM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n\n:::", "mimetype": "text/plain", "start_char_idx": 1403, "end_char_idx": 1683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e82683b8-4d3b-4b65-8c4a-f3e447772034": {"__data__": {"id_": "e82683b8-4d3b-4b65-8c4a-f3e447772034", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c", "node_type": "1", "metadata": {}, "hash": "03bd6b298774b30052e1e4676753a2f35ba4f829d31eaff470ffdc7be0985277", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Getting Started\n\nIn these steps you will be getting your first Agoric dapp up and running!\n\n::: tip Video Walkthrough\n\nAs you're going through this tutorial it may be helpful to watch this video walkthrough, showing you all the steps and the desired outcome of each.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c": {"__data__": {"id_": "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e82683b8-4d3b-4b65-8c4a-f3e447772034", "node_type": "1", "metadata": {}, "hash": "0d137221596f4391e96411cbfdb693cab97d4c0858f01e6b36e9dc847120064e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef651410-152d-4821-aaa4-e725917d2c84", "node_type": "1", "metadata": {}, "hash": "4ccb74e7ae9f7918f89266277f0521ec7e0ce55f093d3e288a9136cb482d42c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/huTI9_Gq2ow\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n\n:::\n\n## Your First Agoric Dapp - Offer Up", "mimetype": "text/plain", "start_char_idx": 270, "end_char_idx": 588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef651410-152d-4821-aaa4-e725917d2c84": {"__data__": {"id_": "ef651410-152d-4821-aaa4-e725917d2c84", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c", "node_type": "1", "metadata": {}, "hash": "03bd6b298774b30052e1e4676753a2f35ba4f829d31eaff470ffdc7be0985277", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "861a9900-b468-4d0f-9f0d-5de808c683e2", "node_type": "1", "metadata": {}, "hash": "476e069d80d231e678a61061c162a8d6cf3cecc064abf2dc870e17a416d61bf5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Offer Up Dapp allows users to view all listed items up for sale in a marketplace. The Dapp shows 3 items by default (maps, potions, and scrolls). As a user you are able to choose up to 3 total items (in any combination). You can then create an offer for an amount of at least 0.25 IST. Once you sign the transaction, you will see the 3 items in your wallet and your wallet amount deducted by the Offer amount.", "mimetype": "text/plain", "start_char_idx": 590, "end_char_idx": 1003, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "861a9900-b468-4d0f-9f0d-5de808c683e2": {"__data__": {"id_": "861a9900-b468-4d0f-9f0d-5de808c683e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef651410-152d-4821-aaa4-e725917d2c84", "node_type": "1", "metadata": {}, "hash": "4ccb74e7ae9f7918f89266277f0521ec7e0ce55f093d3e288a9136cb482d42c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85dabe70-cb12-4a53-9442-2d5d53cbc489", "node_type": "1", "metadata": {}, "hash": "978ee821cf2b735d03cb230396b993bf24368e9694a11b3994a314678f743548", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: items listed on offer up\"\n  src=\"./assets/new_002_small2.png\" />\n\n## How to Get Help\n\nBefore getting started, there are some resources you might want to keep handy in case you get stuck, have questions, or are curious about any of the components. Getting in contact with us is easy!", "mimetype": "text/plain", "start_char_idx": 1005, "end_char_idx": 1342, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85dabe70-cb12-4a53-9442-2d5d53cbc489": {"__data__": {"id_": "85dabe70-cb12-4a53-9442-2d5d53cbc489", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "861a9900-b468-4d0f-9f0d-5de808c683e2", "node_type": "1", "metadata": {}, "hash": "476e069d80d231e678a61061c162a8d6cf3cecc064abf2dc870e17a416d61bf5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75dd4666-9464-4042-a19e-6dea0945adf9", "node_type": "1", "metadata": {}, "hash": "c65195458018ef41132978298c4c5efed9eaf49744fa32966cf7845ac011d5c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Join us for our Weekly [Developer Office Hours](https://github.com/Agoric/agoric-sdk/wiki/Office-Hours)\n- Come chat with us and other developers on the Official [Agoric Discord](https://agoric.com/discord)\n- Search and post [Q & A](https://github.com/Agoric/agoric-sdk/discussions/categories/q-a) in [agoric-sdk discussions](https://github.com/Agoric/agoric-sdk/discussions)\n- Send us a message on [X](https://twitter.com/agoric)\n- Send an Email to [Developer Relations](mailto://devrel@agoric.com)", "mimetype": "text/plain", "start_char_idx": 1344, "end_char_idx": 1844, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75dd4666-9464-4042-a19e-6dea0945adf9": {"__data__": {"id_": "75dd4666-9464-4042-a19e-6dea0945adf9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85dabe70-cb12-4a53-9442-2d5d53cbc489", "node_type": "1", "metadata": {}, "hash": "978ee821cf2b735d03cb230396b993bf24368e9694a11b3994a314678f743548", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52edf81a-d3d1-4397-b380-019e7ef80a94", "node_type": "1", "metadata": {}, "hash": "5226857e4e8b19a2a84ccba1c776cecba7925f62981939e81ff542f551e8d3d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Platform Requirements\n\nCurrently Agoric supports macOS and Linux (including [Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/about)). This tutorial is based on an installation of [Ubuntu 22.04 LTS](https://ubuntu.com/download/desktop). If you're using a different operating system, some variation may be required.\n\n## Installing Prerequisites", "mimetype": "text/plain", "start_char_idx": 1846, "end_char_idx": 2218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52edf81a-d3d1-4397-b380-019e7ef80a94": {"__data__": {"id_": "52edf81a-d3d1-4397-b380-019e7ef80a94", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75dd4666-9464-4042-a19e-6dea0945adf9", "node_type": "1", "metadata": {}, "hash": "c65195458018ef41132978298c4c5efed9eaf49744fa32966cf7845ac011d5c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81a65a15-73f7-408b-a57b-b15eade8ed77", "node_type": "1", "metadata": {}, "hash": "aa20ea44287753f9906dbcb77404eb7b43faa849cb23f814995480d2e2427ec6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Installing Prerequisites\n\nIn this section you'll be installing prerequisite components into your environment. If you're working with your own environment rather than using a fresh Ubuntu install, you may already have some or all of these components already installed.\n\n### Installing Node.js\n\n<details>\n<summary>Installing Node.js</summary>\n\nThis tutorial requires a specific version of [Node.js](https://nodejs.org/).", "mimetype": "text/plain", "start_char_idx": 2191, "end_char_idx": 2612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81a65a15-73f7-408b-a57b-b15eade8ed77": {"__data__": {"id_": "81a65a15-73f7-408b-a57b-b15eade8ed77", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52edf81a-d3d1-4397-b380-019e7ef80a94", "node_type": "1", "metadata": {}, "hash": "5226857e4e8b19a2a84ccba1c776cecba7925f62981939e81ff542f551e8d3d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1d51044-a9b9-4da3-a513-c080f4564dfc", "node_type": "1", "metadata": {}, "hash": "cb81796e55149ba9d1840829b14899c00ed2ff267b5454a1d606b7cd0a48a177", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [nvm](https://github.com/nvm-sh/nvm) (Node Version Manager) utility makes it easy to select the right version.\n\nFirst, follow the [nvm installation instructions](https://github.com/nvm-sh/nvm?tab=readme-ov-file#installing-and-updating), including sourcing `nvm.sh` into the shell.\n\n<details>\n<summary>Installing nvm on Ubuntu</summary>\n\nYou can copy the following command on your shell and get it running", "mimetype": "text/plain", "start_char_idx": 2614, "end_char_idx": 3022, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1d51044-a9b9-4da3-a513-c080f4564dfc": {"__data__": {"id_": "b1d51044-a9b9-4da3-a513-c080f4564dfc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81a65a15-73f7-408b-a57b-b15eade8ed77", "node_type": "1", "metadata": {}, "hash": "aa20ea44287753f9906dbcb77404eb7b43faa849cb23f814995480d2e2427ec6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c0231e3-157f-4d71-9f98-1f9b8edefcfa", "node_type": "1", "metadata": {}, "hash": "7d3c40f37f9a3e0fa3fa7767d16876ce1c5b8f1aba6c9d5f0dcb688f39629771", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\n# For example:\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\nexport NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n</details>\n\n<details>\n<summary>Installing nvm on MacOS</summary>", "mimetype": "text/plain", "start_char_idx": 3024, "end_char_idx": 3376, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c0231e3-157f-4d71-9f98-1f9b8edefcfa": {"__data__": {"id_": "3c0231e3-157f-4d71-9f98-1f9b8edefcfa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1d51044-a9b9-4da3-a513-c080f4564dfc", "node_type": "1", "metadata": {}, "hash": "cb81796e55149ba9d1840829b14899c00ed2ff267b5454a1d606b7cd0a48a177", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2", "node_type": "1", "metadata": {}, "hash": "b11945c63684f7256d94dbda3b760493a3b63833428a6188ebb96fef6e28a98e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "nvm is not available in the default package manager for Mac, so you will need to install Homebrew first. To do this, open a terminal window and run the following command:\n\n```sh\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n```\n\nThen, you can install nvm using Brew\n\n```sh\nbrew install nvm\n```", "mimetype": "text/plain", "start_char_idx": 3378, "end_char_idx": 3723, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2": {"__data__": {"id_": "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c0231e3-157f-4d71-9f98-1f9b8edefcfa", "node_type": "1", "metadata": {}, "hash": "7d3c40f37f9a3e0fa3fa7767d16876ce1c5b8f1aba6c9d5f0dcb688f39629771", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7876a1e5-cf0b-4aab-aadf-9f87cdf48085", "node_type": "1", "metadata": {}, "hash": "eb3a513b9a15e7021016e08f3b991a1f91abeed91e13f74c0de49064060345c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nbrew install nvm\n```\n\nAdd nvm to your shell profile: To make nvm available every time you open a new terminal window, you will need to add the following line to your shell profile (e.g., ~/.bash_profile or ~/.zshrc):\n\n```sh\nsource $(brew --prefix nvm)/nvm.sh\n```\n\n</details>\n\nThen, install Node.js.\n\n```sh\nnvm install v18.18.0\n```\n\nFinally, verify the Node.js version.\n\n```sh\nnode --version\n```\n\n</details>\n\n### Installing Yarn", "mimetype": "text/plain", "start_char_idx": 3697, "end_char_idx": 4130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7876a1e5-cf0b-4aab-aadf-9f87cdf48085": {"__data__": {"id_": "7876a1e5-cf0b-4aab-aadf-9f87cdf48085", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2", "node_type": "1", "metadata": {}, "hash": "b11945c63684f7256d94dbda3b760493a3b63833428a6188ebb96fef6e28a98e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a30eec10-ef2f-4093-8ab8-939dc254a851", "node_type": "1", "metadata": {}, "hash": "c888b88b020a7b863c16ecd4a439732cc6b5bbedf0db85f203cb3aa12988692e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</details>\n\n### Installing Yarn\n\nThis will install yarn, and verify it is installed correctly. Install yarn by either running `npm install --global yarn`, or visit https://classic.yarnpkg.com/en/docs/install for more information. See below, `corepack enable` will add the Corepack shims to the install directories, and `yarn --version` will verify yarn is installed correctly.\n\n```sh\ncorepack enable\nyarn --version # for verification\n```", "mimetype": "text/plain", "start_char_idx": 4099, "end_char_idx": 4536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a30eec10-ef2f-4093-8ab8-939dc254a851": {"__data__": {"id_": "a30eec10-ef2f-4093-8ab8-939dc254a851", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7876a1e5-cf0b-4aab-aadf-9f87cdf48085", "node_type": "1", "metadata": {}, "hash": "eb3a513b9a15e7021016e08f3b991a1f91abeed91e13f74c0de49064060345c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a154562d-e18e-498e-92dd-c8d28aa80817", "node_type": "1", "metadata": {}, "hash": "a70c59956f7554e4e14bfaa7481ceb479c562314f4f351adfa585fd067b0b353", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This app uses Yarn 1, so running the above command will show a version in the format `1.x.x`. If you are using a different version of `yarn`, you can use `yarn set version <version>` to switch like in the example below.\n\n```sh\nyarn set version 1.22.5\n```\n\n### Installing Docker\n\n<details>\n<summary>Installing Docker</summary>", "mimetype": "text/plain", "start_char_idx": 4538, "end_char_idx": 4863, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a154562d-e18e-498e-92dd-c8d28aa80817": {"__data__": {"id_": "a154562d-e18e-498e-92dd-c8d28aa80817", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a30eec10-ef2f-4093-8ab8-939dc254a851", "node_type": "1", "metadata": {}, "hash": "c888b88b020a7b863c16ecd4a439732cc6b5bbedf0db85f203cb3aa12988692e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ee7d686-c2d8-40cd-af36-d30233be60ad", "node_type": "1", "metadata": {}, "hash": "7142d5ab06c9fe2b45e7e04acc8a8c6f7491efda45b1b6ca1004b75db4b3c4fe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For docker, you can either download Docker UI using the steps on the [installation for Ubuntu](https://docs.docker.com/desktop/install/ubuntu/) or [installation for Mac](https://docs.docker.com/desktop/install/mac-install/)\n\nTo install via CLI, you can check following details.\n\n<details>\n<summary>Installing Docker on Ubuntu</summary>", "mimetype": "text/plain", "start_char_idx": 4865, "end_char_idx": 5200, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ee7d686-c2d8-40cd-af36-d30233be60ad": {"__data__": {"id_": "9ee7d686-c2d8-40cd-af36-d30233be60ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a154562d-e18e-498e-92dd-c8d28aa80817", "node_type": "1", "metadata": {}, "hash": "a70c59956f7554e4e14bfaa7481ceb479c562314f4f351adfa585fd067b0b353", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d54d80b2-287b-4a86-be49-b0e226a5609c", "node_type": "1", "metadata": {}, "hash": "eaa44790580ac3184f14290f6486b409a01c42704f66543246d65d555bfa44f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now you'll install Docker using the two steps below. This first block of commands will add the Docker GPG keys to your system, then add the repository to Apt for installation.\n\n```sh\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg", "mimetype": "text/plain", "start_char_idx": 5202, "end_char_idx": 5680, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d54d80b2-287b-4a86-be49-b0e226a5609c": {"__data__": {"id_": "d54d80b2-287b-4a86-be49-b0e226a5609c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ee7d686-c2d8-40cd-af36-d30233be60ad", "node_type": "1", "metadata": {}, "hash": "7142d5ab06c9fe2b45e7e04acc8a8c6f7491efda45b1b6ca1004b75db4b3c4fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab4e3684-536e-4a20-bef0-c32c119040e2", "node_type": "1", "metadata": {}, "hash": "96c2d60ef802b1b4cacd91ea4b07a16cf96c5fd8508d5afa2961db27e27e7bc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n```\n\nNow you can install Docker!\n\n```sh\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```", "mimetype": "text/plain", "start_char_idx": 5682, "end_char_idx": 6138, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab4e3684-536e-4a20-bef0-c32c119040e2": {"__data__": {"id_": "ab4e3684-536e-4a20-bef0-c32c119040e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d54d80b2-287b-4a86-be49-b0e226a5609c", "node_type": "1", "metadata": {}, "hash": "eaa44790580ac3184f14290f6486b409a01c42704f66543246d65d555bfa44f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5688753-8682-46b9-b1b8-14788d898aca", "node_type": "1", "metadata": {}, "hash": "7aa3626dc28b9861eb3d0a66b68293a837d458b34e5017bec5980683cd589996", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now that Docker has been installed you'll need to add your user account to the Docker group.\n\n```sh\nsudo usermod -aG docker $USER\n```\n\nSince your user account was just added to the docker group, run the following command to re-evaluate group memberships.\n\n```sh\nexec su -l $USER\n```\n\n</details>\n\n<details>\n<summary>Installing Docker on MacOS</summary>\n\nYou can install Docker using their official documentation or Homebrew.\n\n**Using Docker's Website:**", "mimetype": "text/plain", "start_char_idx": 6140, "end_char_idx": 6592, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5688753-8682-46b9-b1b8-14788d898aca": {"__data__": {"id_": "e5688753-8682-46b9-b1b8-14788d898aca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab4e3684-536e-4a20-bef0-c32c119040e2", "node_type": "1", "metadata": {}, "hash": "96c2d60ef802b1b4cacd91ea4b07a16cf96c5fd8508d5afa2961db27e27e7bc6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "052c414f-b240-4338-9b25-3ad7dd80de84", "node_type": "1", "metadata": {}, "hash": "c2a2dfa7d2dc7bfb0d826dff5ca360e24f34c30a7bd728607cf5db91d386193e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Using Docker's Website:**\n\nFollow the [official Docker installation guide for Mac](https://docs.docker.com/desktop/install/mac-install/).\n\nAfter installing Docker Desktop, you can start docker with:\n\n```sh\nopen -a Docker\n```\n\n**Using Homebrew:**\n\nPreviously, you installed brew on your machine. You can install docker using the same command.\n\n```sh\nbrew cask install docker\n```\n\nor\n\n```sh\nbrew install docker --cask\n```\n\n</details>\n\nNow test that Docker works by running the `hello-world` sample.", "mimetype": "text/plain", "start_char_idx": 6565, "end_char_idx": 7063, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "052c414f-b240-4338-9b25-3ad7dd80de84": {"__data__": {"id_": "052c414f-b240-4338-9b25-3ad7dd80de84", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5688753-8682-46b9-b1b8-14788d898aca", "node_type": "1", "metadata": {}, "hash": "7aa3626dc28b9861eb3d0a66b68293a837d458b34e5017bec5980683cd589996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b745b54-8b2e-4522-8527-d1829d8ab767", "node_type": "1", "metadata": {}, "hash": "2e6a8ea51dbeaf80fa68b8b7b04840d9904db1777ce60dc348950075f10ef9be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\ndocker run hello-world\n```\n\nThe output of the `hello-world` example should be:\n\n```\nHello from Docker!\nThis message shows that your installation appears to be working correctly.", "mimetype": "text/plain", "start_char_idx": 7065, "end_char_idx": 7248, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b745b54-8b2e-4522-8527-d1829d8ab767": {"__data__": {"id_": "3b745b54-8b2e-4522-8527-d1829d8ab767", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "052c414f-b240-4338-9b25-3ad7dd80de84", "node_type": "1", "metadata": {}, "hash": "c2a2dfa7d2dc7bfb0d826dff5ca360e24f34c30a7bd728607cf5db91d386193e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d", "node_type": "1", "metadata": {}, "hash": "6667ceb12b45eebc9a1624023270de3db708dc8fad53840e1a62f734281f3ba3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.", "mimetype": "text/plain", "start_char_idx": 7250, "end_char_idx": 7690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d": {"__data__": {"id_": "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b745b54-8b2e-4522-8527-d1829d8ab767", "node_type": "1", "metadata": {}, "hash": "2e6a8ea51dbeaf80fa68b8b7b04840d9904db1777ce60dc348950075f10ef9be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "726558bd-a1ce-43be-b590-33e89df18e26", "node_type": "1", "metadata": {}, "hash": "deff108264dbd161c749e5c51896ba58d0143a896568d2c9b0d18f27139a6917", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n```\n\n</details>\n\n## Creating Your Dapp From a Template\n\nNow you'll use yarn to pull down the sample dapp. The sample dapp will be placed in a subfolder named `demo`.\n\n```sh\nyarn create @agoric/dapp demo\n```\n\n## Installing Dapp Dependencies", "mimetype": "text/plain", "start_char_idx": 7692, "end_char_idx": 8199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "726558bd-a1ce-43be-b590-33e89df18e26": {"__data__": {"id_": "726558bd-a1ce-43be-b590-33e89df18e26", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d", "node_type": "1", "metadata": {}, "hash": "6667ceb12b45eebc9a1624023270de3db708dc8fad53840e1a62f734281f3ba3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "419184cc-f8ec-40b4-a9a9-afbfea84b9a4", "node_type": "1", "metadata": {}, "hash": "7d6833f1c814bdbfe7c78a362e672cbf52567dc976d20284b223b7875fbd18e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Installing Dapp Dependencies\n\nNow navigate to the `demo` directory and run the `yarn install` command to install any solution dependencies.\n\nDownloading all the required dependencies may take several minutes. The UI depends on the React framework, and the contract depends on the Agoric framework. The packages in this project also have development dependencies for testing, code formatting, and static analysis.\n\n```sh\ncd demo\n```\n\n```sh\nyarn install\n```", "mimetype": "text/plain", "start_char_idx": 8168, "end_char_idx": 8626, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "419184cc-f8ec-40b4-a9a9-afbfea84b9a4": {"__data__": {"id_": "419184cc-f8ec-40b4-a9a9-afbfea84b9a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "726558bd-a1ce-43be-b590-33e89df18e26", "node_type": "1", "metadata": {}, "hash": "deff108264dbd161c749e5c51896ba58d0143a896568d2c9b0d18f27139a6917", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "424e3c94-0493-4625-894a-76305d74e27d", "node_type": "1", "metadata": {}, "hash": "62225fb351fc75f37c5a31e7a1463a716b629c687dfbf5b33ab2454b3211df52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nyarn install\n```\n\n<details>\n<summary>Troubleshooting yarn install</summary>\n\nIf you run into errors during `yarn install`, check that you are on a [supported platform](#platform-requirements) and not native Windows.\n\nThen make sure you have the relevant developer tools installed. For example, on Debian or Ubuntu Linux, run `sudo apt get install build-essential`.\nOn macOS, be sure to install [Xcode](https://apps.apple.com/us/app/xcode/id497799835).\n\n</details>\n\n## Starting a Local Agoric Blockchain", "mimetype": "text/plain", "start_char_idx": 8604, "end_char_idx": 9112, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "424e3c94-0493-4625-894a-76305d74e27d": {"__data__": {"id_": "424e3c94-0493-4625-894a-76305d74e27d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "419184cc-f8ec-40b4-a9a9-afbfea84b9a4", "node_type": "1", "metadata": {}, "hash": "7d6833f1c814bdbfe7c78a362e672cbf52567dc976d20284b223b7875fbd18e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a0c3fea-7348-4e29-83e5-7b0a96c39f12", "node_type": "1", "metadata": {}, "hash": "879326e7c964ed4afdc4d35961234f82eb23c2df020b2c224f06725347d712b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now go ahead and start a local Agoric blockchain using the `yarn start:docker` command. Note: This container is several gigabytes in size and may take a few minutes to download.\n\n```sh\nyarn start:docker\n```\n\nOnce the network has started you can check the logs. Once you see messages showing blocks with a status of `commit` you can rest assured the network is running properly.\n\n```sh\nyarn docker:logs\n```\n\nYour output should resemble this:", "mimetype": "text/plain", "start_char_idx": 9114, "end_char_idx": 9554, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a0c3fea-7348-4e29-83e5-7b0a96c39f12": {"__data__": {"id_": "4a0c3fea-7348-4e29-83e5-7b0a96c39f12", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "424e3c94-0493-4625-894a-76305d74e27d", "node_type": "1", "metadata": {}, "hash": "62225fb351fc75f37c5a31e7a1463a716b629c687dfbf5b33ab2454b3211df52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d9a423c-29f3-401e-b7d2-f5965c561534", "node_type": "1", "metadata": {}, "hash": "fc3a6d808d8228a35c4f375ed373af9ad24a829993c2c03183ef7507f760660e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Your output should resemble this:\n\n```\ndemo-agd-1  | 2023-12-27T04:08:06.384Z block-manager: block 1003 begin\ndemo-agd-1  | 2023-12-27T04:08:06.386Z block-manager: block 1003 commit\ndemo-agd-1  | 2023-12-27T04:08:07.396Z block-manager: block 1004 begin\ndemo-agd-1  | 2023-12-27T04:08:07.398Z block-manager: block 1004 commit\ndemo-agd-1  | 2023-12-27T04:08:08.405Z block-manager: block 1005 begin\ndemo-agd-1  | 2023-12-27T04:08:08.407Z block-manager: block 1005 commit\n```", "mimetype": "text/plain", "start_char_idx": 9521, "end_char_idx": 9992, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d9a423c-29f3-401e-b7d2-f5965c561534": {"__data__": {"id_": "7d9a423c-29f3-401e-b7d2-f5965c561534", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a0c3fea-7348-4e29-83e5-7b0a96c39f12", "node_type": "1", "metadata": {}, "hash": "879326e7c964ed4afdc4d35961234f82eb23c2df020b2c224f06725347d712b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f", "node_type": "1", "metadata": {}, "hash": "b36dcb37c0c018e60450b2ffb09205076e45dac4b3a4c9305995c8ba85ccadb4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: details Note: logs include benign error messages\n\nYou can disregard messages such as:\n\n- `v5: TypeError: target has no method \"getDisplayInfo\"`\n\nThese are artifacts of replaying historical events.\n\n:::\n\n## Starting the Dapp Smart Contract\n\nUse control-C to exit the logs, then start the smart contract. Starting the contract may take a minute or two, so after running this command proceed to the next step.\n\n```sh\nyarn start:contract\n```", "mimetype": "text/plain", "start_char_idx": 9994, "end_char_idx": 10435, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f": {"__data__": {"id_": "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d9a423c-29f3-401e-b7d2-f5965c561534", "node_type": "1", "metadata": {}, "hash": "fc3a6d808d8228a35c4f375ed373af9ad24a829993c2c03183ef7507f760660e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b825e926-90cc-457d-95ed-ab28358dd06b", "node_type": "1", "metadata": {}, "hash": "13c711df5d4394df60a2a77b5922690941b11e0c71edadb9473fb1060d2c1250", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```sh\nyarn start:contract\n```\n\n<details>\n<summary>Behind the Scenes</summary>\nThis `start:contract` script will do a number of things that we will cover in more detail later <small>(_[transaction commands](../agoric-cli/agd-query-tx#transaction-commands), [permissioned deployment](../coreeval/)_)</small>:", "mimetype": "text/plain", "start_char_idx": 10406, "end_char_idx": 10712, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b825e926-90cc-457d-95ed-ab28358dd06b": {"__data__": {"id_": "b825e926-90cc-457d-95ed-ab28358dd06b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f", "node_type": "1", "metadata": {}, "hash": "b36dcb37c0c018e60450b2ffb09205076e45dac4b3a4c9305995c8ba85ccadb4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44a66c9c-95d3-442f-94be-beae09268ba4", "node_type": "1", "metadata": {}, "hash": "825c35d0cac2117203d0a3810d9fe57f505356c42e7e59152402f864f90450aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Bundle the contract with `agoric run ...`\n2. Collect some ATOM with `agd tx bank send ...`. _ATOM refers to the native cryptocurrency of the Cosmos Network._\n3. Use the ATOM to open a vault to mint enough IST to pay to install the bundles on chain with `agops vaults open ...`.\n4. Install the bundles on chain with `agd tx swingset install-bundle ...`.\n5. Collect enough BLD to pay for a governance deposit with `agd tx bank send ...`", "mimetype": "text/plain", "start_char_idx": 10714, "end_char_idx": 11151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44a66c9c-95d3-442f-94be-beae09268ba4": {"__data__": {"id_": "44a66c9c-95d3-442f-94be-beae09268ba4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b825e926-90cc-457d-95ed-ab28358dd06b", "node_type": "1", "metadata": {}, "hash": "13c711df5d4394df60a2a77b5922690941b11e0c71edadb9473fb1060d2c1250", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9e39cbc-1251-4e23-96dc-a7975c5275a5", "node_type": "1", "metadata": {}, "hash": "2abe6c96d85f5671b45564feed749d6e84d6d80d751aa02702ba4e7fbbc3c721", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "6. Make a governance proposal to start the contract with `agd tx gov submit-proposal swingset-core-eval ...`.\n7. Vote for the proposal; wait for it to pass.\n</details>", "mimetype": "text/plain", "start_char_idx": 11152, "end_char_idx": 11319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9e39cbc-1251-4e23-96dc-a7975c5275a5": {"__data__": {"id_": "a9e39cbc-1251-4e23-96dc-a7975c5275a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44a66c9c-95d3-442f-94be-beae09268ba4", "node_type": "1", "metadata": {}, "hash": "825c35d0cac2117203d0a3810d9fe57f505356c42e7e59152402f864f90450aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7eb74756-1b7a-4023-9720-86adf280ba4c", "node_type": "1", "metadata": {}, "hash": "1fe5013f94b4692e401a25dfe129c9466d237c579fa3b8d91d5e7fb0f5cd4dba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting up a Keplr Wallet Demo Account\n\nNext, ensure you have the [Keplr wallet plug-in](https://www.keplr.app/download) installed.\n\n<details><summary>Installing Keplr Wallet</summary>\n\nOpen up your browser and navigate to [https://www.keplr.app/download](https://www.keplr.app/download). Select the version appropriate to your browser.\n\n![Installing the Keplr Wallet Plug-In](./assets/037.png)\n\n</details>\n\n::: warning", "mimetype": "text/plain", "start_char_idx": 11321, "end_char_idx": 11743, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7eb74756-1b7a-4023-9720-86adf280ba4c": {"__data__": {"id_": "7eb74756-1b7a-4023-9720-86adf280ba4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9e39cbc-1251-4e23-96dc-a7975c5275a5", "node_type": "1", "metadata": {}, "hash": "2abe6c96d85f5671b45564feed749d6e84d6d80d751aa02702ba4e7fbbc3c721", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c646726c-8fea-4c9b-92f9-76df9f3c3e1b", "node_type": "1", "metadata": {}, "hash": "29e97f5afef2692e2b9707a4ae837f038f1c5d4b45077aa0db3fe42115c4d960", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</details>\n\n::: warning\n\nRemember, this is just a demo. In real-world scenarios ensuring proper security around mnemonic phrases is critical!\n\n- For any mnemonic phrase you use to secure your own assets, **take care to keep it strictly confidential!** The mnemonic here is only for testing.\n- Using a **separate browser profile** is a good way to avoid accidentally using the wrong account when testing vs. with real assets.\n\n:::", "mimetype": "text/plain", "start_char_idx": 11720, "end_char_idx": 12149, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c646726c-8fea-4c9b-92f9-76df9f3c3e1b": {"__data__": {"id_": "c646726c-8fea-4c9b-92f9-76df9f3c3e1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7eb74756-1b7a-4023-9720-86adf280ba4c", "node_type": "1", "metadata": {}, "hash": "1fe5013f94b4692e401a25dfe129c9466d237c579fa3b8d91d5e7fb0f5cd4dba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c16da218-ab11-4d7b-98e3-f2910013a5a7", "node_type": "1", "metadata": {}, "hash": "6d8cb3b6f7f9f7ca7bc123c56b0a80f38801e16139ca9152270cc973d61498aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\nOnce the plug-in has been installed, open Keplr and select the option to **Import an existing wallet**. Then choose the option to **Use recovery phrase or private key**.\n\n<img alt='Choose the \"Import an Existing Wallet\" option' src=\"./assets/038.png\"\n width=300 />\n\n<img alt='Choose the \"Use recovery phrase or private key\" option' src=\"./assets/040.png\"\n  width=\"500\" />\n\nTo import your wallet, you'll need to copy the following mnemonic phrase into Keplr.", "mimetype": "text/plain", "start_char_idx": 12146, "end_char_idx": 12608, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c16da218-ab11-4d7b-98e3-f2910013a5a7": {"__data__": {"id_": "c16da218-ab11-4d7b-98e3-f2910013a5a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c646726c-8fea-4c9b-92f9-76df9f3c3e1b", "node_type": "1", "metadata": {}, "hash": "29e97f5afef2692e2b9707a4ae837f038f1c5d4b45077aa0db3fe42115c4d960", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8157edda-377b-4731-b054-6ffbf6215442", "node_type": "1", "metadata": {}, "hash": "07f510f1486715b20ee9bc0ca71affb332228012466c238bb95fc55ef3b39961", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nspike siege world rather ordinary upper napkin voice brush oppose junior route trim crush expire angry seminar anchor panther piano image pepper chest alone\n```\n\n<!-- key comes from https://github.com/Agoric/agoric-3-proposals/tree/main/packages/synthetic-chain/public/upgrade-test-scripts/keys_for_test_only -->\n\n<img alt=\"Pasting the mnemonic phrase\" src=\"./assets/041.png\" width=\"400\" />\n\n<details><summary>Give your new wallet a name and a password. Click Next.</summary>", "mimetype": "text/plain", "start_char_idx": 12610, "end_char_idx": 13089, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8157edda-377b-4731-b054-6ffbf6215442": {"__data__": {"id_": "8157edda-377b-4731-b054-6ffbf6215442", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c16da218-ab11-4d7b-98e3-f2910013a5a7", "node_type": "1", "metadata": {}, "hash": "6d8cb3b6f7f9f7ca7bc123c56b0a80f38801e16139ca9152270cc973d61498aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "646da944-c767-4d0e-a11f-761a1eb6d6bd", "node_type": "1", "metadata": {}, "hash": "9d179868acc2d90b4f0990d590a3b0c03d9540d367afb261d9d7795e9dbbe10b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![Name the newly imported wallet](./assets/042.png)\n\n</details>\n<details><summary>In the next step, do not select any **chains** except for **Cosmos Hub**. Click \"Save\". </summary>\n\n![Save](./assets/043.png)\n\n</details>\n\n## Starting the Dapp\n\nStart the UI for the sample dapp.\n\n```sh\nyarn start:ui\n```\n\nNote the localhost link that appears on your terminal window. Open this link in your browser.\n\n![Running the `yarn start:ui` command](./assets/044.png)\n\n![Open the link in your browser](./assets/new_002.png)", "mimetype": "text/plain", "start_char_idx": 13091, "end_char_idx": 13601, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "646da944-c767-4d0e-a11f-761a1eb6d6bd": {"__data__": {"id_": "646da944-c767-4d0e-a11f-761a1eb6d6bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8157edda-377b-4731-b054-6ffbf6215442", "node_type": "1", "metadata": {}, "hash": "07f510f1486715b20ee9bc0ca71affb332228012466c238bb95fc55ef3b39961", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "784b4da7-517d-4578-bd2d-4df1eaf03dda", "node_type": "1", "metadata": {}, "hash": "c80e9d841a925acda1db6b2f0635d3789fecd516256b3a81b753f89e1f2f697c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "From the browser UI, click the \"Connect Wallet\" button to connect your Keplr wallet.\n\n<details><summary>Adding Agoric local to Keplr</summary>\n\nLike any [non-native chain](https://chains.keplr.app/), the first time you use the local Agoric blockchain, Keplr will ask you to approve it:\n\n![Connecting your wallet](./assets/new_003.png)\n\n</details>\n\n## Making an Offer\n\nOnce your wallet is connected, click on the \"Make Offer\" button to purchase 3 properties. Approve the transaction in your Keplr wallet.", "mimetype": "text/plain", "start_char_idx": 13603, "end_char_idx": 14106, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "784b4da7-517d-4578-bd2d-4df1eaf03dda": {"__data__": {"id_": "784b4da7-517d-4578-bd2d-4df1eaf03dda", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "646da944-c767-4d0e-a11f-761a1eb6d6bd", "node_type": "1", "metadata": {}, "hash": "9d179868acc2d90b4f0990d590a3b0c03d9540d367afb261d9d7795e9dbbe10b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d2ebbbc-f76e-4917-a924-dc220ef67360", "node_type": "1", "metadata": {}, "hash": "136ca832237482eef1db251a7c71456f7db30fa72bfa21b996624724f8480d7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![Making an offer](./assets/keplr-legible-offer.png)\n\nWhen the transaction is complete you will notice some IST has been debited from your wallet, and you are the owner of three new properties. Feel free to experiment with offering less than the required 0.25 IST or attemping to purchase more than three items. You'll see these offers will not be accepted. Conditional offers like this are a key part of the Agoric platform!\n\n![Finished transaction](./assets/new_006.png)", "mimetype": "text/plain", "start_char_idx": 14108, "end_char_idx": 14580, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d2ebbbc-f76e-4917-a924-dc220ef67360": {"__data__": {"id_": "1d2ebbbc-f76e-4917-a924-dc220ef67360", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "784b4da7-517d-4578-bd2d-4df1eaf03dda", "node_type": "1", "metadata": {}, "hash": "c80e9d841a925acda1db6b2f0635d3789fecd516256b3a81b753f89e1f2f697c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6314f60-952b-46ce-b56b-009869d5062f", "node_type": "1", "metadata": {}, "hash": "7f14a635df3b96e020b5a73a39fbec058e277b79c6df5d906d14cb73d1f935d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Congratulations! You got your first Agoric dapp up and running! Now that you've got your first Agoric dapp up and running, let's focus on some key takeaways from this exercise:\n\n- **Starting an Agoric Chain**: You have gained experience starting a local Agoric blockchain.\n\n- **Deploying a Contract**: You have deployed a smart contract onto the Agoric platform!\n  _Note: [testnet deployment, faucets, etc.](../coreeval/local-testnet) are discussed later._", "mimetype": "text/plain", "start_char_idx": 14582, "end_char_idx": 15038, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6314f60-952b-46ce-b56b-009869d5062f": {"__data__": {"id_": "e6314f60-952b-46ce-b56b-009869d5062f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d2ebbbc-f76e-4917-a924-dc220ef67360", "node_type": "1", "metadata": {}, "hash": "136ca832237482eef1db251a7c71456f7db30fa72bfa21b996624724f8480d7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "859791dc-a753-4f46-8901-0c5978a2fb5d", "node_type": "1", "metadata": {}, "hash": "0bdeb89a82cbb8328e1c298c7e4202ccc27f7375c2acca499774893377126a79", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Making an Offer**: Finally, you've learned to make an offer and seen that offer constraints are enforced by the Agoric platform. This means user interface can't attempt to fool a user by showing a 0.25 IST when actually charging them a much higer amount, such as 500 IST. It's also important to note that the contract cannot take the 0.25 IST without satisfying the want constraint, nor can the contract take more than the 0.25 cents in the give contraint.", "mimetype": "text/plain", "start_char_idx": 15040, "end_char_idx": 15500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "859791dc-a753-4f46-8901-0c5978a2fb5d": {"__data__": {"id_": "859791dc-a753-4f46-8901-0c5978a2fb5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_index.md", "node_type": "4", "metadata": {}, "hash": "b2eee45e04dbdafa736c2ca4aa56b1e1706ee6eba8c14093579fe419445b6b41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6314f60-952b-46ce-b56b-009869d5062f", "node_type": "1", "metadata": {}, "hash": "7f14a635df3b96e020b5a73a39fbec058e277b79c6df5d906d14cb73d1f935d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This tutorial serves as an essential stepping stone for developers looking to delve into decentralized app development on the Agoric platform. To learn more about building Agoric dapps, check out the rest of the docs on this site!", "mimetype": "text/plain", "start_char_idx": 15502, "end_char_idx": 15732, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33445452-9192-412a-b8ef-68a49011f165": {"__data__": {"id_": "33445452-9192-412a-b8ef-68a49011f165", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6625a86f-0174-4689-8411-fb4ce111d20c", "node_type": "1", "metadata": {}, "hash": "ceb9c0fce6941333f1a85b52f9afcd51adbfdd902835f8293237a5a093abc686", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Sell Concert Tickets Smart Contract\n\nThis smart contract is designed to mint and sell event tickets as non-fungible tokens (NFTs) in the form of a semi-fungible asset. In this example there are three categories or classes of tickets:\n\n- Tickets near the front are the most expensive\n- Tickets in the middle rows are priced between expensive and cheap seats\n- Tickets in the back are the lowest priced\n  > Note: This contract simulates traditional trading i.e. between a vendor and a consumer.\n\n## Objective", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 508, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6625a86f-0174-4689-8411-fb4ce111d20c": {"__data__": {"id_": "6625a86f-0174-4689-8411-fb4ce111d20c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33445452-9192-412a-b8ef-68a49011f165", "node_type": "1", "metadata": {}, "hash": "f6675b42f2d1eeab672a48cfd3d5dfd22b7a6e007cfc42715d5225716e42ac81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73b7d62f-7451-4b5a-89be-587a579ed0db", "node_type": "1", "metadata": {}, "hash": "7522afb15aad5dbcd497018892309f06a89cf8ed56b36215075ec1533e430b71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Objective\n\nThis tutorial has following objectives:\n\n- A fundamental guide on how to **establish a smart contract**.\n- Explain the process of **initiating asset trading** within the Agoric environment including listing of assets and setting prices etc.\n- **Develop a trade handler** that manages the execution of business logic behind trades.\n\n## Contract Setup", "mimetype": "text/plain", "start_char_idx": 496, "end_char_idx": 859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73b7d62f-7451-4b5a-89be-587a579ed0db": {"__data__": {"id_": "73b7d62f-7451-4b5a-89be-587a579ed0db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6625a86f-0174-4689-8411-fb4ce111d20c", "node_type": "1", "metadata": {}, "hash": "ceb9c0fce6941333f1a85b52f9afcd51adbfdd902835f8293237a5a093abc686", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20112fba-306b-4afa-8ffa-1a0522d67ea2", "node_type": "1", "metadata": {}, "hash": "624ef62910d39813521df2b0e332b5f370a4d8106090c3c2af17f18d1928519a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contract Setup\n\nLet us first consider an `inventory` object, which holds essential information about various asset types - in this case, categories of tickets. This object includes crucial details such as the `tradePrice` for each ticket type and the `maxTickets`, specifying the maximum quantity available for each category. For example:", "mimetype": "text/plain", "start_char_idx": 842, "end_char_idx": 1183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "20112fba-306b-4afa-8ffa-1a0522d67ea2": {"__data__": {"id_": "20112fba-306b-4afa-8ffa-1a0522d67ea2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73b7d62f-7451-4b5a-89be-587a579ed0db", "node_type": "1", "metadata": {}, "hash": "7522afb15aad5dbcd497018892309f06a89cf8ed56b36215075ec1533e430b71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a631d2bc-1e78-4099-ab5a-f5c845ee4407", "node_type": "1", "metadata": {}, "hash": "74638bab42a49fb1f56d44791faac04b94a8f363b0aae10faefb1954b0108e74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst inventory = {\n  frontRow: {\n    tradePrice: AmountMath.make(istBrand, 3n),\n    maxTickets: 3n\n  },\n  middleRow: {\n    tradePrice: AmountMath.make(istBrand, 2n),\n    maxTickets: 5n\n  },\n  backRow: {\n    tradePrice: AmountMath.make(istBrand, n),\n    maxTickets: n\n  }\n};\n```\n\nOur contract takes the provided `inventory` object as a parameter to initiate the process.\nAfter the contract is initialized, a new [ERTP mint](/glossary/#mint) for the \"Ticket\" asset is created.", "mimetype": "text/plain", "start_char_idx": 1185, "end_char_idx": 1666, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a631d2bc-1e78-4099-ab5a-f5c845ee4407": {"__data__": {"id_": "a631d2bc-1e78-4099-ab5a-f5c845ee4407", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20112fba-306b-4afa-8ffa-1a0522d67ea2", "node_type": "1", "metadata": {}, "hash": "624ef62910d39813521df2b0e332b5f370a4d8106090c3c2af17f18d1928519a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb0048c9-436d-41f4-a1a3-1dd11a8e5006", "node_type": "1", "metadata": {}, "hash": "05a58748fc34a713ceead9021d5570d61910f178d91f463f71b62f61f311f618", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<details>\n<summary>Note: AssetKind expresses type of assets</summary>\n\nThere are three types of [assets](/guides/ertp/#asset). You can determine the [type of your asset](/reference/ertp-api/ertp-data-types.html#assetkind) by referring to the provided documentation.\n\nIn our example, tickets are non-fungible and can have duplicates, meaning there can be many tickets of a single type. So, we are using `AssetKind.COPY_BAG`.\n\n</details>", "mimetype": "text/plain", "start_char_idx": 1668, "end_char_idx": 2103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb0048c9-436d-41f4-a1a3-1dd11a8e5006": {"__data__": {"id_": "fb0048c9-436d-41f4-a1a3-1dd11a8e5006", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a631d2bc-1e78-4099-ab5a-f5c845ee4407", "node_type": "1", "metadata": {}, "hash": "74638bab42a49fb1f56d44791faac04b94a8f363b0aae10faefb1954b0108e74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3b94291-1bb9-4e7d-8543-7ac11345e184", "node_type": "1", "metadata": {}, "hash": "cc69d9de89faacb77f55b74f42c980bd4cd6d5c49dff33f4524afa896e5557c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</details>\n\n```js\nconst ticketMint = await zcf.makeZCFMint('Ticket', AssetKind.COPY_BAG);\nconst { brand: ticketBrand } = ticketMint.getIssuerRecord();\n```\n\nOnce our asset is defined, we will mint our inventory at the start of our the smart contract and allocate it to our `inventorySeat` object.\nThis also allows us to check if user is buying more than our inventory allows. This can be done using an [AmountMath API method](/reference/ertp-api/amount-math.html#amountmath-isgte-leftamount-rightamount-brand).", "mimetype": "text/plain", "start_char_idx": 2093, "end_char_idx": 2602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e3b94291-1bb9-4e7d-8543-7ac11345e184": {"__data__": {"id_": "e3b94291-1bb9-4e7d-8543-7ac11345e184", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb0048c9-436d-41f4-a1a3-1dd11a8e5006", "node_type": "1", "metadata": {}, "hash": "05a58748fc34a713ceead9021d5570d61910f178d91f463f71b62f61f311f618", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ea665b0-9e33-44a6-b4d5-b74cedc1517b", "node_type": "1", "metadata": {}, "hash": "206e803e12467128315702d86bbfe80c5a68c7de116690a926ad8600d8df127f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<details>\n<summary>To understand the code better:</summary>\n\nTake a look at [brand](/glossary/#brand), [AmountKeywordRecord](/reference/zoe-api/zoe-data-types.html#keywordrecord), [mintGains function](/reference/zoe-api/zcfmint.html#azcfmint-mintgains-gains-zcfseat) and [ZCFSeat](/reference/zoe-api/zcfseat.html#zcfseat-object).\n\n</details>", "mimetype": "text/plain", "start_char_idx": 2604, "end_char_idx": 2945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ea665b0-9e33-44a6-b4d5-b74cedc1517b": {"__data__": {"id_": "5ea665b0-9e33-44a6-b4d5-b74cedc1517b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3b94291-1bb9-4e7d-8543-7ac11345e184", "node_type": "1", "metadata": {}, "hash": "cc69d9de89faacb77f55b74f42c980bd4cd6d5c49dff33f4524afa896e5557c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2743efa7-cdcd-4352-8da9-e27aa523f349", "node_type": "1", "metadata": {}, "hash": "cfaed8992c371fd22b01bda87798ae0b4e9a2096c72b161e782c5d54c5710bff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</details>\n\n```js\nconst inventoryBag = makeCopyBag(\n  Object.entries(inventory).map(([ticket, { maxTickets }], _i) => [\n    ticket,\n    maxTickets\n  ])\n);\nconst toMint = {\n  Tickets: {\n    brand: ticketBrand,\n    value: inventoryBag\n  }\n};\nconst inventorySeat = ticketMint.mintGains(toMint);\n```\n\n## Trading Tickets", "mimetype": "text/plain", "start_char_idx": 2935, "end_char_idx": 3250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2743efa7-cdcd-4352-8da9-e27aa523f349": {"__data__": {"id_": "2743efa7-cdcd-4352-8da9-e27aa523f349", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ea665b0-9e33-44a6-b4d5-b74cedc1517b", "node_type": "1", "metadata": {}, "hash": "206e803e12467128315702d86bbfe80c5a68c7de116690a926ad8600d8df127f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82eb1175-f168-4cbe-ab4e-d1eefe1a275c", "node_type": "1", "metadata": {}, "hash": "f358faa5335351f1cd0e1e0cd8f04ff2409928240ee26bd61d9af029e4de630c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Trading Tickets\n\nCustomers who wish to purchase event tickets first [make an invitation](/reference/zoe-api/zoe-contract-facet.md#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape) to trade for tickets using `makeTradeInvitation`.\n\n```js\nconst makeTradeInvitation = () =>\n  zcf.makeInvitation(tradeHandler, 'buy tickets', undefined, proposalShape);\n```\n\nHere you can see two important parameters:", "mimetype": "text/plain", "start_char_idx": 3232, "end_char_idx": 3653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82eb1175-f168-4cbe-ab4e-d1eefe1a275c": {"__data__": {"id_": "82eb1175-f168-4cbe-ab4e-d1eefe1a275c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2743efa7-cdcd-4352-8da9-e27aa523f349", "node_type": "1", "metadata": {}, "hash": "cfaed8992c371fd22b01bda87798ae0b4e9a2096c72b161e782c5d54c5710bff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a4d68ef-6d9b-4454-9236-0f442cc02642", "node_type": "1", "metadata": {}, "hash": "770c9d21036c1acc070be31e644bd35b5aa976a6b3b9a7cc6685629b99d20382", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **tradeHandler**: The `tradeHandler` function is invoked when a purchaser makes an offer. This function contains the contract's logic for processing each trade, ensuring that the correct procedures are followed whenever a trade is executed.\n\n```js\nconst tradeHandler = buyerSeat => {\n  const { give, want } = buyerSeat.getProposal();\n  // ... checks and transfers\n};\n```", "mimetype": "text/plain", "start_char_idx": 3655, "end_char_idx": 4027, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a4d68ef-6d9b-4454-9236-0f442cc02642": {"__data__": {"id_": "3a4d68ef-6d9b-4454-9236-0f442cc02642", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82eb1175-f168-4cbe-ab4e-d1eefe1a275c", "node_type": "1", "metadata": {}, "hash": "f358faa5335351f1cd0e1e0cd8f04ff2409928240ee26bd61d9af029e4de630c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b", "node_type": "1", "metadata": {}, "hash": "da2a7aa08217e62a0cc77a05f2d1af7dad83c5f34b1fa59f579e42aa51ccf983", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **proposalShape** (Optional): This object outlines the necessary and permissible elements of each [proposal](/reference/zoe-api/zoe-contract-facet.html#proposal-shapes). Here is the proposal shape for this contract.\n\n```js\nconst proposalShape = harden({\n  give: { Price: AmountShape },\n  want: { Tickets: { brand: ticketBrand, value: M.bag() } },\n  exit: M.any()\n});\n```\n\n## Trade Handler\n\nThe `tradeHandler` function begins by checking to see if there are enough tickets in inventory to satisfy the trade:", "mimetype": "text/plain", "start_char_idx": 4029, "end_char_idx": 4537, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b": {"__data__": {"id_": "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a4d68ef-6d9b-4454-9236-0f442cc02642", "node_type": "1", "metadata": {}, "hash": "770c9d21036c1acc070be31e644bd35b5aa976a6b3b9a7cc6685629b99d20382", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "894948b2-76b3-4a05-b234-8c93be14887d", "node_type": "1", "metadata": {}, "hash": "3129c4aedd0f7749f7fe4d27c411ace2f0ae67c2b38c8e7e73ff51b3bad38d74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nAmountMath.isGTE(inventorySeat.getCurrentAllocation().Tickets, want.Tickets) ||\n  Fail`Not enough inventory, ${q(want.Tickets)} wanted`;\n```\n\nNext, the total price is calcualted using `bagPrice`:\n\n```js\nconst totalPrice = bagPrice(want.Tickets.value, inventory);\n```\n\nAfter that, a check is made to ensure the offered price is sufficient:\n\n```js\nAmountMath.isGTE(give.Price, totalPrice) ||\n  Fail`Total price is ${q(totalPrice)}, but ${q(give.Price)} was given`;\n```", "mimetype": "text/plain", "start_char_idx": 4539, "end_char_idx": 5011, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "894948b2-76b3-4a05-b234-8c93be14887d": {"__data__": {"id_": "894948b2-76b3-4a05-b234-8c93be14887d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b", "node_type": "1", "metadata": {}, "hash": "da2a7aa08217e62a0cc77a05f2d1af7dad83c5f34b1fa59f579e42aa51ccf983", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61943ccb-d1b0-46dc-aad6-3f490c1f808a", "node_type": "1", "metadata": {}, "hash": "92fb794ce1274c4ff37acddadbbc5df57b532ef547d8fe94f97578162eb54a22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Finally, `atomicRearrange` can be called to exchange the requested tickets for the required payment:\n\n```js\natomicRearrange(\n  zcf,\n  harden([\n    // price from buyer to proceeds\n    [buyerSeat, proceeds, { Price: totalPrice }],\n    // tickets from inventory to buyer\n    [inventorySeat, buyerSeat, want]\n  ])\n);\n```\n\nTake a complete look at this example code in our [Github repository](https://github.com/Agoric/dapp-agoric-basics/blob/main/contract/src/sell-concert-tickets.contract.js).", "mimetype": "text/plain", "start_char_idx": 5013, "end_char_idx": 5502, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "61943ccb-d1b0-46dc-aad6-3f490c1f808a": {"__data__": {"id_": "61943ccb-d1b0-46dc-aad6-3f490c1f808a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md", "node_type": "4", "metadata": {}, "hash": "64e5afd94ce7e20dbc486677b5823950d1c01121e65f0236387076dae928cb5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "894948b2-76b3-4a05-b234-8c93be14887d", "node_type": "1", "metadata": {}, "hash": "3129c4aedd0f7749f7fe4d27c411ace2f0ae67c2b38c8e7e73ff51b3bad38d74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As you're going through this tutorial it may be helpful to watch this video walkthrough:\n<ClientOnly>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Wtq6dwsRdOQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>", "mimetype": "text/plain", "start_char_idx": 5504, "end_char_idx": 5869, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0d16abb-059a-4c13-a085-3362af2d2fa1": {"__data__": {"id_": "d0d16abb-059a-4c13-a085-3362af2d2fa1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_start-a-project.md", "node_type": "4", "metadata": {}, "hash": "2337ce86576d1b01055dea22ee96d21d6f3b5ed0051a96641b324f8a34af8f69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_see [Getting Started](./)_", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 27, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c766cd88-b4c9-4c3a-ad27-4b1afe20e884": {"__data__": {"id_": "c766cd88-b4c9-4c3a-ad27-4b1afe20e884", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff610e1-e928-4762-95ab-f546fd85d9a9", "node_type": "1", "metadata": {}, "hash": "08d91749653ab9dd584d0257fcf2b3a200bfa940934b3c6a4202b64c1d4b1f8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Swaparoo Contract\n\nThis smart contract is designed to allow two parties to swap assets between themselves, with a fee charged to one of the parties. The contract is started with a `feeAmount` and a `namesByAddressAdmin` object, which is used to retrieve a deposit facet for the second party.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ff610e1-e928-4762-95ab-f546fd85d9a9": {"__data__": {"id_": "0ff610e1-e928-4762-95ab-f546fd85d9a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c766cd88-b4c9-4c3a-ad27-4b1afe20e884", "node_type": "1", "metadata": {}, "hash": "731bfdc577df41be9b5708d1d82b6bfd4064fe4ec76814091729e9980ac9ba49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66943d4c-fa5f-4ec4-8195-d54df6b05b09", "node_type": "1", "metadata": {}, "hash": "490c5654ad32a5cbc1d6978b43f583c85d87f973ce75596c24f36cae9b47c17c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**NOTE:** _`namesByAddressAdmin` is actually excess authority in this scenario. Normally read-only access can be attained via `namesByAddress`. The use of `namesByAddressAdmin` in this example is due to a bug, which will be addressed in an upcoming release._\n\nLet's take a look at how this contract works:\n\n## Setting up Fee Handling", "mimetype": "text/plain", "start_char_idx": 295, "end_char_idx": 628, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66943d4c-fa5f-4ec4-8195-d54df6b05b09": {"__data__": {"id_": "66943d4c-fa5f-4ec4-8195-d54df6b05b09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ff610e1-e928-4762-95ab-f546fd85d9a9", "node_type": "1", "metadata": {}, "hash": "08d91749653ab9dd584d0257fcf2b3a200bfa940934b3c6a4202b64c1d4b1f8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8fce5e8-3b9a-452e-af9d-3e250902f896", "node_type": "1", "metadata": {}, "hash": "34f85b40a8cac75cee34461438760521b11b88d8ee7ad57ae3d2b71da5e4d962", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting up Fee Handling\n\nThe contract retrieves the `feeIssuer` from the Zoe service, which is an issuer for the stable token used for fees. It creates a `feeSeat` and a `feeShape` based on the `feeAmount` specified in the contract terms.\n\n```js\nconst stableIssuer = await E(zcf.getZoeService()).getFeeIssuer();\nconst feeBrand = await E(stableIssuer).getBrand();\nconst { zcfSeat: feeSeat } = zcf.makeEmptySeatKit();\nconst feeShape = makeNatAmountShape(feeBrand, feeAmount.value);\n```", "mimetype": "text/plain", "start_char_idx": 602, "end_char_idx": 1088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8fce5e8-3b9a-452e-af9d-3e250902f896": {"__data__": {"id_": "d8fce5e8-3b9a-452e-af9d-3e250902f896", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66943d4c-fa5f-4ec4-8195-d54df6b05b09", "node_type": "1", "metadata": {}, "hash": "490c5654ad32a5cbc1d6978b43f583c85d87f973ce75596c24f36cae9b47c17c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8703925-162f-404d-8327-d30ee60ee31a", "node_type": "1", "metadata": {}, "hash": "ecc18cf881e60c2fbbf100532df3342357ed68b5ad8eae9d32da5c6a31b3827b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Making the First Invitation\n\nThe `makeFirstInvitation` function is called with an array of issuers. It verifies that these issuers are part of the contract terms and saves any new issuers to the contract. It then creates an invitation with a proposal shape that includes the `feeShape` in the give record.", "mimetype": "text/plain", "start_char_idx": 1090, "end_char_idx": 1398, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8703925-162f-404d-8327-d30ee60ee31a": {"__data__": {"id_": "b8703925-162f-404d-8327-d30ee60ee31a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8fce5e8-3b9a-452e-af9d-3e250902f896", "node_type": "1", "metadata": {}, "hash": "34f85b40a8cac75cee34461438760521b11b88d8ee7ad57ae3d2b71da5e4d962", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66e6816a-72d8-499c-9ca2-c728cad93617", "node_type": "1", "metadata": {}, "hash": "a6321a7ffa6a1ea94a092294dc530068622e6988400588e10db72fdd85e5b78c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst makeFirstInvitation = issuers => {\n  mustMatch(issuers, M.arrayOf(IssuerShape));\n  for (const i of issuers) {\n    if (!Object.values(zcf.getTerms().issuers).includes(i)) {\n      zcf.saveIssuer(i, `Issuer${(issuerNumber += 1)}`);\n    }\n  }\n  const proposalShape = M.splitRecord({\n    give: M.splitRecord({ Fee: feeShape })\n  });\n\n  const firstInvitation = zcf.makeInvitation(\n    makeSecondInvitation,\n    'create a swap',\n    undefined,\n    proposalShape\n  );\n  return firstInvitation;\n};\n```", "mimetype": "text/plain", "start_char_idx": 1400, "end_char_idx": 1904, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66e6816a-72d8-499c-9ca2-c728cad93617": {"__data__": {"id_": "66e6816a-72d8-499c-9ca2-c728cad93617", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8703925-162f-404d-8327-d30ee60ee31a", "node_type": "1", "metadata": {}, "hash": "ecc18cf881e60c2fbbf100532df3342357ed68b5ad8eae9d32da5c6a31b3827b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c", "node_type": "1", "metadata": {}, "hash": "de5af021a8ed6a29e106e3d322483e9f4e4524cec60b7046a09ec2bd51584122", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Making the Second Invitation\n\nWhen the first party accepts the invitation, the `makeSecondInvitation` function is called. This function retrieves the deposit facet for the second party using the `namesByAddressAdmin` object and the provided address.\n\n```js\nconst makeSecondInvitation = async (firstSeat, offerArgs) => {\n  mustMatch(offerArgs, harden({ addr: M.string() }));\n  const { addr: secondPartyAddress } = offerArgs;", "mimetype": "text/plain", "start_char_idx": 1906, "end_char_idx": 2332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c": {"__data__": {"id_": "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66e6816a-72d8-499c-9ca2-c728cad93617", "node_type": "1", "metadata": {}, "hash": "a6321a7ffa6a1ea94a092294dc530068622e6988400588e10db72fdd85e5b78c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c0a8d47-17de-4a49-9d07-485c11bcfb06", "node_type": "1", "metadata": {}, "hash": "05b255690c0826e66d667a376e5791fee0e647bda39106f86f57c99e760df04c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const secondDepositFacet = await E(depositFacetFromAddr).lookup(\n    secondPartyAddress,\n    'depositFacet'\n  );\n  // ...\n};\n```\n\nFrom there a second invitation is created with an offer handler that checks if the second party's proposal matches the first party's want. If it does, it calls the `swapWithFee` function to perform the asset swap and collect the fee.", "mimetype": "text/plain", "start_char_idx": 2336, "end_char_idx": 2699, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c0a8d47-17de-4a49-9d07-485c11bcfb06": {"__data__": {"id_": "7c0a8d47-17de-4a49-9d07-485c11bcfb06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c", "node_type": "1", "metadata": {}, "hash": "de5af021a8ed6a29e106e3d322483e9f4e4524cec60b7046a09ec2bd51584122", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "358517f7-6685-43de-b634-fa43a227c44e", "node_type": "1", "metadata": {}, "hash": "1a77023ed7c566ae73466b5dff5935176712a11e39b39def9b409c7493d24e32", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst secondSeatOfferHandler = secondSeat => {\n  if (!matches(secondSeat.getProposal(), makeSecondProposalShape(want1))) {\n    // Handle mismatched proposals\n    return;\n  }\n\n  return swapWithFee(zcf, firstSeat, secondSeat, feeSeat, feeAmount);\n};\n\nconst secondSeatInvitation = await zcf.makeInvitation(\n  secondSeatOfferHandler,\n  'matchOffer',\n  { give: give1, want: want1 }\n);\n```\n\n## Performing the swap", "mimetype": "text/plain", "start_char_idx": 2701, "end_char_idx": 3114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "358517f7-6685-43de-b634-fa43a227c44e": {"__data__": {"id_": "358517f7-6685-43de-b634-fa43a227c44e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c0a8d47-17de-4a49-9d07-485c11bcfb06", "node_type": "1", "metadata": {}, "hash": "05b255690c0826e66d667a376e5791fee0e647bda39106f86f57c99e760df04c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1", "node_type": "1", "metadata": {}, "hash": "11a5a939a9d12cc20506d31506b07037b1504ca98b2989c1aa5590f00e150297", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Performing the swap\n\nThe `swapWithFee` function uses the `atomicRearrange` function from Zoe to perform the asset swap and collect the fee. It rearranges the assets between the first seat, second seat, and the feeSeat.\n\n```js\nexport const swapWithFee = (zcf, firstSeat, secondSeat, feeSeat, feeAmount) => {\n  const { Fee: _, ...firstGive } = firstSeat.getProposal().give;", "mimetype": "text/plain", "start_char_idx": 3092, "end_char_idx": 3466, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1": {"__data__": {"id_": "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "358517f7-6685-43de-b634-fa43a227c44e", "node_type": "1", "metadata": {}, "hash": "1a77023ed7c566ae73466b5dff5935176712a11e39b39def9b409c7493d24e32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7318216-7473-4345-87fe-3a9328e0adc0", "node_type": "1", "metadata": {}, "hash": "7e9992c954bc02141be5f867acfdd44c4a2774e2053311964937406365e746cb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "atomicRearrange(\n    zcf,\n    harden([\n      [firstSeat, secondSeat, firstGive],\n      [secondSeat, firstSeat, secondSeat.getProposal().give],\n      [firstSeat, feeSeat, { Fee: feeAmount }]\n    ])\n  );\n\n  firstSeat.exit();\n  secondSeat.exit();\n  return 'success';\n};\n```\n\n## Collecting fees\n\nThe contract also provides a `creatorFacet` with a `makeCollectFeesInvitation` method, which creates an invitation to collect the fees accumulated in the feeSeat.", "mimetype": "text/plain", "start_char_idx": 3470, "end_char_idx": 3924, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7318216-7473-4345-87fe-3a9328e0adc0": {"__data__": {"id_": "d7318216-7473-4345-87fe-3a9328e0adc0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1", "node_type": "1", "metadata": {}, "hash": "11a5a939a9d12cc20506d31506b07037b1504ca98b2989c1aa5590f00e150297", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38ed82ad-1855-4a1e-b23c-0bcc2aed5948", "node_type": "1", "metadata": {}, "hash": "23b6c0af9ef4a552c52f3f88f7b65091718d88ed813ea107dd3e1700c71c1567", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst creatorFacet = Far('Creator', {\n  makeCollectFeesInvitation() {\n    return makeCollectFeesInvitation(zcf, feeSeat, feeBrand, 'Fee');\n  }\n});\n```\n\n## Video Walkthrough\n\nWatch this short video walk-through of the complete Swaparoo Smart Contract that allows any two parties to trade any digital assets with minimal risk.\n<ClientOnly>", "mimetype": "text/plain", "start_char_idx": 3926, "end_char_idx": 4269, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38ed82ad-1855-4a1e-b23c-0bcc2aed5948": {"__data__": {"id_": "38ed82ad-1855-4a1e-b23c-0bcc2aed5948", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md", "node_type": "4", "metadata": {}, "hash": "a9657f4c696086d7f77df97b307cc8667e08b9d15f1d297456b48c9878c93ece", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7318216-7473-4345-87fe-3a9328e0adc0", "node_type": "1", "metadata": {}, "hash": "7e9992c954bc02141be5f867acfdd44c4a2774e2053311964937406365e746cb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qHa7u8r62JQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>", "mimetype": "text/plain", "start_char_idx": 4271, "end_char_idx": 4533, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75a89d88-640e-4fa9-8e47-011f5178d4a5": {"__data__": {"id_": "75a89d88-640e-4fa9-8e47-011f5178d4a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c5ff7b1-57f4-4045-aefd-6eafb1056da8", "node_type": "1", "metadata": {}, "hash": "1d82f31254ea5110d631664d7d1eae7c296de680341aa49edcb1758dce9b82c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Sending Invitation Payments using an Address\n\nIn this document, we'll explain how to send a payment to someone using their `agoric1...` address from an Agoric smart contract using a deposit facet.\n\n## Using a depositFacet\n\nLet's take a look at the following code snippet from the Swaparoo contract:\n\n```js\nconst secondDepositFacet = await E(depositFacetFromAddr).lookup(\n  secondPartyAddress,\n  'depositFacet'\n);\n\nawait E(secondDepositFacet).receive(secondSeatInvitation);\n\nreturn 'invitation sent';\n```", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 505, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c5ff7b1-57f4-4045-aefd-6eafb1056da8": {"__data__": {"id_": "3c5ff7b1-57f4-4045-aefd-6eafb1056da8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75a89d88-640e-4fa9-8e47-011f5178d4a5", "node_type": "1", "metadata": {}, "hash": "d83e7347958d4b202643386682edd09d6248a973138d84a913ec46550cd9a6e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc4e62e4-f6d4-49bc-bf30-06f410dcf962", "node_type": "1", "metadata": {}, "hash": "fbc4543d5a40bfd3e3607bac11b4a22f185ae6638a0a25d7201b7bc149de79f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return 'invitation sent';\n```\n\n## Step-by-Step Explanation\n\n### Retrieving the Deposit Facet:", "mimetype": "text/plain", "start_char_idx": 476, "end_char_idx": 569, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc4e62e4-f6d4-49bc-bf30-06f410dcf962": {"__data__": {"id_": "fc4e62e4-f6d4-49bc-bf30-06f410dcf962", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c5ff7b1-57f4-4045-aefd-6eafb1056da8", "node_type": "1", "metadata": {}, "hash": "1d82f31254ea5110d631664d7d1eae7c296de680341aa49edcb1758dce9b82c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df40ff5c-038c-407f-a8ec-9f7ee7b15dae", "node_type": "1", "metadata": {}, "hash": "128e9b31a61e51d4f19a0f7f9686ef158db7dfe30fa065f7a803ea8f59cf62a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `depositFacetFromAddr` is an object that provides a lookup function for deposit facets associated with addresses. The Swaparoo contract is provided with a `namesByAddressAdmin` by the proposal (`swaparoo.proposal.js`). The contract makes `depositFacetFromAddr` using `fixHub()`.\n  - An example of an address might be `agoric1ydzxwh6f893jvpaslmaz6l8j2ulup9a7x8qvvq`.", "mimetype": "text/plain", "start_char_idx": 571, "end_char_idx": 938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df40ff5c-038c-407f-a8ec-9f7ee7b15dae": {"__data__": {"id_": "df40ff5c-038c-407f-a8ec-9f7ee7b15dae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc4e62e4-f6d4-49bc-bf30-06f410dcf962", "node_type": "1", "metadata": {}, "hash": "fbc4543d5a40bfd3e3607bac11b4a22f185ae6638a0a25d7201b7bc149de79f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3", "node_type": "1", "metadata": {}, "hash": "4cefd0d857aef8f7cb692c3d6dbafb42f15451c6f817a744480dea67816de69e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The lookup function is called with `secondPartyAddress` and `'depositFacet'` as arguments to retrieve the deposit facet associated with the `secondPartyAddress`.\n- The resulting deposit facet is stored in the `secondDepositFacet` variable.", "mimetype": "text/plain", "start_char_idx": 939, "end_char_idx": 1180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3": {"__data__": {"id_": "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df40ff5c-038c-407f-a8ec-9f7ee7b15dae", "node_type": "1", "metadata": {}, "hash": "128e9b31a61e51d4f19a0f7f9686ef158db7dfe30fa065f7a803ea8f59cf62a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2425295a-9ec1-4891-ba29-0e5269404049", "node_type": "1", "metadata": {}, "hash": "5e74a9f1d3bf259323d96af033160cb82bcfe6f0ba24a2afcda514fa1da8f190", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Making the Payment:", "mimetype": "text/plain", "start_char_idx": 1182, "end_char_idx": 1205, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2425295a-9ec1-4891-ba29-0e5269404049": {"__data__": {"id_": "2425295a-9ec1-4891-ba29-0e5269404049", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3", "node_type": "1", "metadata": {}, "hash": "4cefd0d857aef8f7cb692c3d6dbafb42f15451c6f817a744480dea67816de69e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b", "node_type": "1", "metadata": {}, "hash": "e48ee9b20fadadff1899eeba43ffd7e36a6486f8a5785ecf6e0dcc4c68277ca8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `secondDepositFacet` represents the deposit facet obtained in the previous step.\n- The `receive` method is called on `secondDepositFacet`, passing `secondSeatInvitation` as an argument.\n- `secondSeatInvitation` is an Invitation to participate in the second seat (recall that invitations are payments).\n- Since `receive` is another asynchronous operation, the `await` keyword is again used to wait for it to complete.", "mimetype": "text/plain", "start_char_idx": 1207, "end_char_idx": 1625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b": {"__data__": {"id_": "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2425295a-9ec1-4891-ba29-0e5269404049", "node_type": "1", "metadata": {}, "hash": "5e74a9f1d3bf259323d96af033160cb82bcfe6f0ba24a2afcda514fa1da8f190", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "449fc96f-1212-45a7-9752-7a97dc6413d2", "node_type": "1", "metadata": {}, "hash": "1f190dc38617be2776876b841ebb7fbb85421972f9eb4f479457d248c2a9fc5f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- By calling `receive` on the deposit facet with `secondSeatInvitation`, the payment represented by `secondSeatInvitation` is transferred or deposited into a purse associated with `secondDepositFacet`.", "mimetype": "text/plain", "start_char_idx": 1626, "end_char_idx": 1827, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "449fc96f-1212-45a7-9752-7a97dc6413d2": {"__data__": {"id_": "449fc96f-1212-45a7-9752-7a97dc6413d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b", "node_type": "1", "metadata": {}, "hash": "e48ee9b20fadadff1899eeba43ffd7e36a6486f8a5785ecf6e0dcc4c68277ca8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5740f11a-c403-48e3-bde0-1e0e03126bac", "node_type": "1", "metadata": {}, "hash": "0db707d2ef39b419900adeb870b1b65ea68391d85133378d241924c4d67ec33d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Returning a Result:\n\n- After the payment has been successfully made by calling `receive`, the function returns the string `'invitation sent'` to indicate that the invitation has been sent.\n\n## Deposit Facets in Agoric", "mimetype": "text/plain", "start_char_idx": 1829, "end_char_idx": 2050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5740f11a-c403-48e3-bde0-1e0e03126bac": {"__data__": {"id_": "5740f11a-c403-48e3-bde0-1e0e03126bac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "449fc96f-1212-45a7-9752-7a97dc6413d2", "node_type": "1", "metadata": {}, "hash": "1f190dc38617be2776876b841ebb7fbb85421972f9eb4f479457d248c2a9fc5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17988658-fba3-47ca-b33b-c77cc3ceb894", "node_type": "1", "metadata": {}, "hash": "4f7094e65f9a95b9b25a585443ee1acec3543f38a87d1cd50c9e6c1b323eb926", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Deposit Facets in Agoric\n\nIn the Agoric smart contract framework, deposit facets are used as a way to transfer and manage digital assets and payments between parties. By calling the receive method on a deposit facet and passing in a payment or offer, the smart contract can deposit or transfer assets into the account associated with that facet.\n\nDeposit facets provide an abstraction layer for handling payments and ensure that the transfers are performed securely and reliably within the smart contract.", "mimetype": "text/plain", "start_char_idx": 2023, "end_char_idx": 2531, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "17988658-fba3-47ca-b33b-c77cc3ceb894": {"__data__": {"id_": "17988658-fba3-47ca-b33b-c77cc3ceb894", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md", "node_type": "4", "metadata": {}, "hash": "995db815559fe35b0591ef13d45bc92f120a41af6464a67b9850f8a9077bd661", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5740f11a-c403-48e3-bde0-1e0e03126bac", "node_type": "1", "metadata": {}, "hash": "0db707d2ef39b419900adeb870b1b65ea68391d85133378d241924c4d67ec33d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Video Walkthrough\n\nAs you're going through this tutorial it may be helpful to watch this video walkthrough.\n<ClientOnly>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/XeHBMO7SckU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>", "mimetype": "text/plain", "start_char_idx": 2533, "end_char_idx": 2920, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dbe8d348-b87f-4cee-8006-b2d0eebf951d": {"__data__": {"id_": "dbe8d348-b87f-4cee-8006-b2d0eebf951d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_syncing-up.md", "node_type": "4", "metadata": {}, "hash": "66e9e2928ec9eb540f9b47db199894c42ad059551c5ead8fb107f9c7e0f7dd45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4d90d2b-af5a-40e4-b6d1-bf5daee90072", "node_type": "1", "metadata": {}, "hash": "2d6dc1a94c03169f5f84c418e8d88732cdc3bf95b0c227a7c46c2a36f327f10b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Syncing Up on Mainnet\n\nTune in to [Network Upgrades Governance](https://community.agoric.com/c/governance/network-upgrades/15) in the [Agoric Community Forum](https://community.agoric.com/) for changes to mainnet node operations, including deployment of\nnew [agoric-sdk software releases](https://github.com/Agoric/agoric-sdk/releases).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 338, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4d90d2b-af5a-40e4-b6d1-bf5daee90072": {"__data__": {"id_": "a4d90d2b-af5a-40e4-b6d1-bf5daee90072", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_syncing-up.md", "node_type": "4", "metadata": {}, "hash": "66e9e2928ec9eb540f9b47db199894c42ad059551c5ead8fb107f9c7e0f7dd45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbe8d348-b87f-4cee-8006-b2d0eebf951d", "node_type": "1", "metadata": {}, "hash": "35eecc546ea7cd4c515aad64a3036052fa0be29bd241a75104bd4d090437b7c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80a8adfa-0da8-4b63-8bd3-4ec75559fd15", "node_type": "1", "metadata": {}, "hash": "3583b7108c90cb0f80ecd3e620f2b68de958dcf0f8fe2bfd7d437b7324c4d6ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Mainnet operation is supported on a peer-to-peer basis. Much of the discussion is on the [Agoric discord server](https://agoric.com/discord).\n[Validator profiles](https://community.agoric.com/c/validators/validator-profiles/24)\nhighlight relevant community contributions. For example, guides\nfor state-sync server setup are available from\n[polkachu](https://github.com/Agoric/validator-profiles/tree/main/polkachu.com) and\n[kjnodes](https://community.agoric.com/t/validator-profile-kjnodes/314).", "mimetype": "text/plain", "start_char_idx": 340, "end_char_idx": 835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80a8adfa-0da8-4b63-8bd3-4ec75559fd15": {"__data__": {"id_": "80a8adfa-0da8-4b63-8bd3-4ec75559fd15", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_syncing-up.md", "node_type": "4", "metadata": {}, "hash": "66e9e2928ec9eb540f9b47db199894c42ad059551c5ead8fb107f9c7e0f7dd45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4d90d2b-af5a-40e4-b6d1-bf5daee90072", "node_type": "1", "metadata": {}, "hash": "2d6dc1a94c03169f5f84c418e8d88732cdc3bf95b0c227a7c46c2a36f327f10b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See also: [Guide to Agoric Testnets](https://community.agoric.com/t/guide-to-agoric-testnets/515).", "mimetype": "text/plain", "start_char_idx": 837, "end_char_idx": 935, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "556ae03f-17fb-4e8c-8953-0e1869c13d70": {"__data__": {"id_": "556ae03f-17fb-4e8c-8953-0e1869c13d70", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a47cd9d-4101-48c3-b668-d8b267cdbf71", "node_type": "1", "metadata": {}, "hash": "8bc07ec7a3f790fef64c1774f2a0e2dc06e1dccbd6e97581d9c8485d3d62991a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# The `dapp-agoric-basics` Tutorial\n\n## Introduction\n\nIn this tutorial you will install the `dapp-agoric-basics` dapp. This dapp is a collection of basic use cases for Agoric smart contracts.\n\n- [Sell Concert Tickets Smart Contract](sell-concert-tickets-contract-explainer)\n- [Swaparoo Contract](swaparoo-how-to-swap-assets-explainer)\n- [Sending Invitation Payments using an Address](swaparoo-making-a-payment-explainer)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a47cd9d-4101-48c3-b668-d8b267cdbf71": {"__data__": {"id_": "0a47cd9d-4101-48c3-b668-d8b267cdbf71", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "556ae03f-17fb-4e8c-8953-0e1869c13d70", "node_type": "1", "metadata": {}, "hash": "bc7008f791150fa9b67a870858eb999cab890b5fff8c9d32a79a5b958567bff3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8826bb54-2644-4ae3-bfab-75c67700e635", "node_type": "1", "metadata": {}, "hash": "033f9e3d024ac4d422f6262cb07886b2c29402b49212acd94d0b6eb47eda14cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To begin, you will need an environment with the pre-requisite components installed as outlined in the [Getting Started](index.md) guide. If you have already completed the Getting Started tutorial you can use the same environment.\n\n## Downloading the dapp\n\nPull down the dapp from Github:\n\n```bash\nyarn create @agoric/dapp --dapp-template dapp-agoric-basics agoric-basics\n```\n\n## Installing dapp components\n\nNext, run the `yarn install` command from the `agoric-basics` directory:", "mimetype": "text/plain", "start_char_idx": 422, "end_char_idx": 901, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8826bb54-2644-4ae3-bfab-75c67700e635": {"__data__": {"id_": "8826bb54-2644-4ae3-bfab-75c67700e635", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a47cd9d-4101-48c3-b668-d8b267cdbf71", "node_type": "1", "metadata": {}, "hash": "8bc07ec7a3f790fef64c1774f2a0e2dc06e1dccbd6e97581d9c8485d3d62991a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae6e93d1-a32a-4b08-b368-a75adf0cc55f", "node_type": "1", "metadata": {}, "hash": "9b3147186c5ce4dc70562d04a9b3903724acc15b06de3d189459bae190e87595", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```bash\ncd agoric-basics\nyarn install\n```\n\n## Starting the Docker Container\n\nStart the Docker container:\n\n```bash\nyarn start:docker\n```\n\nAfter a few minutes, check to make sure blocks are being produced by viewing the Docker logs:\n\n```bash\nyarn docker:logs\n```\n\n## Starting the dapp\n\nStart the `dapp-agoric-basics` contract:\n\n```bash\nyarn start:contract\n```\n\nStart the user interface:\n\n```bash\nyarn start:ui\n```", "mimetype": "text/plain", "start_char_idx": 903, "end_char_idx": 1314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae6e93d1-a32a-4b08-b368-a75adf0cc55f": {"__data__": {"id_": "ae6e93d1-a32a-4b08-b368-a75adf0cc55f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8826bb54-2644-4ae3-bfab-75c67700e635", "node_type": "1", "metadata": {}, "hash": "033f9e3d024ac4d422f6262cb07886b2c29402b49212acd94d0b6eb47eda14cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0262b87d-19a1-4821-92d6-3b5974bd623c", "node_type": "1", "metadata": {}, "hash": "25f4bbd7c822107b7513e8b5d89ba762b6e16ce154558431c96494741f4a39d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```bash\nyarn start:ui\n```\n\nNext, open a browser and navigate to `localhost:5173`:\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: The dapp-agoric-basics UI\"\n  src=\"./assets/dapp-agoric-basics-001.png\" />\n\nFrom the UI, select the 'Connect Wallet' option. Choose 'Keplr' from the 'Select your wallet' screen:\ndapp-agoric-basics-002\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Connecting your wallet\"\n  src=\"./assets/dapp-agoric-basics-002.png\" />", "mimetype": "text/plain", "start_char_idx": 1289, "end_char_idx": 1751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0262b87d-19a1-4821-92d6-3b5974bd623c": {"__data__": {"id_": "0262b87d-19a1-4821-92d6-3b5974bd623c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae6e93d1-a32a-4b08-b368-a75adf0cc55f", "node_type": "1", "metadata": {}, "hash": "9b3147186c5ce4dc70562d04a9b3903724acc15b06de3d189459bae190e87595", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "107d3a52-9fc1-4ed9-872a-8f67122c95d3", "node_type": "1", "metadata": {}, "hash": "fd18c11df57706c2a6537b182b95f07b819138d4393e8b917f765adc793549a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Approve the connection in Keplr:\ndapp-agoric-basics-003\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Approve the connection in Keplr\"\n  src=\"./assets/dapp-agoric-basics-003.png\" />\n\nSelect a ticket to purchase and click the 'Mint` button to mint a ticket. Approve the transaction in Keplr:\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Approving the ticket purchase\"\n  src=\"./assets/dapp-agoric-basics-004.png\" />", "mimetype": "text/plain", "start_char_idx": 1753, "end_char_idx": 2185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "107d3a52-9fc1-4ed9-872a-8f67122c95d3": {"__data__": {"id_": "107d3a52-9fc1-4ed9-872a-8f67122c95d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md", "node_type": "4", "metadata": {}, "hash": "4bee386dd498a750b328005381e28e7284f0855c85914a29a04ec89305faa038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0262b87d-19a1-4821-92d6-3b5974bd623c", "node_type": "1", "metadata": {}, "hash": "25f4bbd7c822107b7513e8b5d89ba762b6e16ce154558431c96494741f4a39d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once the transaction has completed, you will notice the tickets in your wallet:\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Tickets in Keplr wallet\"\n  src=\"./assets/dapp-agoric-basics-005.png\" />", "mimetype": "text/plain", "start_char_idx": 2187, "end_char_idx": 2393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f1a2338-19e0-4066-9419-e847667dd1f1": {"__data__": {"id_": "7f1a2338-19e0-4066-9419-e847667dd1f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial_index.md", "node_type": "4", "metadata": {}, "hash": "cd75eaee56d15ac515a99a3c9b2974117e749f28c6d8b6b47a8271253c72185f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21e97b34-32d1-4c43-a739-05c5afa26f73", "node_type": "1", "metadata": {}, "hash": "6b3f4557ef6e11c386d79310955f09c68b0840afe6bc28d35ed6a6d0a17069ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Tutorials\n\nHere you will find tutorials to implement different types of dApp using Agoric.\n\n## Your First Agoric Dapp\n\nIf you are just starting with Agoric, refer to our guide on creating [your first Agoric dApp](../).\n\n## UI Tutorial\n\nIf you have already developed your smart contract, you can explore our detailed guide on [how to build your own dApp UI](../ui-tutorial/).\n\n## Dapp Basics", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21e97b34-32d1-4c43-a739-05c5afa26f73": {"__data__": {"id_": "21e97b34-32d1-4c43-a739-05c5afa26f73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_tutorial_index.md", "node_type": "4", "metadata": {}, "hash": "cd75eaee56d15ac515a99a3c9b2974117e749f28c6d8b6b47a8271253c72185f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f1a2338-19e0-4066-9419-e847667dd1f1", "node_type": "1", "metadata": {}, "hash": "397c167fe7a0783613282a12f5741bacda831a673beb255a0e49e0a3631c069a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Dapp Basics\n\nExplore our [dapp-agoric-basics tutorial](../tutorial-dapp-agoric-basics.html) for more detailed examples of Agoric dApps.", "mimetype": "text/plain", "start_char_idx": 378, "end_char_idx": 516, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0aa02ce-3f9d-4241-92f0-2ab508626a6b": {"__data__": {"id_": "a0aa02ce-3f9d-4241-92f0-2ab508626a6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c672ad0-6d71-42b9-bb7b-758b150431d2", "node_type": "1", "metadata": {}, "hash": "4503b607f18d9ef6e82825e813149845f18f7f1aa74c8f8b41d856427d02440a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Setting Up the Agoric Provider\n\nThe `AgoricProvider` provides a few things in the context of your app, accessible through hooks and components:\n\n- Wallet connection support for numerous wallets (using cosmos-kit).\n- Access to the user's purse balances, offers, and other smart wallet state.\n- Callbacks for making offers and signing transactions.\n- Access to a `chainStorageWatcher` for reading on-chain state from vstorage.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c672ad0-6d71-42b9-bb7b-758b150431d2": {"__data__": {"id_": "9c672ad0-6d71-42b9-bb7b-758b150431d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0aa02ce-3f9d-4241-92f0-2ab508626a6b", "node_type": "1", "metadata": {}, "hash": "b5591dbbe3284b0caa6f6bfd92d1cc2d5f71459139f57e177df045c02f131531", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34b2b7fd-048c-445c-9939-430f9c1bed1b", "node_type": "1", "metadata": {}, "hash": "3a8559ac56f9cf8096aeb632fc2ba4a5060d8bfa52c8de1ea250f1508075d438", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This makes it easy to handle all the platform-specific implementation details, so you can focus on the business logic and user experience when building your UIs.\n\n### Dependencies\n\nInstall the following dependencies:\n\n```\nyarn add -D @agoric/react-components@0.2.0 cosmos-kit@2.8.5 @interchain-ui/react@1.22.11\n```", "mimetype": "text/plain", "start_char_idx": 429, "end_char_idx": 743, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34b2b7fd-048c-445c-9939-430f9c1bed1b": {"__data__": {"id_": "34b2b7fd-048c-445c-9939-430f9c1bed1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c672ad0-6d71-42b9-bb7b-758b150431d2", "node_type": "1", "metadata": {}, "hash": "4503b607f18d9ef6e82825e813149845f18f7f1aa74c8f8b41d856427d02440a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4db77ee0-7328-410a-9b80-c97febeaeefb", "node_type": "1", "metadata": {}, "hash": "9973749f4ebe919bd62a7bea1b617a79701707edbbd90e1b812bf1f6f5c57ce7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `cosmos-kit` dependency is used to provide different wallets in the wallet connection modal.\nThe `@interchain-ui/react` dependency will be used to provide themes and styles for some of the underlying\ncomponents that `@agoric/react-components` uses. There are also many components provided there that may be handy when building your own app.\nThe Agoric components can be customized using the same `ThemeProvider`.", "mimetype": "text/plain", "start_char_idx": 745, "end_char_idx": 1161, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4db77ee0-7328-410a-9b80-c97febeaeefb": {"__data__": {"id_": "4db77ee0-7328-410a-9b80-c97febeaeefb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34b2b7fd-048c-445c-9939-430f9c1bed1b", "node_type": "1", "metadata": {}, "hash": "3a8559ac56f9cf8096aeb632fc2ba4a5060d8bfa52c8de1ea250f1508075d438", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11d5bd07-38ba-4743-a408-b5aea355d0cc", "node_type": "1", "metadata": {}, "hash": "f3ebbf4eee5f280c88ed66524950a3732828e82912a9779b8e937ba42f32daa5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note: If you see `yarn build` failing with memory errors, it might be due to an increased bundle size. To get around this, try\nadding this flag to `build` in `package.json`:\n\n```json\n  \"build\": \"tsc && NODE_OPTIONS=--max-old-space-size=4096 vite build\",\n```\n\n### Adding the Provider\n\nPut the provider in the root of your application by editing `App.tsx`. We can also remove some of default scaffolding UI at the same time.\nThe end result should look something like this:", "mimetype": "text/plain", "start_char_idx": 1163, "end_char_idx": 1633, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11d5bd07-38ba-4743-a408-b5aea355d0cc": {"__data__": {"id_": "11d5bd07-38ba-4743-a408-b5aea355d0cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4db77ee0-7328-410a-9b80-c97febeaeefb", "node_type": "1", "metadata": {}, "hash": "9973749f4ebe919bd62a7bea1b617a79701707edbbd90e1b812bf1f6f5c57ce7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e72fdb94-0ddb-4683-adde-03441b374447", "node_type": "1", "metadata": {}, "hash": "b1cdcaa19c536f742403bd3316eb1c92409188fd1a3f221f89467d3c18410400", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nimport { AgoricProvider, ConnectWalletButton } from '@agoric/react-components';\nimport { wallets } from 'cosmos-kit';\nimport { ThemeProvider, useTheme } from '@interchain-ui/react';\nimport './App.css';\nimport '@agoric/react-components/dist/style.css';", "mimetype": "text/plain", "start_char_idx": 1635, "end_char_idx": 1893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e72fdb94-0ddb-4683-adde-03441b374447": {"__data__": {"id_": "e72fdb94-0ddb-4683-adde-03441b374447", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11d5bd07-38ba-4743-a408-b5aea355d0cc", "node_type": "1", "metadata": {}, "hash": "f3ebbf4eee5f280c88ed66524950a3732828e82912a9779b8e937ba42f32daa5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19305845-c137-4acb-8267-99fa427d476d", "node_type": "1", "metadata": {}, "hash": "66ca60bb96e1b1382fd3321a11badd17fe07a81693ee490d439dc50a1a7509be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function App() {\n  const { themeClass } = useTheme();\n  return (\n    <ThemeProvider>\n      <div className={themeClass}>\n        <AgoricProvider\n          wallets={wallets.extension}\n          agoricNetworkConfigs={[\n            {\n              testChain: {\n                chainId: 'agoriclocal',\n                chainName: 'agoric-local'\n              },\n              apis: {\n                rest: ['http://localhost:1317'],\n                rpc: ['http://localhost:26657']\n              }\n            }", "mimetype": "text/plain", "start_char_idx": 1895, "end_char_idx": 2399, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19305845-c137-4acb-8267-99fa427d476d": {"__data__": {"id_": "19305845-c137-4acb-8267-99fa427d476d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e72fdb94-0ddb-4683-adde-03441b374447", "node_type": "1", "metadata": {}, "hash": "b1cdcaa19c536f742403bd3316eb1c92409188fd1a3f221f89467d3c18410400", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ee617a9-c417-4a11-afbe-0e6f94e599a7", "node_type": "1", "metadata": {}, "hash": "97955c475cc1356a2acf47dd75c3bd344dada8bbdd285e8ab2969b9462b10a46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}\n            }\n          ]}\n          defaultChainName=\"agoric-local\"\n        >\n          <h1>Agoric UI Tutorial</h1>\n          <ConnectWalletButton />\n        </AgoricProvider>\n      </div>\n    </ThemeProvider>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 2384, "end_char_idx": 2603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ee617a9-c417-4a11-afbe-0e6f94e599a7": {"__data__": {"id_": "3ee617a9-c417-4a11-afbe-0e6f94e599a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19305845-c137-4acb-8267-99fa427d476d", "node_type": "1", "metadata": {}, "hash": "66ca60bb96e1b1382fd3321a11badd17fe07a81693ee490d439dc50a1a7509be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d29599e3-f958-42f3-9074-103fea6b3704", "node_type": "1", "metadata": {}, "hash": "17eec7132266835fd4ed324ecd2c6b80ec4b2edc20eb41b0c20455a09b0201d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default App;\n```\n\nYou may have noticed the `defaultChainName` prop points to a local chain. This assumes\nthat you are still running the local chain from [Getting Started](/guides/getting-started/index.md) in Docker. If you're not, make sure to follow those steps before proceeding.", "mimetype": "text/plain", "start_char_idx": 2605, "end_char_idx": 2893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d29599e3-f958-42f3-9074-103fea6b3704": {"__data__": {"id_": "d29599e3-f958-42f3-9074-103fea6b3704", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ee617a9-c417-4a11-afbe-0e6f94e599a7", "node_type": "1", "metadata": {}, "hash": "97955c475cc1356a2acf47dd75c3bd344dada8bbdd285e8ab2969b9462b10a46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16be8308-fb05-4702-b77a-ea3692468f85", "node_type": "1", "metadata": {}, "hash": "f2caf46e7f6dde7d27bddf461fd400eac1d053ec1dfefa6d3b62d852b3869d8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note: If you see a type error on the `wallets` prop, this is likely because `@agoric/react-components` is using an older version of `cosmos-kit` than what was installed in your app. To fix this, you can add `resolutions` to your `package.json` like so:\n\n```json\n  \"resolutions\": {\n    \"@cosmos-kit/core\": \"2.8.9\"\n  }\n```\n\n## Testing it Out", "mimetype": "text/plain", "start_char_idx": 2895, "end_char_idx": 3234, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16be8308-fb05-4702-b77a-ea3692468f85": {"__data__": {"id_": "16be8308-fb05-4702-b77a-ea3692468f85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md", "node_type": "4", "metadata": {}, "hash": "17d82c685a6de1eec0e646056e533af27854fce19d5d3dbe4fe153a5c00f23f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d29599e3-f958-42f3-9074-103fea6b3704", "node_type": "1", "metadata": {}, "hash": "17eec7132266835fd4ed324ecd2c6b80ec4b2edc20eb41b0c20455a09b0201d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Testing it Out\n\nTry `yarn dev` after making these changes to make sure your app builds again. If you're having trouble, check\nout the `checkpoint-2` branch in the example repo. As you may notice, we just added a \"Connect Wallet\"\nbutton to the UI. In the next section, we'll test it out, and learn how to access the user's account and purses.", "mimetype": "text/plain", "start_char_idx": 3217, "end_char_idx": 3561, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5a29398-83b3-486c-80cf-329d9baae6ed": {"__data__": {"id_": "f5a29398-83b3-486c-80cf-329d9baae6ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_conclusion.md", "node_type": "4", "metadata": {}, "hash": "909abcb4c8f4dfcdfcf41967bc6d3dc93e761571edb5a6dd44b897c17bc34599", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d2dbc40-5802-445e-89b1-90588b93874c", "node_type": "1", "metadata": {}, "hash": "a96586dab30b5987d5deeac0284b2c2dee2fefb9f700d2aeb620e460d90ab555", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Conclusion\n\nThroughout this tutorial, you've accomplished all the basics of building an Agoric Dapp UI:\n\n- Scaffolding a new React App.\n- Setting up `AgoricProvider` and connecting to a wallet.\n- Reading and rendering purse balances.\n- Reading vstorage data with `chainStorageWatcher`.\n- Making an offer to exchange some on-chain assets.\n\nWith these basics in place, the world of Agoric UI development has opened up to you. To expand on your\nnewly acquired knowledge, consider trying out the following tasks:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d2dbc40-5802-445e-89b1-90588b93874c": {"__data__": {"id_": "0d2dbc40-5802-445e-89b1-90588b93874c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_conclusion.md", "node_type": "4", "metadata": {}, "hash": "909abcb4c8f4dfcdfcf41967bc6d3dc93e761571edb5a6dd44b897c17bc34599", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5a29398-83b3-486c-80cf-329d9baae6ed", "node_type": "1", "metadata": {}, "hash": "dcde57bdd73b072ab960137fd8356ab4b83d13bb514906c7be7551c6a88e0efa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f71c639c-ae1a-48e0-a1a9-0a1dffcc1f5a", "node_type": "1", "metadata": {}, "hash": "87ee75e8d4bce0cff4603bb96cb4374bfa88cf262ba31830a0b6c14b486773af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Spruce up your UI with `interchain-ui` components and try customizing the theme.\n- Add automated e2e testing using https://github.com/agoric-labs/synpress.\n- Add a new item to the \"Offer Up\" contract and implement UI support for it.\n- Deploy the contract to a testnet and add the `NetworkDropdown` component to your dapp to switch between networks.\n- Write your own dapp and implement a custom UI for it.", "mimetype": "text/plain", "start_char_idx": 513, "end_char_idx": 919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f71c639c-ae1a-48e0-a1a9-0a1dffcc1f5a": {"__data__": {"id_": "f71c639c-ae1a-48e0-a1a9-0a1dffcc1f5a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_conclusion.md", "node_type": "4", "metadata": {}, "hash": "909abcb4c8f4dfcdfcf41967bc6d3dc93e761571edb5a6dd44b897c17bc34599", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d2dbc40-5802-445e-89b1-90588b93874c", "node_type": "1", "metadata": {}, "hash": "a96586dab30b5987d5deeac0284b2c2dee2fefb9f700d2aeb620e460d90ab555", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Check out the #dev channel in the Discord with any questions or feedback for future improvements on this guide.", "mimetype": "text/plain", "start_char_idx": 921, "end_char_idx": 1032, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d5efb9e-d364-4ba7-b822-6855554bf978": {"__data__": {"id_": "9d5efb9e-d364-4ba7-b822-6855554bf978", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8d4acbc-3689-46de-a38d-2da7b4b65850", "node_type": "1", "metadata": {}, "hash": "551de0cadb143f398a6ad0ca4eb62f47b0cd13cece4e09c4a5ed31fe83cfa11d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Connect Wallet\n\nAt this point you should have an app rendering with a single \"Connect Wallet\" button. Try\nclicking on it and you should see a modal pop up with many wallets to choose from. Click \"Keplr\", approve the connection, and you should see the button shows your truncated address.\n\n### Accessing the Wallet Data\n\nNow that we've connected to our wallet extension, there's some common tasks an app would want to do:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8d4acbc-3689-46de-a38d-2da7b4b65850": {"__data__": {"id_": "b8d4acbc-3689-46de-a38d-2da7b4b65850", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d5efb9e-d364-4ba7-b822-6855554bf978", "node_type": "1", "metadata": {}, "hash": "7d125c1a75cd132d39c14373487ef5029af8b6023121a2f6e9ffdb6da3e7d2bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc", "node_type": "1", "metadata": {}, "hash": "6d3e3b7c54dda656ecbc80e96ad43eee491204e92cde6679e0eaeb511d03c8d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Access the user's purse balances to see their tokens.\n- Sign transactions in Keplr to make offers and interact with a smart contract.\n\nThe `AgoricProvider` makes both of these tasks straightforward. We'll focus on the first\npoint in this section, and later on we'll see how to make an offer.\n\n### Create a Purses Component\n\nSince the \"Offer Up\" contract uses IST as a fee token to purchase NFTs, we can start by\nshowing the user's IST balance.", "mimetype": "text/plain", "start_char_idx": 425, "end_char_idx": 870, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc": {"__data__": {"id_": "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8d4acbc-3689-46de-a38d-2da7b4b65850", "node_type": "1", "metadata": {}, "hash": "551de0cadb143f398a6ad0ca4eb62f47b0cd13cece4e09c4a5ed31fe83cfa11d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "955f9ef9-1345-4ef3-a897-06d02001524a", "node_type": "1", "metadata": {}, "hash": "c2db14dbb63094e70959fbae800122679a77efe80f4b02d7e748b453701a8ed7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Create a new file, `src/Purses.tsx`, where you'll write a component for rendering purse balances.\n\n```tsx\nimport { useAgoric } from '@agoric/react-components';\n\nconst Purses = () => {\n  const { walletConnection } = useAgoric();", "mimetype": "text/plain", "start_char_idx": 872, "end_char_idx": 1099, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "955f9ef9-1345-4ef3-a897-06d02001524a": {"__data__": {"id_": "955f9ef9-1345-4ef3-a897-06d02001524a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc", "node_type": "1", "metadata": {}, "hash": "6d3e3b7c54dda656ecbc80e96ad43eee491204e92cde6679e0eaeb511d03c8d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de7c77fb-1bbe-4f90-a4a7-54a291826c2e", "node_type": "1", "metadata": {}, "hash": "b32ba95c4cee7be5880201c743eb08153376ae5d496fcbba1c491af8f88fc1e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return (\n    <div className=\"card\">\n      <h3>Purses</h3>\n      {walletConnection ? (\n        <div style={{ textAlign: 'left' }}>\n          <div>\n            <b>IST: </b>\n            TODO - Render IST Balance\n          </div>\n        </div>\n      ) : (\n        'No wallet connected.'\n      )}\n    </div>\n  );\n};\n\nexport default Purses;\n```\n\nThen, in `App.tsx` render the component inside the `AgoricProvider`, below the\n`<ConnectWalletButton />`:", "mimetype": "text/plain", "start_char_idx": 1103, "end_char_idx": 1549, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de7c77fb-1bbe-4f90-a4a7-54a291826c2e": {"__data__": {"id_": "de7c77fb-1bbe-4f90-a4a7-54a291826c2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "955f9ef9-1345-4ef3-a897-06d02001524a", "node_type": "1", "metadata": {}, "hash": "c2db14dbb63094e70959fbae800122679a77efe80f4b02d7e748b453701a8ed7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45b77872-8feb-4838-8c3f-50d867e84e77", "node_type": "1", "metadata": {}, "hash": "b38695862ec74b28276abcf5f087e45911879ab49b8f570f02a96d2f55024cbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nimport Purses from './Purses';\n...\n    <ConnectWalletButton />\n    <Purses />\n...\n```", "mimetype": "text/plain", "start_char_idx": 1551, "end_char_idx": 1643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45b77872-8feb-4838-8c3f-50d867e84e77": {"__data__": {"id_": "45b77872-8feb-4838-8c3f-50d867e84e77", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de7c77fb-1bbe-4f90-a4a7-54a291826c2e", "node_type": "1", "metadata": {}, "hash": "b32ba95c4cee7be5880201c743eb08153376ae5d496fcbba1c491af8f88fc1e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4611ea7c-b9da-465f-88ed-53d9f0fbc632", "node_type": "1", "metadata": {}, "hash": "cb09c588e74208e2949f293d82d32d3ae64422ba3b7cad98854a45318dcdbe06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once the app rebuilds, you should see a \"Purses\" section. You'll notice that it uses the `walletConnection`\nobject from the `useAgoric` hook. This is provided by the `AgoricProvider`, and right now the component\njust uses it to see if there is a wallet connection. If it still shows \"No wallet connected.\" after connecting\nto Keplr, make sure that your local chain is running and check your console for any RPC errors.\n\n### Rendering the IST Balance", "mimetype": "text/plain", "start_char_idx": 1645, "end_char_idx": 2094, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4611ea7c-b9da-465f-88ed-53d9f0fbc632": {"__data__": {"id_": "4611ea7c-b9da-465f-88ed-53d9f0fbc632", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45b77872-8feb-4838-8c3f-50d867e84e77", "node_type": "1", "metadata": {}, "hash": "b38695862ec74b28276abcf5f087e45911879ab49b8f570f02a96d2f55024cbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b58b278f-3a25-4a86-a5de-2ffd700e24c7", "node_type": "1", "metadata": {}, "hash": "fbc1c182571e7aba515e2b4d74b3d8c1bb8d3eaeec026df72aff632bd2b29293", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Rendering the IST Balance\n\nWe'll access the purse data from the `useAgoric` hook. First, we'll create a new hook for convenience,\nsince we'll need to render another purse for the NFTs later on. Create a new file, `src/hooks.ts`\n\n```ts\nimport { useAgoric } from '@agoric/react-components';\n\nexport const usePurse = (brandPetname: string) => {\n  const { purses } = useAgoric();\n\n  return purses?.find(p => p.brandPetname === brandPetname);\n};\n```", "mimetype": "text/plain", "start_char_idx": 2065, "end_char_idx": 2513, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b58b278f-3a25-4a86-a5de-2ffd700e24c7": {"__data__": {"id_": "b58b278f-3a25-4a86-a5de-2ffd700e24c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4611ea7c-b9da-465f-88ed-53d9f0fbc632", "node_type": "1", "metadata": {}, "hash": "cb09c588e74208e2949f293d82d32d3ae64422ba3b7cad98854a45318dcdbe06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "606dcdee-7736-4237-a2f5-19fccd8d11d4", "node_type": "1", "metadata": {}, "hash": "79dff5560902727a21f34d84eb896126e8838cefd7d92b590b7d303ac383f5b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This provides a utility for looking up a user's purse by name. Notice how it accesses `purses` from `useAgoric()`.\nThe `<AgoricProvider>` handles all the chain queries to fetch the purses, and automatically polls and", "mimetype": "text/plain", "start_char_idx": 2515, "end_char_idx": 2731, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "606dcdee-7736-4237-a2f5-19fccd8d11d4": {"__data__": {"id_": "606dcdee-7736-4237-a2f5-19fccd8d11d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b58b278f-3a25-4a86-a5de-2ffd700e24c7", "node_type": "1", "metadata": {}, "hash": "fbc1c182571e7aba515e2b4d74b3d8c1bb8d3eaeec026df72aff632bd2b29293", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fb23008-5ecf-4abe-89fb-e084adae6180", "node_type": "1", "metadata": {}, "hash": "63d7bd54285ca38e72d53736a0475bb1f26bf0603d94853aa13c19bca2fc97aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "updates `purses` whenever the balances change. It also coalesces ERTP purses with [VBank Assets and Cosmos Bank Balances](/guides/getting-started/contract-rpc.md#vbank-assets-and-cosmos-bank-balances) automatically. See [Smart Wallet VStorage Topics](/guides/getting-started/contract-rpc.md#smart-wallet-vstorage-topics)\nfor more details about where this data comes from.", "mimetype": "text/plain", "start_char_idx": 2732, "end_char_idx": 3103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1fb23008-5ecf-4abe-89fb-e084adae6180": {"__data__": {"id_": "1fb23008-5ecf-4abe-89fb-e084adae6180", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "606dcdee-7736-4237-a2f5-19fccd8d11d4", "node_type": "1", "metadata": {}, "hash": "79dff5560902727a21f34d84eb896126e8838cefd7d92b590b7d303ac383f5b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "795ae17e-253e-46de-9f79-289c57dc4189", "node_type": "1", "metadata": {}, "hash": "32386f4bdcc678b59789efecf7de2f084122bade89a5a8c9c6edc5cb7a9d9c85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Next, we'll add a dependency on `@agoric/web-components`, which provides a utility for rendering\namounts and handling various denoms:\n\n```\nyarn add -D @agoric/web-components@0.16.0\n```\n\nThen, in `Purses.tsx`, we can put it all together to render the IST balance:\n\n```tsx\nimport { useAgoric } from '@agoric/react-components';\nimport { usePurse } from './hooks';\nimport { stringifyAmountValue } from '@agoric/web-components';", "mimetype": "text/plain", "start_char_idx": 3105, "end_char_idx": 3528, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "795ae17e-253e-46de-9f79-289c57dc4189": {"__data__": {"id_": "795ae17e-253e-46de-9f79-289c57dc4189", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fb23008-5ecf-4abe-89fb-e084adae6180", "node_type": "1", "metadata": {}, "hash": "63d7bd54285ca38e72d53736a0475bb1f26bf0603d94853aa13c19bca2fc97aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58466ca6-4d6c-4532-8e53-9801646f1066", "node_type": "1", "metadata": {}, "hash": "539db5f83fc9efaaa4750149620ae3132a6a20a83e1699d68f41fe0a35449ee8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const Purses = () => {\n  const { walletConnection } = useAgoric();\n  const istPurse = usePurse('IST');", "mimetype": "text/plain", "start_char_idx": 3530, "end_char_idx": 3632, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58466ca6-4d6c-4532-8e53-9801646f1066": {"__data__": {"id_": "58466ca6-4d6c-4532-8e53-9801646f1066", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "795ae17e-253e-46de-9f79-289c57dc4189", "node_type": "1", "metadata": {}, "hash": "32386f4bdcc678b59789efecf7de2f084122bade89a5a8c9c6edc5cb7a9d9c85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc661d5a-9024-48f9-8896-4f3f8800de1f", "node_type": "1", "metadata": {}, "hash": "f7281f92bd1c3c79652b37b43fcf3cd44935c223924af5fdea45e446ba4f22a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return (\n    <div className=\"card\">\n      <h3>Purses</h3>\n      {walletConnection ? (\n        <div style={{ textAlign: 'left' }}>\n          <div>\n            <b>IST: </b>\n            {istPurse ? (\n              stringifyAmountValue(\n                istPurse.currentAmount,\n                istPurse.displayInfo.assetKind,\n                istPurse.displayInfo.decimalPlaces\n              )\n            ) : (\n              <i>Fetching balance...</i>\n            )}\n          </div>\n        </div>\n      ) : (", "mimetype": "text/plain", "start_char_idx": 3636, "end_char_idx": 4141, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc661d5a-9024-48f9-8896-4f3f8800de1f": {"__data__": {"id_": "bc661d5a-9024-48f9-8896-4f3f8800de1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58466ca6-4d6c-4532-8e53-9801646f1066", "node_type": "1", "metadata": {}, "hash": "539db5f83fc9efaaa4750149620ae3132a6a20a83e1699d68f41fe0a35449ee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a67db3d5-5bfc-47fa-bc25-4fde498fc6d1", "node_type": "1", "metadata": {}, "hash": "b179f694eab448269b18c7b0622fd4742b83b0d8b551b00c56779b1d63d98c9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</div>\n      ) : (\n        'No wallet connected.'\n      )}\n    </div>\n  );\n};\n```", "mimetype": "text/plain", "start_char_idx": 4123, "end_char_idx": 4204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a67db3d5-5bfc-47fa-bc25-4fde498fc6d1": {"__data__": {"id_": "a67db3d5-5bfc-47fa-bc25-4fde498fc6d1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md", "node_type": "4", "metadata": {}, "hash": "f16279e4a8e0e1f55357f899bf31f0d5b501c525f660e5549e874e93907ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc661d5a-9024-48f9-8896-4f3f8800de1f", "node_type": "1", "metadata": {}, "hash": "f7281f92bd1c3c79652b37b43fcf3cd44935c223924af5fdea45e446ba4f22a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When the app rebuilds, you should see the real IST balance appear below \"Purses\". Now you're able\nto connect to a user's wallet and render their purse balances, but what can you do from there?\nIn the next section, you'll learn how to read smart contract data from the UI so the user can\ninteract with it.\n\nAs usual, if you have any difficulties along the way, you can check out the `checkpoint-3`\nbranch in the example repo.", "mimetype": "text/plain", "start_char_idx": 4206, "end_char_idx": 4630, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b9ae0720-3f5e-4f0b-8b9c-b0af27ebff6b": {"__data__": {"id_": "b9ae0720-3f5e-4f0b-8b9c-b0af27ebff6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_index.md", "node_type": "4", "metadata": {}, "hash": "9765971d3f5dcdc2904aaa14a40735ee7f54c527f3bfc2639c6bdc057d879f48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b41caf1-7d1f-4fe7-b98f-d08c8002d848", "node_type": "1", "metadata": {}, "hash": "2d09a092f2107ffab0ddbf38ac62e9b766b6bb56d268fe942af81f8637c77c97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# UI Tutorial\n\nIn this tutorial you will build your own UI from scratch. Along the way, you'll learn how to connect to a wallet, query the blockchain and smart contract state, sign transactions, and more! To follow along, check your work, and help if you get stuck, you can use the https://github.com/agoric-labs/ui-tutorial repo as a reference. Each section of the tutorial has an associated branch in the repo\nto act as a checkpoint.\n\n## Prerequisites", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 453, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b41caf1-7d1f-4fe7-b98f-d08c8002d848": {"__data__": {"id_": "8b41caf1-7d1f-4fe7-b98f-d08c8002d848", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_index.md", "node_type": "4", "metadata": {}, "hash": "9765971d3f5dcdc2904aaa14a40735ee7f54c527f3bfc2639c6bdc057d879f48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9ae0720-3f5e-4f0b-8b9c-b0af27ebff6b", "node_type": "1", "metadata": {}, "hash": "67f0e47cb13f219fcf906ff1190c78c752f62f4d960c7744075ca3d95699ab9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Prerequisites\n\nSee [Getting Started](../../getting-started/index.md) first to get your environment, including a local chain, up and running. This tutorial will walk through, from start to finish, how to build a UI for the \"Offer Up\" dapp as seen in that example.", "mimetype": "text/plain", "start_char_idx": 437, "end_char_idx": 702, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "462298fb-0cb6-43dc-aeed-237edbffbf60": {"__data__": {"id_": "462298fb-0cb6-43dc-aeed-237edbffbf60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e", "node_type": "1", "metadata": {}, "hash": "8de01a5a963cc2524597c39e33106ba481e7a829d8e4f425e5e279ead31fc789", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Making an Offer\n\nIf you've made it this far, you've created a React app that connects to the wallet, renders\nthe IST purse balance of the user, and reads the chain with `chainStorageWatcher`. If you've\nrun into an issues, you can check out the [checkpoint-4](https://github.com/agoric-labs/ui-tutorial/tree/checkpoint-4) branch for reference.\n\nIn this final tutorial, you'll see how to make offers from your app, tying everything together\nin a basic end-to-end experience for the user.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 488, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e": {"__data__": {"id_": "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "462298fb-0cb6-43dc-aeed-237edbffbf60", "node_type": "1", "metadata": {}, "hash": "ab024150726ad60dc1e3d4c7ac2e002e158a8e35e1b97813b625b60995c627a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69d459d3-0f47-43e6-a22a-6e4da4d14a85", "node_type": "1", "metadata": {}, "hash": "467cb44f4a408b1e7d04bb2401d43eb2a1dd125f69bc916c398399e3ac8a257a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Building out the UI\n\nBefore we can submit an offer, we'll need to build out some basic inputs so the user can specify\nthe Items they want. There's 3 types of items available for sale in the contract, so start by\ncreating an array to list them in `Trade.tsx`:\n\n```ts\nconst allItems = ['scroll', 'map', 'potion'];\n```\n\nNext, add another component to `Trade.tsx` for letting the user choose the amount of each item in the offer:", "mimetype": "text/plain", "start_char_idx": 490, "end_char_idx": 919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "69d459d3-0f47-43e6-a22a-6e4da4d14a85": {"__data__": {"id_": "69d459d3-0f47-43e6-a22a-6e4da4d14a85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e", "node_type": "1", "metadata": {}, "hash": "8de01a5a963cc2524597c39e33106ba481e7a829d8e4f425e5e279ead31fc789", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "949eb9f9-2880-4d08-9ed7-a824ef5f3534", "node_type": "1", "metadata": {}, "hash": "33de6c642e48c3007e08a7cf212044ce0b9ae0520778ee751182a3c9222c8033", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nconst Item = ({\n  label,\n  value,\n  onChange,\n  inputStep\n}: {\n  label: string;\n  value: number | string;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n  inputStep?: string;\n}) => (\n  <div className=\"item-col\">\n    <h4>{label}</h4>\n    <input\n      title={label}\n      type=\"number\"\n      min=\"0\"\n      max=\"3\"\n      value={value}\n      step={inputStep || '1'}\n      onChange={onChange}\n      className=\"input\"\n    />\n  </div>\n);\n```\n\nAnd add some styles to `App.css`:", "mimetype": "text/plain", "start_char_idx": 921, "end_char_idx": 1406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "949eb9f9-2880-4d08-9ed7-a824ef5f3534": {"__data__": {"id_": "949eb9f9-2880-4d08-9ed7-a824ef5f3534", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69d459d3-0f47-43e6-a22a-6e4da4d14a85", "node_type": "1", "metadata": {}, "hash": "467cb44f4a408b1e7d04bb2401d43eb2a1dd125f69bc916c398399e3ac8a257a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b96232a6-b68b-4fd6-857e-aa0f73cbe171", "node_type": "1", "metadata": {}, "hash": "2c107fba97257fcf2bd1ea4b5ee6d58feaa33cf933b7176b132bd7930d513973", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "And add some styles to `App.css`:\n\n```css\n.item-col {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 15px 25px 15px;\n  margin: 5px;\n}\n\n.row-center {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.input {\n  border: none;\n  background: #242424;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 8px;\n  font-size: 1.2rem;\n  width: 75px;\n}\n\n.input[type='number']::-webkit-inner-spin-button {\n  opacity: 1;\n}\n```", "mimetype": "text/plain", "start_char_idx": 1373, "end_char_idx": 1842, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b96232a6-b68b-4fd6-857e-aa0f73cbe171": {"__data__": {"id_": "b96232a6-b68b-4fd6-857e-aa0f73cbe171", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "949eb9f9-2880-4d08-9ed7-a824ef5f3534", "node_type": "1", "metadata": {}, "hash": "33de6c642e48c3007e08a7cf212044ce0b9ae0520778ee751182a3c9222c8033", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59627040-e8e6-45e3-b426-037194eff5e4", "node_type": "1", "metadata": {}, "hash": "601f4670efde4ce5baa3fc2ecb484869840e3076891fcb63b7c04831bca0df0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Next, in your `Trade` component, render an `Item` for each item in the list:\n\n```tsx\nconst Trade = () => {\n  ...\n\n  const [choices, setChoices] = useState<Record<string, bigint>>({\n    map: 1n,\n    scroll: 2n,\n  });", "mimetype": "text/plain", "start_char_idx": 1844, "end_char_idx": 2059, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59627040-e8e6-45e3-b426-037194eff5e4": {"__data__": {"id_": "59627040-e8e6-45e3-b426-037194eff5e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b96232a6-b68b-4fd6-857e-aa0f73cbe171", "node_type": "1", "metadata": {}, "hash": "2c107fba97257fcf2bd1ea4b5ee6d58feaa33cf933b7176b132bd7930d513973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68af71e0-d7eb-4a91-a863-a2f25c116518", "node_type": "1", "metadata": {}, "hash": "6f6ed170ad8b2b30072a6a0d8df21cb42fcae216e53849c4a4154b89cca66863", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const changeChoice = (ev: FormEvent) => {\n    if (!ev.target) return;\n    const elt = ev.target as HTMLInputElement;\n    const title = elt.title;\n    if (!title) return;\n    const qty = BigInt(elt.value);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { [title]: _old, ...rest } = choices;\n    const newChoices = qty > 0 ? { ...rest, [title]: qty } : rest;\n    setChoices(newChoices);\n  };", "mimetype": "text/plain", "start_char_idx": 2063, "end_char_idx": 2481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68af71e0-d7eb-4a91-a863-a2f25c116518": {"__data__": {"id_": "68af71e0-d7eb-4a91-a863-a2f25c116518", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59627040-e8e6-45e3-b426-037194eff5e4", "node_type": "1", "metadata": {}, "hash": "601f4670efde4ce5baa3fc2ecb484869840e3076891fcb63b7c04831bca0df0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec7387f8-666b-46fd-8f25-88d220afb643", "node_type": "1", "metadata": {}, "hash": "8eea223abf460db643aea5bba919b61a0352906b2edaaca6c05a4f3e5a473317", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return (\n    <div className=\"trade\">\n      <h3>Want: Choose up to 3 items</h3>\n      <div className=\"row-center\">\n        {allItems.map(title => (\n          <Item\n            key={title}\n            value={Number(choices[title] || 0n)}\n            label={title}\n            onChange={changeChoice}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n```", "mimetype": "text/plain", "start_char_idx": 2485, "end_char_idx": 2842, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec7387f8-666b-46fd-8f25-88d220afb643": {"__data__": {"id_": "ec7387f8-666b-46fd-8f25-88d220afb643", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68af71e0-d7eb-4a91-a863-a2f25c116518", "node_type": "1", "metadata": {}, "hash": "6f6ed170ad8b2b30072a6a0d8df21cb42fcae216e53849c4a4154b89cca66863", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d", "node_type": "1", "metadata": {}, "hash": "f134f450fc508999e4f4d40aa79d7df7947281eb89cf33c26b4f256d1ad7873a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As you can see, you're storing `choices` with a `useState` hook. This way, as the user changes the inputs,\nthe number of items of each type is updated. Later on you'll use `choices` to specify the offer.\n\nNext, you'll add an input to let the user specify the amount of IST they want to give in exchange for the items.\nFirst, get a reference to the IST purse with the `usePurse` you created earlier, and create a state hook for the IST value:", "mimetype": "text/plain", "start_char_idx": 2844, "end_char_idx": 3285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d": {"__data__": {"id_": "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec7387f8-666b-46fd-8f25-88d220afb643", "node_type": "1", "metadata": {}, "hash": "8eea223abf460db643aea5bba919b61a0352906b2edaaca6c05a4f3e5a473317", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6340a5b-8a7f-4aa2-8b14-169b747c176c", "node_type": "1", "metadata": {}, "hash": "0a7bf1bfe300e29d9f36816795e94faca11cd7b20393bffdd87c7aa7fb902d98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nconst Trade = () => {\n  const istPurse = usePurse('IST');\n  const [giveValue, setGiveValue] = useState(0n);\n\n  ...\n}\n```\n\nNext, use the `<AmountInput>` component to add an input for the IST \"give\" amount:\n\n```tsx\nimport { AmountInput } from '@agoric/react-components';\n\n...", "mimetype": "text/plain", "start_char_idx": 3287, "end_char_idx": 3567, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6340a5b-8a7f-4aa2-8b14-169b747c176c": {"__data__": {"id_": "e6340a5b-8a7f-4aa2-8b14-169b747c176c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d", "node_type": "1", "metadata": {}, "hash": "f134f450fc508999e4f4d40aa79d7df7947281eb89cf33c26b4f256d1ad7873a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebb8ffe8-7919-437c-a819-b022cfcd6bc4", "node_type": "1", "metadata": {}, "hash": "32f385c13e7954706c30e55d5e616dff6d03bce4f654a67737b25e45dccd8388", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "...\n\n// In your 'Trade' component:\n{istPurse && (\n  <>\n    <h3>Give: At least 0.25 IST</h3>\n    <div className=\"row-center\">\n      <AmountInput\n        className=\"input\"\n        value={giveValue}\n        onChange={setGiveValue}\n        decimalPlaces={istPurse.displayInfo.decimalPlaces as number}\n      />\n    </div>\n  </>\n)}\n```\n\n### Submitting the Offer", "mimetype": "text/plain", "start_char_idx": 3564, "end_char_idx": 3919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebb8ffe8-7919-437c-a819-b022cfcd6bc4": {"__data__": {"id_": "ebb8ffe8-7919-437c-a819-b022cfcd6bc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6340a5b-8a7f-4aa2-8b14-169b747c176c", "node_type": "1", "metadata": {}, "hash": "0a7bf1bfe300e29d9f36816795e94faca11cd7b20393bffdd87c7aa7fb902d98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c248fca8-89f7-4a16-bcbd-74d31a03d6ef", "node_type": "1", "metadata": {}, "hash": "db04f7ca098e0f185dac31300248fda8356c5561c20c07544f25e0dce5417cd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Submitting the Offer\n\nWith these components in place, the user is able to select their Item and IST amounts, and the app\nis able to store those in its state. Now, you'll see how to use the `makeOffer` function to sign\na transaction and make an offer to the smart contract with the selected amounts.\n\nRecall the `useContract` hook you added to your `Trade` component previously. Now, you'll need the\nbrands and instance from that to submit the offer:\n\n```ts\nconst { brands, instance } = useContract();\n```", "mimetype": "text/plain", "start_char_idx": 3895, "end_char_idx": 4403, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c248fca8-89f7-4a16-bcbd-74d31a03d6ef": {"__data__": {"id_": "c248fca8-89f7-4a16-bcbd-74d31a03d6ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebb8ffe8-7919-437c-a819-b022cfcd6bc4", "node_type": "1", "metadata": {}, "hash": "32f385c13e7954706c30e55d5e616dff6d03bce4f654a67737b25e45dccd8388", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39", "node_type": "1", "metadata": {}, "hash": "19e6123fbe2d486d7171a10648ca312d8254170b1b9ad502a3ecc2b9cbcd4b1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Next, get the `makeOffer` function from the `useAgoric()` hook:\n\n```ts\nconst { makeOffer } = useAgoric();\n```\n\nNow, create a function to submit the offer. For more details on how this works, see [making an offer](/guides/getting-started/explainer-how-to-make-an-offer.md):\n\n```ts\nimport { makeCopyBag } from '@agoric/store';", "mimetype": "text/plain", "start_char_idx": 4405, "end_char_idx": 4729, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39": {"__data__": {"id_": "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c248fca8-89f7-4a16-bcbd-74d31a03d6ef", "node_type": "1", "metadata": {}, "hash": "db04f7ca098e0f185dac31300248fda8356c5561c20c07544f25e0dce5417cd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e089207-0208-4a65-b44a-d954f8e864e0", "node_type": "1", "metadata": {}, "hash": "e8b6b93eecb69af7cadcff95c0373e246ad5623872fe9fb11e25f6d745b467b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Inside your 'Trade' component:\nconst submitOffer = () => {\n  assert(brands && instance && makeOffer);\n  const value = makeCopyBag(Object.entries(choices));\n  const want = { Items: { brand: brands.Item, value } };\n  const give = { Price: { brand: brands.IST, value: giveValue } };", "mimetype": "text/plain", "start_char_idx": 4731, "end_char_idx": 5013, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e089207-0208-4a65-b44a-d954f8e864e0": {"__data__": {"id_": "5e089207-0208-4a65-b44a-d954f8e864e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39", "node_type": "1", "metadata": {}, "hash": "19e6123fbe2d486d7171a10648ca312d8254170b1b9ad502a3ecc2b9cbcd4b1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac822ae8-8653-4a38-8ec5-5dea40fb8569", "node_type": "1", "metadata": {}, "hash": "2a47bf5fd3353d0e5fa721b31bc1542cb3093c2645b363c2d47f2b2beafda979", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "makeOffer(\n    {\n      source: 'contract',\n      instance,\n      publicInvitationMaker: 'makeTradeInvitation'\n    },\n    { give, want },\n    undefined,\n    (update: { status: string; data?: unknown }) => {\n      console.log('UPDATE', update);\n      if (update.status === 'error') {\n        alert(`Offer error: ${update.data}`);\n      }\n      if (update.status === 'accepted') {\n        alert('Offer accepted');\n      }\n      if (update.status === 'refunded') {\n        alert('Offer rejected');\n      }\n    }", "mimetype": "text/plain", "start_char_idx": 5017, "end_char_idx": 5524, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac822ae8-8653-4a38-8ec5-5dea40fb8569": {"__data__": {"id_": "ac822ae8-8653-4a38-8ec5-5dea40fb8569", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e089207-0208-4a65-b44a-d954f8e864e0", "node_type": "1", "metadata": {}, "hash": "e8b6b93eecb69af7cadcff95c0373e246ad5623872fe9fb11e25f6d745b467b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7041d7b9-0398-4883-a568-4840e3d81e05", "node_type": "1", "metadata": {}, "hash": "14a87a266f8bf0d36e519dc8e960676ce34e544167eece7b988442ea33ce90e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}\n    }\n  );\n};\n```", "mimetype": "text/plain", "start_char_idx": 5517, "end_char_idx": 5536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7041d7b9-0398-4883-a568-4840e3d81e05": {"__data__": {"id_": "7041d7b9-0398-4883-a568-4840e3d81e05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac822ae8-8653-4a38-8ec5-5dea40fb8569", "node_type": "1", "metadata": {}, "hash": "2a47bf5fd3353d0e5fa721b31bc1542cb3093c2645b363c2d47f2b2beafda979", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "858f5f48-f44b-49d3-90ec-2fa479c85594", "node_type": "1", "metadata": {}, "hash": "4cf903666f45233ee8603135e09889204d66685617865ced10415c0a8538dfd3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For specifics on how offers work, see [Specifying Offers](/guides/getting-started/contract-rpc.md#specifying-offers). The `makeOffer` function allows you to specify an\n`InvitationSpec`, automatically handles the marshalling aspect, and makes it easy to\nhandle updates to the offer status.\n\nThe function you just wrote uses the `makeCopyBag` util to construct the Item amount in a way that the contract can understand. Add it to your dependencies:\n\n```\nyarn add -D @agoric/store@0.9.2\n```", "mimetype": "text/plain", "start_char_idx": 5538, "end_char_idx": 6025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "858f5f48-f44b-49d3-90ec-2fa479c85594": {"__data__": {"id_": "858f5f48-f44b-49d3-90ec-2fa479c85594", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7041d7b9-0398-4883-a568-4840e3d81e05", "node_type": "1", "metadata": {}, "hash": "14a87a266f8bf0d36e519dc8e960676ce34e544167eece7b988442ea33ce90e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab21588c-fec3-4e22-b937-498f8f74cb86", "node_type": "1", "metadata": {}, "hash": "f8a55860aa349a334d17f72c515e562a02ff037bd491c1fb3f485602bc2fa191", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "And add the type to `vite-env.d.ts`:\n\n```ts\ndeclare module '@agoric/store' {\n  export const makeCopyBag;\n}\n```\n\nNow, simply add a button to submit the offer:\n\n```tsx\n{\n  !!(brands && instance && makeOffer && istPurse) && (\n    <button onClick={submitOffer}>Make Offer</button>\n  );\n}\n```", "mimetype": "text/plain", "start_char_idx": 6027, "end_char_idx": 6314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab21588c-fec3-4e22-b937-498f8f74cb86": {"__data__": {"id_": "ab21588c-fec3-4e22-b937-498f8f74cb86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "858f5f48-f44b-49d3-90ec-2fa479c85594", "node_type": "1", "metadata": {}, "hash": "4cf903666f45233ee8603135e09889204d66685617865ced10415c0a8538dfd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c84714cc-6b1d-4812-a86e-8dbe3130fc33", "node_type": "1", "metadata": {}, "hash": "e29eb20df96b687470e66347d0cd9c6f8e85dbc6417ecf863cbb73f5c2c96df9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Upon clicking the offer, you should see a Keplr window pop up to approve the transaction with the \"Give\" and \"Want\"\nyou selected. Try selecting 3 items, and giving 0.25 IST, and the offer should be accepted. See what happens\nif you select more than 3 items, or give less than 0.25 IST... it should reject the offer, and you should be\nrefunded your IST (see [offer safety](/guides/zoe/offer-safety.md))\n\n### Rendering the Items Purse", "mimetype": "text/plain", "start_char_idx": 6316, "end_char_idx": 6748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c84714cc-6b1d-4812-a86e-8dbe3130fc33": {"__data__": {"id_": "c84714cc-6b1d-4812-a86e-8dbe3130fc33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab21588c-fec3-4e22-b937-498f8f74cb86", "node_type": "1", "metadata": {}, "hash": "f8a55860aa349a334d17f72c515e562a02ff037bd491c1fb3f485602bc2fa191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "056915fd-a5bc-431b-b4c6-101c6178c6f2", "node_type": "1", "metadata": {}, "hash": "b98153799d6bbdd2777075fc3f2554d0a6919c0faaf9b136caf5145222917642", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Rendering the Items Purse\n\nSo, you've made a successful offer and acquired some items, but where are they? You can render the items purse\nsimilarly to the IST purse. In `Purses.tsx`, add the following:\n\n```tsx\n...\n\n  const itemsPurse = usePurse('Item');\n...", "mimetype": "text/plain", "start_char_idx": 6719, "end_char_idx": 6980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "056915fd-a5bc-431b-b4c6-101c6178c6f2": {"__data__": {"id_": "056915fd-a5bc-431b-b4c6-101c6178c6f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c84714cc-6b1d-4812-a86e-8dbe3130fc33", "node_type": "1", "metadata": {}, "hash": "e29eb20df96b687470e66347d0cd9c6f8e85dbc6417ecf863cbb73f5c2c96df9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef321e06-debc-49ca-b5c9-c37123f731a7", "node_type": "1", "metadata": {}, "hash": "3971cedb6f42656aebabedc6d272ed849c94dccd9e319b027f4a26f282d7d279", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div>\n    <b>Items: </b>\n    {itemsPurse ? (\n      <ul style={{ marginTop: 0, textAlign: 'left' }}>\n        {itemsPurse.currentAmount.value.payload.map(\n          // @ts-expect-error ignore 'any' type\n          ([name, number]) => (\n            <li key={name}>\n              {String(number)} {name}\n            </li>\n          )\n        )}\n      </ul>\n    ) : (\n      'None'\n    )}\n  </div>\n```", "mimetype": "text/plain", "start_char_idx": 6984, "end_char_idx": 7378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef321e06-debc-49ca-b5c9-c37123f731a7": {"__data__": {"id_": "ef321e06-debc-49ca-b5c9-c37123f731a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md", "node_type": "4", "metadata": {}, "hash": "24bb16ab6a645623379d5c331c24c41ce21641f27f71f891c99e439eea563b86", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "056915fd-a5bc-431b-b4c6-101c6178c6f2", "node_type": "1", "metadata": {}, "hash": "b98153799d6bbdd2777075fc3f2554d0a6919c0faaf9b136caf5145222917642", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now, make another offer, and see that your items purse automatically updates after the offer is accepted. To see the complete\nsolution for this example, check out the [checkpoint-5](https://github.com/agoric-labs/ui-tutorial/tree/checkpoint-5) branch.\n\n### Result\n\nCurious to know how it looks after implementation? Check out our [guide](/guides/getting-started/explainer-how-to-make-an-offer.html) for the result.", "mimetype": "text/plain", "start_char_idx": 7380, "end_char_idx": 7794, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48dc22c0-ea71-4a84-9b48-728be15eb46b": {"__data__": {"id_": "48dc22c0-ea71-4a84-9b48-728be15eb46b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2020d861-8a6f-4214-ac85-d415a6da6f11", "node_type": "1", "metadata": {}, "hash": "c4e0586d72f71e78b325c308068c327b78bb36a064699384d459657b9d560e62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Querying Vstorage\n\nA fundamental part of building a Dapp UI is interacting with smart contracts. How can a UI\nread data from a smart contract on the Agoric blockchain? This section will show you how,\nusing the available tools and libraries at your disposal.\n\n## ChainStorageWatcher", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2020d861-8a6f-4214-ac85-d415a6da6f11": {"__data__": {"id_": "2020d861-8a6f-4214-ac85-d415a6da6f11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48dc22c0-ea71-4a84-9b48-728be15eb46b", "node_type": "1", "metadata": {}, "hash": "086bec18039b57acced450e56d6389e717370d48a3dc4ff886e087561a0e7d3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb", "node_type": "1", "metadata": {}, "hash": "c73cb9b1a7edc1551a89fca984a6c9fdf28ca3bed234b053eba028bd4356d82b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ChainStorageWatcher\n\nRecall from the previous section the `useAgoric` hook. Another utility the hook provides is\nthe `chainStorageWatcher`. This utility is also available on its own through the [@agoric/rpc](https://www.npmjs.com/package/@agoric/rpc)\npackage, but we'll use one provided by `useAgoric` as it's already instantiated and configured\nto use the RPC endpoints we added earlier.\n\nExample:\n\n```ts\nconst { chainStorageWatcher } = useAgoric();\n```\n\n## Querying Vstorage", "mimetype": "text/plain", "start_char_idx": 261, "end_char_idx": 740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb": {"__data__": {"id_": "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2020d861-8a6f-4214-ac85-d415a6da6f11", "node_type": "1", "metadata": {}, "hash": "c4e0586d72f71e78b325c308068c327b78bb36a064699384d459657b9d560e62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad0a24d0-388b-47a0-b4db-f6756f5fb705", "node_type": "1", "metadata": {}, "hash": "e7aa98de1157c1f8bcbf5a7b546ab4e5354e39cc7f1b1c98b5960cb90c472aa5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Querying Vstorage\n\nIn order to submit an offer to a contract, we need to look it up on-chain first.\nWe'll find it in vstorage under `published.agoricNames.instance` (see: [vstorage reference](/reference/vstorage-ref.md)).\nFirst, we'll create a new component that will look up the contract (eventually, it will sign and submit offers to it as well).\n\nCreate a new file, `src/Trade.tsx`:", "mimetype": "text/plain", "start_char_idx": 720, "end_char_idx": 1108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad0a24d0-388b-47a0-b4db-f6756f5fb705": {"__data__": {"id_": "ad0a24d0-388b-47a0-b4db-f6756f5fb705", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb", "node_type": "1", "metadata": {}, "hash": "c73cb9b1a7edc1551a89fca984a6c9fdf28ca3bed234b053eba028bd4356d82b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8f5f012-baa0-4a53-803d-1a004ffaa9a1", "node_type": "1", "metadata": {}, "hash": "cd3136af989f516dd52e1605894ae7419c167821bf9a1eeea212d6df0aa7e0af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nconst Trade = () => {\n  return (\n    <div className=\"trade\">TODO - Create inputs for submitting an offer.</div>\n  );\n};\n\nexport default Trade;\n```\n\nAnd add some styling for it in `App.css` while we're at it:\n\n```css\n... .trade {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #171717;\n  border-radius: 24px;\n  margin-bottom: 16px;\n  padding: 16px;\n}\n```\n\nAnd add the component to `App.tsx`:", "mimetype": "text/plain", "start_char_idx": 1110, "end_char_idx": 1567, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8f5f012-baa0-4a53-803d-1a004ffaa9a1": {"__data__": {"id_": "a8f5f012-baa0-4a53-803d-1a004ffaa9a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad0a24d0-388b-47a0-b4db-f6756f5fb705", "node_type": "1", "metadata": {}, "hash": "e7aa98de1157c1f8bcbf5a7b546ab4e5354e39cc7f1b1c98b5960cb90c472aa5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d714400d-e581-4a79-9001-0c8f1275940e", "node_type": "1", "metadata": {}, "hash": "61a0f6180edb713cd00670f18e33b4d9b96d559286351aa7f2ff823491cf418c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\n...\n  <h1>Agoric UI Tutorial</h1>\n  <Trade />\n  <ConnectWalletButton />\n  <Purses />\n...\n```\n\nAfter rebuilding the app, you should see the component rendering with the placeholder text we gave it. Next, let's\nadd the `chainStorageWatcher` and look up the contract on-chain. First add `@agoric/rpc` as a dependency:\n\n```\nyarn add -D @agoric/rpc@0.10.0\n```\n\nNext, let's go to our `src/hooks.ts` file and create another hook for reading the chain data:", "mimetype": "text/plain", "start_char_idx": 1569, "end_char_idx": 2025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d714400d-e581-4a79-9001-0c8f1275940e": {"__data__": {"id_": "d714400d-e581-4a79-9001-0c8f1275940e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8f5f012-baa0-4a53-803d-1a004ffaa9a1", "node_type": "1", "metadata": {}, "hash": "cd3136af989f516dd52e1605894ae7419c167821bf9a1eeea212d6df0aa7e0af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8", "node_type": "1", "metadata": {}, "hash": "8a06fd91ac47203ed640b5531e00512953551d7df259c1bba4bd9fa66648b944", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```ts\nimport { AgoricChainStoragePathKind as Kind } from '@agoric/rpc';\nimport { useEffect, useState } from 'react';\n\n...\n\nexport const useContract = () => {\n  const [brands, setBrands] = useState<{ [k: string]: unknown } | null>(null);\n  const [instance, setInstance] = useState<unknown | null>(null);\n  const { chainStorageWatcher } = useAgoric();", "mimetype": "text/plain", "start_char_idx": 2027, "end_char_idx": 2376, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8": {"__data__": {"id_": "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d714400d-e581-4a79-9001-0c8f1275940e", "node_type": "1", "metadata": {}, "hash": "61a0f6180edb713cd00670f18e33b4d9b96d559286351aa7f2ff823491cf418c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f98303f9-b54f-4a03-8251-25eb65ede791", "node_type": "1", "metadata": {}, "hash": "e075a27687ff81beae083e3fce47baf4f045e5a1cf578d461a5c9ba37da3b480", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useEffect(() => {\n    const stopWatchingInstance = chainStorageWatcher?.watchLatest<\n      Array<[string, unknown]>\n    >([Kind.Data, 'published.agoricNames.instance'], instances => {\n      console.log('Got instances', instances);\n      setInstance(instances.find(([name]) => name === 'offerUp')!.at(1));\n    });", "mimetype": "text/plain", "start_char_idx": 2380, "end_char_idx": 2692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f98303f9-b54f-4a03-8251-25eb65ede791": {"__data__": {"id_": "f98303f9-b54f-4a03-8251-25eb65ede791", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8", "node_type": "1", "metadata": {}, "hash": "8a06fd91ac47203ed640b5531e00512953551d7df259c1bba4bd9fa66648b944", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "877ac6be-d554-4548-bc93-5f24aeb46b7e", "node_type": "1", "metadata": {}, "hash": "124eab667ec1c84ae519d0dd2ae486f4b74b71d1e7248303189e4157b0b33de2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const stopWatchingBrands = chainStorageWatcher?.watchLatest<\n      Array<[string, unknown]>\n    >([Kind.Data, 'published.agoricNames.brand'], brands => {\n      console.log('Got brands', brands);\n      setBrands(Object.fromEntries(brands));\n    });\n\n    return () => {\n      stopWatchingInstance?.();\n      stopWatchingBrands?.();\n    };\n  }, [chainStorageWatcher]);\n\n  return { instance, brands };\n};\n\n```", "mimetype": "text/plain", "start_char_idx": 2698, "end_char_idx": 3103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "877ac6be-d554-4548-bc93-5f24aeb46b7e": {"__data__": {"id_": "877ac6be-d554-4548-bc93-5f24aeb46b7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f98303f9-b54f-4a03-8251-25eb65ede791", "node_type": "1", "metadata": {}, "hash": "e075a27687ff81beae083e3fce47baf4f045e5a1cf578d461a5c9ba37da3b480", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1328bb81-ce81-4006-8e05-4fd51bde87c0", "node_type": "1", "metadata": {}, "hash": "f37c40d9b1ca87016f3b6c5446fecc5bbdc03e2eced0abffe7756e959149086d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n\nAs you can see, this hook makes use of `chainStorageWatcher` to watch two vstorage paths, and logs the results to the console:\n\n- `published.agoricNames.instance` - The list of available contract instances on-chain, keyed by name.\n- `published.agoricNames.brand` - The list of available brands on-chain, keyed by name.", "mimetype": "text/plain", "start_char_idx": 3100, "end_char_idx": 3423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1328bb81-ce81-4006-8e05-4fd51bde87c0": {"__data__": {"id_": "1328bb81-ce81-4006-8e05-4fd51bde87c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "877ac6be-d554-4548-bc93-5f24aeb46b7e", "node_type": "1", "metadata": {}, "hash": "124eab667ec1c84ae519d0dd2ae486f4b74b71d1e7248303189e4157b0b33de2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fe7156e-5492-4f7f-b7e1-680c942643ea", "node_type": "1", "metadata": {}, "hash": "02b9a29b6ddc14b6c9913612fc8b06e4da2be402cd2c8bd0938213186abdd0c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `chainStorageWatcher` handles all the vstorage queries and marshalling for you, so\nyou get convenient access to the data from your application. It automatically polls\nand emits updates when the data on-chain changes. For more details about vstorage, see\n[Querying VStorage](/guides/getting-started/contract-rpc.md#querying-vstorage) and [Publishing to Chain Storage](/guides/zoe/pub-to-storage.md)\n\nNext, go ahead and add this hook to the `Trade` component you made before this:", "mimetype": "text/plain", "start_char_idx": 3425, "end_char_idx": 3907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fe7156e-5492-4f7f-b7e1-680c942643ea": {"__data__": {"id_": "5fe7156e-5492-4f7f-b7e1-680c942643ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1328bb81-ce81-4006-8e05-4fd51bde87c0", "node_type": "1", "metadata": {}, "hash": "f37c40d9b1ca87016f3b6c5446fecc5bbdc03e2eced0abffe7756e959149086d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59ee5570-caa2-4fa9-adbb-cdc9571adf12", "node_type": "1", "metadata": {}, "hash": "d189e32be9af256a4f9baeec78affb8765ca4b2e4858047093710ef350406528", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```tsx\nimport { useContract } from './hooks';\n\nconst Trade = () => {\n  // Don't do anything with brands or instances yet.\n  useContract();\n\n  return (\n    <div className=\"trade\">TODO - Create inputs for submitting an offer.</div>\n  );\n};\n\nexport default Trade;\n```", "mimetype": "text/plain", "start_char_idx": 3909, "end_char_idx": 4173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59ee5570-caa2-4fa9-adbb-cdc9571adf12": {"__data__": {"id_": "59ee5570-caa2-4fa9-adbb-cdc9571adf12", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md", "node_type": "4", "metadata": {}, "hash": "4569571bdbabfaf732dd8e49a3e1ccbeb5b6a99406a7e59034ccf104e21fa36d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fe7156e-5492-4f7f-b7e1-680c942643ea", "node_type": "1", "metadata": {}, "hash": "02b9a29b6ddc14b6c9913612fc8b06e4da2be402cd2c8bd0938213186abdd0c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default Trade;\n```\n\nYou should now see the `brands` and `instances` being logged to the console. See if you\ncan spot the \"offerUp\" instance, and the \"Item\" brand. These were added when you deployed\nthe contract to the chain, and we'll use them to specify our offer in the next section.", "mimetype": "text/plain", "start_char_idx": 4148, "end_char_idx": 4440, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97207e58-6fc8-4911-a363-eed0975239e2": {"__data__": {"id_": "97207e58-6fc8-4911-a363-eed0975239e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f77d2213-c867-44b7-8dcc-b626dcf77e3d", "node_type": "1", "metadata": {}, "hash": "afa4ea792d934089af16ff66033ee4708b8c3ac4abce4e93ab1a64378e4018a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Starting Out\n\nThere are a few libraries that make building Agoric UIs more convenient, all included in the [ui-kit](https://github.com/Agoric/ui-kit/tree/main) repo:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 167, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f77d2213-c867-44b7-8dcc-b626dcf77e3d": {"__data__": {"id_": "f77d2213-c867-44b7-8dcc-b626dcf77e3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97207e58-6fc8-4911-a363-eed0975239e2", "node_type": "1", "metadata": {}, "hash": "fd2631bae505083c486428d8662356f32c80c7e6e8b5cf399b8e3732b27fda2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4439264-6250-45f7-9e57-43f2fd2bbe33", "node_type": "1", "metadata": {}, "hash": "f1b611a63e722d78f6b8e8ad0e37adfb2a7f570d73dc1fb07d85d4f87f47239e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [@agoric/rpc](https://github.com/Agoric/ui-kit/tree/main/packages/rpc): Used for querying blockchain and smart contract state, and subscribing to updates.\n- [@agoric/web-components](https://github.com/Agoric/ui-kit/tree/main/packages/web-components): Used for accessing the smart wallet and making offers, as well as utilities for displaying asset balances and more.", "mimetype": "text/plain", "start_char_idx": 169, "end_char_idx": 537, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4439264-6250-45f7-9e57-43f2fd2bbe33": {"__data__": {"id_": "e4439264-6250-45f7-9e57-43f2fd2bbe33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f77d2213-c867-44b7-8dcc-b626dcf77e3d", "node_type": "1", "metadata": {}, "hash": "afa4ea792d934089af16ff66033ee4708b8c3ac4abce4e93ab1a64378e4018a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc9623eb-f726-4fb8-b09a-31522d36d69e", "node_type": "1", "metadata": {}, "hash": "03f229bc87a4bdcfa319abbff53e349fd87d9c24b1d02f680f616fdbf64d9da7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [@agoric/react-components](https://github.com/Agoric/ui-kit/tree/main/packages/react-components): React components for doing all of the above and more, with convenient hooks and context for ease of use.", "mimetype": "text/plain", "start_char_idx": 538, "end_char_idx": 742, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc9623eb-f726-4fb8-b09a-31522d36d69e": {"__data__": {"id_": "cc9623eb-f726-4fb8-b09a-31522d36d69e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4439264-6250-45f7-9e57-43f2fd2bbe33", "node_type": "1", "metadata": {}, "hash": "f1b611a63e722d78f6b8e8ad0e37adfb2a7f570d73dc1fb07d85d4f87f47239e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ed43639-6194-4f2f-9722-32bb9757e55a", "node_type": "1", "metadata": {}, "hash": "ce66e2bfa147e1b41dc191569ed1f5347640a15e3e5957cd2b137a37e303bc55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This tutorial will make use of these libraries and provide pointers along the way for learning more about them.\n\n## Scaffolding\n\nThis tutorial will make use of [@agoric/react-components](https://github.com/Agoric/ui-kit/tree/main/packages/react-components) for greatest convenience, and hence the first step will be to scaffold a new React app with [Vite](https://vitejs.dev/). Create a new workspace and use the following command to scaffold a new `react-ts` app:", "mimetype": "text/plain", "start_char_idx": 744, "end_char_idx": 1208, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ed43639-6194-4f2f-9722-32bb9757e55a": {"__data__": {"id_": "6ed43639-6194-4f2f-9722-32bb9757e55a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc9623eb-f726-4fb8-b09a-31522d36d69e", "node_type": "1", "metadata": {}, "hash": "03f229bc87a4bdcfa319abbff53e349fd87d9c24b1d02f680f616fdbf64d9da7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09bd9e87-d662-40f8-838d-86b84c9ea5d5", "node_type": "1", "metadata": {}, "hash": "94c01ccc00359727f52306f4487ab893c05072ed301526939c9acf8aea157b1f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nyarn create vite my-agoric-ui --template react-ts\n```\n\nFollow the instructions outputted by the command and you should have a local dev server running with a bare-bones React app.\n\n## Hardening\n\nThe next step is to install [Endo](https://github.com/endojs/endo), because the Agoric libraries depend on Hardened JavaScript. To get it set up, we'll add a few dependencies:\n\n```\nyarn add -D ses @endo/eventual-send\n```", "mimetype": "text/plain", "start_char_idx": 1210, "end_char_idx": 1629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09bd9e87-d662-40f8-838d-86b84c9ea5d5": {"__data__": {"id_": "09bd9e87-d662-40f8-838d-86b84c9ea5d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ed43639-6194-4f2f-9722-32bb9757e55a", "node_type": "1", "metadata": {}, "hash": "ce66e2bfa147e1b41dc191569ed1f5347640a15e3e5957cd2b137a37e303bc55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "839b0413-ebde-485f-bfc8-55beaf8fd99d", "node_type": "1", "metadata": {}, "hash": "8f48b999847e5d8a0d382e569959d15776c05ecdc2421c34192c824dd9b23124", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Also, we'll need to add `buffer` to use [cosmos-kit](https://github.com/cosmology-tech/cosmos-kit) later on, so let's do that now:\n\n```\nyarn add -D buffer\n```\n\nNow, create a new file `src/installSesLockdown.ts`:\n\n```typescript\nimport 'ses'; // adds lockdown, harden, and Compartment\nimport '@endo/eventual-send/shim.js'; // adds support needed by E\nimport { Buffer } from 'buffer';\n\nconst consoleTaming = import.meta.env.DEV ? 'unsafe' : 'safe';", "mimetype": "text/plain", "start_char_idx": 1631, "end_char_idx": 2076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "839b0413-ebde-485f-bfc8-55beaf8fd99d": {"__data__": {"id_": "839b0413-ebde-485f-bfc8-55beaf8fd99d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_getting-started_ui-tutorial_starting.md", "node_type": "4", "metadata": {}, "hash": "a7ff4bcd4f89556b7d20c399cade10f1f859246afb56ee5230bb3dff6959c9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09bd9e87-d662-40f8-838d-86b84c9ea5d5", "node_type": "1", "metadata": {}, "hash": "94c01ccc00359727f52306f4487ab893c05072ed301526939c9acf8aea157b1f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "lockdown({\n  errorTaming: 'unsafe',\n  overrideTaming: 'severe',\n  consoleTaming\n});\n\nError.stackTraceLimit = Infinity;\n\nglobalThis.Buffer = Buffer;\n\n// @ts-expect-error Add process to context for cosmos-kit\nglobalThis.process = { env: import.meta.env };\n```\n\nAnd at the top of `src/main.tsx` import the new file:\n\n```typescript\nimport './installSesLockdown.ts';\n```\n\nRestart your app and it should load as before without errors. Now, the app is running with Hardened JS enabled and we're ready to continue.", "mimetype": "text/plain", "start_char_idx": 2078, "end_char_idx": 2584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe61c055-510d-4eee-92df-e88815597b6d": {"__data__": {"id_": "fe61c055-510d-4eee-92df-e88815597b6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef", "node_type": "1", "metadata": {}, "hash": "70b1a98dd69ebcca70c6fed95c5ca1a53385b0884a21249ea184f28790e07868", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Contract Governance\n\nTo help build systems with a good balance of decentralization and executive control, the Agoric platform includes, in addition to chain-wide governance included in the Cosmos SDK platform, an [@agoric/governance](https://github.com/Agoric/agoric-sdk/blob/master/packages/governance/#readme) package with a flexible architecture supporting 3 main forms of control over a contract:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 402, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef": {"__data__": {"id_": "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe61c055-510d-4eee-92df-e88815597b6d", "node_type": "1", "metadata": {}, "hash": "016ed92faa80d1787d3881f8be991f4c76d76d204ebf7ff62b405bfc50bdd0e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8ad04ca-292f-4043-96b8-fb306fe4259d", "node_type": "1", "metadata": {}, "hash": "45b614344dca46ee827eae9aff80d6c3f2c2281119946c13ce8c6a44f267e699", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Parameter Governance**: control of parameter values\n- **API governance**: capability to invoke particular methods called out by the contract's authors\n- **Offer filters**: capability to disable the use of some offers/invitations to deal with emergencies\n\n::: tip Governance Package Aims", "mimetype": "text/plain", "start_char_idx": 404, "end_char_idx": 694, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8ad04ca-292f-4043-96b8-fb306fe4259d": {"__data__": {"id_": "c8ad04ca-292f-4043-96b8-fb306fe4259d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef", "node_type": "1", "metadata": {}, "hash": "70b1a98dd69ebcca70c6fed95c5ca1a53385b0884a21249ea184f28790e07868", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d7aee3f-d92e-40db-8b77-36f271cef6fc", "node_type": "1", "metadata": {}, "hash": "60a14bcbc9549336dc9d7fd8ae2debc107b02ea91e4b1b11200f294a1c755c9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Governance Package Aims\n\nThe emphasis, throughout the design of the governance package, is on ensuring that clients of a contract have visibility into who can make changes, what changes they can make, and what the current state of the controlled values is.\n\nAn [Attacker's Guide](https://github.com/Agoric/agoric-sdk/blob/master/packages/governance/docs/AttackGuide.md) explains the assurances that the governance package aims to support.\n\n:::\n\n## Parameter Governance", "mimetype": "text/plain", "start_char_idx": 663, "end_char_idx": 1139, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d7aee3f-d92e-40db-8b77-36f271cef6fc": {"__data__": {"id_": "3d7aee3f-d92e-40db-8b77-36f271cef6fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8ad04ca-292f-4043-96b8-fb306fe4259d", "node_type": "1", "metadata": {}, "hash": "45b614344dca46ee827eae9aff80d6c3f2c2281119946c13ce8c6a44f267e699", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e21b1c5b-b158-446b-af91-77c65a195d02", "node_type": "1", "metadata": {}, "hash": "8925182956c2b6c918e9fd59cc1996d929eed2e922ffd00145ff648bc3a8a7b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n## Parameter Governance\n\nIn [Starting a Contract Instance](../zoe/#starting-a-contract-instance), we saw that contracts are parameterized by _terms_. Parameter governance supports\nhaving an authorized party, the _Electorate_, change such parameters while the contract is running.\n\nIn [dapp-agoric-basics](https://github.com/Agoric/dapp-agoric-basics), the\nswaparoo contract has a governed `Fee` amount parameter:", "mimetype": "text/plain", "start_char_idx": 1111, "end_char_idx": 1528, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e21b1c5b-b158-446b-af91-77c65a195d02": {"__data__": {"id_": "e21b1c5b-b158-446b-af91-77c65a195d02", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d7aee3f-d92e-40db-8b77-36f271cef6fc", "node_type": "1", "metadata": {}, "hash": "60a14bcbc9549336dc9d7fd8ae2debc107b02ea91e4b1b11200f294a1c755c9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb573057-cd12-4d0a-af98-1bd04f2bcf85", "node_type": "1", "metadata": {}, "hash": "bc774ae30c444a21baf1862e7967a9878ac429602ae04af74ab5a28c89bc67ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst paramTypes = harden(\n  /** @type {const} */ ({\n    Fee: ParamTypes.AMOUNT\n  })\n);\n```\n\n## Reusing Contracts for Electorate, Election Manager\n\nThis dapp uses the `committee.js` contract from `@agoric/governance` for its\nelectorate. The core eval deployment script starts the swaparoo committee,\ngets invitations, and sends them to the the smart wallets of the voters.\nIn `test-vote-by-committee.js`, the committee consists of just 1 voter.", "mimetype": "text/plain", "start_char_idx": 1530, "end_char_idx": 1980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb573057-cd12-4d0a-af98-1bd04f2bcf85": {"__data__": {"id_": "eb573057-cd12-4d0a-af98-1bd04f2bcf85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e21b1c5b-b158-446b-af91-77c65a195d02", "node_type": "1", "metadata": {}, "hash": "8925182956c2b6c918e9fd59cc1996d929eed2e922ffd00145ff648bc3a8a7b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a5454f8-f6f3-464b-a6d2-50779f2805d5", "node_type": "1", "metadata": {}, "hash": "5fcbecb06a635dd94c0f6a9e84a7deca6fd0adc9a815ecb83a419d141c91ed7f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src=\"./assets/gov-param-1.svg\"\n  style=\"border: 2px solid\" width=\"800\" />\n\n## Adding Parameter Governance to a Contract", "mimetype": "text/plain", "start_char_idx": 1982, "end_char_idx": 2106, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a5454f8-f6f3-464b-a6d2-50779f2805d5": {"__data__": {"id_": "3a5454f8-f6f3-464b-a6d2-50779f2805d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb573057-cd12-4d0a-af98-1bd04f2bcf85", "node_type": "1", "metadata": {}, "hash": "bc774ae30c444a21baf1862e7967a9878ac429602ae04af74ab5a28c89bc67ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2acaf13-4603-4bd7-a30a-3a24bf6ece42", "node_type": "1", "metadata": {}, "hash": "ecdd34dde9335f2cd12497e2bfa5ed849467f7a7e6ef5750932a47b6f8e46f7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Adding parameter governance to a contract consists mainly of using `handleParamGovernance(...)`.\nWe pass it `zcf` so that it can `getTerms()` for initial parameter values, and we\npass `paramTypes` to specify governed parameters and their types. `initialPoserInvitation`\nis necessary to set up replacing the electorate. `storageNode` and `marshaller` are used\nto [publish values of the parameters to vstorage](../zoe/pub-to-storage).", "mimetype": "text/plain", "start_char_idx": 2108, "end_char_idx": 2540, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2acaf13-4603-4bd7-a30a-3a24bf6ece42": {"__data__": {"id_": "d2acaf13-4603-4bd7-a30a-3a24bf6ece42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a5454f8-f6f3-464b-a6d2-50779f2805d5", "node_type": "1", "metadata": {}, "hash": "5fcbecb06a635dd94c0f6a9e84a7deca6fd0adc9a815ecb83a419d141c91ed7f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3760bc5d-6549-4b36-bb82-08ea84e7e0e7", "node_type": "1", "metadata": {}, "hash": "c9640e6ad637a2d62e9effa40b999ea5a40d743e8060a09ed29defe9dcde3c87", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { handleParamGovernance } from '@agoric/governance/src/contractHelper.js';\n\nexport const start = async (zcf, privateArgs, baggage) => {\n  // ...\n  const { publicMixin, makeDurableGovernorFacet, params } =\n    await handleParamGovernance(\n      zcf,\n      privateArgs.initialPoserInvitation,\n      paramTypes,\n      privateArgs.storageNode,\n      privateArgs.marshaller\n    );\n  // ...\n};\n```\n\nWe get back", "mimetype": "text/plain", "start_char_idx": 2542, "end_char_idx": 2959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3760bc5d-6549-4b36-bb82-08ea84e7e0e7": {"__data__": {"id_": "3760bc5d-6549-4b36-bb82-08ea84e7e0e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2acaf13-4603-4bd7-a30a-3a24bf6ece42", "node_type": "1", "metadata": {}, "hash": "ecdd34dde9335f2cd12497e2bfa5ed849467f7a7e6ef5750932a47b6f8e46f7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed", "node_type": "1", "metadata": {}, "hash": "63672e91523f358a4610f269f7a8aca1c2e9b5075683d8866228e8efad9d9f5d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We get back\n\n- `params`: read-only parameter access. `params.getFee().value` gives us the current value of the `Fee` parameter at any time, for example.\n- `publicMixin`: to make the parameter values available via the contract `publicFacet`\n- `makeDurableGovernorFacet`: to combine the contract's existing creator facet methods (known as the `limitedCreatorFacet`) with methods for _changing parameter values_.", "mimetype": "text/plain", "start_char_idx": 2948, "end_char_idx": 3357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed": {"__data__": {"id_": "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3760bc5d-6549-4b36-bb82-08ea84e7e0e7", "node_type": "1", "metadata": {}, "hash": "c9640e6ad637a2d62e9effa40b999ea5a40d743e8060a09ed29defe9dcde3c87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13844e00-fd15-44ef-892e-09822bb7edbd", "node_type": "1", "metadata": {}, "hash": "c202f7cde7438e1ad0ac34fe4fd878634da5b5b53b75c291ae7030e303b000a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nexport const start = async (zcf, privateArgs, baggage) => {\n  // ...\n  const publicFacet = Far('Public', {\n    makeFirstInvitation,\n    ...publicMixin\n  });\n  const limitedCreatorFacet = Far('Creator', {\n    makeCollectFeesInvitation() {\n      return makeCollectFeesInvitation(zcf, feeSeat, feeBrand, 'Fee');\n    }\n  });\n  const { governorFacet } = makeDurableGovernorFacet(\n    baggage,\n    limitedCreatorFacet\n  );\n  return harden({ publicFacet, creatorFacet: governorFacet });\n};\n```", "mimetype": "text/plain", "start_char_idx": 3359, "end_char_idx": 3851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13844e00-fd15-44ef-892e-09822bb7edbd": {"__data__": {"id_": "13844e00-fd15-44ef-892e-09822bb7edbd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed", "node_type": "1", "metadata": {}, "hash": "63672e91523f358a4610f269f7a8aca1c2e9b5075683d8866228e8efad9d9f5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42dfa886-c5b0-4add-94fc-996f50b3c4d1", "node_type": "1", "metadata": {}, "hash": "9999aa736dfd3bf3edb14cc3ae9add227943a7858bc4ad1304607d8ab20aa742", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Starting a Governed Contract via its Governor\n\nChanging parameter values is something only the electorate is authorized to do.\nTo enforce this, a governed contract is started by a _contract governor_.\nThe contract governor holds the fully-functional creator facet that includes\nthe capability to change the parameters. The caller that starts the governor\ngets only the `limitedCreatorFacet`.\n\n<img src=\"./assets/gov-param-2.svg\"\n  style=\"border: 2px solid\" width=\"800\" />", "mimetype": "text/plain", "start_char_idx": 3853, "end_char_idx": 4327, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42dfa886-c5b0-4add-94fc-996f50b3c4d1": {"__data__": {"id_": "42dfa886-c5b0-4add-94fc-996f50b3c4d1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13844e00-fd15-44ef-892e-09822bb7edbd", "node_type": "1", "metadata": {}, "hash": "c202f7cde7438e1ad0ac34fe4fd878634da5b5b53b75c291ae7030e303b000a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a", "node_type": "1", "metadata": {}, "hash": "51775faae54aa448327d0709c4c0dcd828d6610dc62a1ded268860ac283790ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_For clarity, some Zoe API details are ommitted from this figure._\n\n## Putting a question via an Election Manager\n\nAn _ElectionManager_ is responsible for letting an appropriate party call `addQuestion()`. The `econCommitteeCharter.js` contract from `@agoric/inter-protocol` is sufficiently general to handle most forms of parameter\ngovernance, so we reuse it here. Swaparoo core eval deployment likewise\nstarts this contract, asks it for invitations, and sends them to the voters:", "mimetype": "text/plain", "start_char_idx": 4329, "end_char_idx": 4810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a": {"__data__": {"id_": "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42dfa886-c5b0-4add-94fc-996f50b3c4d1", "node_type": "1", "metadata": {}, "hash": "9999aa736dfd3bf3edb14cc3ae9add227943a7858bc4ad1304607d8ab20aa742", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36930942-bae2-459e-94d7-2b786be83b9d", "node_type": "1", "metadata": {}, "hash": "2200b0995bf7af6150376a5217d9de01f68419e345ae8bfccdf26adf3f6c9ee3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src=\"./assets/gov-param-3.svg\"\n  style=\"border: 2px solid\" width=\"800\" />\n\n_For clarity, some Zoe API details are ommitted from this figure._\n\nThe committee participant then instructs their smart wallet to\nredeem the charter invitation to get a capability to put a question using `VoteOnParamChange`,\nusing `v0-accept-charter` to identify this offer:", "mimetype": "text/plain", "start_char_idx": 4812, "end_char_idx": 5167, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36930942-bae2-459e-94d7-2b786be83b9d": {"__data__": {"id_": "36930942-bae2-459e-94d7-2b786be83b9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a", "node_type": "1", "metadata": {}, "hash": "51775faae54aa448327d0709c4c0dcd828d6610dc62a1ded268860ac283790ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baf1adb8-b315-404e-b40c-c07226552e9e", "node_type": "1", "metadata": {}, "hash": "e453c991f7ebd807727ad6d020ce86e4d789fc207bbe35e6c55223330f8842ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ntest.serial('Voter0 accepts charter, committee invitations', async t => {\n  // ...\n  await victor.acceptCharterInvitation('v0-accept-charter');\n  // ...\n});\n```\n\n<img src=\"./assets/gov-param-4-accept.svg\"\n  style=\"border: 2px solid\" width=\"800\" />\n\nTo exercises their `VoteOnParamChange` capability,\nthe committee participant makes a [continuing invitation](/glossary/#continuing-invitation-pattern),\nreferring back to `v0-accept-charter` as `charterAcceptOfferId`:", "mimetype": "text/plain", "start_char_idx": 5169, "end_char_idx": 5640, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "baf1adb8-b315-404e-b40c-c07226552e9e": {"__data__": {"id_": "baf1adb8-b315-404e-b40c-c07226552e9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36930942-bae2-459e-94d7-2b786be83b9d", "node_type": "1", "metadata": {}, "hash": "2200b0995bf7af6150376a5217d9de01f68419e345ae8bfccdf26adf3f6c9ee3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29e87c9b-961f-49eb-a951-be1c825601cc", "node_type": "1", "metadata": {}, "hash": "b1c125daa7982354f59bc89202fd0cdcfce4073ce4a534cd79da3cb57c1b18ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst makeVoter = (t, wallet, wellKnown) => {\n  // ...\n  const putQuestion = async (offerId, params, deadline) => {\n    const instance = await wellKnown.instance[contractName]; // swaparoo instance handle\n    const path = { paramPath: { key: 'governedParams' } };\n\n    /** @type {import('@agoric/inter-protocol/src/econCommitteeCharter.js').ParamChangesOfferArgs} */\n    const offerArgs = harden({ deadline, params, instance, path });", "mimetype": "text/plain", "start_char_idx": 5642, "end_char_idx": 6082, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "29e87c9b-961f-49eb-a951-be1c825601cc": {"__data__": {"id_": "29e87c9b-961f-49eb-a951-be1c825601cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baf1adb8-b315-404e-b40c-c07226552e9e", "node_type": "1", "metadata": {}, "hash": "e453c991f7ebd807727ad6d020ce86e4d789fc207bbe35e6c55223330f8842ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2baa3652-5123-4a16-8058-53162438097b", "node_type": "1", "metadata": {}, "hash": "daca5f19fc34b3c5519d72e0db8cfe7b43a27cec662bf139fdd9ee1aac91b409", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/** @type {import('@agoric/smart-wallet/src/offers.js').OfferSpec} */\n    const offer = {\n      id: offerId,\n      invitationSpec: {\n        source: 'continuing',\n        previousOffer: NonNullish(charterAcceptOfferId),\n        invitationMakerName: 'VoteOnParamChange'\n      },\n      offerArgs,\n      proposal: {}\n    };\n    return doOffer(offer);\n  };\n};\n```\n\nThe `offerArgs` include a deadline and details of the params to change:", "mimetype": "text/plain", "start_char_idx": 6088, "end_char_idx": 6520, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2baa3652-5123-4a16-8058-53162438097b": {"__data__": {"id_": "2baa3652-5123-4a16-8058-53162438097b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29e87c9b-961f-49eb-a951-be1c825601cc", "node_type": "1", "metadata": {}, "hash": "b1c125daa7982354f59bc89202fd0cdcfce4073ce4a534cd79da3cb57c1b18ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0", "node_type": "1", "metadata": {}, "hash": "1bc69c97639d2404ee5cd16f8c0e7c146cfdb4d947c952caa9c7abe78f33e6bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ntest.serial('vote to change swap fee', async t => {\n  // ...\n  const targetFee = IST(50n, 100n); // 50 / 100 = 0.5 IST\n  const changes = { Fee: targetFee };\n  // ...\n  const deadline = BigInt(new Date(2024, 6, 1, 9, 10).valueOf() / 1000);\n  const result = await victor.putQuestion('proposeToSetFee', changes, deadline);\n  t.log('question is posed', result);\n  // ...\n});\n```\n\n## Voting on a question", "mimetype": "text/plain", "start_char_idx": 6522, "end_char_idx": 6927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0": {"__data__": {"id_": "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2baa3652-5123-4a16-8058-53162438097b", "node_type": "1", "metadata": {}, "hash": "daca5f19fc34b3c5519d72e0db8cfe7b43a27cec662bf139fdd9ee1aac91b409", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b447232-51f0-4c15-b9f2-08d050f9e610", "node_type": "1", "metadata": {}, "hash": "62fdcfcbbdc2f4e5f74df2e2a5dba67c2e994353857202ec33f41bcfb474af9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Voting on a question\n\nThe voter likewise executes an offer to accept their invitation to participate in the committee,\nusing `v0-join-committee` to identify this offer:\n\n```js\ntest.serial('Voter0 accepts charter, committee invitations', async t => {\n  // ...\n  await victor.acceptCommitteeInvitation('v0-join-committee', 0);\n  // ...\n});\n```\n\nTo exercise their capability to vote, they make a continuing invitation\nreferring back to `v0-join-committee` as `committeeOfferId`:", "mimetype": "text/plain", "start_char_idx": 6904, "end_char_idx": 7382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b447232-51f0-4c15-b9f2-08d050f9e610": {"__data__": {"id_": "2b447232-51f0-4c15-b9f2-08d050f9e610", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0", "node_type": "1", "metadata": {}, "hash": "1bc69c97639d2404ee5cd16f8c0e7c146cfdb4d947c952caa9c7abe78f33e6bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11757326-3f7a-4edd-bf79-e96c465f519c", "node_type": "1", "metadata": {}, "hash": "a85bca7d3127edba3eac137c7b7f187cfdec6ecf1e7984bf431e9d4823fdccca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst makeVoter = (t, wallet, wellKnown) => {\n  // ...\n  const vote = async (offerId, details, position) => {\n    const chosenPositions = [details.positions[position]];", "mimetype": "text/plain", "start_char_idx": 7384, "end_char_idx": 7558, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11757326-3f7a-4edd-bf79-e96c465f519c": {"__data__": {"id_": "11757326-3f7a-4edd-bf79-e96c465f519c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b447232-51f0-4c15-b9f2-08d050f9e610", "node_type": "1", "metadata": {}, "hash": "62fdcfcbbdc2f4e5f74df2e2a5dba67c2e994353857202ec33f41bcfb474af9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb8aa64-e7d1-43b3-9540-9cc373af9786", "node_type": "1", "metadata": {}, "hash": "bb7c016e00a2453540af826656de08b02263754e66c01176b0b702b0cbca4c85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/** @type {import('./wallet-tools.js').OfferSpec} */\n    const offer = {\n      id: offerId,\n      invitationSpec: {\n        source: 'continuing',\n        previousOffer: NonNullish(committeeOfferId),\n        invitationMakerName: 'makeVoteInvitation',\n        invitationArgs: harden([chosenPositions, details.questionHandle])\n      },\n      proposal: {}\n    };\n    return doOffer(offer);\n  };\n  // ...\n};\n```\n\nEach question has a unique `questionHandle` object, part of the `details`\npublished to vstorage.", "mimetype": "text/plain", "start_char_idx": 7564, "end_char_idx": 8068, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dcb8aa64-e7d1-43b3-9540-9cc373af9786": {"__data__": {"id_": "dcb8aa64-e7d1-43b3-9540-9cc373af9786", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11757326-3f7a-4edd-bf79-e96c465f519c", "node_type": "1", "metadata": {}, "hash": "a85bca7d3127edba3eac137c7b7f187cfdec6ecf1e7984bf431e9d4823fdccca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31d473e2-1f64-45db-ba7a-d1bfe6910524", "node_type": "1", "metadata": {}, "hash": "7f73d7ceee4dbacb8a677ff7e806490bd5f58656abff6736c6389c25ff48dd75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ntest.serial('vote to change swap fee', async t => {\n  // ...\n  const details = await vstorage.get(\n    `published.committee.swaparoo.latestQuestion`\n  );\n  t.is(details.electionType, 'param_change');\n  const voteResult = await victor.vote('voteToSetFee', details, 0);\n  t.log('victor voted:', voteResult);\n  // ...\n});\n```\n\nOnce the deadline is reached, the contract governor is notified that the question\ncarried. It instructs the swaparoo contract to change the fee.", "mimetype": "text/plain", "start_char_idx": 8070, "end_char_idx": 8544, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31d473e2-1f64-45db-ba7a-d1bfe6910524": {"__data__": {"id_": "31d473e2-1f64-45db-ba7a-d1bfe6910524", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb8aa64-e7d1-43b3-9540-9cc373af9786", "node_type": "1", "metadata": {}, "hash": "bb7c016e00a2453540af826656de08b02263754e66c01176b0b702b0cbca4c85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1df9c1e1-786b-4199-a5f8-f60ee5454894", "node_type": "1", "metadata": {}, "hash": "72d00f39236dd89ceee488445dce55ef38f8974e658048b7dbda223221eeaee0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ntest.serial('vote to change swap fee', async t => {\n  // ...\n  const swapPub = E(zoe).getPublicFacet(\n    swapPowers.instance.consume[contractName]\n  );\n  // ...\n  const after = await E(swapPub).getAmount('Fee');\n  t.deepEqual(after, targetFee);\n});\n```\n\nThe swaparoo contract also publishes its updated parameters to vstorage.\n\n## API Governance", "mimetype": "text/plain", "start_char_idx": 8546, "end_char_idx": 8898, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1df9c1e1-786b-4199-a5f8-f60ee5454894": {"__data__": {"id_": "1df9c1e1-786b-4199-a5f8-f60ee5454894", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31d473e2-1f64-45db-ba7a-d1bfe6910524", "node_type": "1", "metadata": {}, "hash": "7f73d7ceee4dbacb8a677ff7e806490bd5f58656abff6736c6389c25ff48dd75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7699344f-5c05-4c7a-8574-ae25510e4eff", "node_type": "1", "metadata": {}, "hash": "9a724ab2f765decaac29558f4378a462220091307319888feb4191cc4df4414a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## API Governance\n\nJust as parameter governance lets an electorate change parameters of a\ngoverned contract, API governance lets the electorate exercise contract APIs;\nin particular: creator facet methods on a governed contract.\n\nFor example, in Inter Protocol, the Economic Committee can add and remove\noracle operators:\n\n<img src=\"./assets/inter-ec-invoke-method.png\"\n  style=\"border: 2px solid\" width=\"800\" />\n\nFor details, see:", "mimetype": "text/plain", "start_char_idx": 8881, "end_char_idx": 9312, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7699344f-5c05-4c7a-8574-ae25510e4eff": {"__data__": {"id_": "7699344f-5c05-4c7a-8574-ae25510e4eff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_governance_index.md", "node_type": "4", "metadata": {}, "hash": "a9fc50da420579c426871689f2abcbffffa295c72c77f2f61b890b2715bec325", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1df9c1e1-786b-4199-a5f8-f60ee5454894", "node_type": "1", "metadata": {}, "hash": "72d00f39236dd89ceee488445dce55ef38f8974e658048b7dbda223221eeaee0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For details, see:\n\n- [dapp-econ-gov](https://github.com/Agoric/dapp-econ-gov)\n- `vaultFactory` contract in `@agoric/inter-protocol`\n\n## Offer Filters\n\nAn electorate can instruct a contract to have Zoe filter the offers that\nwill be passed to the ocntract. See\n\n- [zcf.setOfferFilter(strings)](/reference/zoe-api/zoe-contract-facet#zcf-setofferfilter-strings).\n- [How to add a contract level pause feature? \u00b7 agoric-sdk \u00b7 Discussion #8172](https://github.com/Agoric/agoric-sdk/discussions/8172)", "mimetype": "text/plain", "start_char_idx": 9295, "end_char_idx": 9788, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83fb781f-026b-428c-b826-bcaa261c7bd2": {"__data__": {"id_": "83fb781f-026b-428c-b826-bcaa261c7bd2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64c9f321-8cad-4dcd-8eb0-357db8acd63f", "node_type": "1", "metadata": {}, "hash": "5f4e5c6955999ac96659ab5d60b6c08668443703c4f3fbf2dc3da0a7f5329701", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Integrating with Agoric Network\n\nThe Agoric network builds a blockchain for smart contracts in JavaScript using the `cosmos-sdk`. Cosmos-sdk is software that provides the widely-used Tendermint/CometBFT consensus and best-in-class support for chain operations like staking and governance. For simplicity of chain integration, the Agoric Network works identically to the Cosmos Hub, except using different parameters (e.g., `ubld` instead of `uatom`).\n\n## TL;DR for Cosmos-experienced", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 485, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64c9f321-8cad-4dcd-8eb0-357db8acd63f": {"__data__": {"id_": "64c9f321-8cad-4dcd-8eb0-357db8acd63f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83fb781f-026b-428c-b826-bcaa261c7bd2", "node_type": "1", "metadata": {}, "hash": "7ade8049c756a423ff1c4560da856c687a5f2b6f3708caf694b6d032ee2ea72d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a", "node_type": "1", "metadata": {}, "hash": "c41493e41ae2cedc40406b5aebda44f2452bdd44076a7820d543a2dc88450a4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## TL;DR for Cosmos-experienced\n\nThis section points at relevant reference documentation for the underlying `cosmos-sdk` and CometBFT/Tendermint consensus engine, and summarizes the differences.\n\nThe Agoric Network currently uses `cosmos-sdk` v0.45. The general Cosmos documentation for this version can be [found here](https://docs.cosmos.network/v0.45/), including structure and`golang` documentation, and REST API documentation.", "mimetype": "text/plain", "start_char_idx": 454, "end_char_idx": 885, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a": {"__data__": {"id_": "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64c9f321-8cad-4dcd-8eb0-357db8acd63f", "node_type": "1", "metadata": {}, "hash": "5f4e5c6955999ac96659ab5d60b6c08668443703c4f3fbf2dc3da0a7f5329701", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8c8f529-5903-498a-888f-ab287b74a7c8", "node_type": "1", "metadata": {}, "hash": "2082a14e540471f96a7b96cbf11055c7b77a6866ccb4fb0ce4707df149631c77", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Use the [v0.45.1 version of the REST API](https://v1.cosmos.network/rpc/v0.45.1) for accessing the chain. To use the \"Try it out\" functionality, change the Base URL to `agoric-api.polkachu.com`:\n\n| ![Alt name of image](./assets/cosmos-api.png) |\n| --------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 887, "end_char_idx": 1182, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8c8f529-5903-498a-888f-ab287b74a7c8": {"__data__": {"id_": "f8c8f529-5903-498a-888f-ab287b74a7c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a", "node_type": "1", "metadata": {}, "hash": "c41493e41ae2cedc40406b5aebda44f2452bdd44076a7820d543a2dc88450a4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "249812da-1b86-438b-8e5a-e5861685059d", "node_type": "1", "metadata": {}, "hash": "8f577f4e1ba2b553a37262493542ee7f5f5c92da808272225225ce23bd63b997", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The chain can also be accessed via JavaScript using the [`cosmjs` library](https://github.com/cosmos/cosmjs) (and [associated tutorials](https://tutorials.cosmos.network/tutorials/7-cosmjs/1-cosmjs-intro.html)), or using [CosmosKit](https://cosmoskit.com/).\n\n## Chain resources", "mimetype": "text/plain", "start_char_idx": 1184, "end_char_idx": 1461, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "249812da-1b86-438b-8e5a-e5861685059d": {"__data__": {"id_": "249812da-1b86-438b-8e5a-e5861685059d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8c8f529-5903-498a-888f-ab287b74a7c8", "node_type": "1", "metadata": {}, "hash": "2082a14e540471f96a7b96cbf11055c7b77a6866ccb4fb0ce4707df149631c77", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d", "node_type": "1", "metadata": {}, "hash": "43c6334a955efecacf8a0e9a07e0bf226c00c47b35a837aab0aaf9144d056bc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The base network entry points for the Agoric chain are specified in the [network config](https://main.agoric.net/network-config).\n- Additional chain information, including tokens and their logos, gas fee information for wallets, additional entry points, and explorers is maintained in the Cosmos [Chain Registry](https://github.com/cosmos/chain-registry/tree/master/agoric).", "mimetype": "text/plain", "start_char_idx": 1463, "end_char_idx": 1839, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d": {"__data__": {"id_": "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "249812da-1b86-438b-8e5a-e5861685059d", "node_type": "1", "metadata": {}, "hash": "8f577f4e1ba2b553a37262493542ee7f5f5c92da808272225225ce23bd63b997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a2df152-76df-47b8-bdb9-bb6f38f50599", "node_type": "1", "metadata": {}, "hash": "d0cd029116a1bd5f9b2cd7bb67b75d012f7c61fa62d4590cbd97cf6cdcb32b75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The source code for the Agoric Network runtime and contracts is in [the Agoric open source repository](https://github.com/Agoric/agoric-sdk) on GitHub.\n- The base unit for staking is `ubld` (corresponding to `uatom` for Cosmos Hub)\n- The command utility of the agoric chain is `agd` (corresponding to [`simd` for the Cosmos Hub](https://docs.cosmos.network/v0.45/run-node/interact-node.html)).", "mimetype": "text/plain", "start_char_idx": 1840, "end_char_idx": 2235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a2df152-76df-47b8-bdb9-bb6f38f50599": {"__data__": {"id_": "4a2df152-76df-47b8-bdb9-bb6f38f50599", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d", "node_type": "1", "metadata": {}, "hash": "43c6334a955efecacf8a0e9a07e0bf226c00c47b35a837aab0aaf9144d056bc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9359e8ef-6ea7-4324-95a2-2a693e49e854", "node_type": "1", "metadata": {}, "hash": "6b9a9b70766d44d9519f702db43a702be737da73f88eede29fdaff659bc0fcae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\n\n# Tools\n\n## Building `agd`\n\nThe `agd` command line tool can be built by running the commands as below:\n\n```sh\ngit clone -b community-dev https://github.com/Agoric/agoric-sdk\ncd agoric-sdk\nSKIP_DOWNLOAD=false ./bin/agd build\nexport PATH=$PWD/bin:$PATH\n```\n\nTo confirm that `agd` is in your `$PATH`, execute\n\n```\nagd version --long\n```", "mimetype": "text/plain", "start_char_idx": 2237, "end_char_idx": 2575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9359e8ef-6ea7-4324-95a2-2a693e49e854": {"__data__": {"id_": "9359e8ef-6ea7-4324-95a2-2a693e49e854", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a2df152-76df-47b8-bdb9-bb6f38f50599", "node_type": "1", "metadata": {}, "hash": "d0cd029116a1bd5f9b2cd7bb67b75d012f7c61fa62d4590cbd97cf6cdcb32b75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b415ee04-5a93-4372-987c-e5eae7d4dda1", "node_type": "1", "metadata": {}, "hash": "4450866d9cfff3acf81e079ca5eb6170cd45c3ef5cb029c431b38e3dca5434aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nagd version --long\n```\n\nUnlike typical cosmos-sdk chains where the daemon is a single executable file, Agoric's use of cosmos-sdk depends\non many components of agoric-sdk at runtime. Copying `agd` to `/usr/local/bin` or the like is unlikely to produce\na working installation. For more detail, see [#7825](https://github.com/Agoric/agoric-sdk/issues/7825).\n\n# FAQ", "mimetype": "text/plain", "start_char_idx": 2549, "end_char_idx": 2915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b415ee04-5a93-4372-987c-e5eae7d4dda1": {"__data__": {"id_": "b415ee04-5a93-4372-987c-e5eae7d4dda1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9359e8ef-6ea7-4324-95a2-2a693e49e854", "node_type": "1", "metadata": {}, "hash": "6b9a9b70766d44d9519f702db43a702be737da73f88eede29fdaff659bc0fcae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5cff213e-5e64-4b0a-a630-da74697843d0", "node_type": "1", "metadata": {}, "hash": "65ac3162b108d92ed80303a16b6e6f30b02a71f75fc616f93bfaa80a0e2725eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- How are transactions encoded?\n  [Cosmos SDK v0.45 Docs - Encoding](https://docs.cosmos.network/v0.45/core/encoding.html)\n- What data is needed to create a transaction (last block hash, nonce, sender public key, etc.)?\n  [Cosmos SDK v0.45 Docs - Transaction Generation](https://docs.cosmos.network/v0.45/core/transactions.html#transaction-generation)\n- What data is signed and how is that data obtained (for example truncated SHA256 of transaction data)?", "mimetype": "text/plain", "start_char_idx": 2917, "end_char_idx": 3372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5cff213e-5e64-4b0a-a630-da74697843d0": {"__data__": {"id_": "5cff213e-5e64-4b0a-a630-da74697843d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b415ee04-5a93-4372-987c-e5eae7d4dda1", "node_type": "1", "metadata": {}, "hash": "4450866d9cfff3acf81e079ca5eb6170cd45c3ef5cb029c431b38e3dca5434aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a53520a-1ba4-48f9-8f32-cdb55e8dd7ab", "node_type": "1", "metadata": {}, "hash": "135beec274181a7eb550e9498715dc1b8f40f8ccf3e20139cc05302745bb08b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[Cosmos SDK v0.45 Docs - Transaction Generation](https://docs.cosmos.network/v0.45/core/transactions.html#transaction-generation)\n- Do transactions expire?\n  Transaction do not expire unless you specify --timeout-height: [Cosmos SDK v0.45 Docs - Transaction Generation](https://docs.cosmos.network/v0.45/core/transactions.html#transaction-generation)\n  However they do have a sequence number and may be invalidated if another transaction with the same sequence number is processed by the chain", "mimetype": "text/plain", "start_char_idx": 3375, "end_char_idx": 3868, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a53520a-1ba4-48f9-8f32-cdb55e8dd7ab": {"__data__": {"id_": "1a53520a-1ba4-48f9-8f32-cdb55e8dd7ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_chain-integration.md", "node_type": "4", "metadata": {}, "hash": "a041f831a88cb812eebc50dea41504b1631fefd91a7424c293de503d45930b9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5cff213e-5e64-4b0a-a630-da74697843d0", "node_type": "1", "metadata": {}, "hash": "65ac3162b108d92ed80303a16b6e6f30b02a71f75fc616f93bfaa80a0e2725eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- How are addresses generated?\n  [Cosmos SDK v0.45 Docs - Accounts](https://docs.cosmos.network/v0.45/basics/accounts.html)\n- How is the blockchain queried?\n  JSON-RPC, gRPC, REST [Cosmos SDK v0.45 Docs - Interact with Node](https://docs.cosmos.network/v0.45/run-node/interact-node.html)", "mimetype": "text/plain", "start_char_idx": 3869, "end_char_idx": 4156, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "745e15bf-8bc8-42c6-8f89-6775e1c1f5ba": {"__data__": {"id_": "745e15bf-8bc8-42c6-8f89-6775e1c1f5ba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57e3be21-b734-4725-9bf2-f69d5a63c970", "node_type": "1", "metadata": {}, "hash": "7d9cd5be407ccde25ef78ada0f49d5d2b1002dcf7595be3460f4875b828cca3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Name Services\n\nThe Agoric chain has a few name services:\n\n- `agoricNames` for well-known names controlled by governance\n- `namesByAddress` - a namespace for each provisioned account\n- `board` - to map objects to arbitrary names and back\n\n## agoricNames / agoricNamesAdmin - well known names\n\nWell-known names are chosen by [BLD staker governance](https://community.agoric.com/t/about-the-governance-category/15).\n\nTo look up well-known objects, such as the BLD brand:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 469, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "57e3be21-b734-4725-9bf2-f69d5a63c970": {"__data__": {"id_": "57e3be21-b734-4725-9bf2-f69d5a63c970", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "745e15bf-8bc8-42c6-8f89-6775e1c1f5ba", "node_type": "1", "metadata": {}, "hash": "b363a52a4fdc274c021eff0e8bceb17e5eba6e9057e7f02eecf507eb8d581c8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d937b59-fbcc-4a99-9761-dc58c622590d", "node_type": "1", "metadata": {}, "hash": "bb9ae55f68cca412141bbad219d46dfcdfefb2b023ca24a017b22cf814477206", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst brandHub = E(agoricNames).lookup('brand');\nconst bldBrand = await E(brandHub).lookup('BLD');\n```\n\nor, equivalently:\n\n```js\nconst bldBrand = await E(agoricNames).lookup('brand', 'BLD');\n```\n\n`agoricNames` is a _NameHub_. In general, `E(hub).lookup(key1, key2, ...rest)` is equivalent\nto `E(E(hub).lookup(key1)).lookup(key2, ...rest)`. The NameHub interface also includes `Map`-like\nmethods `has`, `entries`, `keys`, and `values`.\n\nThe keys of `agoricNames` include:", "mimetype": "text/plain", "start_char_idx": 471, "end_char_idx": 947, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d937b59-fbcc-4a99-9761-dc58c622590d": {"__data__": {"id_": "9d937b59-fbcc-4a99-9761-dc58c622590d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57e3be21-b734-4725-9bf2-f69d5a63c970", "node_type": "1", "metadata": {}, "hash": "7d9cd5be407ccde25ef78ada0f49d5d2b1002dcf7595be3460f4875b828cca3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16617407-68b3-42d8-bd96-c6aea24ab4cb", "node_type": "1", "metadata": {}, "hash": "7330650f9c200e3d3b0accb30576cb86082d8019cd50fe36797ddc11a53f128e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `brand` - IST, BLD, Invitation (Zoe invitation brand), timer (a TimerBrand, not an ERTP brand)\n- `issuer` - IST, BLD, Invitation, ...\n- `vbankAsset` - IST, BLD, USDC, ATOM, ... - including info about corresponding cosmos denom\n- `oracleBrand` - USD, ATOM\n- `installation` - psm, reserve, priceAuthority, ... (see [deployed contracts](../zoe/actual-contracts/))\n- `instance` - reserve, one for each psm, one for each priceAuthority, ... (see [deployed contracts](../zoe/actual-contracts/))", "mimetype": "text/plain", "start_char_idx": 949, "end_char_idx": 1439, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16617407-68b3-42d8-bd96-c6aea24ab4cb": {"__data__": {"id_": "16617407-68b3-42d8-bd96-c6aea24ab4cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d937b59-fbcc-4a99-9761-dc58c622590d", "node_type": "1", "metadata": {}, "hash": "bb9ae55f68cca412141bbad219d46dfcdfefb2b023ca24a017b22cf814477206", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce3923b0-dc0a-4a4b-8fd5-99df850cc612", "node_type": "1", "metadata": {}, "hash": "256eba62be3d4eda6b88326e8fa918cdac2b9f1eefbca666e1078ff66ada5e18", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Adding or updating an entry requires access to the corresponding _NameAdmin_ facet: `agoricNamesAdmin` or\none of its descendants - most likely as part of [permissioned contract deployment](../coreeval/). For example:\n\n```js\nconst { instance } = await E(zoe).startInstance(lemonadeStand);\nconst {\n  brands: { Lemonade: lemonadeBrand }\n} = await E(zoe).getTerms(instance);\nconst brandAdmin = E(agoricNamesAdmin).lookupAdmin('brand');\nawait E(brandAdmin).update('Lemonade', lemonadeBrand);\n```", "mimetype": "text/plain", "start_char_idx": 1441, "end_char_idx": 1931, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce3923b0-dc0a-4a4b-8fd5-99df850cc612": {"__data__": {"id_": "ce3923b0-dc0a-4a4b-8fd5-99df850cc612", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16617407-68b3-42d8-bd96-c6aea24ab4cb", "node_type": "1", "metadata": {}, "hash": "7330650f9c200e3d3b0accb30576cb86082d8019cd50fe36797ddc11a53f128e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31d1b196-68bf-4cc5-8312-bc418ee40cbd", "node_type": "1", "metadata": {}, "hash": "6d115b9adefa81f65c49ea5fb2b990f73e98ae198214ae8c6e8f559c60d52dd2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### agoricNames in vstorage", "mimetype": "text/plain", "start_char_idx": 1933, "end_char_idx": 1960, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31d1b196-68bf-4cc5-8312-bc418ee40cbd": {"__data__": {"id_": "31d1b196-68bf-4cc5-8312-bc418ee40cbd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce3923b0-dc0a-4a4b-8fd5-99df850cc612", "node_type": "1", "metadata": {}, "hash": "256eba62be3d4eda6b88326e8fa918cdac2b9f1eefbca666e1078ff66ada5e18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4b42692-21d3-4f27-9cc0-b540326ce066", "node_type": "1", "metadata": {}, "hash": "12024f3ef83014274307768603390aa6018ff65fc1fae9324dc32298c0254736", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `NameAdmin` interface has an `onUpdate` method for registering a callback.\nThis is used to reflect the brand entries, that is: `E(E(agoricNames).lookup('brand')).entries()`\ninto vstorage at `published.agoricNames.brand` each time they change.\nThe entries for `instance` and the other keys of `agoricNames` are likewise reflected under `published.agoricNames`.\nSee [marshalling amounts and instance](../getting-started/contract-rpc#marshalling-amounts-and-instances)", "mimetype": "text/plain", "start_char_idx": 1962, "end_char_idx": 2431, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4b42692-21d3-4f27-9cc0-b540326ce066": {"__data__": {"id_": "a4b42692-21d3-4f27-9cc0-b540326ce066", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31d1b196-68bf-4cc5-8312-bc418ee40cbd", "node_type": "1", "metadata": {}, "hash": "6d115b9adefa81f65c49ea5fb2b990f73e98ae198214ae8c6e8f559c60d52dd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997", "node_type": "1", "metadata": {}, "hash": "986c70a6f0be11714d0fecd014a87ef94dc7bf4f66d6bc80499fa2c9b6d39183", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for details on the format of the data stored in vstorage.", "mimetype": "text/plain", "start_char_idx": 2432, "end_char_idx": 2489, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997": {"__data__": {"id_": "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4b42692-21d3-4f27-9cc0-b540326ce066", "node_type": "1", "metadata": {}, "hash": "12024f3ef83014274307768603390aa6018ff65fc1fae9324dc32298c0254736", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aebe1120-9956-478a-8410-ed1da741d97e", "node_type": "1", "metadata": {}, "hash": "8f363fbc84e9c879ab2a882a72e8d0e1c10feae5c7920e2d2f544c0489cc4781", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## namesByAddress / namesByAddressAdmin, and depositFacet - per account namespace\n\nEach time a smart wallet is provisioned for address `a`, a NameHub / NameAdmin pair is\ninstalled at `E(namesByAddress).lookup(a)` and `E(namesByAddressAdmin).lookupAdmin(a)`.\nAlso, a _deposit facet_ is installed at `E(namesByAddress).lookup(a, 'depositFacet')` so\nthat you can send a payment, such as an invitation, to such a smart wallet using\nthe `receive` method of the deposit facet:", "mimetype": "text/plain", "start_char_idx": 2491, "end_char_idx": 2961, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aebe1120-9956-478a-8410-ed1da741d97e": {"__data__": {"id_": "aebe1120-9956-478a-8410-ed1da741d97e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997", "node_type": "1", "metadata": {}, "hash": "986c70a6f0be11714d0fecd014a87ef94dc7bf4f66d6bc80499fa2c9b6d39183", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fc2337f-f157-466a-8ad6-423681ceba7e", "node_type": "1", "metadata": {}, "hash": "1b5e02949125b3b4501a69a38ae6ce7f66702d5474d2b2c4effc639d11e25048", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobAddress = 'agoric1...';\nconst anInvitationPayment = await zcf.makeInvitation(...);\nconst bobDepositFacet = E(namesByAddress).lookup(bobAddress, 'depositFacet');\nconst amtReceived = await E(bobDepositFacet).receive(anInvitationPayment);\n```", "mimetype": "text/plain", "start_char_idx": 2963, "end_char_idx": 3217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1fc2337f-f157-466a-8ad6-423681ceba7e": {"__data__": {"id_": "1fc2337f-f157-466a-8ad6-423681ceba7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aebe1120-9956-478a-8410-ed1da741d97e", "node_type": "1", "metadata": {}, "hash": "8f363fbc84e9c879ab2a882a72e8d0e1c10feae5c7920e2d2f544c0489cc4781", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d874c95a-0b97-47ec-83f5-eb2eeb409184", "node_type": "1", "metadata": {}, "hash": "7ca53d22408a111a3b7a095e803f960f2dd126dc9e00ee1d70648c7e95d0e44d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Normally, calling `E(nameHub).lookup(k)` before calling `E(nameAdmin).update(k, v)` throws.\nBut the `NameAdmin` interface also includes a `E(nameAdmin).reserve(k)` method so that\n`E(nameHub).lookup(k)` will then return promise that waits for a call to `E(nameAdmin).update(k, v)`\nand then resolves to `v`. This lets those authorized to use `namesByAddressAdmin`\nto send invitations even if a smart wallet has not yet been provisioned:", "mimetype": "text/plain", "start_char_idx": 3219, "end_char_idx": 3653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d874c95a-0b97-47ec-83f5-eb2eeb409184": {"__data__": {"id_": "d874c95a-0b97-47ec-83f5-eb2eeb409184", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fc2337f-f157-466a-8ad6-423681ceba7e", "node_type": "1", "metadata": {}, "hash": "1b5e02949125b3b4501a69a38ae6ce7f66702d5474d2b2c4effc639d11e25048", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "856523bd-981e-4025-adb9-f01cd15c770b", "node_type": "1", "metadata": {}, "hash": "5281bf8b28cbc069e53ffc2d6cff69a1d42ee5d4251bef29616c774aa626b8e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobAddress = 'agoric1...';\nconst anInvitationPayment = await zcf.makeInvitation(...);\nawait E(namesByAddressAdmin).reserve(bobAddress);\nawait E(E(namesByAddressAdmin).lookupAdmin(bobAddress)).reserve('depositFacet');\nconst bobDepositFacet = E(namesByAddress).lookup(bobAddress, 'depositFacet');\nconst receievedP = E(bobDepositFacet).receive(anInvitationPayment);\n// waits for bob to provision a smart wallet\nconst amtReceived = await receivedP;\n```\n\n## The Board - publishing under arbitrary names", "mimetype": "text/plain", "start_char_idx": 3655, "end_char_idx": 4164, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "856523bd-981e-4025-adb9-f01cd15c770b": {"__data__": {"id_": "856523bd-981e-4025-adb9-f01cd15c770b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d874c95a-0b97-47ec-83f5-eb2eeb409184", "node_type": "1", "metadata": {}, "hash": "7ca53d22408a111a3b7a095e803f960f2dd126dc9e00ee1d70648c7e95d0e44d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09574e98-324e-4699-ba36-b86b1579fe83", "node_type": "1", "metadata": {}, "hash": "4cb7ae317bd67df5f36edf052f5c07ff5620c82833505096213216bdfef797a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If we have an object such as a brand or a contract instance, and we need a name / id for it,\nbut we don't much care what the name is, we can use the board:\n\n```js\nconst { instance } = await E(zoe).startInstance(...);\nconst instanceId = await E(board).getId(instance);\n```\n\nWe can then save the id in a file or send it in email to someone else, and they\ncan look up the object:\n\n```js\nconst instance = await E(board).getValue('board023423');\n```", "mimetype": "text/plain", "start_char_idx": 4166, "end_char_idx": 4610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09574e98-324e-4699-ba36-b86b1579fe83": {"__data__": {"id_": "09574e98-324e-4699-ba36-b86b1579fe83", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_integration_name-services.md", "node_type": "4", "metadata": {}, "hash": "bfac705bdfb0c456eb946083c4b54f38e5141024aef0a9bdb214d112c9f8acf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "856523bd-981e-4025-adb9-f01cd15c770b", "node_type": "1", "metadata": {}, "hash": "5281bf8b28cbc069e53ffc2d6cff69a1d42ee5d4251bef29616c774aa626b8e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See also: [marshalling amounts and instance](../getting-started/contract-rpc#marshalling-amounts-and-instances)\nfor details on using board ids to refer to objects from structures stored in vstorage,", "mimetype": "text/plain", "start_char_idx": 4612, "end_char_idx": 4810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d176538b-98bc-4926-a48a-1df485a2e6ef": {"__data__": {"id_": "d176538b-98bc-4926-a48a-1df485a2e6ef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b686f8b7-1ce8-4309-904c-b73e03d937c6", "node_type": "1", "metadata": {}, "hash": "d21316e32e1f9bfd53c385081c60dfcd798f26afb9f73f16bdf8ac647e82693f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Eventual Send with E()\n\nIn web browsers, a common pattern of remote communication is using the\n[asynchronous fetch API with promises](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing#promises):\n\n<<< @/../snippets/test-distributed-programming.js#asyncFetch", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b686f8b7-1ce8-4309-904c-b73e03d937c6": {"__data__": {"id_": "b686f8b7-1ce8-4309-904c-b73e03d937c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d176538b-98bc-4926-a48a-1df485a2e6ef", "node_type": "1", "metadata": {}, "hash": "8a95481188bbf2afd176af88a320d7036f41574026e0a60a581c2eb17df704b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13bcb790-5f4d-47a8-9541-181f4d31d3b6", "node_type": "1", "metadata": {}, "hash": "618554253e03ef5a13616c9b21d8151dae555c002b7d1823c51e246b00ae4361", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the Agoric platform, communicating with remote objects is similar,\nusing the `E()` wrapper. For example,\na [deploy script](../getting-started/deploying) may want to use the\n[Zoe Service API](/reference/zoe-api/zoe) to install a contract on a blockchain.\nBut the deploy script cannot call `zoe.install(bundle)`, because it does not have local\naccess to the `zoe` object. However, the deploy\nscript is given a `zoe` _remote presence_. To call methods on the\nactual Zoe object, the deploy script can do:", "mimetype": "text/plain", "start_char_idx": 293, "end_char_idx": 796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13bcb790-5f4d-47a8-9541-181f4d31d3b6": {"__data__": {"id_": "13bcb790-5f4d-47a8-9541-181f4d31d3b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b686f8b7-1ce8-4309-904c-b73e03d937c6", "node_type": "1", "metadata": {}, "hash": "d21316e32e1f9bfd53c385081c60dfcd798f26afb9f73f16bdf8ac647e82693f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37eb7342-2219-44af-934c-54861a2a3c2d", "node_type": "1", "metadata": {}, "hash": "f4a6e139204a212df9439f21d6832802869f2a7238895a0bf7eea858ee2a0f0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { E } from '@endo/eventual-send';\n\nE(zoe).install(bundle)\n  .then(installationHandle => { ... })\n  .catch(err => { ... });\n```\n\n## Eventual Send\n\nOne of the ways [Zoe partitions risk](https://www.youtube.com/watch?v=T6h6TMuVHKQ&t=368s) is by running in its own [vat](../../glossary/index#vat), separate from any smart contract that might\nuse too much compute time or heap space. The smart contracts also run in separate vats.\n\n![Zoe in a separate vat](../assets/zoe-partitions-risk-slide.svg)", "mimetype": "text/plain", "start_char_idx": 798, "end_char_idx": 1303, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37eb7342-2219-44af-934c-54861a2a3c2d": {"__data__": {"id_": "37eb7342-2219-44af-934c-54861a2a3c2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13bcb790-5f4d-47a8-9541-181f4d31d3b6", "node_type": "1", "metadata": {}, "hash": "618554253e03ef5a13616c9b21d8151dae555c002b7d1823c51e246b00ae4361", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b24751d-8681-421c-a1a7-4210695b1a75", "node_type": "1", "metadata": {}, "hash": "9049dfdf72aa8f6a5bda62e856f7fbf3950d5d4d5cee771b7abaed818e9ba6d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "What happens when we call `E(zoe).install(bundle)` is an _eventual send_:", "mimetype": "text/plain", "start_char_idx": 1305, "end_char_idx": 1378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b24751d-8681-421c-a1a7-4210695b1a75": {"__data__": {"id_": "2b24751d-8681-421c-a1a7-4210695b1a75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37eb7342-2219-44af-934c-54861a2a3c2d", "node_type": "1", "metadata": {}, "hash": "f4a6e139204a212df9439f21d6832802869f2a7238895a0bf7eea858ee2a0f0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb9c5545-c0ff-4d32-8a16-589b87fc998d", "node_type": "1", "metadata": {}, "hash": "bddd848652fd74da8fe8bca8b68442c40c09f03fa3b6fa26889f71c3b48c7157", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1.  A message consisting of the method name `install`\n    with the `bundle` argument [marshaled](./far)\n    to a flat string and queued for delivery to\n    the vat that `zoe` comes from.\n2.  `E(zoe).install(bundle)` returns a promise for the result.\n3.  The `then` and `catch` methods queue callbacks for when the promise\n    is resolved or rejected.\n    Execution continues until the stack is empty and thus this\n    turn through the event loop completes.", "mimetype": "text/plain", "start_char_idx": 1380, "end_char_idx": 1836, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb9c5545-c0ff-4d32-8a16-589b87fc998d": {"__data__": {"id_": "eb9c5545-c0ff-4d32-8a16-589b87fc998d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b24751d-8681-421c-a1a7-4210695b1a75", "node_type": "1", "metadata": {}, "hash": "9049dfdf72aa8f6a5bda62e856f7fbf3950d5d4d5cee771b7abaed818e9ba6d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a818dd95-8357-46fd-9855-f4a620d8919c", "node_type": "1", "metadata": {}, "hash": "b28b571334e77a4e39f1456175cedf20967e5dca94c09a1f0b1a3313090a2c0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "4.  _Eventually_ `zoe` responds, which results in a new message\n    in this vat's message queue and a new turn through the event loop.\n    The message is de-serialized and the results are passed to the relevant callback.", "mimetype": "text/plain", "start_char_idx": 1837, "end_char_idx": 2057, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a818dd95-8357-46fd-9855-f4a620d8919c": {"__data__": {"id_": "a818dd95-8357-46fd-9855-f4a620d8919c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb9c5545-c0ff-4d32-8a16-589b87fc998d", "node_type": "1", "metadata": {}, "hash": "bddd848652fd74da8fe8bca8b68442c40c09f03fa3b6fa26889f71c3b48c7157", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21c08268-7553-4192-8d89-2b099fee89df", "node_type": "1", "metadata": {}, "hash": "2610d7a7d233e06173d9c8317217978cec97e8a26ac7343b840ddbe71d74cc1c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This way, you can communicate with objects in separate vats\nas easily as objects in the same vat with one wrinkle: the communication\nmust be _asynchronous_.\n\nThe `E()` wrapper works with:\n\n- Remote presences (local proxies for objects in remote vats).\n- Local objects (in the same vat).\n- Promises for remote presences or local objects.\n\nIn all cases, `E(x).method(...args)` returns a promise.", "mimetype": "text/plain", "start_char_idx": 2059, "end_char_idx": 2452, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21c08268-7553-4192-8d89-2b099fee89df": {"__data__": {"id_": "21c08268-7553-4192-8d89-2b099fee89df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a818dd95-8357-46fd-9855-f4a620d8919c", "node_type": "1", "metadata": {}, "hash": "b28b571334e77a4e39f1456175cedf20967e5dca94c09a1f0b1a3313090a2c0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "703e13cd-d362-4577-b163-c586b977738c", "node_type": "1", "metadata": {}, "hash": "cf32486670949e69502836f110cebe4d02134b008b216c0a8b334c41905588ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Promise Pipelining\nSince `E()` accepts promises, we can compose eventual sends:\n`E(E(object1).method1(...args1)).method2(...args2)`. This way\nwe can take advantage of _promise pipelining_ so that a single\nround trip suffices for both method calls.\n:::", "mimetype": "text/plain", "start_char_idx": 2454, "end_char_idx": 2713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "703e13cd-d362-4577-b163-c586b977738c": {"__data__": {"id_": "703e13cd-d362-4577-b163-c586b977738c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21c08268-7553-4192-8d89-2b099fee89df", "node_type": "1", "metadata": {}, "hash": "2610d7a7d233e06173d9c8317217978cec97e8a26ac7343b840ddbe71d74cc1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0af40b11-a8f4-4797-acdb-42930704e997", "node_type": "1", "metadata": {}, "hash": "7a57685eb604bbaafd2cfac20d318a681eb7f2c776fdabc7002844fff5507907", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Troubleshooting remote calls\nThe `E()` function creates a\nforwarder that doesn't know what methods the remote object has.\nIf you misspell or incorrectly capitalize the method name,\nthe local environment can't tell you've done so. You'll only find out at runtime when the\nremote object complains that it doesn't know that method.\n\nIf an ordinary synchronous call (`obj.method()`) fails because the method doesn't exist, the `obj` may be remote, in which case `E(obj).method()` might work.\n:::", "mimetype": "text/plain", "start_char_idx": 2715, "end_char_idx": 3214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0af40b11-a8f4-4797-acdb-42930704e997": {"__data__": {"id_": "0af40b11-a8f4-4797-acdb-42930704e997", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "703e13cd-d362-4577-b163-c586b977738c", "node_type": "1", "metadata": {}, "hash": "cf32486670949e69502836f110cebe4d02134b008b216c0a8b334c41905588ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f074a5c-909b-4606-8aa0-4dc7255eaa87", "node_type": "1", "metadata": {}, "hash": "f6da5001e58f857fed42350f76b699f1c2c4d37a01a3cabfdda97ca9035348e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Testing with Deep Stacks\n\nTo get stack traces that cross vats:\n\n```\nTRACK_TURNS=enabled DEBUG=track-turns yarn test test/contract.test.js\n```\n\nSee:\n\n- [\\$DEBUG](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#debug)\n- [\\$TRACK_TURNS](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#track_turns)\n- [\\$LOCKDOWN_OPTIONS for better diagnositcs](https://github.com/Agoric/agoric-sdk/wiki/Developing-with-better-error-diagnostics)\n\n:::\n\n## E() and Marshal: A Closer Look", "mimetype": "text/plain", "start_char_idx": 3216, "end_char_idx": 3714, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f074a5c-909b-4606-8aa0-4dc7255eaa87": {"__data__": {"id_": "4f074a5c-909b-4606-8aa0-4dc7255eaa87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0af40b11-a8f4-4797-acdb-42930704e997", "node_type": "1", "metadata": {}, "hash": "7a57685eb604bbaafd2cfac20d318a681eb7f2c776fdabc7002844fff5507907", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0257479f-c124-4992-9b4f-c2c568e92e85", "node_type": "1", "metadata": {}, "hash": "0aa07fa1ac9cc0b21443ed5f2dbd8a5ef70b1d3cc4bc3d3e8acb9035e78c3856", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E() and Marshal: A Closer Look\n\n::: tip Watch: Office Hours Discussion of Marshal\n\n- [Office Hours: ... marshalling w/board ids, ... \\#8069](https://github.com/Agoric/agoric-sdk/discussions/8069) July 2023\n\n:::\n\nIf you just want to use the SDK to write smart contracts, **feel\nfree to skip this section**. But in case you're working\non something that requires more detailed understanding,\nlet's take a look at how `E(x).method(...args)` is marshalled.", "mimetype": "text/plain", "start_char_idx": 3681, "end_char_idx": 4135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0257479f-c124-4992-9b4f-c2c568e92e85": {"__data__": {"id_": "0257479f-c124-4992-9b4f-c2c568e92e85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f074a5c-909b-4606-8aa0-4dc7255eaa87", "node_type": "1", "metadata": {}, "hash": "f6da5001e58f857fed42350f76b699f1c2c4d37a01a3cabfdda97ca9035348e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3423ff84-8f29-42e2-9378-1842626e1920", "node_type": "1", "metadata": {}, "hash": "52ca88cbee25b665cc044d6bb7cf9ec1bc89c48fc1c5ff29af77c63578200526", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In [@endo/marshal](https://github.com/endojs/endo/tree/master/packages/marshal#readme) docs, we see:", "mimetype": "text/plain", "start_char_idx": 4137, "end_char_idx": 4237, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3423ff84-8f29-42e2-9378-1842626e1920": {"__data__": {"id_": "3423ff84-8f29-42e2-9378-1842626e1920", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0257479f-c124-4992-9b4f-c2c568e92e85", "node_type": "1", "metadata": {}, "hash": "0aa07fa1ac9cc0b21443ed5f2dbd8a5ef70b1d3cc4bc3d3e8acb9035e78c3856", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8886324-df39-47ac-bd9b-a562e889dcfb", "node_type": "1", "metadata": {}, "hash": "ebf53db22aef0e22c0661afe51e61f576ce966ae30330eca1fee52c232263281", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "> The `marshal` module helps with conversion of \"capability-bearing data\", in\n> which some portion of the structured input represents \"pass-by-proxy\" or\n> \"pass-by-presence\" objects that should be serialized into values referencing\n> special \"slot identifiers\". The `toCapData()` function returns a \"CapData\"\n> structure: an object with a `body` containing a serialization of the input data,\n> and a `slots` array holding the slot identifiers. `fromCapData()` takes this", "mimetype": "text/plain", "start_char_idx": 4239, "end_char_idx": 4709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8886324-df39-47ac-bd9b-a562e889dcfb": {"__data__": {"id_": "b8886324-df39-47ac-bd9b-a562e889dcfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3423ff84-8f29-42e2-9378-1842626e1920", "node_type": "1", "metadata": {}, "hash": "52ca88cbee25b665cc044d6bb7cf9ec1bc89c48fc1c5ff29af77c63578200526", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ded2ae2c-36a2-43ca-bead-42901af46f5e", "node_type": "1", "metadata": {}, "hash": "5edcb13b1a9a3665f317e2a3d52b91095bdc9c28b2b23fc58768fcf480dd4922", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "> CapData structure and returns the object graph. There is no generic way to\n> convert between pass-by-presence objects and slot identifiers, so the marshaller\n> is parameterized with a pair of functions to create the slot identifiers and turn\n> them back into proxies/presences.", "mimetype": "text/plain", "start_char_idx": 4710, "end_char_idx": 4989, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ded2ae2c-36a2-43ca-bead-42901af46f5e": {"__data__": {"id_": "ded2ae2c-36a2-43ca-bead-42901af46f5e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8886324-df39-47ac-bd9b-a562e889dcfb", "node_type": "1", "metadata": {}, "hash": "ebf53db22aef0e22c0661afe51e61f576ce966ae30330eca1fee52c232263281", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb687e0a-f45f-48c6-9544-41e172c47c46", "node_type": "1", "metadata": {}, "hash": "df533549bcd330b56ded2d37516de7b78d047729104065f8d833a0a53b98a10a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For example, we can marshal a remotable counter using the slot identifier `c1`:\n\n<<< @/../snippets/test-marshal.js#marshal-remotable\n\nEach end of a connection between vats typically keeps\na table to translate slots to capabilities and back:\n\n<<< @/../snippets/test-marshal.js#marshal-table", "mimetype": "text/plain", "start_char_idx": 4991, "end_char_idx": 5280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb687e0a-f45f-48c6-9544-41e172c47c46": {"__data__": {"id_": "eb687e0a-f45f-48c6-9544-41e172c47c46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ded2ae2c-36a2-43ca-bead-42901af46f5e", "node_type": "1", "metadata": {}, "hash": "5edcb13b1a9a3665f317e2a3d52b91095bdc9c28b2b23fc58768fcf480dd4922", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3d1188a-b63d-4769-9115-8ce44e0c351e", "node_type": "1", "metadata": {}, "hash": "147f810a2e47b3395deb48b015e76c94db870f1f69963df9decfacb6be196ffd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each call to `E(rx)` makes a proxy for the reciver `rx`;\neach `E(rx).p` property reference invokes the `get` proxy trap.\nFrom the `get` trap, `E` returns a function that queues\n`rx`, `p`, and its arguments (in marshalled form) and returns a promise:\n\n<<< @/../snippets/test-marshal.js#marshal-messages-e\n\nNow we can see the result in some detail. Note the way the promise from\n`E(zoe).install()` is passed to `E(zoe).startInstance()`.\n\n<<< @/../snippets/test-marshal.js#marshal-messages", "mimetype": "text/plain", "start_char_idx": 5282, "end_char_idx": 5768, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3d1188a-b63d-4769-9115-8ce44e0c351e": {"__data__": {"id_": "c3d1188a-b63d-4769-9115-8ce44e0c351e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_eventual-send.md", "node_type": "4", "metadata": {}, "hash": "e66fe67e9fb8dcff9209a23f0c1d0b441abf68c20c0d98e4753db1c587e491c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb687e0a-f45f-48c6-9544-41e172c47c46", "node_type": "1", "metadata": {}, "hash": "df533549bcd330b56ded2d37516de7b78d047729104065f8d833a0a53b98a10a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Watch: How Agoric Solves Reentrancy Hazards (November 2020)\nfor more on eventual send and remote communication\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/38oTyVv_D9I\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n:::", "mimetype": "text/plain", "start_char_idx": 5770, "end_char_idx": 6169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cf0b995-d455-4f2e-8bce-d54527a39905": {"__data__": {"id_": "0cf0b995-d455-4f2e-8bce-d54527a39905", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "383dac97-684a-48bc-b432-d412ae44fbcf", "node_type": "1", "metadata": {}, "hash": "558bdae9e3751cd37be2a00cc92d8f7ccde7e71afa5e643f7d5cc98eb834f352", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Far(), Remotable, and Marshaling\n\nLet's look more closely at an [eventual send](./eventual-send) between vats:\n\n![counter remote presence](../assets/remote-presence-fig.svg)\n\nIn the exporting vat, we'll take the `makeCounter` [Hardened JavaScript example](./hardened-js#example-hardened-javascript-code) and refine it to make _remotable_ counters\nby marking them with [Far](#far-api):\n\n<<< @/../snippets/test-distributed-programming.js#makeFarCounter\n\n## Marshaling by Copy or by Presence", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "383dac97-684a-48bc-b432-d412ae44fbcf": {"__data__": {"id_": "383dac97-684a-48bc-b432-d412ae44fbcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cf0b995-d455-4f2e-8bce-d54527a39905", "node_type": "1", "metadata": {}, "hash": "dfb94a41cd4c5e799c4e6fc57e86f31965ed91692e1321f60bb01febba5eaf05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2cc8853-40fd-4fa4-8132-76040728afbb", "node_type": "1", "metadata": {}, "hash": "3d1eb1dfd399acbd9998a6e53cd6f092f4d579206d1bc10eff0ea494ee29a9ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Recall that the first step in an [eventual send](./eventual-send#eventual-send) is\nto _marshal_ the method name and arguments. [Marshalling](https://en.wikipedia.org/wiki/Marshalling_%28computer_science%29) is transforming a data structure into a format suitable for storage or transmission.\nThe [@endo/marshal](https://github.com/endojs/endo/tree/master/packages/marshal#readme) package uses [JSON](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON), but it can handle", "mimetype": "text/plain", "start_char_idx": 492, "end_char_idx": 997, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2cc8853-40fd-4fa4-8132-76040728afbb": {"__data__": {"id_": "a2cc8853-40fd-4fa4-8132-76040728afbb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "383dac97-684a-48bc-b432-d412ae44fbcf", "node_type": "1", "metadata": {}, "hash": "558bdae9e3751cd37be2a00cc92d8f7ccde7e71afa5e643f7d5cc98eb834f352", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "081f597c-e925-44be-9cb1-7b7a3878ab0f", "node_type": "1", "metadata": {}, "hash": "cb5e5f4c0a85fafd755c26c55ebc4cc8670d1d0de428983d8077476cd37f70e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Javascript values that cannot be expressed directly as JSON,\nsuch as `undefined` and `BigInt`s.", "mimetype": "text/plain", "start_char_idx": 998, "end_char_idx": 1093, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "081f597c-e925-44be-9cb1-7b7a3878ab0f": {"__data__": {"id_": "081f597c-e925-44be-9cb1-7b7a3878ab0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2cc8853-40fd-4fa4-8132-76040728afbb", "node_type": "1", "metadata": {}, "hash": "3d1eb1dfd399acbd9998a6e53cd6f092f4d579206d1bc10eff0ea494ee29a9ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b885823f-050b-49d7-8853-4cccf0e20709", "node_type": "1", "metadata": {}, "hash": "c4fd42400db5f936299a581c5b073dec516bea6450238c932472ae1bdb6c6bcf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/test-marshal.js#marshal-json-steroids\n\nAlso, while many forms of data are copied between vats,\nremotables are marshalled so that they become remote _presences_ when unmarshaled.\nAnother vat can then make and use the exported counters:\n\n<<< @/../snippets/test-distributed-programming.js#useFarCounter\n\n## Pass Styles and harden", "mimetype": "text/plain", "start_char_idx": 1095, "end_char_idx": 1439, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b885823f-050b-49d7-8853-4cccf0e20709": {"__data__": {"id_": "b885823f-050b-49d7-8853-4cccf0e20709", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "081f597c-e925-44be-9cb1-7b7a3878ab0f", "node_type": "1", "metadata": {}, "hash": "cb5e5f4c0a85fafd755c26c55ebc4cc8670d1d0de428983d8077476cd37f70e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16d8b474-f161-4f60-a1c9-615da29935b0", "node_type": "1", "metadata": {}, "hash": "2a0987d6516d00575d84a6b48d3415b43a3ac66d262cef74193b3413da1206f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Pass Styles and harden\n\nCalls to remote presences must only contain _passable_ arguments and return _passable_ results.\nA Passable is a [hardened](/glossary/#harden) value that can be marshalled.\nThere are four broad kinds of Passable:", "mimetype": "text/plain", "start_char_idx": 1414, "end_char_idx": 1652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16d8b474-f161-4f60-a1c9-615da29935b0": {"__data__": {"id_": "16d8b474-f161-4f60-a1c9-615da29935b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b885823f-050b-49d7-8853-4cccf0e20709", "node_type": "1", "metadata": {}, "hash": "c4fd42400db5f936299a581c5b073dec516bea6450238c932472ae1bdb6c6bcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11697207-298d-414e-815c-8d17abb463f9", "node_type": "1", "metadata": {}, "hash": "614a675ed8b2ebe29302d406f5e35bbe2591ba276f4e398eaeaf46d592b0b434", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Pass-by-copy **primitive** values: `undefined`, `null`, booleans `true` and `false`, numbers,\n  [BigInts](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt),\n  strings, and symbols that are either\n  [well-known](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#well-known_symbols) or", "mimetype": "text/plain", "start_char_idx": 1654, "end_char_idx": 2016, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11697207-298d-414e-815c-8d17abb463f9": {"__data__": {"id_": "11697207-298d-414e-815c-8d17abb463f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16d8b474-f161-4f60-a1c9-615da29935b0", "node_type": "1", "metadata": {}, "hash": "2a0987d6516d00575d84a6b48d3415b43a3ac66d262cef74193b3413da1206f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd", "node_type": "1", "metadata": {}, "hash": "efbcac0c0dcfc075954be3fbddf9b39dc26068eaa6eb89c20382eecde663b1e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[registered](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#shared_symbols_in_the_global_symbol_registry).\n- Acyclic pass-by-copy **containers** that recursively terminate in non-container passables.\n  Such containers include _CopyArrays_ like `harden(['foo', 'bar'])`,\n  _CopyRecords_ like `harden({ keys: [0, 1], values: ['foo', 'bar'] })`, and\n  _CopyTaggeds_ representing types like CopySet, CopyBag, and CopyMap", "mimetype": "text/plain", "start_char_idx": 2019, "end_char_idx": 2476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd": {"__data__": {"id_": "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11697207-298d-414e-815c-8d17abb463f9", "node_type": "1", "metadata": {}, "hash": "614a675ed8b2ebe29302d406f5e35bbe2591ba276f4e398eaeaf46d592b0b434", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05325b4b-3100-48e0-9a15-fae38ecad049", "node_type": "1", "metadata": {}, "hash": "7739f988768b3ccdcc72fec15a3c8b5dca929bdcf2ef1e9feb78cbc5f62fe360", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(which extend the `passStyleOf` level of abstraction with\n  [tag-specific shapes and semantics](https://github.com/endojs/endo/blob/master/packages/patterns/docs/marshal-vs-patterns-level#kindof-vs-passstyleof))\n- Pass-by-reference \"**PassableCaps**\":\n  - _Remotables_: objects that can be shared with remote systems which can then\n    invoke methods using e.g. `E()` eventual send notation. Remotables are created by [`Far()`](#far-api)\n    and related functions.\n  - _Promises_ for Passables.", "mimetype": "text/plain", "start_char_idx": 2479, "end_char_idx": 2973, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05325b4b-3100-48e0-9a15-fae38ecad049": {"__data__": {"id_": "05325b4b-3100-48e0-9a15-fae38ecad049", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd", "node_type": "1", "metadata": {}, "hash": "efbcac0c0dcfc075954be3fbddf9b39dc26068eaa6eb89c20382eecde663b1e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa5d9726-608e-4eee-b4bb-bf296d22fb1d", "node_type": "1", "metadata": {}, "hash": "c1410663178cfee4709c3df21a22be6e34aadf62fdbd1616057e59408318f8ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- _Promises_ for Passables.\n- As a special case, **Errors** are treated as pass-by-copy data that can also contain other Passables.", "mimetype": "text/plain", "start_char_idx": 2946, "end_char_idx": 3077, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa5d9726-608e-4eee-b4bb-bf296d22fb1d": {"__data__": {"id_": "aa5d9726-608e-4eee-b4bb-bf296d22fb1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05325b4b-3100-48e0-9a15-fae38ecad049", "node_type": "1", "metadata": {}, "hash": "7739f988768b3ccdcc72fec15a3c8b5dca929bdcf2ef1e9feb78cbc5f62fe360", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7843d44-35ef-486d-a605-312f7e620e10", "node_type": "1", "metadata": {}, "hash": "847bc931514a12162c23984193ae431ae7fdb5b723eebebdeedefff99c8db798", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Every object exported from a smart contract, such as `publicFacet` or\n`creatorFacet`, must be passable. All objects used in your contract's external API must\nbe passable.\n\nAll Passables must be hardened. Consider what might happen if we had a remote `item` and we did not harden\nsome pass-by-copy data that we passed to it:\n\n```js\nlet amount1 = { brand: brand1, value: 10n };\nawait E(item).setPrice(amount1); // Throws an error, but let's imagine it doesn't.\namount1.value = 20n;\n```", "mimetype": "text/plain", "start_char_idx": 3079, "end_char_idx": 3562, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7843d44-35ef-486d-a605-312f7e620e10": {"__data__": {"id_": "e7843d44-35ef-486d-a605-312f7e620e10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa5d9726-608e-4eee-b4bb-bf296d22fb1d", "node_type": "1", "metadata": {}, "hash": "c1410663178cfee4709c3df21a22be6e34aadf62fdbd1616057e59408318f8ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0", "node_type": "1", "metadata": {}, "hash": "59eb67df8b9024f3ec16192ea98a74d3c69f614c15256973042e5bd4ed4b61f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now `amount1` is supposedly both in the local and the remote vat, but the `value`\nis `20n` in the local vat but `10n` in the remote vat. (Worse: the remote vat\nmight be the same as the local vat.) Requiring `harden()` for pass-by-copy\ndata leads to behavior across vats that is straightforward to reason about.\n\n## passStyleOf API\n\n<<< @/../snippets/test-distributed-programming.js#import-pass-style\n\n`passStyleOf(passable)` returns a `PassStyle` string that categorizes `passable`.", "mimetype": "text/plain", "start_char_idx": 3564, "end_char_idx": 4046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0": {"__data__": {"id_": "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7843d44-35ef-486d-a605-312f7e620e10", "node_type": "1", "metadata": {}, "hash": "847bc931514a12162c23984193ae431ae7fdb5b723eebebdeedefff99c8db798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8", "node_type": "1", "metadata": {}, "hash": "a2096aecb1e3ec15b802000f5196084b704070e9d48ef2db11e46525faecd4bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `passable` `{Passable}`\n- Returns: `{PassStyle}`\n\n`PassStyle` values correspond with the different kinds of Passable:\n\n- Pass-by-copy **primitive** values: `\"undefined\"`, `\"null\"`, `\"boolean\"`, `\"number\"`, `\"bigint\"`, `\"string\"`, or `\"symbol\"`.\n- Pass-by-copy **containers**: `\"copyArray\"`, `\"copyRecord\"`, or `\"copyTagged\"`.\n- Pass-by-reference **PassableCaps**: `\"remotable\"` or `\"promise\"`.\n- Pass-by-copy **Errors**: `\"error\"`.", "mimetype": "text/plain", "start_char_idx": 4048, "end_char_idx": 4481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8": {"__data__": {"id_": "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0", "node_type": "1", "metadata": {}, "hash": "59eb67df8b9024f3ec16192ea98a74d3c69f614c15256973042e5bd4ed4b61f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0", "node_type": "1", "metadata": {}, "hash": "160ad082869f637d72d086c4bcc53a0528340e9d51c2c8afaf5bd4e0617a7e9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If `passable` is not passable (for example, because it has not been hardened or has\na non-trivial prototype chain), then `passStyleOf` will throw an error.\n\n::: tip Check `passStyleOf` when handling untrusted structured data\nJust as you would use `typeof` to check that an argument is\na string or number, use `passStyleOf` when you expect, say, a `copyRecord`;\nthis prevents malicious clients from playing tricks with cyclic data etc.\n:::\n\n## Far() API", "mimetype": "text/plain", "start_char_idx": 4483, "end_char_idx": 4935, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0": {"__data__": {"id_": "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8", "node_type": "1", "metadata": {}, "hash": "a2096aecb1e3ec15b802000f5196084b704070e9d48ef2db11e46525faecd4bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35bca308-89e0-42fd-9dc3-d355b808947d", "node_type": "1", "metadata": {}, "hash": "1bcf4d7621f16f30f1b6f06c6ac6406e79e03c1b5238527ff82d000ecbf7a232", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Far() API\n\n<<< @/../snippets/test-distributed-programming.js#importFar\n\n`Far(farName, objectWithMethods)` marks an object as Remotable.\n\n- `farName` `{ String }`\n- `objectWithMethods` `{ Object }` - Optional.\n- Returns: A `Remotable` object.\n\nThe `farName` parameter gives the `Remotable` an _interface name_ for debugging purposes, which only shows\nup when logged through the `console`, for example with `console.log`.", "mimetype": "text/plain", "start_char_idx": 4923, "end_char_idx": 5345, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "35bca308-89e0-42fd-9dc3-d355b808947d": {"__data__": {"id_": "35bca308-89e0-42fd-9dc3-d355b808947d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0", "node_type": "1", "metadata": {}, "hash": "160ad082869f637d72d086c4bcc53a0528340e9d51c2c8afaf5bd4e0617a7e9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecc7c5d4-e9a9-4c76-a724-69251751c656", "node_type": "1", "metadata": {}, "hash": "5b2869c2fe9ca3398cdec2210ae97f3db93aef4793f113a9662d7946f83531f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The optional `objectWithMethods` parameter should be an object\nwhose properties are the functions serving as the object's methods.\nIt MUST NOT already be hardened or even frozen (though `Far()` will harden it before returning successfully).\nIf not provided, a new empty object will be used.\n\nBefore succeeding, the `Far()` function:", "mimetype": "text/plain", "start_char_idx": 5347, "end_char_idx": 5679, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ecc7c5d4-e9a9-4c76-a724-69251751c656": {"__data__": {"id_": "ecc7c5d4-e9a9-4c76-a724-69251751c656", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35bca308-89e0-42fd-9dc3-d355b808947d", "node_type": "1", "metadata": {}, "hash": "1bcf4d7621f16f30f1b6f06c6ac6406e79e03c1b5238527ff82d000ecbf7a232", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e1a3ea8-2916-4e29-90bd-ebd732a959b7", "node_type": "1", "metadata": {}, "hash": "0913142c72927d1558fd7edac8f9f5e331ce323bce134428287c74df785f2d92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Checks that each of the object's property values are functions and throws an error otherwise.\n  - Accessors (i.e., `get()` and `set()`) are not allowed.\n- Records the interface name in the object.\n- Hardens the object.", "mimetype": "text/plain", "start_char_idx": 5681, "end_char_idx": 5901, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e1a3ea8-2916-4e29-90bd-ebd732a959b7": {"__data__": {"id_": "3e1a3ea8-2916-4e29-90bd-ebd732a959b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_far.md", "node_type": "4", "metadata": {}, "hash": "81f091b23f0a0aef5b095229ce02ac7378d8c8530819527a2f170a8042d965aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecc7c5d4-e9a9-4c76-a724-69251751c656", "node_type": "1", "metadata": {}, "hash": "5b2869c2fe9ca3398cdec2210ae97f3db93aef4793f113a9662d7946f83531f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Avoid accidental exports\nIf an object should never be exposed to other vats, you should make it\na point **not** to use `Far()` on it. If an object is not marked as a Remotable but is accidentally\nexposed, an error is thrown. This prevents any vulnerability from such accidental exposure.\n:::", "mimetype": "text/plain", "start_char_idx": 5903, "end_char_idx": 6202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "964c32ba-0f6a-4195-85d3-6df5f4fb4810": {"__data__": {"id_": "964c32ba-0f6a-4195-85d3-6df5f4fb4810", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e8161a5-90e6-44c9-ab0f-a9fc00dac807", "node_type": "1", "metadata": {}, "hash": "374c1d278b9052226494c3b61cea4140ca9fb0e233673af82e88e05da96eff48", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Hardened JavaScript\n\n::: tip Watch: Object-capability Programming in Secure Javascript (August 2019)\n\n_The first 15 minutes cover much of the material below.\nThe last 10 minutes are Q&A._\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YcWXqHPui_w?list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n:::", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 510, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e8161a5-90e6-44c9-ab0f-a9fc00dac807": {"__data__": {"id_": "4e8161a5-90e6-44c9-ab0f-a9fc00dac807", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "964c32ba-0f6a-4195-85d3-6df5f4fb4810", "node_type": "1", "metadata": {}, "hash": "99a07ae39aff5fd9766889663baf7683f73bb7abb7d8e32abccd137ec5034acb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a04b59cc-2e17-424b-8752-a44d552ee20e", "node_type": "1", "metadata": {}, "hash": "b6f2afb175431913053b14c97fe01a0cf7d4108430d8cdc1e22ab278eb205ff1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Example Hardened JavaScript Code\n\nThe example below demonstrates several features of Hardened JavaScript.\n\n<<< @/../snippets/test-hardened-js.js#makeCounter\n\nWe'll unpack this a bit [below](#objects-and-the-maker-pattern), but for now please\nnote the use of functions and records:", "mimetype": "text/plain", "start_char_idx": 512, "end_char_idx": 795, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a04b59cc-2e17-424b-8752-a44d552ee20e": {"__data__": {"id_": "a04b59cc-2e17-424b-8752-a44d552ee20e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e8161a5-90e6-44c9-ab0f-a9fc00dac807", "node_type": "1", "metadata": {}, "hash": "374c1d278b9052226494c3b61cea4140ca9fb0e233673af82e88e05da96eff48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5", "node_type": "1", "metadata": {}, "hash": "9c8c3ec652b2bbb6c3a546030c45b9829b49c49954134b360e92450672af21b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `makeCounter` is a function.\n- Each call to `makeCounter` creates a new instance:\n  - a new record with two properties, `incr` and `decr`, and\n  - a new `count` variable.\n- The `incr` and `decr` properties are visible from\n  outside the object.\n- The `count` variable is encapsulated; only the\n  `incr` and `decr` methods can access it.\n- Each of these instances is isolated from each other.\n\n## Separation of Duties", "mimetype": "text/plain", "start_char_idx": 797, "end_char_idx": 1215, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5": {"__data__": {"id_": "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a04b59cc-2e17-424b-8752-a44d552ee20e", "node_type": "1", "metadata": {}, "hash": "b6f2afb175431913053b14c97fe01a0cf7d4108430d8cdc1e22ab278eb205ff1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35591630-b4ba-494f-aad3-786106ffcce2", "node_type": "1", "metadata": {}, "hash": "7dc1b9a0b482583218eff6d048b9abe3926677359a5280c6329a847bb60c2b8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Separation of Duties\n\nSuppose we want to keep track of the number of people\ninside a room by having an `entryGuard` count up when\npeople enter the room and an `exitGuard` count down\nwhen people exit the room.\n\nWe can give the `entryGuard` access to the `incr` function\nand give the `exitGuard` access to the `decr` function.\n\n<<< @/../snippets/test-hardened-js.js#entryExit\n\nThe result is that the `entryGuard` can _only_ count up\nand the `exitGuard` can _only_ count down.", "mimetype": "text/plain", "start_char_idx": 1192, "end_char_idx": 1668, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "35591630-b4ba-494f-aad3-786106ffcce2": {"__data__": {"id_": "35591630-b4ba-494f-aad3-786106ffcce2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5", "node_type": "1", "metadata": {}, "hash": "9c8c3ec652b2bbb6c3a546030c45b9829b49c49954134b360e92450672af21b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a", "node_type": "1", "metadata": {}, "hash": "7a8ea08ad1756350aee21fafb0029b7533fb23e353a27c96ee6e65fe39d0f7fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Eventual send syntax\nThe `entryGuard ! use(counter.incr);` code in the video\nuses a proposed syntax for [eventual send](./eventual-send),\nwhich we will get to soon.\n:::\n\n## Object Capabilities (ocaps)\n\nThe separation of duties illustrates the core idea\nof _object capabilities_: an object reference familiar\nfrom object programming _is_ a permission.\n\nIn this figure, Alice says: `bob.greet(carol)`\n![alice calls bob.greet(carol)](../assets/Introduction.svg)", "mimetype": "text/plain", "start_char_idx": 1670, "end_char_idx": 2136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a": {"__data__": {"id_": "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35591630-b4ba-494f-aad3-786106ffcce2", "node_type": "1", "metadata": {}, "hash": "7dc1b9a0b482583218eff6d048b9abe3926677359a5280c6329a847bb60c2b8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d241955-a16c-46a0-a288-cd1cb0216d62", "node_type": "1", "metadata": {}, "hash": "06333bc232ca08e007f488b701d8d962e23686ceac3200bebf2d474733977459", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If object Bob has no reference to object Carol,\nthen Bob cannot invoke Carol; Bob can't\nprovoke whatever behavior Carol would have.\n\nIf Alice has a reference to Bob and invokes Bob,\npassing Carol as an argument, then Alice has both\nused her permission to invoke Bob _and_ given Bob\npermission to invoke Carol.\n\nWe refer to these object references as _object capabilities_ or _ocaps_.\n\n## The Principle of Least Authority (POLA)", "mimetype": "text/plain", "start_char_idx": 2138, "end_char_idx": 2565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d241955-a16c-46a0-a288-cd1cb0216d62": {"__data__": {"id_": "5d241955-a16c-46a0-a288-cd1cb0216d62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a", "node_type": "1", "metadata": {}, "hash": "7a8ea08ad1756350aee21fafb0029b7533fb23e353a27c96ee6e65fe39d0f7fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c04683d-89a7-40d1-8d1f-fdf4ca180d36", "node_type": "1", "metadata": {}, "hash": "fefe2da1d5b607c6bd638fe519dc9e4ec32dadd249df72e571c871cb218f5938", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "OCaps give us a natural way to express the\n[principle of least authority](https://en.wikipedia.org/wiki/Principle_of_least_privilege), where each object\nis only given the permission it needs to do its legitimate job,\ne.g., only giving the `entryGuard` the ability to increment the counter.\n\nThis limits the damage that can happen if there is an exploitable bug.\n\n### Widely Shared vs. Closely Held\n\n#### Widely Shared Capabilities", "mimetype": "text/plain", "start_char_idx": 2567, "end_char_idx": 2997, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c04683d-89a7-40d1-8d1f-fdf4ca180d36": {"__data__": {"id_": "9c04683d-89a7-40d1-8d1f-fdf4ca180d36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d241955-a16c-46a0-a288-cd1cb0216d62", "node_type": "1", "metadata": {}, "hash": "06333bc232ca08e007f488b701d8d962e23686ceac3200bebf2d474733977459", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d7dca4c-db14-496d-8546-8c0106f100ec", "node_type": "1", "metadata": {}, "hash": "1a9748168ee3a844fe90b00e370dab73ed1157d61d77dfe6156313f27b0163d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Widely Shared Capabilities\n\nIn the object capability model, \"widely shared\" refers to capabilities that are accessible to a large portion of the code within a system. For example:", "mimetype": "text/plain", "start_char_idx": 2966, "end_char_idx": 3150, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d7dca4c-db14-496d-8546-8c0106f100ec": {"__data__": {"id_": "0d7dca4c-db14-496d-8546-8c0106f100ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c04683d-89a7-40d1-8d1f-fdf4ca180d36", "node_type": "1", "metadata": {}, "hash": "fefe2da1d5b607c6bd638fe519dc9e4ec32dadd249df72e571c871cb218f5938", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cf54f51-67ef-4ac4-a2a5-992536bf4aea", "node_type": "1", "metadata": {}, "hash": "4705eb24a427e6d665c01f1a601484bfc7e30a485a15b1fccbd67ba1561a2c52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**agoricNames**](/guides/integration/name-services.html#agoricnames-agoricnamesadmin-well-known-names): This component serves as a read-only name service, which means it can be accessed by most parts of the system. Since it only allows data to be read and not modified, it poses minimal risk and can be safely made widely available.", "mimetype": "text/plain", "start_char_idx": 3152, "end_char_idx": 3487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cf54f51-67ef-4ac4-a2a5-992536bf4aea": {"__data__": {"id_": "6cf54f51-67ef-4ac4-a2a5-992536bf4aea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d7dca4c-db14-496d-8546-8c0106f100ec", "node_type": "1", "metadata": {}, "hash": "1a9748168ee3a844fe90b00e370dab73ed1157d61d77dfe6156313f27b0163d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81b88a5f-90b1-4480-b794-fdf5ad7a35ac", "node_type": "1", "metadata": {}, "hash": "e3861b942be2b8ef04fbb0bd24c265e30b5eb526bed3d218dd30f46e56755aa3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Similarly, in [Access Control with Objects](/guides/zoe/contract-access-control.html#access-control-with-objects), this concept is mirrored by the **publicFacet**, which exposes safe-to-share functionality publicly.", "mimetype": "text/plain", "start_char_idx": 3490, "end_char_idx": 3705, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81b88a5f-90b1-4480-b794-fdf5ad7a35ac": {"__data__": {"id_": "81b88a5f-90b1-4480-b794-fdf5ad7a35ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cf54f51-67ef-4ac4-a2a5-992536bf4aea", "node_type": "1", "metadata": {}, "hash": "4705eb24a427e6d665c01f1a601484bfc7e30a485a15b1fccbd67ba1561a2c52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f", "node_type": "1", "metadata": {}, "hash": "4c136e50ece82b8ac55fc9c285fbe5749d08ef4ada2e5ae7680f1a9d5c22d861", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Closely Held Capabilities\n\nOn the other hand, \"closely held\" capabilities are restricted and only accessible to specific parts of the system that require them to function effectively:", "mimetype": "text/plain", "start_char_idx": 3707, "end_char_idx": 3895, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f": {"__data__": {"id_": "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81b88a5f-90b1-4480-b794-fdf5ad7a35ac", "node_type": "1", "metadata": {}, "hash": "e3861b942be2b8ef04fbb0bd24c265e30b5eb526bed3d218dd30f46e56755aa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "943f2311-d47e-4acd-a71b-80361cc5e545", "node_type": "1", "metadata": {}, "hash": "eee2d496077089447e69c31c68c4465c472798e6a1532e75b6cb6ec8fe53b11a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**agoricNamesAdmin**](/guides/integration/name-services.html#agoricnames-agoricnamesadmin-well-known-names): Known as the write facet of the name service, this component allows modifications to the data in `agoricNames`. Given its capability to alter critical system data, access to `agoricNamesAdmin` is limited to only those parts of the system that have a legitimate need for write access.", "mimetype": "text/plain", "start_char_idx": 3897, "end_char_idx": 4292, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "943f2311-d47e-4acd-a71b-80361cc5e545": {"__data__": {"id_": "943f2311-d47e-4acd-a71b-80361cc5e545", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f", "node_type": "1", "metadata": {}, "hash": "4c136e50ece82b8ac55fc9c285fbe5749d08ef4ada2e5ae7680f1a9d5c22d861", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00bf2054-c613-4a31-b2ff-87f06c66fb9d", "node_type": "1", "metadata": {}, "hash": "8c2fc83523376e556b335430314e49149bcfc9b3bafcf7bdb8c8d92560af592f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This precaution helps to prevent potential misuse or errors that could compromise the system. This parallels the **creatorFacet** in [Access Control with Objects](/guides/zoe/contract-access-control.html#access-control-with-objects), that is provided only to the caller who creates the contract instance.", "mimetype": "text/plain", "start_char_idx": 4295, "end_char_idx": 4599, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00bf2054-c613-4a31-b2ff-87f06c66fb9d": {"__data__": {"id_": "00bf2054-c613-4a31-b2ff-87f06c66fb9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "943f2311-d47e-4acd-a71b-80361cc5e545", "node_type": "1", "metadata": {}, "hash": "eee2d496077089447e69c31c68c4465c472798e6a1532e75b6cb6ec8fe53b11a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d9c0879-c385-4277-92f3-708484ef4dc2", "node_type": "1", "metadata": {}, "hash": "fc3e8833c955b6e973bfa4499521936003c9c9b393f8fe09fc157cece2947636", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Watch: Navigating the Attack Surface\nto achieve a _multiplicative_ reduction in risk. _15 min_<br />\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wW9-KuezPp8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n:::\n\n## Tool Support: eslint config", "mimetype": "text/plain", "start_char_idx": 4601, "end_char_idx": 5022, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d9c0879-c385-4277-92f3-708484ef4dc2": {"__data__": {"id_": "4d9c0879-c385-4277-92f3-708484ef4dc2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00bf2054-c613-4a31-b2ff-87f06c66fb9d", "node_type": "1", "metadata": {}, "hash": "8c2fc83523376e556b335430314e49149bcfc9b3bafcf7bdb8c8d92560af592f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9c34925-3d22-47b1-bc99-eddf65a710f5", "node_type": "1", "metadata": {}, "hash": "4680f9927bbe9a1a74d1e73a573453bdba1181593a98b460d24716ee4802e04d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Tool Support: eslint config\n\n::: tip eslint configuration for Jessie\nThe examples in this section are written using _Jessie_, our\nrecommended style for writing JavaScript smart contracts.\nThis `eslint` configuration provides tool support.\n:::", "mimetype": "text/plain", "start_char_idx": 4992, "end_char_idx": 5237, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9c34925-3d22-47b1-bc99-eddf65a710f5": {"__data__": {"id_": "d9c34925-3d22-47b1-bc99-eddf65a710f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d9c0879-c385-4277-92f3-708484ef4dc2", "node_type": "1", "metadata": {}, "hash": "fc3e8833c955b6e973bfa4499521936003c9c9b393f8fe09fc157cece2947636", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7036695c-563f-4181-899d-04bd10ff16fb", "node_type": "1", "metadata": {}, "hash": "be3a680d6cdb0ca7fbf963998211ce9b953c1384e4ccc950433088d97840c987", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. If working from an empty directory, a package.json file must first be created by running `yarn init` or `yarn init -y`.\n2. From there, we can install eslint into our project along with the jessie.js eslint-plugin by running `yarn add eslint @jessie.js/eslint-plugin`.\n3. The final step is to set up our project's eslint configuration inside of the package.json file by adding the following code block.", "mimetype": "text/plain", "start_char_idx": 5239, "end_char_idx": 5643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7036695c-563f-4181-899d-04bd10ff16fb": {"__data__": {"id_": "7036695c-563f-4181-899d-04bd10ff16fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9c34925-3d22-47b1-bc99-eddf65a710f5", "node_type": "1", "metadata": {}, "hash": "4680f9927bbe9a1a74d1e73a573453bdba1181593a98b460d24716ee4802e04d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d8a3d7b-87ea-477c-a096-7aaad6408c79", "node_type": "1", "metadata": {}, "hash": "03496784cf7e0ccdacde4c2a2ee4b1d56541c03951f35988ccb1fc5fc63cebff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n\"eslintConfig\" : {\n  \"parserOptions\": {\n      \"sourceType\": \"module\",\n      \"ecmaVersion\": 6\n  },\n  \"extends\": [\n    \"plugin:@jessie.js/recommended\"\n  ]\n}\n```\n\nNow the contents of the package.json file should look similiar to the snippet below.", "mimetype": "text/plain", "start_char_idx": 5645, "end_char_idx": 5897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d8a3d7b-87ea-477c-a096-7aaad6408c79": {"__data__": {"id_": "1d8a3d7b-87ea-477c-a096-7aaad6408c79", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7036695c-563f-4181-899d-04bd10ff16fb", "node_type": "1", "metadata": {}, "hash": "be3a680d6cdb0ca7fbf963998211ce9b953c1384e4ccc950433088d97840c987", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7", "node_type": "1", "metadata": {}, "hash": "8e734a479a6003c4cca27c79e4ebf1c0eb32cc29d403091d249cc210f33a27ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```json\n{\n  \"name\": \"eslint-config-test\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"type\": \"module\",\n  \"devDependencies\": {\n    \"@jessie.js/eslint-plugin\": \"^0.1.3\",\n    \"eslint\": \"^8.6.0\"\n  },\n  \"eslintConfig\": {\n    \"parserOptions\": { \"sourceType\": \"module\", \"ecmaVersion\": 6 },\n    \"extends\": [\"plugin:@jessie.js/recommended\"]\n  }\n}\n```\n\n### Linting jessie.js Code", "mimetype": "text/plain", "start_char_idx": 5899, "end_char_idx": 6291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7": {"__data__": {"id_": "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d8a3d7b-87ea-477c-a096-7aaad6408c79", "node_type": "1", "metadata": {}, "hash": "03496784cf7e0ccdacde4c2a2ee4b1d56541c03951f35988ccb1fc5fc63cebff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98f357da-935d-44f9-ab49-572e3ee12c96", "node_type": "1", "metadata": {}, "hash": "a11085923c1fb1b86c94c7a849d7ce7a48a811c26f588051bd2f0bd24f510be2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Linting jessie.js Code\n\n1. Put `// @jessie-check` at the beginning of your `.js` source file.\n2. Run `yarn eslint --fix path/to/your-source.js`\n3. If eslint finds issues with the code, follow the linter's advice to edit your file, and then repeat the step above.\n\nThe details of Jessie have evolved with experience. As a result, here\nwe use `(count += 1)` whereas the video shows `{ return count++; }`.\n\n## Objects and the _maker_ Pattern\n\nLet's unpack the `makeCounter` example a bit.", "mimetype": "text/plain", "start_char_idx": 6265, "end_char_idx": 6754, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "98f357da-935d-44f9-ab49-572e3ee12c96": {"__data__": {"id_": "98f357da-935d-44f9-ab49-572e3ee12c96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7", "node_type": "1", "metadata": {}, "hash": "8e734a479a6003c4cca27c79e4ebf1c0eb32cc29d403091d249cc210f33a27ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd22daed-45b6-49bb-9178-836eddc80907", "node_type": "1", "metadata": {}, "hash": "f5b9d83a718b671052cdc92d15504bc3c83ab5ad8f52cd20f4b77da05bedab87", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "JavaScript is somewhat novel in that objects need not belong to any\nclass; they can just stand on their own:\n\n<<< @/../snippets/test-hardened-js.js#singleton\n\nWe can make a new such object each time a function is called\nusing the _maker pattern_:\n\n<<< @/../snippets/test-hardened-js.js#maker\n\n::: tip Use lexically scoped variables rather than properties of `this`.\nThe style above avoids boilerplate such as `this.x = x; this.y = y`.\n:::", "mimetype": "text/plain", "start_char_idx": 6756, "end_char_idx": 7194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd22daed-45b6-49bb-9178-836eddc80907": {"__data__": {"id_": "bd22daed-45b6-49bb-9178-836eddc80907", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98f357da-935d-44f9-ab49-572e3ee12c96", "node_type": "1", "metadata": {}, "hash": "a11085923c1fb1b86c94c7a849d7ce7a48a811c26f588051bd2f0bd24f510be2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a85bb7c5-e39b-4d58-b877-c1c214c6e234", "node_type": "1", "metadata": {}, "hash": "69a2ad354ae7ba6ec497b6d2a1ffe6ca3b48cd95624e3c9c2a61474d0d8c756b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Use arrow functions\nWe recommend [arrow function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)\nsyntax rather than `function makePoint(x, y) { ... }` declarations\nfor conciseness and to avoid `this`.\n:::\n\n## Defensive Objects with harden()\n\nBy default, anyone can clobber the properties of\nour objects so that they fail to conform to the expected API:\n\n<<< @/../snippets/test-hardened-js.js#clobber", "mimetype": "text/plain", "start_char_idx": 7196, "end_char_idx": 7649, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a85bb7c5-e39b-4d58-b877-c1c214c6e234": {"__data__": {"id_": "a85bb7c5-e39b-4d58-b877-c1c214c6e234", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd22daed-45b6-49bb-9178-836eddc80907", "node_type": "1", "metadata": {}, "hash": "f5b9d83a718b671052cdc92d15504bc3c83ab5ad8f52cd20f4b77da05bedab87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa854798-84b2-45d6-bd88-fb52fac477b4", "node_type": "1", "metadata": {}, "hash": "07ba6ee3cf36b92e01e5213216b51ef40d65e220ed4c3ed7ad95d6183d3c2c97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Worse yet is to clobber a property so that it misbehaves but\ncovers its tracks so that we don't notice:\n\n<<< @/../snippets/test-hardened-js.js#exploit", "mimetype": "text/plain", "start_char_idx": 7651, "end_char_idx": 7801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa854798-84b2-45d6-bd88-fb52fac477b4": {"__data__": {"id_": "fa854798-84b2-45d6-bd88-fb52fac477b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a85bb7c5-e39b-4d58-b877-c1c214c6e234", "node_type": "1", "metadata": {}, "hash": "69a2ad354ae7ba6ec497b6d2a1ffe6ca3b48cd95624e3c9c2a61474d0d8c756b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08863d9c-34ea-4cc4-a079-0e77dead673e", "node_type": "1", "metadata": {}, "hash": "1177abbba562c754f1efe6096116c17ada5fce7c3bba93f942b8745af032f4c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Our goal is **defensive correctness**: a program is _defensively correct_ if it remains correct despite arbitrary behavior on the part of its clients. _For further discussion, see [Concurrency Among Strangers](https://papers.agoric.com/papers/concurrency-among-strangers/abstract/) and other [Agoric papers on Robust Composition](https://papers.agoric.com/papers/#robust-composition)_.", "mimetype": "text/plain", "start_char_idx": 7803, "end_char_idx": 8188, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "08863d9c-34ea-4cc4-a079-0e77dead673e": {"__data__": {"id_": "08863d9c-34ea-4cc4-a079-0e77dead673e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa854798-84b2-45d6-bd88-fb52fac477b4", "node_type": "1", "metadata": {}, "hash": "07ba6ee3cf36b92e01e5213216b51ef40d65e220ed4c3ed7ad95d6183d3c2c97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85ea764d-6df5-4bf3-bfa1-a62478209b1a", "node_type": "1", "metadata": {}, "hash": "c9dd477959e67c7707daeef5be84868e28dcf2a8ce8be91354ac6c3687414182", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To prevent tampering, use the [harden](https://github.com/endojs/endo/blob/HEAD/packages/ses/README.md#harden) function, which is a deep form of [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze).\n\n<<< @/../snippets/test-hardened-js.js#defensiveMaker\n\nAny attempt to modify the properties of a hardened object throws:\n\n<<< @/../snippets/test-hardened-js.js#thwarted", "mimetype": "text/plain", "start_char_idx": 8190, "end_char_idx": 8616, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85ea764d-6df5-4bf3-bfa1-a62478209b1a": {"__data__": {"id_": "85ea764d-6df5-4bf3-bfa1-a62478209b1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08863d9c-34ea-4cc4-a079-0e77dead673e", "node_type": "1", "metadata": {}, "hash": "1177abbba562c754f1efe6096116c17ada5fce7c3bba93f942b8745af032f4c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0dc94755-496b-4120-bbca-8b3b751ff83b", "node_type": "1", "metadata": {}, "hash": "6a5157cb445e7aebf3d9949e9f8435eb5f71a8dd3eb88f06afc8949428757b82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`harden()` should be called on all objects that will be transferred\nacross a trust boundary. It's important to `harden()` an object before exposing the object by returning it or passing it to some other function.\n\n::: tip harden(), classes, and details\nNote that hardening a class instance also hardens the class.\nFor more details, see [harden API in the `ses` package](https://github.com/endojs/endo/blob/HEAD/packages/ses/README.md#harden)\n:::\n\n## Objects with State", "mimetype": "text/plain", "start_char_idx": 8618, "end_char_idx": 9086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0dc94755-496b-4120-bbca-8b3b751ff83b": {"__data__": {"id_": "0dc94755-496b-4120-bbca-8b3b751ff83b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85ea764d-6df5-4bf3-bfa1-a62478209b1a", "node_type": "1", "metadata": {}, "hash": "c9dd477959e67c7707daeef5be84868e28dcf2a8ce8be91354ac6c3687414182", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "006ea161-cc5d-4cfe-b22f-9cb701efc1f3", "node_type": "1", "metadata": {}, "hash": "192a567ea5c08908904a3b60d8d641ad5b5fe4a60ea98ca35d7314833302584e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Objects with State\n\nNow let's review the `makeCounter` example:\n\n<<< @/../snippets/test-hardened-js.js#counterAnimation\n\nEach call to `makeCounter` creates a new encapsulated `count` variable\nalong with `incr` and `decr` functions. The `incr` and `decr` functions\naccess the `count` variable from their lexical scope as usual\nin [JavaScript closures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures).", "mimetype": "text/plain", "start_char_idx": 9065, "end_char_idx": 9485, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "006ea161-cc5d-4cfe-b22f-9cb701efc1f3": {"__data__": {"id_": "006ea161-cc5d-4cfe-b22f-9cb701efc1f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0dc94755-496b-4120-bbca-8b3b751ff83b", "node_type": "1", "metadata": {}, "hash": "6a5157cb445e7aebf3d9949e9f8435eb5f71a8dd3eb88f06afc8949428757b82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "079887ac-e064-4120-9467-8c6791777249", "node_type": "1", "metadata": {}, "hash": "c61860771fef62128329ea5ac7c534848cf9c5f3d22f3851ec166c92ed70e0e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To see how this works in detail, you may want to step through this", "mimetype": "text/plain", "start_char_idx": 9487, "end_char_idx": 9553, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "079887ac-e064-4120-9467-8c6791777249": {"__data__": {"id_": "079887ac-e064-4120-9467-8c6791777249", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "006ea161-cc5d-4cfe-b22f-9cb701efc1f3", "node_type": "1", "metadata": {}, "hash": "192a567ea5c08908904a3b60d8d641ad5b5fe4a60ea98ca35d7314833302584e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2dd5f9d-1f3c-4207-b61f-358153e85b51", "node_type": "1", "metadata": {}, "hash": "98972a0f197d0e6769ab6c37b48e41e301916f604c6ded111da20b92e3b2f8dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[visualization of the", "mimetype": "text/plain", "start_char_idx": 9554, "end_char_idx": 9575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2dd5f9d-1f3c-4207-b61f-358153e85b51": {"__data__": {"id_": "f2dd5f9d-1f3c-4207-b61f-358153e85b51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "079887ac-e064-4120-9467-8c6791777249", "node_type": "1", "metadata": {}, "hash": "c61860771fef62128329ea5ac7c534848cf9c5f3d22f3851ec166c92ed70e0e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30b0f2f0-9e78-469d-a830-3b79e360bc0a", "node_type": "1", "metadata": {}, "hash": "6a7c7e9b08a128c1a9fb3ef4b753ccf4e3c2634c9c79183e09cced802bc2e457", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "code](https://pythontutor.com/live.html#code=const%20makeCounter%20%3D%20%28%29%20%3D%3E%20%7B%0A%20%20let%20count%20%3D%200%3B%0A%20%20const%20it%20%3D%20%7B%0A%20%20%20%20incr%3A%20%28%29%20%3D%3E%20%28count%20%2B%3D%201%29,%0A%20%20%20%20decr%3A%20%28%29%20%3D%3E%20%28count%20-%3D%201%29,%0A%20%20%7D%3B%0A%20%20return%20Object.freeze%28it%29%3B%0A%7D%3B%0A%0Aconst%20c1%20%3D%20makeCounter%28%29%3B%0A%0Aconst%20c2%20%3D%20makeCounter%28%29%3B%0Aconsole.log%28c2.incr%28%29%29%3B%0Aconsole.log%28%5Bc1.incr", "mimetype": "text/plain", "start_char_idx": 9576, "end_char_idx": 10087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30b0f2f0-9e78-469d-a830-3b79e360bc0a": {"__data__": {"id_": "30b0f2f0-9e78-469d-a830-3b79e360bc0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2dd5f9d-1f3c-4207-b61f-358153e85b51", "node_type": "1", "metadata": {}, "hash": "98972a0f197d0e6769ab6c37b48e41e301916f604c6ded111da20b92e3b2f8dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "148e6150-d733-4190-bd67-d2c27151948b", "node_type": "1", "metadata": {}, "hash": "1cebc4205e926f11c95216f6fa0dba339fb814523fdd201b84d9a6006d1cc22f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "%29%29%3B%0Aconsole.log%28%5Bc1.incr%28%29,%20c2.incr%28%29%5D%29%3B&cumulative=false&curInstr=0&heapPrimitives=nevernest&mode=display&origin=opt-live.js&py=js&rawInputLstJSON=%5B%5D&textReferences=):", "mimetype": "text/plain", "start_char_idx": 10051, "end_char_idx": 10251, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "148e6150-d733-4190-bd67-d2c27151948b": {"__data__": {"id_": "148e6150-d733-4190-bd67-d2c27151948b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30b0f2f0-9e78-469d-a830-3b79e360bc0a", "node_type": "1", "metadata": {}, "hash": "6a7c7e9b08a128c1a9fb3ef4b753ccf4e3c2634c9c79183e09cced802bc2e457", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7", "node_type": "1", "metadata": {}, "hash": "86e528dcbecbac80497a3e8bb0fdbd31879ec76eb22fa14dea08ec7bc1e3ae49", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[![makeCounter code", "mimetype": "text/plain", "start_char_idx": 10253, "end_char_idx": 10272, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7": {"__data__": {"id_": "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "148e6150-d733-4190-bd67-d2c27151948b", "node_type": "1", "metadata": {}, "hash": "1cebc4205e926f11c95216f6fa0dba339fb814523fdd201b84d9a6006d1cc22f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "938138f3-9d82-45a8-8282-7f9719c515ca", "node_type": "1", "metadata": {}, "hash": "b46b11ceddf931972451b93395f8ed423ab9ac861257f6b4fb06c941ed8901a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "animation](../assets/counter-animation.png)](https://pythontutor.com/live.html#code=const%20makeCounter%20%3D%20%28%29%20%3D%3E%20%7B%0A%20%20let%20count%20%3D%200%3B%0A%20%20const%20it%20%3D%20%7B%0A%20%20%20%20incr%3A%20%28%29%20%3D%3E%20%28count%20%2B%3D%201%29,%0A%20%20%20%20decr%3A%20%28%29%20%3D%3E%20%28count%20-%3D%201%29,%0A%20%20%7D%3B%0A%20%20return%20Object.freeze%28it%29%3B%0A%7D%3B%0A%0Aconst%20c1%20%3D%20makeCounter%28%29%3B%0A%0Aconst%20c2%20%3D%20makeCounter%28%29%3B%0Aconsole.log%28c2.incr", "mimetype": "text/plain", "start_char_idx": 10273, "end_char_idx": 10784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "938138f3-9d82-45a8-8282-7f9719c515ca": {"__data__": {"id_": "938138f3-9d82-45a8-8282-7f9719c515ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7", "node_type": "1", "metadata": {}, "hash": "86e528dcbecbac80497a3e8bb0fdbd31879ec76eb22fa14dea08ec7bc1e3ae49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d218d55-4d11-4ffb-b065-81d8408aa034", "node_type": "1", "metadata": {}, "hash": "eb2287b4ead4e0950fc4f7316900191a85cb0a590d1907098bff345a93b5c205", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ter%28%29%3B%0Aconsole.log%28c2.incr%28%29%29%3B%0Aconsole.log%28%5Bc1.incr%28%29,%20c2.incr%28%29%5D%29%3B&cumulative=false&curInstr=0&heapPrimitives=nevernest&mode=display&origin=opt-live.js&py=js&rawInputLstJSON=%5B%5D&textReferences=)", "mimetype": "text/plain", "start_char_idx": 10012, "end_char_idx": 10250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d218d55-4d11-4ffb-b065-81d8408aa034": {"__data__": {"id_": "9d218d55-4d11-4ffb-b065-81d8408aa034", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "938138f3-9d82-45a8-8282-7f9719c515ca", "node_type": "1", "metadata": {}, "hash": "b46b11ceddf931972451b93395f8ed423ab9ac861257f6b4fb06c941ed8901a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48f597ec-fdb0-42eb-9158-d38a0c9e448a", "node_type": "1", "metadata": {}, "hash": "364a9f03d5a3dcc7b2b047651e5cec2b0f73ce4abc876e242c18724d1e20e204", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Hardening JavaScript: Strict Mode\n\nThe first step to hardening JavaScript is understanding that Hardened JavaScript\nis always in [strict mode](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode).\n\n[![Subsetting JavaScript](https://raw.githubusercontent.com/endojs/Jessie/HEAD/docs/jessie.png)](https://github.com/endojs/Jessie#subsetting-ecmascript)", "mimetype": "text/plain", "start_char_idx": 10988, "end_char_idx": 11367, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48f597ec-fdb0-42eb-9158-d38a0c9e448a": {"__data__": {"id_": "48f597ec-fdb0-42eb-9158-d38a0c9e448a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d218d55-4d11-4ffb-b065-81d8408aa034", "node_type": "1", "metadata": {}, "hash": "eb2287b4ead4e0950fc4f7316900191a85cb0a590d1907098bff345a93b5c205", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea073c46-51d5-4f89-82ee-6eff30ff80a3", "node_type": "1", "metadata": {}, "hash": "825ff5bf5ed99255351bb23c82469c04b10bf6813a001b0fb0e941e19f5ef635", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "One way that you would notice this is if you\ntry to assign a value to a frozen property: this will throw a `TypeError`\nrather than silently failing.\n\nOperating in strict mode yields the important benefits of complete encapsulation (no `caller` etc.)\nand reliable static scoping.\n\n## Hardening JavaScript: Frozen Built-ins", "mimetype": "text/plain", "start_char_idx": 11369, "end_char_idx": 11690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea073c46-51d5-4f89-82ee-6eff30ff80a3": {"__data__": {"id_": "ea073c46-51d5-4f89-82ee-6eff30ff80a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48f597ec-fdb0-42eb-9158-d38a0c9e448a", "node_type": "1", "metadata": {}, "hash": "364a9f03d5a3dcc7b2b047651e5cec2b0f73ce4abc876e242c18724d1e20e204", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdc6d405-1de2-4352-8563-da7b1aa3db0b", "node_type": "1", "metadata": {}, "hash": "fb51b08509909726ec91914bcf8206d076eb0ec407b9be306f308605a7701990", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "One form of authority that is too widely available in\nordinary JavaScript is the ability to redefine built-ins\n(shown above as \"mutable primordials\").\nConsider this `changePassword` function:\n\n<<< @/../snippets/test-no-ses.js#changePassword\n\nIn ordinary JavaScript we run the risk of stolen passwords because someone might have redefined\nthe `includes` method on `Array` objects:\n\n<<< @/../snippets/test-no-ses.js#exfiltrate", "mimetype": "text/plain", "start_char_idx": 11692, "end_char_idx": 12116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdc6d405-1de2-4352-8563-da7b1aa3db0b": {"__data__": {"id_": "bdc6d405-1de2-4352-8563-da7b1aa3db0b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea073c46-51d5-4f89-82ee-6eff30ff80a3", "node_type": "1", "metadata": {}, "hash": "825ff5bf5ed99255351bb23c82469c04b10bf6813a001b0fb0e941e19f5ef635", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cce97ef3-ef60-4325-aafe-6eb08aeffbf4", "node_type": "1", "metadata": {}, "hash": "4c01b1c2e6af5e3dc08793667a3c42aba67f47b20a962ffb938fe20d6038406c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In Hardened JavaScript, the `Object.assign` fails because `Array.prototype` and all other\n[standard, built-in objects](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects)\nare immutable.\n\n::: tip Compatibility issues with `ses` / Hardened JavaScript\nCertain libraries that make tweaks to the standard built-ins\nmay fail in Hardened JavaScript.\n\nThe [SES wiki](https://github.com/endojs/endo/wiki) tracks compatibility\nreports for NPM packages, including potential workarounds.\n:::", "mimetype": "text/plain", "start_char_idx": 12118, "end_char_idx": 12627, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cce97ef3-ef60-4325-aafe-6eb08aeffbf4": {"__data__": {"id_": "cce97ef3-ef60-4325-aafe-6eb08aeffbf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdc6d405-1de2-4352-8563-da7b1aa3db0b", "node_type": "1", "metadata": {}, "hash": "fb51b08509909726ec91914bcf8206d076eb0ec407b9be306f308605a7701990", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5bf8bbb-d54e-41ae-a8db-1a5811647b84", "node_type": "1", "metadata": {}, "hash": "d6b0201a5abef6541d0980f07759878310d90c46b06856901efc9b6208c1ca1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Hardening JavaScript: Limiting Globals with Compartments\n\nA globally available function such as `fetch` means that every object,\nincluding a simple string manipulation function, can access the network.\nIn order to eliminate this sort of excess authority, _Object-capabity discipline_\ncalls for limiting globals to immutable data and deterministic functions\n(eliminating \"ambient authority\" in the diagram above).", "mimetype": "text/plain", "start_char_idx": 12629, "end_char_idx": 13044, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5bf8bbb-d54e-41ae-a8db-1a5811647b84": {"__data__": {"id_": "b5bf8bbb-d54e-41ae-a8db-1a5811647b84", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cce97ef3-ef60-4325-aafe-6eb08aeffbf4", "node_type": "1", "metadata": {}, "hash": "4c01b1c2e6af5e3dc08793667a3c42aba67f47b20a962ffb938fe20d6038406c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "329b817b-8a6f-4110-8468-38e27839a329", "node_type": "1", "metadata": {}, "hash": "5ec26c48f01886c7902d542075c8949c5d3eebb4879f8ac6abfc5f3e2e071860", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Hardened JavaScript includes a `Compartment` API for enforcing OCap discipline.\nOnly the [standard, built-in\nobjects](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects)\nsuch as `Object`, `Array`, and `Promise` are globally available by default (with\nan option for carefully controlled exceptions such as `console.log`). With the\ndefault `Compartment` options, the non-deterministic `Math.random` and\n`Date.now()` are not available. (Earlier versions of Hardened JavaScript", "mimetype": "text/plain", "start_char_idx": 13046, "end_char_idx": 13549, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "329b817b-8a6f-4110-8468-38e27839a329": {"__data__": {"id_": "329b817b-8a6f-4110-8468-38e27839a329", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5bf8bbb-d54e-41ae-a8db-1a5811647b84", "node_type": "1", "metadata": {}, "hash": "d6b0201a5abef6541d0980f07759878310d90c46b06856901efc9b6208c1ca1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6f20bc1-972c-40d4-b722-71997a7c33e5", "node_type": "1", "metadata": {}, "hash": "7e7a592300b9a171bde7884eddfea41e87a1e139fcf12832272997185b5aaf9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "provided `Compartment` with a `Date.now()` that always returned `NaN`.)", "mimetype": "text/plain", "start_char_idx": 13550, "end_char_idx": 13621, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6f20bc1-972c-40d4-b722-71997a7c33e5": {"__data__": {"id_": "e6f20bc1-972c-40d4-b722-71997a7c33e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "329b817b-8a6f-4110-8468-38e27839a329", "node_type": "1", "metadata": {}, "hash": "5ec26c48f01886c7902d542075c8949c5d3eebb4879f8ac6abfc5f3e2e071860", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7aa55c8-c831-46fb-bb08-64843c41a8c3", "node_type": "1", "metadata": {}, "hash": "bf42c34602a4dff5a37e108ef711158fc327b87247b782eaadd4d881f1990e0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Almost all existing JS code was written to run under Node.js or inside a browser,\nso it's easy to conflate the environment features with JavaScript itself. For\nexample, you may be surprised that `Buffer` and `require` are Node.js\nadditions and not part of JavaScript.\n\nThe conventional globals defined by browser or Node.js hosts are\nnot available by default in a `Compartment`, whether authority-bearing\nor not:", "mimetype": "text/plain", "start_char_idx": 13623, "end_char_idx": 14035, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7aa55c8-c831-46fb-bb08-64843c41a8c3": {"__data__": {"id_": "a7aa55c8-c831-46fb-bb08-64843c41a8c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6f20bc1-972c-40d4-b722-71997a7c33e5", "node_type": "1", "metadata": {}, "hash": "7e7a592300b9a171bde7884eddfea41e87a1e139fcf12832272997185b5aaf9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6c3d1a7-77ed-4075-96af-0509bfa28b4f", "node_type": "1", "metadata": {}, "hash": "891d56ac1e39dc3cb16bfc61f00dad41ea96efb75e5ebcb6064f8aa4202c8a0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- authority-bearing:\n  - `window`, `document`, `process`, `console`\n  - `setImmediate`, `clearImmediate`, `setTimeout`\n    - but `Promise` is available, so sometimes\n      `Promise.resolve().then(_ => fn())` suffices\n    - see also [Timer Service](/reference/repl/timerServices)\n  - `require` (Use `import` module syntax instead.)\n  - `localStorage`", "mimetype": "text/plain", "start_char_idx": 14037, "end_char_idx": 14386, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6c3d1a7-77ed-4075-96af-0509bfa28b4f": {"__data__": {"id_": "a6c3d1a7-77ed-4075-96af-0509bfa28b4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7aa55c8-c831-46fb-bb08-64843c41a8c3", "node_type": "1", "metadata": {}, "hash": "bf42c34602a4dff5a37e108ef711158fc327b87247b782eaadd4d881f1990e0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c4e9cea-cd3f-443e-83aa-d651d959e20e", "node_type": "1", "metadata": {}, "hash": "fb9299db946401280a6419ff5cc2eccc4bf574c876d59b05d9fc789ee4f38544", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `localStorage`\n    - [SwingSet](../platform/#swingset) orthogonal persistence means state lives indefinitely in ordinary variables and data structures and need not be explicitly written to storage.\n    - For high cardinality data, see [the `@agoric/store` package](https://github.com/Agoric/agoric-sdk/tree/master/packages/store).\n  - `global` (Use `globalThis` instead.)\n- authority-free but host-defined:\n  - `Buffer`\n  - `URL` and `URLSearchParams`\n  - `TextEncoder`, `TextDecoder`\n  - `WebAssembly`", "mimetype": "text/plain", "start_char_idx": 14370, "end_char_idx": 14874, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c4e9cea-cd3f-443e-83aa-d651d959e20e": {"__data__": {"id_": "5c4e9cea-cd3f-443e-83aa-d651d959e20e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6c3d1a7-77ed-4075-96af-0509bfa28b4f", "node_type": "1", "metadata": {}, "hash": "891d56ac1e39dc3cb16bfc61f00dad41ea96efb75e5ebcb6064f8aa4202c8a0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578", "node_type": "1", "metadata": {}, "hash": "c7d51a704182dc537cf3951e3954715f7e8fc0a80ec2b96f40eb036b67518e2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In compartments used to load Agoric smart contracts,\n`globalThis` is hardened, following OCap discipline.\nThese compartments have `console` and `assert` globals from [the `ses` package](https://github.com/endojs/endo/blob/HEAD/packages/ses/README.md).\nDon't rely on `console.log` for printing, though; it is for debugging\nonly, and in a blockchain consensus context, it may do nothing at all.", "mimetype": "text/plain", "start_char_idx": 14876, "end_char_idx": 15268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578": {"__data__": {"id_": "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c4e9cea-cd3f-443e-83aa-d651d959e20e", "node_type": "1", "metadata": {}, "hash": "fb9299db946401280a6419ff5cc2eccc4bf574c876d59b05d9fc789ee4f38544", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5392703-cfb8-48e2-922b-ca90957d2bf2", "node_type": "1", "metadata": {}, "hash": "60d3fa1d85f5020e632d45082d7c7818f50f457bda384385aaa4e0fa326f2704", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can create a new `Compartment` object. When you do, you can\ndecide whether to enforce OCap discipline by calling\n`harden(compartment.globalThis)` or not. If not, beware that\nall objects in the compartment have authority to communicate with\nall other objects via properties of `globalThis`.\n\n## Types: Advisory", "mimetype": "text/plain", "start_char_idx": 15270, "end_char_idx": 15583, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5392703-cfb8-48e2-922b-ca90957d2bf2": {"__data__": {"id_": "a5392703-cfb8-48e2-922b-ca90957d2bf2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578", "node_type": "1", "metadata": {}, "hash": "c7d51a704182dc537cf3951e3954715f7e8fc0a80ec2b96f40eb036b67518e2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80c8008c-cfb5-420f-a820-ad31901141f7", "node_type": "1", "metadata": {}, "hash": "f5dc8e06bed8eab052e36821a9a296907ef648538446d87ee1464a80ccd92a85", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Types: Advisory\n\n[Type checking JavaScript files with TypeScript](https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html)\ncan help prevent certain classes of coding errors. We recommend this style rather than\nwriting in TypeScript syntax to remind ourselves that the type annotations really\nare only for lint tools and do not have any effect at runtime:\n\n```js\n// @ts-check", "mimetype": "text/plain", "start_char_idx": 15565, "end_char_idx": 15967, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80c8008c-cfb5-420f-a820-ad31901141f7": {"__data__": {"id_": "80c8008c-cfb5-420f-a820-ad31901141f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5392703-cfb8-48e2-922b-ca90957d2bf2", "node_type": "1", "metadata": {}, "hash": "60d3fa1d85f5020e632d45082d7c7818f50f457bda384385aaa4e0fa326f2704", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21526eae-611a-43c5-8fa3-301bcc72642b", "node_type": "1", "metadata": {}, "hash": "822a1640424c41a433845a905f1e5f731910004ddece1a56592f21e72e988a2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// @ts-check\n\n/** @param {number} init */\nconst makeCounter = init => {\n  let value = init;\n  return {\n    incr: () => {\n      value += 1;\n      return value;\n    }\n  };\n};\n```\n\nIf we're not careful, our clients can cause us to misbehave:\n\n```\n> const evil = makeCounter('poison')\n> evil2.incr()\n'poison1'\n```\n\nor worse:\n\n```\n> const evil2 = makeCounter({ valueOf: () => { console.log('launch the missiles!'); return 1; } });\n> evil2.incr()\nlaunch the missiles!\n2\n```\n\n## Types: Defensive", "mimetype": "text/plain", "start_char_idx": 15949, "end_char_idx": 16443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21526eae-611a-43c5-8fa3-301bcc72642b": {"__data__": {"id_": "21526eae-611a-43c5-8fa3-301bcc72642b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80c8008c-cfb5-420f-a820-ad31901141f7", "node_type": "1", "metadata": {}, "hash": "f5dc8e06bed8eab052e36821a9a296907ef648538446d87ee1464a80ccd92a85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33887770-90b7-4306-a972-e98d30735133", "node_type": "1", "metadata": {}, "hash": "a6d58731863624da8d87e4a81c6696cef40bf20c38d7b94305e28ebb7d1f08ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Types: Defensive\n\nTo be defensively correct, we need runtime validation for any inputs that cross trust boundaries:\n\n```js\nimport Nat from `@endo/nat`;\n\n/** @param {number | bignum} init */\nconst makeCounter = init => {\n  let value = Nat(init);\n  return harden({\n    increment: () => {\n      value += 1n;\n      return value;\n    },\n  });\n};\n```\n\n```\n> makeCounter('poison')\nUncaught TypeError: poison is a string but must be a bigint or a number\n```\n\n## From OCaps to Electronic Rights: Mint and Purse", "mimetype": "text/plain", "start_char_idx": 16424, "end_char_idx": 16928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33887770-90b7-4306-a972-e98d30735133": {"__data__": {"id_": "33887770-90b7-4306-a972-e98d30735133", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21526eae-611a-43c5-8fa3-301bcc72642b", "node_type": "1", "metadata": {}, "hash": "822a1640424c41a433845a905f1e5f731910004ddece1a56592f21e72e988a2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec9ae4e1-5202-4085-ac6f-8770d78191bc", "node_type": "1", "metadata": {}, "hash": "63a722e3536e18aa20fdf57f4ff0c47bdde03f1bb0cd132637d6c53b3d298511", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Hardened JavaScript techniques above are powerful enough\nto express the core of ERTP and its security properties in just 30 lines.\nCareful study of this 8 minute presentation segment provides\na firm foundation for writing smart contracts with Zoe.", "mimetype": "text/plain", "start_char_idx": 16930, "end_char_idx": 17181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec9ae4e1-5202-4085-ac6f-8770d78191bc": {"__data__": {"id_": "ec9ae4e1-5202-4085-ac6f-8770d78191bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33887770-90b7-4306-a972-e98d30735133", "node_type": "1", "metadata": {}, "hash": "a6d58731863624da8d87e4a81c6696cef40bf20c38d7b94305e28ebb7d1f08ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6c49252-d920-4237-88e6-6db9b5b98cc2", "node_type": "1", "metadata": {}, "hash": "7e6d7339817571bbd00877f39c29e14eca8c37fe294da7aa0581b6f969dc539a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Watch: The Mint Pattern\n8 minutes [starting at 25:25](https://youtube.com/watch?v=iyuo0ymTt4g&t=1525&list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG),\nin [Higher-order Smart Contracts across Chains](https://www.youtube.com/watch?v=iyuo0ymTt4g&list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG)\n\n[![image](https://user-images.githubusercontent.com/150986/129462162-4599c0f4-8519-4a04-a707-88ef6e6044d7.png)\n](https://youtube.com/watch?v=iyuo0ymTt4g&t=1525&list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG)\n:::", "mimetype": "text/plain", "start_char_idx": 17183, "end_char_idx": 17672, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6c49252-d920-4237-88e6-6db9b5b98cc2": {"__data__": {"id_": "f6c49252-d920-4237-88e6-6db9b5b98cc2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec9ae4e1-5202-4085-ac6f-8770d78191bc", "node_type": "1", "metadata": {}, "hash": "63a722e3536e18aa20fdf57f4ff0c47bdde03f1bb0cd132637d6c53b3d298511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcb80f84-b555-47f0-8499-73830ba30658", "node_type": "1", "metadata": {}, "hash": "16fd110e4b4a0dad3b2668294dbaff8b1487968e9250b80d21e69babd412a514", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst makeMint = () => {\n  const ledger = makeWeakMap();\n\n  const issuer = harden({\n    makeEmptyPurse: () => mint.makePurse(0)\n  });\n\n  const mint = harden({\n    makePurse: initialBalance => {\n      const purse = harden({\n        getIssuer: () => issuer,\n        getBalance: () => ledger.get(purse),", "mimetype": "text/plain", "start_char_idx": 17674, "end_char_idx": 17980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcb80f84-b555-47f0-8499-73830ba30658": {"__data__": {"id_": "fcb80f84-b555-47f0-8499-73830ba30658", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_hardened-js.md", "node_type": "4", "metadata": {}, "hash": "14579dba3491acf010142e344f5ecaf93b21f935b7d6353494cc1e02081b4f44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6c49252-d920-4237-88e6-6db9b5b98cc2", "node_type": "1", "metadata": {}, "hash": "7e6d7339817571bbd00877f39c29e14eca8c37fe294da7aa0581b6f969dc539a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "deposit: (amount, src) => {\n          Nat(ledger.get(purse) + Nat(amount));\n          ledger.set(src, Nat(ledger.get(src) - amount));\n          ledger.set(purse, ledger.get(purse) + amount);\n        },\n        withdraw: amount => {\n          const newPurse = issuer.makeEmptyPurse();\n          newPurse.deposit(amount, purse);\n          return newPurse;\n        }\n      });\n      ledger.set(purse, initialBalance);\n      return purse;\n    }\n  });\n\n  return mint;\n};\n```", "mimetype": "text/plain", "start_char_idx": 17990, "end_char_idx": 18459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19bfe4ce-11f5-4265-9891-7a65eba78603": {"__data__": {"id_": "19bfe4ce-11f5-4265-9891-7a65eba78603", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c760e720-750c-400b-9f70-60f0240581b3", "node_type": "1", "metadata": {}, "hash": "6bed88a0312534a4e15e1202f4bdcd233f33e7d29464339c5bf4d023f94daee9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# JavaScript Framework for Secure Distributed Computing\n\nThe Agoric smart contract platform starts with a JavaScript framework\nfor secure distributed computing.\n\n::: tip Watch: Distributed Programming for a Decentralized World (August 2019)\nThis 15 minute overview is the first in a\n[4-parts series](https://www.youtube.com/playlist?list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG)\nof short talks on the Agoric Architecture that overlap substantially with the material in\nthe sections below.\n<br />\n<ClientOnly>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 503, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c760e720-750c-400b-9f70-60f0240581b3": {"__data__": {"id_": "c760e720-750c-400b-9f70-60f0240581b3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19bfe4ce-11f5-4265-9891-7a65eba78603", "node_type": "1", "metadata": {}, "hash": "8b2bedbdd4f1ae0ab87afbd2e5c1f58a5aa2f9401b3cfff5e71f7d546ba4e32f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d49b4f0-bc42-4e2b-93de-faba42b55d1e", "node_type": "1", "metadata": {}, "hash": "10f035949570ea46b9fd3519956e4ae258c2e6a83c0d5919e7e8abdad01d6bc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/52SgGFpWjsY?list=PLzDw4TTug5O1oHRbp2HkcvKABAY9FKsmG\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</ClientOnly>\n:::\n\n## Vats: the Unit of Synchrony", "mimetype": "text/plain", "start_char_idx": 505, "end_char_idx": 843, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d49b4f0-bc42-4e2b-93de-faba42b55d1e": {"__data__": {"id_": "3d49b4f0-bc42-4e2b-93de-faba42b55d1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c760e720-750c-400b-9f70-60f0240581b3", "node_type": "1", "metadata": {}, "hash": "6bed88a0312534a4e15e1202f4bdcd233f33e7d29464339c5bf4d023f94daee9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ac8b1bd-5934-4742-9329-fc03c7c13381", "node_type": "1", "metadata": {}, "hash": "b478c36404d7ecaa046da41ee1ed38b120411a1c9cfc9532652d50b907934c70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Vats: the Unit of Synchrony\n\nThe Agoric framework uses the same [event loop concurrency model](https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop) as web browsers and Node.js.\nEach event loop has a message queue, a call stack of frames, and a heap of objects:\n\n![heap, stack, and queue](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_Loop/the_javascript_runtime_environment_example.svg)", "mimetype": "text/plain", "start_char_idx": 813, "end_char_idx": 1232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ac8b1bd-5934-4742-9329-fc03c7c13381": {"__data__": {"id_": "1ac8b1bd-5934-4742-9329-fc03c7c13381", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d49b4f0-bc42-4e2b-93de-faba42b55d1e", "node_type": "1", "metadata": {}, "hash": "10f035949570ea46b9fd3519956e4ae258c2e6a83c0d5919e7e8abdad01d6bc6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c", "node_type": "1", "metadata": {}, "hash": "363a33fa30929767145165a3272a250ef7197bea66063087c13affe097f50dbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We refer to this combination of an event loop with a message queue, a stack, and a heap as a _vat_.\n\nVats are the unit of synchrony. We can only use ordinary synchronous\nfunction calls within the same vat. But we can use asynchronous function calls\n(with [eventual send](./eventual-send)) either within the same vat or between vats.\nVats may be on remote machines, including massively replicated machines such as blockchains.\n\n## Parts of the Framework\n\nThe framework includes:", "mimetype": "text/plain", "start_char_idx": 1234, "end_char_idx": 1711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c": {"__data__": {"id_": "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ac8b1bd-5934-4742-9329-fc03c7c13381", "node_type": "1", "metadata": {}, "hash": "b478c36404d7ecaa046da41ee1ed38b120411a1c9cfc9532652d50b907934c70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f5ef79d-16a8-49bd-86d6-945e0ba337d3", "node_type": "1", "metadata": {}, "hash": "a072bb8ef8bf17c18039c91044f3a45860ce5b4ab434c16257d9e8e54a814b56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The framework includes:\n\n- **[Hardened JavaScript](./hardened-js)**\n\n  - Hardened JavaScript provides a platform for\n    making objects that can interact with code you don't completely trust,\n    without being vulnerable to bugs or bad intentions.\n    We introduce [object capabilities](./hardened-js#object-capabilities-ocaps) and how to use them\n    to apply the [principle of least authority](./hardened-js#the-principle-of-least-authority-pola).", "mimetype": "text/plain", "start_char_idx": 1688, "end_char_idx": 2137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f5ef79d-16a8-49bd-86d6-945e0ba337d3": {"__data__": {"id_": "6f5ef79d-16a8-49bd-86d6-945e0ba337d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c", "node_type": "1", "metadata": {}, "hash": "363a33fa30929767145165a3272a250ef7197bea66063087c13affe097f50dbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66f59baa-a103-45b5-920c-c75740a740cc", "node_type": "1", "metadata": {}, "hash": "e99c010b65ee51863f3aa32f5706dfd1686ee84833a2e909cfda612fe0c5bda0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **[`E()` for Eventual Send to Remote Presences](./eventual-send)**\n\n  - The `E()` wrapper function lets\n    you invoke methods within or between vats.\n    Given a local representative (a _presence_) for a remote object,\n    it sends messages to the origin of the presence.\n    `E(obj).myMethod(...args)` is an asynchronous form of `obj.myMethod(...args)`.\n\n- **[`Far()`, Remoteable Objects, and Marshaling](./far)**", "mimetype": "text/plain", "start_char_idx": 2139, "end_char_idx": 2556, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66f59baa-a103-45b5-920c-c75740a740cc": {"__data__": {"id_": "66f59baa-a103-45b5-920c-c75740a740cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_index.md", "node_type": "4", "metadata": {}, "hash": "786e4fc907ba7a811f8fb2cc8f23b91ac5612a8fba467fca8c1b3565c99d7034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f5ef79d-16a8-49bd-86d6-945e0ba337d3", "node_type": "1", "metadata": {}, "hash": "a072bb8ef8bf17c18039c91044f3a45860ce5b4ab434c16257d9e8e54a814b56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Objects used across vats are called _remotables_.\n    To mark an object for exporting from a vat, use the `Far()` function.\n\n- **[Notifiers and Subscriptions](./notifiers)**\n  - Notifiers and Subscriptions distribute state change\n    updates. Both deliver an asynchronous stream of messages as a publish-subscribe system\n    might, without requiring explicit management of lists of subscribers. Notifiers are\n    lossy conveyors of non-final values while subscriptions are lossless value conveyors.", "mimetype": "text/plain", "start_char_idx": 2560, "end_char_idx": 3060, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3fb4e43-8b21-4eea-a6cc-c5b04d111e38": {"__data__": {"id_": "d3fb4e43-8b21-4eea-a6cc-c5b04d111e38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34bde775-4ec6-4d7c-8f7f-d446ddba1aca", "node_type": "1", "metadata": {}, "hash": "af4bfcab330dd85caa56385461224b9949f39368070796d200a700a353f61117", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Notifiers and Subscriptions\n\n_Notifiers_ and _subscriptions_ both let a service notify clients of state changes.\nSpecifically, both are abstractions for producing and consuming asynchronous\nvalue sequences. They rely on promises to deliver a stream of messages allowing\nmany clients to receive notifications without the originator having to track a subscription list.\nAn object wanting to publish updates to interested clients makes a notifier or a\nsubscription available to them.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 482, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34bde775-4ec6-4d7c-8f7f-d446ddba1aca": {"__data__": {"id_": "34bde775-4ec6-4d7c-8f7f-d446ddba1aca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3fb4e43-8b21-4eea-a6cc-c5b04d111e38", "node_type": "1", "metadata": {}, "hash": "aacdb6013022330b62499c572a6cbd98505a19d2bf62c24cae472c338047d8bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f61bafab-a484-499a-b7da-06d5fdee12ea", "node_type": "1", "metadata": {}, "hash": "994e193096eabf50beb2e1cbf1b4f2806c45ec7b6188e4b2ab4bfeb98494b3ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In JavaScript, async iterations are manipulated by `AsyncGenerators`, `AsyncIterables`, and `AsyncIterators`. For an introduction to them, see [Async iteration and generators](https://javascript.info/async-iterators-generators).\n\n## Distributed Asynchronous Iteration", "mimetype": "text/plain", "start_char_idx": 484, "end_char_idx": 751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f61bafab-a484-499a-b7da-06d5fdee12ea": {"__data__": {"id_": "f61bafab-a484-499a-b7da-06d5fdee12ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34bde775-4ec6-4d7c-8f7f-d446ddba1aca", "node_type": "1", "metadata": {}, "hash": "af4bfcab330dd85caa56385461224b9949f39368070796d200a700a353f61117", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac85df67-8a2b-429f-8b62-6cfcc1178fb8", "node_type": "1", "metadata": {}, "hash": "fa74e4ebdd3eca25b2fa33009b2f68bb6f621a9b28f742884496d09b72acb4fe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An _async iteration_ is an abstract sequence of values. It consists of zero or\nmore _non-final values_ in a fully ordered sequence, revealed asynchronously\nover time. In other words, the values have a full ordering, and all consumers\nsee the whole sequence, or a subset of it, in the same order.\n\nThe sequence may continue indefinitely or terminate in one of two ways:", "mimetype": "text/plain", "start_char_idx": 753, "end_char_idx": 1121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac85df67-8a2b-429f-8b62-6cfcc1178fb8": {"__data__": {"id_": "ac85df67-8a2b-429f-8b62-6cfcc1178fb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f61bafab-a484-499a-b7da-06d5fdee12ea", "node_type": "1", "metadata": {}, "hash": "994e193096eabf50beb2e1cbf1b4f2806c45ec7b6188e4b2ab4bfeb98494b3ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e455f629-8d39-483e-b50d-8726ba71db72", "node_type": "1", "metadata": {}, "hash": "e6f47c82c15b887ab5b7ab36929ae997020ecd9a8627bfcff90ce1ae97286c42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- _Finish_: The async iteration successfully completes and reports any JavaScript\n  value as a final completion.\n- _Fail_: The async iteration fails and gives a reported final reason. This should be an\n  error object, but can be any JavaScript value.\n\n`Finish` and `Fail` are final values. To avoid confusion, for iteration values in\nthis doc, \"final\" and \"non-final\" merely refer to position in an iteration, and not\n\"final\" in the sense of the Java keyword or similar.\n\n## NotifierKit and SubscriptionKit", "mimetype": "text/plain", "start_char_idx": 1123, "end_char_idx": 1629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e455f629-8d39-483e-b50d-8726ba71db72": {"__data__": {"id_": "e455f629-8d39-483e-b50d-8726ba71db72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac85df67-8a2b-429f-8b62-6cfcc1178fb8", "node_type": "1", "metadata": {}, "hash": "fa74e4ebdd3eca25b2fa33009b2f68bb6f621a9b28f742884496d09b72acb4fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de80bc5c-d951-4e22-b50c-e67c0e71662b", "node_type": "1", "metadata": {}, "hash": "e9dfc10f4c8d4e6cd0a5a9f6a3c7b928e7c9b673cd8cd26b949e3527874ca39d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## NotifierKit and SubscriptionKit\n\n`makeNotifierKit()` makes an` {updater, notifier}` pair, while `makeSubscriptionKit()`\nmakes a similar` {publication, subscription}` pair. Each pair\u2019s first\nelement (i.e., `updater` or `publication`) produces the async iteration which is then\nconsumed using each pair\u2019s second element (i.e., `notifier` or `subscription`).", "mimetype": "text/plain", "start_char_idx": 1595, "end_char_idx": 1953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de80bc5c-d951-4e22-b50c-e67c0e71662b": {"__data__": {"id_": "de80bc5c-d951-4e22-b50c-e67c0e71662b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e455f629-8d39-483e-b50d-8726ba71db72", "node_type": "1", "metadata": {}, "hash": "e6f47c82c15b887ab5b7ab36929ae997020ecd9a8627bfcff90ce1ae97286c42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "303e0e42-564a-49a4-a4a1-71dcea69befe", "node_type": "1", "metadata": {}, "hash": "767a17be271a907d699311be2bb44230591273617406beb1c35d55d306d5a46d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { makeNotifierKit } from '@agoric/notifier';\nimport { makeSubscriptionKit } from '@agoric/notifier';\nconst { updater, notifier } = makeNotifierKit();\nconst { publication, subscription } = makeSubscriptionKit();\n```\n\nThe key difference between the two is", "mimetype": "text/plain", "start_char_idx": 1955, "end_char_idx": 2221, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "303e0e42-564a-49a4-a4a1-71dcea69befe": {"__data__": {"id_": "303e0e42-564a-49a4-a4a1-71dcea69befe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de80bc5c-d951-4e22-b50c-e67c0e71662b", "node_type": "1", "metadata": {}, "hash": "e9dfc10f4c8d4e6cd0a5a9f6a3c7b928e7c9b673cd8cd26b949e3527874ca39d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3945258d-fe81-4688-b365-dc83912c1980", "node_type": "1", "metadata": {}, "hash": "2725dc00420bc728131d4456690d5506b30ca104c6f8884182005ede73a05a1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `notifiers` are lossy.\n  - While the sequence is ordered, the consumer requests only the current value and\n    so may never see any values that happened between requests.\n- `subscriptions` are lossless.\n  - The consumer will see every value in the sequence.", "mimetype": "text/plain", "start_char_idx": 2223, "end_char_idx": 2482, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3945258d-fe81-4688-b365-dc83912c1980": {"__data__": {"id_": "3945258d-fe81-4688-b365-dc83912c1980", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "303e0e42-564a-49a4-a4a1-71dcea69befe", "node_type": "1", "metadata": {}, "hash": "767a17be271a907d699311be2bb44230591273617406beb1c35d55d306d5a46d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135", "node_type": "1", "metadata": {}, "hash": "bc3a263b886a8e3f09aee6e55d0a470e65642809b77d5d660eb266e995adee15", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If your consumers only care about more recent states, use `makeNotifierKit()`. Notifiers\nare often appropriate when the iteration represents a changing quantity, like a purse\nbalance, and the consumer is updating a UI that doesn't care about any older and stale\nnon-final values. Notifiers only communicate values at the rate they're consumed, bounded\nby the network round-trip time, and many non-final values are never communicated if the", "mimetype": "text/plain", "start_char_idx": 2484, "end_char_idx": 2923, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135": {"__data__": {"id_": "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3945258d-fe81-4688-b365-dc83912c1980", "node_type": "1", "metadata": {}, "hash": "2725dc00420bc728131d4456690d5506b30ca104c6f8884182005ede73a05a1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3b9d86a-1e71-4f37-9c58-93f786aeca4c", "node_type": "1", "metadata": {}, "hash": "65fb92fa016d5073f0fdfa45ec22e717104f0a0f1a1276a2c217cc8e36209268", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "quantity changes quickly. Notifiers' lossy nature enables this optimization.", "mimetype": "text/plain", "start_char_idx": 2924, "end_char_idx": 3000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3b9d86a-1e71-4f37-9c58-93f786aeca4c": {"__data__": {"id_": "d3b9d86a-1e71-4f37-9c58-93f786aeca4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135", "node_type": "1", "metadata": {}, "hash": "bc3a263b886a8e3f09aee6e55d0a470e65642809b77d5d660eb266e995adee15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d3d2021-012d-4ab2-ac00-27e908ec331f", "node_type": "1", "metadata": {}, "hash": "0756acbd7b26c2892699ab8a8891172f6c1f400152fa07b5abc2a7b7faff83b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`notifier` and `subscription` both implement the JavaScript `AsyncIterable` API to consume the iteration. `updater` and `publication` implement the `IterationObserver` API, as defined by Agoric (JavaScript has no standard for producing iterations). For both pairs, `IterationObserver` only produces the iteration. `AsyncIterable` consumes the iteration.\n\n### NotifierKit", "mimetype": "text/plain", "start_char_idx": 3002, "end_char_idx": 3372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d3d2021-012d-4ab2-ac00-27e908ec331f": {"__data__": {"id_": "3d3d2021-012d-4ab2-ac00-27e908ec331f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3b9d86a-1e71-4f37-9c58-93f786aeca4c", "node_type": "1", "metadata": {}, "hash": "65fb92fa016d5073f0fdfa45ec22e717104f0a0f1a1276a2c217cc8e36209268", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be568b5d-d953-4ea1-a6a5-b3779324f4d4", "node_type": "1", "metadata": {}, "hash": "36d99f0c2cefb28f5d470b587c7a205782290eacdfcd44fccf5e64c67aa17ed3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### NotifierKit\n\nA NotifierKit producer produces iteration values with the `updater` using the\n`IterationObserver` API. Its consumers consume iteration values via the `notifier`\nusing the `AsyncIterable` API. Each NotifierKit consumer iteration is a lossy sampling subset of the iteration produced by the producer. Different consumers may see different sampling subsets.\n\nThe following properties hold for every sampling subset:", "mimetype": "text/plain", "start_char_idx": 3357, "end_char_idx": 3785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be568b5d-d953-4ea1-a6a5-b3779324f4d4": {"__data__": {"id_": "be568b5d-d953-4ea1-a6a5-b3779324f4d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d3d2021-012d-4ab2-ac00-27e908ec331f", "node_type": "1", "metadata": {}, "hash": "0756acbd7b26c2892699ab8a8891172f6c1f400152fa07b5abc2a7b7faff83b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10068e23-0bba-4198-a27c-b66aa24d8a1f", "node_type": "1", "metadata": {}, "hash": "d95f428fcbc5355ff186d58d0895bf9c1431e1dbbf905fb39445d056ab0c1676", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Any non-final value from the producer may be missing from the sampling subset.\n- Every non-final value in the sampling subset is a non-final value from the producer\n  (e.g., if \"7\" is in the subset, then it was in the original producer iteration).\n- Every non-final value in the sampling subset appears in producer order\n  (e.g., If the producer sequence is 1, 3, 8, 5, 9,\n  the sampling subset is guaranteed to not be 8, 1, 5.).", "mimetype": "text/plain", "start_char_idx": 3787, "end_char_idx": 4218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10068e23-0bba-4198-a27c-b66aa24d8a1f": {"__data__": {"id_": "10068e23-0bba-4198-a27c-b66aa24d8a1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be568b5d-d953-4ea1-a6a5-b3779324f4d4", "node_type": "1", "metadata": {}, "hash": "36d99f0c2cefb28f5d470b587c7a205782290eacdfcd44fccf5e64c67aa17ed3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1cd3ac4-fb3a-448d-a336-168d21a481be", "node_type": "1", "metadata": {}, "hash": "ce2453eaa047eff8ca414e2d5d850f9cb8c11c63ec223f172f5e699f90bb6e72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The sampling subset has the same termination value as the iteration from the producer.", "mimetype": "text/plain", "start_char_idx": 4219, "end_char_idx": 4307, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1cd3ac4-fb3a-448d-a336-168d21a481be": {"__data__": {"id_": "d1cd3ac4-fb3a-448d-a336-168d21a481be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10068e23-0bba-4198-a27c-b66aa24d8a1f", "node_type": "1", "metadata": {}, "hash": "d95f428fcbc5355ff186d58d0895bf9c1431e1dbbf905fb39445d056ab0c1676", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ab19971-ad1f-4193-bbf6-344a3b272b08", "node_type": "1", "metadata": {}, "hash": "bd294d8901dcab9dcf7b0a02e6eaed01ede301f17abaea352f7e5d272642275e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When a new iteration value is available, either it or a later value promptly\nbecomes available on each sampling subset. In other words, if value 'a' is\nintroduced on the producer end followed a few moments later by 'b', then all\nclients either promptly see 'a', or won't see it but will promptly see a\nsuccessor, such as 'b'. If a value is added and nothing else follows for a\nwhile, then that value must be distributed promptly to the consumers.\n\n### SubscriptionKit", "mimetype": "text/plain", "start_char_idx": 4309, "end_char_idx": 4776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ab19971-ad1f-4193-bbf6-344a3b272b08": {"__data__": {"id_": "2ab19971-ad1f-4193-bbf6-344a3b272b08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1cd3ac4-fb3a-448d-a336-168d21a481be", "node_type": "1", "metadata": {}, "hash": "ce2453eaa047eff8ca414e2d5d850f9cb8c11c63ec223f172f5e699f90bb6e72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8dfad56d-6d19-49c7-ba1a-72d39f38636a", "node_type": "1", "metadata": {}, "hash": "ec3c8bbeceda1eab45546c5d886734d726884270bb29c46ba006146bb68802a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Use `makeSubscriptionKit()` for pub-sub operations, where subscribers should see\neach published value starting when they subscribe. The producer can be described\nas the publisher and publishes iteration values with the `publication` using the\n`IterationObserver` API. Subscribers consume the published iteration values with\nthe `subscription` using the `AsyncIterable` API. Since each published value is sent\nto all subscribers, `makeSubscriptionKit()` generally should not be used with", "mimetype": "text/plain", "start_char_idx": 4778, "end_char_idx": 5264, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8dfad56d-6d19-49c7-ba1a-72d39f38636a": {"__data__": {"id_": "8dfad56d-6d19-49c7-ba1a-72d39f38636a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ab19971-ad1f-4193-bbf6-344a3b272b08", "node_type": "1", "metadata": {}, "hash": "bd294d8901dcab9dcf7b0a02e6eaed01ede301f17abaea352f7e5d272642275e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4795a5b8-9e09-4127-8720-a45d40a0c021", "node_type": "1", "metadata": {}, "hash": "c27b00f72ba1bd2953b0f989ba5c1ce96cece15f0007dcad6e1856d50ebdc8a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "rapidly-produced values.", "mimetype": "text/plain", "start_char_idx": 5265, "end_char_idx": 5289, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4795a5b8-9e09-4127-8720-a45d40a0c021": {"__data__": {"id_": "4795a5b8-9e09-4127-8720-a45d40a0c021", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8dfad56d-6d19-49c7-ba1a-72d39f38636a", "node_type": "1", "metadata": {}, "hash": "ec3c8bbeceda1eab45546c5d886734d726884270bb29c46ba006146bb68802a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ce3a7cd-01e6-4640-886a-380fb22e908c", "node_type": "1", "metadata": {}, "hash": "63d97bce52616550eec4886991d015a61c26c96bf30133f365ff6e6ce39983dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An iteration\u2019s suffix subset is defined by its starting point in the original\niteration, which can be a non-final value or a termination.\nThe suffix subset has exactly the original iteration\u2019s members from its starting\npoint to and including its termination. For example, if the original is\n{ 2 5 9 13 Fail } with Fail as the termination, the subset from a starting point\nof 9 is { 9 13 Fail }.", "mimetype": "text/plain", "start_char_idx": 5291, "end_char_idx": 5685, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ce3a7cd-01e6-4640-886a-380fb22e908c": {"__data__": {"id_": "9ce3a7cd-01e6-4640-886a-380fb22e908c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4795a5b8-9e09-4127-8720-a45d40a0c021", "node_type": "1", "metadata": {}, "hash": "c27b00f72ba1bd2953b0f989ba5c1ce96cece15f0007dcad6e1856d50ebdc8a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43174536-08cb-405f-88d7-ee08c8fdeb8c", "node_type": "1", "metadata": {}, "hash": "8c3772399f73a4919798f380737c12c8b94873738d23c9b0d3d6ae3bb46af168", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When a new value becomes available on the original iteration, it promptly becomes\navailable on every suffix subset whose starting point is at or before that value.\nSo if the original is { 2 5 9 13 Fail } and 9 is published, 9 promptly\nbecomes available to any suffix subset with a starting point of 2, 5, or 9. It\ndoes not become available to any subset starting at 13 or Fail.", "mimetype": "text/plain", "start_char_idx": 5687, "end_char_idx": 6064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43174536-08cb-405f-88d7-ee08c8fdeb8c": {"__data__": {"id_": "43174536-08cb-405f-88d7-ee08c8fdeb8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ce3a7cd-01e6-4640-886a-380fb22e908c", "node_type": "1", "metadata": {}, "hash": "63d97bce52616550eec4886991d015a61c26c96bf30133f365ff6e6ce39983dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cff037cd-0ac3-4735-94b0-11ed0ec588eb", "node_type": "1", "metadata": {}, "hash": "e99268c475debc527e3aaa07cb4d019d5e1b122eb0bd9a751bb7b09c554bf760", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each subscription is an `AsyncIterable` that produces any number of\n`AsyncIterators`. These `AsyncIterators` are `SubsciptionIterators` which also\nhave a `subscribe()` method. Calling a `subscribe()` method makes a\n`Subscription` whose starting point is that of the `SubscriptionIterator`'s current\nposition.\n\n## Methods\n\nThe `updater` and `publication` both have the same three methods:", "mimetype": "text/plain", "start_char_idx": 6066, "end_char_idx": 6453, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cff037cd-0ac3-4735-94b0-11ed0ec588eb": {"__data__": {"id_": "cff037cd-0ac3-4735-94b0-11ed0ec588eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43174536-08cb-405f-88d7-ee08c8fdeb8c", "node_type": "1", "metadata": {}, "hash": "8c3772399f73a4919798f380737c12c8b94873738d23c9b0d3d6ae3bb46af168", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d04e0abe-afea-401b-a16f-ddb09965e9d8", "node_type": "1", "metadata": {}, "hash": "5eb14d464c4e479e1765f7acf4c862ecb24b2bcd4667e88524a53e4921af16c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `updateState(state)`\n  - Supplies and sends out a new state to consumers. All active Promises\n    produced by `getUpdateSince()` are resolved to the next record.\n- `finish(finalState)`\n  - Closes the stream of state changes and supplies a final state\n    value to consumers.\n- `fail(reason)`\n  - Closes the stream of state changes, indicates a failure to finish\n    satisfactorily, and supplies a reason for the failure to consumers. Does not provide", "mimetype": "text/plain", "start_char_idx": 6455, "end_char_idx": 6907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d04e0abe-afea-401b-a16f-ddb09965e9d8": {"__data__": {"id_": "d04e0abe-afea-401b-a16f-ddb09965e9d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cff037cd-0ac3-4735-94b0-11ed0ec588eb", "node_type": "1", "metadata": {}, "hash": "e99268c475debc527e3aaa07cb4d019d5e1b122eb0bd9a751bb7b09c554bf760", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de5c7bff-6a0f-48d7-8253-36c48b6f86b9", "node_type": "1", "metadata": {}, "hash": "3fb744601229bf21f77838eaed8c4f468026f8023d279225bc18398c35e86592", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "a next state. Instead, it causes the Promise to be rejected with the reason,\n    signalling that the monitored object encountered an error condition.", "mimetype": "text/plain", "start_char_idx": 6912, "end_char_idx": 7061, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de5c7bff-6a0f-48d7-8253-36c48b6f86b9": {"__data__": {"id_": "de5c7bff-6a0f-48d7-8253-36c48b6f86b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d04e0abe-afea-401b-a16f-ddb09965e9d8", "node_type": "1", "metadata": {}, "hash": "5eb14d464c4e479e1765f7acf4c862ecb24b2bcd4667e88524a53e4921af16c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6743e05c-6b12-4350-8b47-74e89b5f7529", "node_type": "1", "metadata": {}, "hash": "a4500cfb7089ebdc0b3766dbbbea20622353786b58fcbb52498e71ebd1238bbb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `notifier` has an additional method that the `subscription` does not:", "mimetype": "text/plain", "start_char_idx": 7063, "end_char_idx": 7136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6743e05c-6b12-4350-8b47-74e89b5f7529": {"__data__": {"id_": "6743e05c-6b12-4350-8b47-74e89b5f7529", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de5c7bff-6a0f-48d7-8253-36c48b6f86b9", "node_type": "1", "metadata": {}, "hash": "3fb744601229bf21f77838eaed8c4f468026f8023d279225bc18398c35e86592", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe", "node_type": "1", "metadata": {}, "hash": "d580f3ecee5431aedab9315fe40a7a123f0912916b0188259bcbf75cfd5fea90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `getUpdateSince(previousUpdateCount)`\n  - Returns a promise for the next published value as a `{ value, updateCount }` record,\n    using an optional `previousUpdateCount` to communicate the last obtained value.\n    `value` is the new value from the publisher.\n    `updateCount` is a piece of data for use with `getUpdateSince`\n    to request notification the _next_ time there's a new value.\n    If the state becomes final (e.g., when a Zoe seat exits), `updateCount` will be", "mimetype": "text/plain", "start_char_idx": 7138, "end_char_idx": 7615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe": {"__data__": {"id_": "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6743e05c-6b12-4350-8b47-74e89b5f7529", "node_type": "1", "metadata": {}, "hash": "a4500cfb7089ebdc0b3766dbbbea20622353786b58fcbb52498e71ebd1238bbb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db9852ce-49fb-4d40-ab02-f6dc0550f356", "node_type": "1", "metadata": {}, "hash": "0aac33d289b3675681230f46e11e1c57d468824e24534a716e4b74bf0d61ae15", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "undefined. If there's an error, the promise for the record is\n    rejected and no further values can exist.\n  - If `getUpdateSince` is called without `previousUpdateCount`, or with any\n    `previousUpdateCount` other than the most recent one, it returns a promise\n    already resolved to the current state.\n    If called with the most recent `updateCount`, it returns a promise\n    for the next record, which is resolved on the next state change.", "mimetype": "text/plain", "start_char_idx": 7620, "end_char_idx": 8066, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db9852ce-49fb-4d40-ab02-f6dc0550f356": {"__data__": {"id_": "db9852ce-49fb-4d40-ab02-f6dc0550f356", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe", "node_type": "1", "metadata": {}, "hash": "d580f3ecee5431aedab9315fe40a7a123f0912916b0188259bcbf75cfd5fea90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e6cd211-80da-4477-9feb-8d726cf72b93", "node_type": "1", "metadata": {}, "hash": "5e9b3e0d46257a520b2f81ac53613d6dac5c244a2577b68418b318a002d164a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Notifiers and Subscriptions in Zoe", "mimetype": "text/plain", "start_char_idx": 8068, "end_char_idx": 8105, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e6cd211-80da-4477-9feb-8d726cf72b93": {"__data__": {"id_": "4e6cd211-80da-4477-9feb-8d726cf72b93", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db9852ce-49fb-4d40-ab02-f6dc0550f356", "node_type": "1", "metadata": {}, "hash": "0aac33d289b3675681230f46e11e1c57d468824e24534a716e4b74bf0d61ae15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c83309a8-2a2d-413e-b245-807ffe71f128", "node_type": "1", "metadata": {}, "hash": "8da4c0bc76602d55d93b4d290511e26846106342a8f5468cb24b60a265c47ce5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[Zoe](/reference/zoe-api/) provides updates on the state of seats within a contract. The updates\nfrom Zoe indicate changes to seat allocation and seat exits.\nThese are available from `E(userSeat).getNotifier()` and `zcfSeat.getNotifier()`,\neach of which provide a long-lived notifier object associated with a particular\nseat. `ZCFSeat`s are available within contracts while `UserSeat`s are accessible\nfrom the REPL, deploy scripts, and other code outside contracts. There are no", "mimetype": "text/plain", "start_char_idx": 8107, "end_char_idx": 8585, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c83309a8-2a2d-413e-b245-807ffe71f128": {"__data__": {"id_": "c83309a8-2a2d-413e-b245-807ffe71f128", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e6cd211-80da-4477-9feb-8d726cf72b93", "node_type": "1", "metadata": {}, "hash": "5e9b3e0d46257a520b2f81ac53613d6dac5c244a2577b68418b318a002d164a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3", "node_type": "1", "metadata": {}, "hash": "4317fbde5d7849d6a1dee0897d33988de9791f7767e68f14f4360cce86fc3b3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "equivalent `getSubscription()` or `getUpdater()` methods on the\nseats.", "mimetype": "text/plain", "start_char_idx": 8586, "end_char_idx": 8656, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3": {"__data__": {"id_": "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c83309a8-2a2d-413e-b245-807ffe71f128", "node_type": "1", "metadata": {}, "hash": "8da4c0bc76602d55d93b4d290511e26846106342a8f5468cb24b60a265c47ce5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e37179d8-daa2-4a10-b8b4-8502ddf9455f", "node_type": "1", "metadata": {}, "hash": "251a6d77e8c6a6aefd7924010abbb8606f2810c31b4c193eb8bf0355ce762e57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Zoe's updates for an offer show the current allocation that will be paid if the contract completes without further changes.\n\nIndividual contracts can use notifiers and subscriptions to provide updates giving current prices or other contract-specific details.\n\nThe following methods use or return notifiers.", "mimetype": "text/plain", "start_char_idx": 8658, "end_char_idx": 8964, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e37179d8-daa2-4a10-b8b4-8502ddf9455f": {"__data__": {"id_": "e37179d8-daa2-4a10-b8b4-8502ddf9455f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3", "node_type": "1", "metadata": {}, "hash": "4317fbde5d7849d6a1dee0897d33988de9791f7767e68f14f4360cce86fc3b3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a0113dc-4ed8-485b-9c76-9e8a8f03d984", "node_type": "1", "metadata": {}, "hash": "b0612f4533c1a81c3fb6e9fc86e46ec7792d3e76c3701a19aabd415d091465ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [aPurse.getCurrentAmountNotifier()](/reference/ertp-api/purse#apurse-getcurrentamountnotifier)\n  - Part of the ERTP API. Returns a lossy notifier for changes to this purse's balance.\n- [getPursesNotifier()](/reference/wallet-api/wallet-bridge#getpursesnotifier)\n  - Part of the Wallet API. It returns a notifier that follows changes in the purses in the Wallet.\n- [getOffersNotifier()](/reference/wallet-api/wallet-bridge#getoffersnotifier)", "mimetype": "text/plain", "start_char_idx": 8966, "end_char_idx": 9408, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a0113dc-4ed8-485b-9c76-9e8a8f03d984": {"__data__": {"id_": "8a0113dc-4ed8-485b-9c76-9e8a8f03d984", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e37179d8-daa2-4a10-b8b4-8502ddf9455f", "node_type": "1", "metadata": {}, "hash": "251a6d77e8c6a6aefd7924010abbb8606f2810c31b4c193eb8bf0355ce762e57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93078583-09de-4ba7-b1ed-08a6501032ad", "node_type": "1", "metadata": {}, "hash": "5b608437c9658be6b09294b7ef998183baba7b94986cde972683dbd31fda1bbe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Part of the Wallet API. It returns a notifier that follows changes to the offers received by the Wallet.\n- [makeQuoteNotifier(amountIn,brandOut)](/reference/repl/priceAuthority#makequotenotifier-amountin-brandout)\n  - Part of the PriceAuthority API. Notifies the latest `PriceQuotes` for the given `amountIn`.\n- [getPriceNotifier(brandIn, brandOut)](/reference/repl/priceAuthority#getpricenotifier-brandin-brandout)", "mimetype": "text/plain", "start_char_idx": 9411, "end_char_idx": 9828, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93078583-09de-4ba7-b1ed-08a6501032ad": {"__data__": {"id_": "93078583-09de-4ba7-b1ed-08a6501032ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a0113dc-4ed8-485b-9c76-9e8a8f03d984", "node_type": "1", "metadata": {}, "hash": "b0612f4533c1a81c3fb6e9fc86e46ec7792d3e76c3701a19aabd415d091465ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5", "node_type": "1", "metadata": {}, "hash": "1872cff3fe2499a4fbaddb5e56e53405d2f48ac286130838a18091b584ec8f36", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Part of the PriceAuthority API. Returns a notifier for the specified brands. Different PriceAuthorities may issue these at very\n    different rates.\n- [E(home.localTimerService).makeNotifier(delay, interval) and\n  E(home.chainTimerService).makeNotifier(delay, interval)](/reference/repl/timerServices#e-home-chain-or-local-timerservice-makenotifier-delay-interval)\n  - Part of the REPL's TimerService API. It creates and returns a `Notifier` object", "mimetype": "text/plain", "start_char_idx": 9831, "end_char_idx": 10281, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5": {"__data__": {"id_": "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93078583-09de-4ba7-b1ed-08a6501032ad", "node_type": "1", "metadata": {}, "hash": "5b608437c9658be6b09294b7ef998183baba7b94986cde972683dbd31fda1bbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca", "node_type": "1", "metadata": {}, "hash": "42c598f1d0cd08899eba3f76d15bcca1f0368aed8471622d89df6dc5d6766c82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "that repeatedly delivers updates at times that are a multiple of the provided `interval` value,\n    with the first update happening after the provided `delay` value.", "mimetype": "text/plain", "start_char_idx": 10286, "end_char_idx": 10451, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca": {"__data__": {"id_": "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5", "node_type": "1", "metadata": {}, "hash": "1872cff3fe2499a4fbaddb5e56e53405d2f48ac286130838a18091b584ec8f36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15ea81b7-9111-4f52-8732-e77b7393e5e3", "node_type": "1", "metadata": {}, "hash": "e53598d0497dfa3b3559b4070811d6f18af9d9c1d0a398d7de1c878f3452f14a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Examples\n\n### Subscription Example\n\nLet\u2019s look at a subscription example. We have three characters: Paula the publisher, and Alice and Bob the subscribers. While Alice and Bob both consume Paula's published iteration, they use different tools to do so.\n\nFirst we create a publication/subscription pair with `makeSubscriptionKit()`. Paula publishes an iteration with the non-final sequence 'a', 'b' and 'done' as its completion value.", "mimetype": "text/plain", "start_char_idx": 10453, "end_char_idx": 10889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15ea81b7-9111-4f52-8732-e77b7393e5e3": {"__data__": {"id_": "15ea81b7-9111-4f52-8732-e77b7393e5e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca", "node_type": "1", "metadata": {}, "hash": "42c598f1d0cd08899eba3f76d15bcca1f0368aed8471622d89df6dc5d6766c82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5ed37d2-39cf-49fd-af9b-ee02e120707b", "node_type": "1", "metadata": {}, "hash": "bd67fcb5a6cda70514a9a2085ad483427ce56049fbcf0d5887784ece50a3f0ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { publication, subscription } = makeSubscriptionKit();\n// Paula the publisher says\npublication.updateState('a');\npublication.updateState('b');\npublication.finish('done');\n```\n\nRemember, a `SubscriptionKit` is lossless. It conveys all of an async iteration\u2019s non-final values, as well as the final value.", "mimetype": "text/plain", "start_char_idx": 10891, "end_char_idx": 11206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5ed37d2-39cf-49fd-af9b-ee02e120707b": {"__data__": {"id_": "b5ed37d2-39cf-49fd-af9b-ee02e120707b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15ea81b7-9111-4f52-8732-e77b7393e5e3", "node_type": "1", "metadata": {}, "hash": "e53598d0497dfa3b3559b4070811d6f18af9d9c1d0a398d7de1c878f3452f14a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04b62962-b1e5-4a14-a2f0-fa61fd31e34c", "node_type": "1", "metadata": {}, "hash": "e0594daca7b19856658f51eae00724bdcca08161fc699562f193938479b5192b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can use the JavaScript `AsyncIterable` API directly, but both the JavaScript for-await-of syntax and the `observeIteration` adaptor are more convenient. Here,\nAlice uses the former, and then Bob uses the latter.", "mimetype": "text/plain", "start_char_idx": 11208, "end_char_idx": 11423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04b62962-b1e5-4a14-a2f0-fa61fd31e34c": {"__data__": {"id_": "04b62962-b1e5-4a14-a2f0-fa61fd31e34c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5ed37d2-39cf-49fd-af9b-ee02e120707b", "node_type": "1", "metadata": {}, "hash": "bd67fcb5a6cda70514a9a2085ad483427ce56049fbcf0d5887784ece50a3f0ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5", "node_type": "1", "metadata": {}, "hash": "1777dda3a6eb159b9656fb8c05e5b2fef514e701d2ceb82eeae7b2357948da44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Subscriber Alice consumes the iteration using the for-await-of loop. She can see\nthe non-final values and whether the iteration completes or fails. She can see a\nfailure reason, but the for-await-of syntax does not let her see the completion\nvalue 'done'. She can write code that only executes after the loop finishes, but", "mimetype": "text/plain", "start_char_idx": 11425, "end_char_idx": 11747, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5": {"__data__": {"id_": "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04b62962-b1e5-4a14-a2f0-fa61fd31e34c", "node_type": "1", "metadata": {}, "hash": "e0594daca7b19856658f51eae00724bdcca08161fc699562f193938479b5192b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8ab42d9-0f4a-47c8-a65b-48871f81eefb", "node_type": "1", "metadata": {}, "hash": "a0c7dd4ca5fc386cddf4c37537f75b7afb63ba21dc86d0e1798e9ed602112bc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "the code won\u2019t know what the completion value actually was \u201cdone\u201d, \u201ccompleted\u201d, or something else. This is a limitation of JavaScript's iteration, whether asynchronous or synchronous (as consumed by a for-of loop).", "mimetype": "text/plain", "start_char_idx": 11748, "end_char_idx": 11962, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8ab42d9-0f4a-47c8-a65b-48871f81eefb": {"__data__": {"id_": "a8ab42d9-0f4a-47c8-a65b-48871f81eefb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5", "node_type": "1", "metadata": {}, "hash": "1777dda3a6eb159b9656fb8c05e5b2fef514e701d2ceb82eeae7b2357948da44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868", "node_type": "1", "metadata": {}, "hash": "8b309675f6a96a991cbc8db085fd4a9948eb65a640c3eedd4af9aebaab9dd063", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst consume = async subscription => {\n  try {\n    for await (const val of subscription) {\n      console.log('non-final-value', val);\n    }\n    console.log('the iteration finished');\n  } catch (reason) {\n    console.log('the iteration failed', reason);\n  }\n};\nconsume(subscription);\n// Eventually prints:\n// non-final-value a\n// non-final-value b\n// the iteration finished\n```\n\nSubscriber Bob consumes using the `(observeIteration(asyncIterableP, iterationObserver)` adaptor.", "mimetype": "text/plain", "start_char_idx": 11964, "end_char_idx": 12446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868": {"__data__": {"id_": "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8ab42d9-0f4a-47c8-a65b-48871f81eefb", "node_type": "1", "metadata": {}, "hash": "a0c7dd4ca5fc386cddf4c37537f75b7afb63ba21dc86d0e1798e9ed602112bc3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b98f997-f211-43dd-b87b-92244eeb00ca", "node_type": "1", "metadata": {}, "hash": "e1894d5890be733497a09706618499a074265232f16e1d61e486fa56ddb8ea26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst observer = harden({\n  updateState: val => console.log('non-final-value', val),\n  finish: completion => console.log('finished', completion),\n  fail: reason => console.log('failed', reason)\n});\nobserveIteration(subscription, observer);\n// Eventually prints:\n// non-final-value a\n// non-final-value b\n// finished done\n```\n\n### Notifier Example", "mimetype": "text/plain", "start_char_idx": 12448, "end_char_idx": 12800, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b98f997-f211-43dd-b87b-92244eeb00ca": {"__data__": {"id_": "7b98f997-f211-43dd-b87b-92244eeb00ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868", "node_type": "1", "metadata": {}, "hash": "8b309675f6a96a991cbc8db085fd4a9948eb65a640c3eedd4af9aebaab9dd063", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33d4f2ee-7337-4688-b610-4acde81a7f45", "node_type": "1", "metadata": {}, "hash": "a28b989ae3fae40a3eb37fbc62c0ac391421fc4ea82334eda0d8ff6dbcfd7bd5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Notifier Example\n\nA `NotifierKit` is a lossy conveyor of non-final values, but does\nlosslessly convey termination. Let's say the subscription example above\nstarted with the following instead of `makeSubscriptionKit()`.\n\n```js\nconst { updater, notifier } = makeNotifierKit();\n```", "mimetype": "text/plain", "start_char_idx": 12780, "end_char_idx": 13062, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33d4f2ee-7337-4688-b610-4acde81a7f45": {"__data__": {"id_": "33d4f2ee-7337-4688-b610-4acde81a7f45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b98f997-f211-43dd-b87b-92244eeb00ca", "node_type": "1", "metadata": {}, "hash": "e1894d5890be733497a09706618499a074265232f16e1d61e486fa56ddb8ea26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f", "node_type": "1", "metadata": {}, "hash": "ca13f1f103ef1f7befbb257e3d9635e8bb6e389ba8751a62d826fb030839fa8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If we then renamed `publication` to `updater` and `subscription` to `notifier`\nin the rest of the example, the code would still be correct and work. However,\nwhen using a notifier, either Alice or Bob may have missed either or both of the\nnon-final values due to `NotifierKit`'s lossy nature.\n\n## Distributed Operation", "mimetype": "text/plain", "start_char_idx": 13064, "end_char_idx": 13382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f": {"__data__": {"id_": "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33d4f2ee-7337-4688-b610-4acde81a7f45", "node_type": "1", "metadata": {}, "hash": "a28b989ae3fae40a3eb37fbc62c0ac391421fc4ea82334eda0d8ff6dbcfd7bd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "767510d6-e55a-430d-a6d5-fe2f72b5bca2", "node_type": "1", "metadata": {}, "hash": "ba0bffe311f71a8e48e31d8ecaa082269626cb82996023c20439889608d0ae64", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Distributed Operation\n\nEither `makeNotifierKit()` or `makeSubscriptionKit()` can be used in a multicast\nmanner with good distributed systems properties, where there is only one\nproducing site but any number of consuming sites. The producer is not vulnerable\nto the consumers; they cannot cause the kit to malfunction or prevent the code\nproducing values from making progress. The consumers cannot cause each other to\nhang or miss values.", "mimetype": "text/plain", "start_char_idx": 13358, "end_char_idx": 13798, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "767510d6-e55a-430d-a6d5-fe2f72b5bca2": {"__data__": {"id_": "767510d6-e55a-430d-a6d5-fe2f72b5bca2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f", "node_type": "1", "metadata": {}, "hash": "ca13f1f103ef1f7befbb257e3d9635e8bb6e389ba8751a62d826fb030839fa8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f70a270f-ae51-48a0-8860-0d367c468e80", "node_type": "1", "metadata": {}, "hash": "5241eb60c3b4eb7f89e7acfedcd7e17c8ea0bdac600037121fb6a68114b62781", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For distributed operations, all the iteration values&mdash;non-final values,\nsuccessful completion value, failure reason&mdash;must be _Passable_, which means they're values that\ncan somehow be passed between [vats](/glossary/index#vat). The rest of this doc assumes all these\nvalues are Passable.", "mimetype": "text/plain", "start_char_idx": 13800, "end_char_idx": 14097, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f70a270f-ae51-48a0-8860-0d367c468e80": {"__data__": {"id_": "f70a270f-ae51-48a0-8860-0d367c468e80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "767510d6-e55a-430d-a6d5-fe2f72b5bca2", "node_type": "1", "metadata": {}, "hash": "ba0bffe311f71a8e48e31d8ecaa082269626cb82996023c20439889608d0ae64", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2052778-9914-4130-aa31-16dd7cf02b4f", "node_type": "1", "metadata": {}, "hash": "9a812cc125c50d832d7834021bfa16e37e51c43a91aa7ce70e789af6c200017e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `makeNotifierKit()` or `makeSubscriptionKit()` call makes the notifier/updater\nor publication/subscription pair on the producer's site. As a result, both the\n`iterationObserver` and the initial `asyncIterable` are on the producer's site. If\nProducer Paula sends Consumer Bob the `asyncIterable`, Bob receives a possibly\nremote reference to it. Producers and their Consumers can be remote from each\nother.", "mimetype": "text/plain", "start_char_idx": 14099, "end_char_idx": 14507, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2052778-9914-4130-aa31-16dd7cf02b4f": {"__data__": {"id_": "a2052778-9914-4130-aa31-16dd7cf02b4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f70a270f-ae51-48a0-8860-0d367c468e80", "node_type": "1", "metadata": {}, "hash": "5241eb60c3b4eb7f89e7acfedcd7e17c8ea0bdac600037121fb6a68114b62781", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d67e802-f4ba-49ac-9dd0-c910f2581e72", "node_type": "1", "metadata": {}, "hash": "24c524323d409db2d50b62c8aae5c694ee341ab99d51ad07c39c1b0cf7f77c25", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob's example code above is still correct if he uses this reference directly, since\n`observeIteration` only needs its first argument to be a reference of some sort to\nan `AsyncIterable` conveying `Passable` values. This reference may be a local\n`AsyncIterable`, a remote presence of an `AsyncIterable`, or a local or remote\npromise for an `AsyncIterable`. `observeIteration` only sends it eventual messages\nusing `E()` and so doesn't care about these differences.", "mimetype": "text/plain", "start_char_idx": 14509, "end_char_idx": 14972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d67e802-f4ba-49ac-9dd0-c910f2581e72": {"__data__": {"id_": "6d67e802-f4ba-49ac-9dd0-c910f2581e72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2052778-9914-4130-aa31-16dd7cf02b4f", "node_type": "1", "metadata": {}, "hash": "9a812cc125c50d832d7834021bfa16e37e51c43a91aa7ce70e789af6c200017e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3eb11363-6850-47c1-897f-0cbd81a0097a", "node_type": "1", "metadata": {}, "hash": "9dbe6a3c088e1d8ddcf7d71b75433c9d65bce11ccad8a8325237197ba61584bb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "However, Bob\u2019s code is sub-optimal. Its distributed systems properties are\nnot terrible, but Bob does better using `getSharableSubscriptionInternals()`\n(provided by `SubscriptionKit`). This lets Bob make a local `AsyncIterable` that\ncoordinates better with producer Paula's `IterationObserver`.", "mimetype": "text/plain", "start_char_idx": 14974, "end_char_idx": 15268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3eb11363-6850-47c1-897f-0cbd81a0097a": {"__data__": {"id_": "3eb11363-6850-47c1-897f-0cbd81a0097a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d67e802-f4ba-49ac-9dd0-c910f2581e72", "node_type": "1", "metadata": {}, "hash": "24c524323d409db2d50b62c8aae5c694ee341ab99d51ad07c39c1b0cf7f77c25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6015677-e4eb-441d-b9c0-a76e6adb5c85", "node_type": "1", "metadata": {}, "hash": "d8eec0b668c6c09afba1724eedf96715d78158b5ca8c9cd895bdff67015f2d6a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Subscriber Alice's code, located in the [Subscription Example section](#subscription-example) above, is less forgiving. She's using JavaScript's\nfor-await-of loop which requires a local `AsyncIterable`. It cannot handle a\nremote reference to an `AsyncIterable` at Paula's site. Alice has to make an\n`AsyncIterable` at her site by using `getSharableSubsciptionInternals()`. She can\nreplace her call to `consume(subscription)` with:\n\n```js\nimport { makeSubscription } from '@agoric/notifier';", "mimetype": "text/plain", "start_char_idx": 15270, "end_char_idx": 15760, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6015677-e4eb-441d-b9c0-a76e6adb5c85": {"__data__": {"id_": "f6015677-e4eb-441d-b9c0-a76e6adb5c85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3eb11363-6850-47c1-897f-0cbd81a0097a", "node_type": "1", "metadata": {}, "hash": "9dbe6a3c088e1d8ddcf7d71b75433c9d65bce11ccad8a8325237197ba61584bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a82138e-c263-4e38-b2d0-cea91d0f8ed0", "node_type": "1", "metadata": {}, "hash": "751a605cfc2a86a9986b1af333fae8d504b174909380f37deb8e998c97f102f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const localSubscription = makeSubscription(\n  E(subscription).getSharableSubsciptionInternals()\n);\nconsume(localSubscription);\n```\n\nThe code above uses a SubscriptionKit. NotifierKits have a similar pair of a\n`getSharableNotifierInternals()` method and a `makeNotifier`. However, this\ntechnique requires that Alice know what kind of a possibly remote `AsyncIterable`\nshe has, and she must have the required making function code locally available.", "mimetype": "text/plain", "start_char_idx": 15762, "end_char_idx": 16208, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a82138e-c263-4e38-b2d0-cea91d0f8ed0": {"__data__": {"id_": "1a82138e-c263-4e38-b2d0-cea91d0f8ed0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6015677-e4eb-441d-b9c0-a76e6adb5c85", "node_type": "1", "metadata": {}, "hash": "d8eec0b668c6c09afba1724eedf96715d78158b5ca8c9cd895bdff67015f2d6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67", "node_type": "1", "metadata": {}, "hash": "94f1ee86d870aa6fbf4988e0a10bffbdb8fb33a51b860816b070d139d6a9cdae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Alternatively, Alice can generically mirror any possibly remote `AsyncIterable` by\nmaking a new local pair and plugging them together with `observeIteration`.\n\n```js\nconst { publication: adapterPublication, subscription: adapterSubscription } =\n  makeSubscriptionKit();\nobserveIteration(subscription, adapterPublication);\nconsume(adapterSubscription);\n```", "mimetype": "text/plain", "start_char_idx": 16210, "end_char_idx": 16565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67": {"__data__": {"id_": "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a82138e-c263-4e38-b2d0-cea91d0f8ed0", "node_type": "1", "metadata": {}, "hash": "751a605cfc2a86a9986b1af333fae8d504b174909380f37deb8e998c97f102f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "270cb142-99b0-4936-bd4e-31035b27e5fb", "node_type": "1", "metadata": {}, "hash": "1ac35c1cd7a8a3e64d776e1a05fc3288e390d8c044abdc9ed05673891cab0d59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This works when subscription is a reference to a `AsyncIterable`. If Alice only\nneeds to consume in a lossy manner, she can use the `makeNotifierKit()` method instead, which\nstill works independently of what kind of `AsyncIterable` subscription is a\nreference to.\n\n## Summary", "mimetype": "text/plain", "start_char_idx": 16567, "end_char_idx": 16842, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "270cb142-99b0-4936-bd4e-31035b27e5fb": {"__data__": {"id_": "270cb142-99b0-4936-bd4e-31035b27e5fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67", "node_type": "1", "metadata": {}, "hash": "94f1ee86d870aa6fbf4988e0a10bffbdb8fb33a51b860816b070d139d6a9cdae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae784611-6a63-4c6c-bb30-f0ff6d51092c", "node_type": "1", "metadata": {}, "hash": "b08fe9656c85134f1301684b3d2d589d022411c24c1a97b37839096480b2049d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Summary\n\nData producers have to decide between lossless and lossy publication. If\nconsumers only care about the most recent state, then use `makeNotifierKit()`.\nThis is often appropriate when the iteration represents a changing quantity.\nIf you want to support consumers that need to see all values, then use `makeSubscriptionKit()`.", "mimetype": "text/plain", "start_char_idx": 16832, "end_char_idx": 17168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae784611-6a63-4c6c-bb30-f0ff6d51092c": {"__data__": {"id_": "ae784611-6a63-4c6c-bb30-f0ff6d51092c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_js-programming_notifiers.md", "node_type": "4", "metadata": {}, "hash": "50d466b29c19ce2dba582fd56a46489df212cf9c62fc1ef27e614734bd1ffad7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "270cb142-99b0-4936-bd4e-31035b27e5fb", "node_type": "1", "metadata": {}, "hash": "1ac35c1cd7a8a3e64d776e1a05fc3288e390d8c044abdc9ed05673891cab0d59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Consumers can choose different ways of processing the data. In all cases,\nthe publisher doesn't need to know the consumers, and the consumers can't\ninterfere with the producer or each other.", "mimetype": "text/plain", "start_char_idx": 17170, "end_char_idx": 17360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "011b5837-8aee-4d87-b94a-b647acd45385": {"__data__": {"id_": "011b5837-8aee-4d87-b94a-b647acd45385", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ad0180d-b25f-4272-96a6-3f2fb7274cfd", "node_type": "1", "metadata": {}, "hash": "b49d307e83ff5f0cc595930c55aac4baed0695fa182456f575048140478c21e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# How Orchestration Works\n\nOrchestration relies on protocols and mechanisms that allow blockchains to\ncommunicate and transact with each other securely and efficiently. The primary\nobjectives of Orchestration are:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ad0180d-b25f-4272-96a6-3f2fb7274cfd": {"__data__": {"id_": "1ad0180d-b25f-4272-96a6-3f2fb7274cfd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "011b5837-8aee-4d87-b94a-b647acd45385", "node_type": "1", "metadata": {}, "hash": "647dc2a84bfca2e735433eef892dddbf21ac85e10dd7afa99296398436c762ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffac14a7-ea09-48de-80ab-f0617964c5a7", "node_type": "1", "metadata": {}, "hash": "6b9d78146bde6069455e389868ee76b374eca55646115321aa45dd1e7c0dbf1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Interoperability:** Enabling different blockchain networks to interact and\n  transact with one another.\n- **Scalability:** Facilitating the collaboration of multiple blockchains\n  without compromising performance.\n- **Security:** Ensuring that cross-chain transactions are secure and\n  trustworthy.", "mimetype": "text/plain", "start_char_idx": 215, "end_char_idx": 517, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ffac14a7-ea09-48de-80ab-f0617964c5a7": {"__data__": {"id_": "ffac14a7-ea09-48de-80ab-f0617964c5a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ad0180d-b25f-4272-96a6-3f2fb7274cfd", "node_type": "1", "metadata": {}, "hash": "b49d307e83ff5f0cc595930c55aac4baed0695fa182456f575048140478c21e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "345e1fd8-c38f-4a61-83d3-1282912a23b7", "node_type": "1", "metadata": {}, "hash": "9ae3d3296fbd4764dbaa5f6b91529ec25929e9035b2960db4a6c3462e858b01a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To achieve these goals, several foundational technologies and protocols have\nbeen developed, with the [Inter-Blockchain Communication (IBC) protocol](https://ibcprotocol.org/) being\none of the most prominent.\n\n<br/>\n<img src=\"./assets/orch_contract_arch.svg\" width=\"100%\" />\n<br/>\n\n### Inter-Blockchain Communication (IBC)", "mimetype": "text/plain", "start_char_idx": 519, "end_char_idx": 841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "345e1fd8-c38f-4a61-83d3-1282912a23b7": {"__data__": {"id_": "345e1fd8-c38f-4a61-83d3-1282912a23b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffac14a7-ea09-48de-80ab-f0617964c5a7", "node_type": "1", "metadata": {}, "hash": "6b9d78146bde6069455e389868ee76b374eca55646115321aa45dd1e7c0dbf1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6c66c7b-ca57-4e63-a41e-46276de54517", "node_type": "1", "metadata": {}, "hash": "5c75bf9b11d62009b8cc54e11a450b3ec431ca3fdd15efc153dc1d649800cdd6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [Inter-Blockchain Communication (IBC) protocol](https://ibcprotocol.org/)\nis often compared to the TCP/IP protocol of the internet. Just as TCP/IP enables\ndifferent computer networks to communicate across the internet, IBC allows\nblockchains to communicate securely with each other.\n\n#### How IBC Works", "mimetype": "text/plain", "start_char_idx": 843, "end_char_idx": 1149, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6c66c7b-ca57-4e63-a41e-46276de54517": {"__data__": {"id_": "e6c66c7b-ca57-4e63-a41e-46276de54517", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "345e1fd8-c38f-4a61-83d3-1282912a23b7", "node_type": "1", "metadata": {}, "hash": "9ae3d3296fbd4764dbaa5f6b91529ec25929e9035b2960db4a6c3462e858b01a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5571f1ec-d1da-44a6-844b-6f8d27b9a58f", "node_type": "1", "metadata": {}, "hash": "789ac67a6f74c2a38cad99c85aafc4cd63ac0091226e275ea9d1a7895acd4dbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### How IBC Works\n\nIBC operates on a straightforward premise: by adhering to a common set\nof communication protocols, blockchains can securely transfer data and\ntokens between one another. Here's a high-level overview of how IBC\nachieves this:", "mimetype": "text/plain", "start_char_idx": 1131, "end_char_idx": 1375, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5571f1ec-d1da-44a6-844b-6f8d27b9a58f": {"__data__": {"id_": "5571f1ec-d1da-44a6-844b-6f8d27b9a58f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6c66c7b-ca57-4e63-a41e-46276de54517", "node_type": "1", "metadata": {}, "hash": "5c75bf9b11d62009b8cc54e11a450b3ec431ca3fdd15efc153dc1d649800cdd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea253eee-2cda-4e0b-acdf-f25f8be7956a", "node_type": "1", "metadata": {}, "hash": "2787bf088fd766344b4118def6a61f985033da46fb0b390bb0185fb4dc280cc2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Light Client Verification:** Each blockchain maintains a\n  [light client](https://github.com/cosmos/ibc-go/blob/34628eb0c1ca0ca9721c6e3923cf048e1172b8b0/docs/docs/03-light-clients/01-developer-guide/01-overview.md)\n  of the other blockchain. A light client is a simplified version of a\n  blockchain client that only retains enough information to verify\n  transactions and proofs, without needing to store the entire blockchain\n  history.\n- **Relayer:** A [relayer](https://github.com/cosmos/relayer) is an", "mimetype": "text/plain", "start_char_idx": 1377, "end_char_idx": 1886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea253eee-2cda-4e0b-acdf-f25f8be7956a": {"__data__": {"id_": "ea253eee-2cda-4e0b-acdf-f25f8be7956a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5571f1ec-d1da-44a6-844b-6f8d27b9a58f", "node_type": "1", "metadata": {}, "hash": "789ac67a6f74c2a38cad99c85aafc4cd63ac0091226e275ea9d1a7895acd4dbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc265ae4-4bc2-4f58-aa49-28aa0b46b705", "node_type": "1", "metadata": {}, "hash": "4f01cf69fc14d1529d610edde417e2d8573396e0be24690795186d824cf71765", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "off-chain process that listens for transactions on one blockchain and\n  relays them to another. The relayer facilitates communication between\n  blockchains but does not have any special permissions or abilities\u2014it\n  merely passes messages between chains.\n- **IBC Handshake:** Before two blockchains can communicate, they perform\n  a handshake, establishing a trusted channel between them. This involves\n  verifying each other's consensus state using light clients.", "mimetype": "text/plain", "start_char_idx": 1889, "end_char_idx": 2353, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc265ae4-4bc2-4f58-aa49-28aa0b46b705": {"__data__": {"id_": "bc265ae4-4bc2-4f58-aa49-28aa0b46b705", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea253eee-2cda-4e0b-acdf-f25f8be7956a", "node_type": "1", "metadata": {}, "hash": "2787bf088fd766344b4118def6a61f985033da46fb0b390bb0185fb4dc280cc2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1a17674-a4d3-4e6d-a8d4-418133264e1e", "node_type": "1", "metadata": {}, "hash": "94c59231ee5db28216a3adcd95c270c649c4ba853b59af63dc3aaa6914111ee3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Packet Transfer:** Once the connection is established, IBC allows\n  the transfer of data packets. These packets can represent tokens, smart\n  contract commands, or other data. The receiving blockchain uses light\n  client verification to ensure the data is valid and hasn\u2019t been tampered\n  with.\n- **Finality and Acknowledgement:** After a packet is successfully\n  processed by the receiving blockchain, an acknowledgment is sent back\n  to the originating blockchain, confirming the transaction's completion.", "mimetype": "text/plain", "start_char_idx": 2354, "end_char_idx": 2865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1a17674-a4d3-4e6d-a8d4-418133264e1e": {"__data__": {"id_": "b1a17674-a4d3-4e6d-a8d4-418133264e1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc265ae4-4bc2-4f58-aa49-28aa0b46b705", "node_type": "1", "metadata": {}, "hash": "4f01cf69fc14d1529d610edde417e2d8573396e0be24690795186d824cf71765", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc5e3470-f42a-4996-abb2-37ebf7285a0a", "node_type": "1", "metadata": {}, "hash": "47c7980cbecbd8588ba6abf62823656001a4b82d219f9f4716b022dde72ab171", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The modularity of the IBC protocol allows it to be adapted for various\nuse cases and blockchain types, making it a versatile tool for blockchain\norchestration.\n\n### Interchain Accounts (ICA)", "mimetype": "text/plain", "start_char_idx": 2867, "end_char_idx": 3057, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc5e3470-f42a-4996-abb2-37ebf7285a0a": {"__data__": {"id_": "dc5e3470-f42a-4996-abb2-37ebf7285a0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1a17674-a4d3-4e6d-a8d4-418133264e1e", "node_type": "1", "metadata": {}, "hash": "94c59231ee5db28216a3adcd95c270c649c4ba853b59af63dc3aaa6914111ee3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70e3a136-949a-48b6-a5e9-d8c78212b832", "node_type": "1", "metadata": {}, "hash": "c7f5f18ca5460aae37fcb92f08db655bf250fe137c00a8015064efaca0ddc24b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Interchain Accounts (ICA)\n\n[Interchain Accounts (ICA)](https://github.com/cosmos/ibc/blob/main/spec/app/ics-027-interchain-accounts/README.md)\nis a feature built on top of IBC that allows one blockchain (the\ncontroller chain) to control an account on another blockchain (the\nhost chain). This enables seamless cross-chain operations and automation,\nallowing for complex interactions between blockchains.\n\n#### How ICA Works", "mimetype": "text/plain", "start_char_idx": 3028, "end_char_idx": 3455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70e3a136-949a-48b6-a5e9-d8c78212b832": {"__data__": {"id_": "70e3a136-949a-48b6-a5e9-d8c78212b832", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc5e3470-f42a-4996-abb2-37ebf7285a0a", "node_type": "1", "metadata": {}, "hash": "47c7980cbecbd8588ba6abf62823656001a4b82d219f9f4716b022dde72ab171", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85eaacf3-e49f-4397-a11f-9b29eea94167", "node_type": "1", "metadata": {}, "hash": "ee4d18ab11fa8fb38547c3e0093e3296278b242d8f7e7768096252f2b8e0d788", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### How ICA Works\n\nThe ICA protocol enables a controller chain to request the creation of an\naccount on a host chain. The host chain creates the account and delegates\ncontrol of it to the controller chain.", "mimetype": "text/plain", "start_char_idx": 3437, "end_char_idx": 3643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85eaacf3-e49f-4397-a11f-9b29eea94167": {"__data__": {"id_": "85eaacf3-e49f-4397-a11f-9b29eea94167", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70e3a136-949a-48b6-a5e9-d8c78212b832", "node_type": "1", "metadata": {}, "hash": "c7f5f18ca5460aae37fcb92f08db655bf250fe137c00a8015064efaca0ddc24b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5", "node_type": "1", "metadata": {}, "hash": "d29294e0b51b7c4727098378f5b25cbf310ce74d0039e91f7977c2f1b69b727e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Account Creation:** The controller chain (e.g., Agoric) requests an\n  account on the host chain (e.g., Osmosis) using the IBC protocol. The\n  host chain then creates the account and delegates control to the\n  controller chain.\n- **Reification in Agoric:** When the controller chain is Agoric, control\n  of the account and Chain objects within its Orchestration\n  API are reified as JavaScript objects. For example,\n  ```\n  const chain = orch.getChain('osmosis')\n  ```", "mimetype": "text/plain", "start_char_idx": 3645, "end_char_idx": 4116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5": {"__data__": {"id_": "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85eaacf3-e49f-4397-a11f-9b29eea94167", "node_type": "1", "metadata": {}, "hash": "ee4d18ab11fa8fb38547c3e0093e3296278b242d8f7e7768096252f2b8e0d788", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fa79cff-56b7-4b47-afb7-f91b1802296d", "node_type": "1", "metadata": {}, "hash": "dd0ce776ad6523dc675bf32817ae4228ec8399e9d918fb7019917b953793a0f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n  creates an object that represents the host chain Osmosis. A call to\n  `chain.makeAccount()` results in the Agoric chain acting as the controller\n  and requesting the creation of an Interchain Account (ICA) on the Osmosis\n  chain. This operation produces an `OrchestrationAccount` object, which\n  provides access to control the ICA.\n- **Access Control:** Whoever has access to the JavaScript object can\n  control the account. In Agoric's architecture, access to this object is", "mimetype": "text/plain", "start_char_idx": 4113, "end_char_idx": 4594, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1fa79cff-56b7-4b47-afb7-f91b1802296d": {"__data__": {"id_": "1fa79cff-56b7-4b47-afb7-f91b1802296d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5", "node_type": "1", "metadata": {}, "hash": "d29294e0b51b7c4727098378f5b25cbf310ce74d0039e91f7977c2f1b69b727e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e070661-0f88-4293-8cb9-2a79cbc9da87", "node_type": "1", "metadata": {}, "hash": "06a219650e68717490c0c57b4b75f9205455aba905097e1f2308dc7599756dfa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "only passed to authorized parties. In particular, the party that called\n  `chain.makeAccount()` gets access to it, ensuring secure access\n  delegation.\n- **Transaction Execution:** The controller chain (e.g., Agoric) can now\n  send IBC messages to execute transactions on the host chain (e.g., Osmosis)\n  as if it were a local user. This includes transferring tokens, interacting\n  with smart contracts, and performing other blockchain operations.", "mimetype": "text/plain", "start_char_idx": 4597, "end_char_idx": 5044, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e070661-0f88-4293-8cb9-2a79cbc9da87": {"__data__": {"id_": "7e070661-0f88-4293-8cb9-2a79cbc9da87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fa79cff-56b7-4b47-afb7-f91b1802296d", "node_type": "1", "metadata": {}, "hash": "dd0ce776ad6523dc675bf32817ae4228ec8399e9d918fb7019917b953793a0f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d03a356d-6ea4-4a14-9cf5-71b8664f7f55", "node_type": "1", "metadata": {}, "hash": "48cd616dfa241dc556fd77cc09242e79c92ced9d9bca4414766cc28490dcab3f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Automation:** Using ICA, the controller chain can automate operations\n  on the host chain. For instance, Agoric can programmatically manage assets\n  on another chain, automating workflows that span multiple blockchains.", "mimetype": "text/plain", "start_char_idx": 5045, "end_char_idx": 5268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d03a356d-6ea4-4a14-9cf5-71b8664f7f55": {"__data__": {"id_": "d03a356d-6ea4-4a14-9cf5-71b8664f7f55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e070661-0f88-4293-8cb9-2a79cbc9da87", "node_type": "1", "metadata": {}, "hash": "06a219650e68717490c0c57b4b75f9205455aba905097e1f2308dc7599756dfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f29ce82a-6c72-47ac-994f-9963b6e300da", "node_type": "1", "metadata": {}, "hash": "b770654837b5a31cf30aeacfd87d2b91f40b0379635a521edee01543dbc279d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Interchain Queries (ICQ)", "mimetype": "text/plain", "start_char_idx": 5270, "end_char_idx": 5298, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f29ce82a-6c72-47ac-994f-9963b6e300da": {"__data__": {"id_": "f29ce82a-6c72-47ac-994f-9963b6e300da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d03a356d-6ea4-4a14-9cf5-71b8664f7f55", "node_type": "1", "metadata": {}, "hash": "48cd616dfa241dc556fd77cc09242e79c92ced9d9bca4414766cc28490dcab3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4", "node_type": "1", "metadata": {}, "hash": "64f6bddde4e50786f2b4ef467969b8d48568303834345dbc1dd0a3ca6257238e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Interchain Queries (ICQ) is another powerful feature that enables a contract on\none blockchain to query the state of an account another blockchain in a\ntrustless manner. For example, a DeFi application on Agoric could use ICQ to\nfetch the balance of an account from other chains like Osmosis or Cosmos Hub\nwithout the need for autorization, enabling more sophisticated cross-chain\ntrading interactions. ICQ enhances the interoperability of", "mimetype": "text/plain", "start_char_idx": 5300, "end_char_idx": 5739, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4": {"__data__": {"id_": "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f29ce82a-6c72-47ac-994f-9963b6e300da", "node_type": "1", "metadata": {}, "hash": "b770654837b5a31cf30aeacfd87d2b91f40b0379635a521edee01543dbc279d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5910f95e-d33a-40e0-aeae-77f25325b151", "node_type": "1", "metadata": {}, "hash": "7081cd331a0bb31d7e2c28742d4c6c95064ad20db4dc80878ce946c86e3affec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "blockchain networks by facilitating secure and efficient data sharing between\nchains, opening up new possibilities for cross-chain applications and services.\nBelow is an example of an ICQ invocation to get balance of a remote account on\n`osmosis`:", "mimetype": "text/plain", "start_char_idx": 5740, "end_char_idx": 5987, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5910f95e-d33a-40e0-aeae-77f25325b151": {"__data__": {"id_": "5910f95e-d33a-40e0-aeae-77f25325b151", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4", "node_type": "1", "metadata": {}, "hash": "64f6bddde4e50786f2b4ef467969b8d48568303834345dbc1dd0a3ca6257238e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "393f510a-165a-4748-9714-a0a67873ecdc", "node_type": "1", "metadata": {}, "hash": "d8a6f18bb92d69c461f3b5fe43c6eac2069cbb6a4b18bd8710c995be15af783d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst remoteChainBalance = await remoteAccount.getBalance('uosmo');\n```\n\nWhile ICA is a cross-chain write, ICQ is a cross-chain read.\n\n### Why Agoric's Approach Stands Out", "mimetype": "text/plain", "start_char_idx": 5989, "end_char_idx": 6166, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "393f510a-165a-4748-9714-a0a67873ecdc": {"__data__": {"id_": "393f510a-165a-4748-9714-a0a67873ecdc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5910f95e-d33a-40e0-aeae-77f25325b151", "node_type": "1", "metadata": {}, "hash": "7081cd331a0bb31d7e2c28742d4c6c95064ad20db4dc80878ce946c86e3affec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7ea2337-f929-4368-b8ff-44d3eb8f76fe", "node_type": "1", "metadata": {}, "hash": "b8b48f947c3e3e86d0de0a132a3f28076567683cf306aa260c29ff0046456204", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Agoric's unique programming model, which is already distributed and\nasynchronous, makes it particularly well-suited for Interchain Accounts and\nInterchain Queries. When contracts on Agoric interact, the system is designed\nto handle cases where the other contract may reside on a remote machine or\nanother blockchain. This inherent architecture allows Agoric to seamlessly\ncontrol and manage Interchain Accounts, further enhancing the Orchestration\ncapabilities.", "mimetype": "text/plain", "start_char_idx": 6168, "end_char_idx": 6629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7ea2337-f929-4368-b8ff-44d3eb8f76fe": {"__data__": {"id_": "f7ea2337-f929-4368-b8ff-44d3eb8f76fe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_how-orch-works.md", "node_type": "4", "metadata": {}, "hash": "a32beb939c8766187521f9f0966e55fd9e2553e369fa9a7c77038a7b8b0a9ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "393f510a-165a-4748-9714-a0a67873ecdc", "node_type": "1", "metadata": {}, "hash": "d8a6f18bb92d69c461f3b5fe43c6eac2069cbb6a4b18bd8710c995be15af783d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "By leveraging ICA and ICQ, Orchestration becomes more flexible and\npowerful, enabling direct, programmable interactions between blockchains. This\nunlocks a wide range of possibilities, from decentralized finance (DeFi) to\nsupply chain management and beyond.", "mimetype": "text/plain", "start_char_idx": 6631, "end_char_idx": 6888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "839f1e70-2978-4d82-82f2-ce298a2022d9": {"__data__": {"id_": "839f1e70-2978-4d82-82f2-ce298a2022d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee448e97-2b39-4237-a547-6e0270bdb9fd", "node_type": "1", "metadata": {}, "hash": "23c9435d9132b8d239d0d4fffa758b38c3475243265cea819f84db91ededa760", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# What is Agoric Orchestration?\n\nAgoric\u2019s Orchestration capability allows developers to easily build cross-chain interactions into existing applications or to create novel cross-chain-focused products.\n\nThe Agoric Orchestration API sits on top of Agoric\u2019s novel VM that provides three key elements that make multichain applications possible:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee448e97-2b39-4237-a547-6e0270bdb9fd": {"__data__": {"id_": "ee448e97-2b39-4237-a547-6e0270bdb9fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "839f1e70-2978-4d82-82f2-ce298a2022d9", "node_type": "1", "metadata": {}, "hash": "d191d3e9b47a88e1a72f294342f69d7326cb2e6ab176c4c9db733ba3c09787fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a202496-f961-4bba-95eb-92cc84f090df", "node_type": "1", "metadata": {}, "hash": "e52222aaea9107c6a076090310cc613949d3dd4e2d65572045956ea741f8ffb2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Remote account control and transfer**: Use the Orchestration APIs to easily create accounts on remote chains, transfer assets, and invoke contracts. Your Agoric contract orchestrates all behavior directly.\n- **Multiblock execution with `async` and `await`**: Agoric applications communicate asynchronously and await responses which may come in the same block or many blocks (or weeks!) later. Contracts simply continue executing when the response arrives.", "mimetype": "text/plain", "start_char_idx": 343, "end_char_idx": 802, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a202496-f961-4bba-95eb-92cc84f090df": {"__data__": {"id_": "2a202496-f961-4bba-95eb-92cc84f090df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee448e97-2b39-4237-a547-6e0270bdb9fd", "node_type": "1", "metadata": {}, "hash": "23c9435d9132b8d239d0d4fffa758b38c3475243265cea819f84db91ededa760", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d6a59a1-e3de-49b3-9c3c-26dc10621ada", "node_type": "1", "metadata": {}, "hash": "48c664883d871ffe9eb9a45edc2d8ac3d1843ade9b16e2c957ed28afcb9a3305", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **On-chain Timers**: Contracts can set timers for regular execution which makes executing common activities like subscriptions easy.", "mimetype": "text/plain", "start_char_idx": 803, "end_char_idx": 937, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8d6a59a1-e3de-49b3-9c3c-26dc10621ada": {"__data__": {"id_": "8d6a59a1-e3de-49b3-9c3c-26dc10621ada", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a202496-f961-4bba-95eb-92cc84f090df", "node_type": "1", "metadata": {}, "hash": "e52222aaea9107c6a076090310cc613949d3dd4e2d65572045956ea741f8ffb2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f3c8af9-3520-464b-80fc-ff2fbdc200a7", "node_type": "1", "metadata": {}, "hash": "ad57c0f729c7669466299050cd724d3b72b01cb26b6bd4f6f7688e4d34da41c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Agoric\u2019s Orchestration APIs simplify controlling accounts on remote chains, moving assets, and using capabilities on any chain the API reaches.\n\n<br/>\n<img src=\"./assets/chains.png\" width=\"100%\" />\n<br/>\n\n## Orchestration Overview", "mimetype": "text/plain", "start_char_idx": 939, "end_char_idx": 1169, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f3c8af9-3520-464b-80fc-ff2fbdc200a7": {"__data__": {"id_": "7f3c8af9-3520-464b-80fc-ff2fbdc200a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d6a59a1-e3de-49b3-9c3c-26dc10621ada", "node_type": "1", "metadata": {}, "hash": "48c664883d871ffe9eb9a45edc2d8ac3d1843ade9b16e2c957ed28afcb9a3305", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2107db0e-07a9-47bf-b46f-dd7b6ad96da3", "node_type": "1", "metadata": {}, "hash": "34bc5595384780ff990790c11c577366086926c2d026a5c7d5118c07bd6dfa28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Orchestration Overview\n\nAgoric's Orchestration API is a tool to help developers build seamless applications out of disparate interoperable chains and services. This composability allows for the development of user-centric applications that leverage the unique strengths of different blockchain ecosystems.", "mimetype": "text/plain", "start_char_idx": 1144, "end_char_idx": 1452, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2107db0e-07a9-47bf-b46f-dd7b6ad96da3": {"__data__": {"id_": "2107db0e-07a9-47bf-b46f-dd7b6ad96da3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f3c8af9-3520-464b-80fc-ff2fbdc200a7", "node_type": "1", "metadata": {}, "hash": "ad57c0f729c7669466299050cd724d3b72b01cb26b6bd4f6f7688e4d34da41c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "221ef628-20ba-47b7-af26-f186056671b1", "node_type": "1", "metadata": {}, "hash": "3434c1972d8553dcc0cb3abe1b69b12258b1d47beb35b8856df5a103a795c091", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Agoric Orchestration API simplifies interactions between multiple networks, particularly those using the [Inter-Blockchain Communication (IBC)](/glossary/#ibc) protocol within Cosmos. The API acts as an abstraction layer, streamlining multi-step processes.", "mimetype": "text/plain", "start_char_idx": 1454, "end_char_idx": 1714, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "221ef628-20ba-47b7-af26-f186056671b1": {"__data__": {"id_": "221ef628-20ba-47b7-af26-f186056671b1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2107db0e-07a9-47bf-b46f-dd7b6ad96da3", "node_type": "1", "metadata": {}, "hash": "34bc5595384780ff990790c11c577366086926c2d026a5c7d5118c07bd6dfa28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b8748f2-72ea-454f-9383-8b0837082fda", "node_type": "1", "metadata": {}, "hash": "b0869e4a98cafad7f5e4a1a1583b5791b8e8e8cf2f5220085f8434db9d189640", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Orchestration integrates with existing Agoric components ([SwingSet](/guides/platform/#swingset), Cosmos modules) and introduces vat-orchestration. This [vat](/glossary/#vat) manages Inter-Chain Account (ICA) identities and connections to host chains, ensuring proper transaction authorization.", "mimetype": "text/plain", "start_char_idx": 1716, "end_char_idx": 2010, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b8748f2-72ea-454f-9383-8b0837082fda": {"__data__": {"id_": "1b8748f2-72ea-454f-9383-8b0837082fda", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "221ef628-20ba-47b7-af26-f186056671b1", "node_type": "1", "metadata": {}, "hash": "3434c1972d8553dcc0cb3abe1b69b12258b1d47beb35b8856df5a103a795c091", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e", "node_type": "1", "metadata": {}, "hash": "fe23e551d8aa40c24c6915a9cf515d0682183ada05a94bb891b7283631b0aa5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Orchestration API handles asynchronous tasks and complex workflows, including those spanning multiple chains. This empowers smart contracts for actions like inter-chain staking and multi-hop transfers, facilitated by notifications from the transfer vat and IBC middleware updates. Orchestration simplifies complex cross-chain interactions within a secure and user-controlled environment on the Agoric platform.\n\n## Introduction to Orchestration API Flow", "mimetype": "text/plain", "start_char_idx": 2012, "end_char_idx": 2469, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e": {"__data__": {"id_": "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b8748f2-72ea-454f-9383-8b0837082fda", "node_type": "1", "metadata": {}, "hash": "b0869e4a98cafad7f5e4a1a1583b5791b8e8e8cf2f5220085f8434db9d189640", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0249167-a2c0-47d1-af2e-7d704c70cb49", "node_type": "1", "metadata": {}, "hash": "d016b2f3aaa90ef402ecd6843e116ca76b2556b4ae96f3c6bce72a1ed2d533f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following sequence diagram provides a comprehensive overview of the Orchestration process within the Agoric platform. This example illustrates the interaction between various components, highlighting how the Orchestration library (`OrchLib`) facilitates cross-chain operations. This is a good first example to understand the flow of the Orchestration API, showing the steps involved in creating and managing cross-chain transactions.", "mimetype": "text/plain", "start_char_idx": 2471, "end_char_idx": 2908, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0249167-a2c0-47d1-af2e-7d704c70cb49": {"__data__": {"id_": "c0249167-a2c0-47d1-af2e-7d704c70cb49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_index.md", "node_type": "4", "metadata": {}, "hash": "148a0908fbfbd0ec93abf1ce73cf12982d0c50aa0f91e07e321d1b7a0d1c4411", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e", "node_type": "1", "metadata": {}, "hash": "fe23e551d8aa40c24c6915a9cf515d0682183ada05a94bb891b7283631b0aa5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<br/>\n<img src=\"/reference/assets/sequence-diagrams/orchestration-workflow-1.svg\" width=\"100%\" />\n<br/>", "mimetype": "text/plain", "start_char_idx": 2910, "end_char_idx": 3013, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1a875f1-4c1e-480d-a52b-1171a12010cd": {"__data__": {"id_": "f1a875f1-4c1e-480d-a52b-1171a12010cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d77b98ef-f772-447b-868d-d19981019a8b", "node_type": "1", "metadata": {}, "hash": "8ca4fde963541c6f37e2b5764693f136ccf6b440866143766c4f3178f02dea0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Orchestration Key Concepts and APIs\n\nThis document provides an overview of the fundamental concepts involved in building Orchestration smart contracts,\nfocusing on Orchestrator Interface, Orchestration Accounts, and ChainHub.\n\n## Orchestrator Interface\n\nThe [`Orchestrator`](https://agoric-sdk.pages.dev/interfaces/_agoric_orchestration.Orchestrator) interface provides a\nset of high-level methods to manage and interact with local and remote chains. Below are the primary methods:\n\n### Access Chain Object", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 508, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d77b98ef-f772-447b-868d-d19981019a8b": {"__data__": {"id_": "d77b98ef-f772-447b-868d-d19981019a8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1a875f1-4c1e-480d-a52b-1171a12010cd", "node_type": "1", "metadata": {}, "hash": "9e98ce4327fbe3c820f1d471242d7070da816c03ae431efa2498de3632dcfd34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ade8609-2881-42c4-bed3-75ca043abcf2", "node_type": "1", "metadata": {}, "hash": "28343b895754d3d35cb45a4a90decda1d337575070b866c3e4ace494538d1fec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Access Chain Object\n\n- `getChain` retrieves a chain object for the given `chainName` to get access to chain-specific methods. See [getChain](https://agoric-sdk.pages.dev/interfaces/_agoric_orchestration.Orchestrator#getChain).\n\n```js\nconst chain = await orchestrator.getChain('chainName');\n```\n\n### Brand Utility Functions", "mimetype": "text/plain", "start_char_idx": 485, "end_char_idx": 811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ade8609-2881-42c4-bed3-75ca043abcf2": {"__data__": {"id_": "6ade8609-2881-42c4-bed3-75ca043abcf2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d77b98ef-f772-447b-868d-d19981019a8b", "node_type": "1", "metadata": {}, "hash": "8ca4fde963541c6f37e2b5764693f136ccf6b440866143766c4f3178f02dea0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0151542a-1764-466f-9a6b-aa9e29437b8a", "node_type": "1", "metadata": {}, "hash": "3f44a1b03b1233accdb1fa1a041bc6e5da32ff132bf0328bc0e1c09891e2152f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Brand Utility Functions\n\n- `getBrandInfo` returns information about a `denom`, including the equivalent local Brand, the chain where the denom is\n  held, and the chain that issues the corresponding asset. See [getBrandInfo](https://agoric-sdk.pages.dev/interfaces/_agoric_orchestration.Orchestrator#getBrandInfo).\n\n```js\nconst brandInfo = orchestrator.getBrandInfo('denom');\n```", "mimetype": "text/plain", "start_char_idx": 784, "end_char_idx": 1166, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0151542a-1764-466f-9a6b-aa9e29437b8a": {"__data__": {"id_": "0151542a-1764-466f-9a6b-aa9e29437b8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ade8609-2881-42c4-bed3-75ca043abcf2", "node_type": "1", "metadata": {}, "hash": "28343b895754d3d35cb45a4a90decda1d337575070b866c3e4ace494538d1fec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5be49130-85e4-44bf-9052-a90c28893991", "node_type": "1", "metadata": {}, "hash": "a568bc21d2579feec4eb4076ce90994f976fb758b751d18ffcb8bd8b2e3646a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `asAmount` converts a denom amount to an `Amount` with a brand. See [asAmount](https://agoric-sdk.pages.dev/interfaces/_agoric_orchestration.Orchestrator#asAmount).\n\n```js\nconst amount = orchestrator.asAmount({ denom: 'uatom', value: 1000n });\n```\n\n## Orchestration Account", "mimetype": "text/plain", "start_char_idx": 1168, "end_char_idx": 1443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5be49130-85e4-44bf-9052-a90c28893991": {"__data__": {"id_": "5be49130-85e4-44bf-9052-a90c28893991", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0151542a-1764-466f-9a6b-aa9e29437b8a", "node_type": "1", "metadata": {}, "hash": "3f44a1b03b1233accdb1fa1a041bc6e5da32ff132bf0328bc0e1c09891e2152f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f0ffefa-ef1c-499e-a176-86998ae8449d", "node_type": "1", "metadata": {}, "hash": "ea67b46c6299a4b14f2a5d6919c96037c230a3db9a0b29600711378c5176ea6e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Orchestration accounts are a key concept in the Agoric Orchestration API, represented by the [`OrchestrationAccountI`](https://agoric-sdk.pages.dev/interfaces/_agoric_orchestration.OrchestrationAccountI)\ninterface. These accounts provide high-level operations for managing accounts on remote chains, allowing seamless\ninteraction and management of interchain accounts. The Orchestration accounts abstract the complexity of interchain\ninteractions, providing a unified and simplified interface for developers.", "mimetype": "text/plain", "start_char_idx": 1445, "end_char_idx": 1953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f0ffefa-ef1c-499e-a176-86998ae8449d": {"__data__": {"id_": "2f0ffefa-ef1c-499e-a176-86998ae8449d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5be49130-85e4-44bf-9052-a90c28893991", "node_type": "1", "metadata": {}, "hash": "a568bc21d2579feec4eb4076ce90994f976fb758b751d18ffcb8bd8b2e3646a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3119148a-24b3-4b2d-a564-9cdd0bbf88d8", "node_type": "1", "metadata": {}, "hash": "bc4cea7fab5bc1a88baec61821f96fa984b7454f3ac4a880688692faf0419ff9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Account Creation\n\n- `makeAccount` (for a chain object) creates a new account on local and/or remote chain as below.\n\n```js\nconst [agoric, remoteChain] = await Promise.all([\n  orch.getChain('agoric'),\n  orch.getChain(chainName)\n]);\nconst [localAccount, remoteAccount] = await Promise.all([\n  agoric.makeAccount(),\n  remoteChain.makeAccount()\n]);\n```\n\n### Address Management\n\n- `getAddress` retrieves the address of the account on the remote chain.", "mimetype": "text/plain", "start_char_idx": 1955, "end_char_idx": 2405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3119148a-24b3-4b2d-a564-9cdd0bbf88d8": {"__data__": {"id_": "3119148a-24b3-4b2d-a564-9cdd0bbf88d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f0ffefa-ef1c-499e-a176-86998ae8449d", "node_type": "1", "metadata": {}, "hash": "ea67b46c6299a4b14f2a5d6919c96037c230a3db9a0b29600711378c5176ea6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e33d199-cbdb-4af0-804d-bef3d2122616", "node_type": "1", "metadata": {}, "hash": "645faa1af13add1aa180ea733a466b1db38e99c880564dee6ccf61dc41853e76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst address = await orchestrationAccount.getAddress();\n```\n\n### Balance Management\n\n- `getBalances` returns an array of amounts for every balance in the account.\n- `getBalance` retrieves the balance of a specific denom for the account.\n\n```js\nconst balances = await orchestrationAccount.getBalances();\nconst balance = await orchestrationAccount.getBalance('uatom');\n```\n\n### Funds Transfer", "mimetype": "text/plain", "start_char_idx": 2407, "end_char_idx": 2804, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e33d199-cbdb-4af0-804d-bef3d2122616": {"__data__": {"id_": "0e33d199-cbdb-4af0-804d-bef3d2122616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3119148a-24b3-4b2d-a564-9cdd0bbf88d8", "node_type": "1", "metadata": {}, "hash": "bc4cea7fab5bc1a88baec61821f96fa984b7454f3ac4a880688692faf0419ff9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8157d4b5-d011-4503-9f4a-e24d7069d7be", "node_type": "1", "metadata": {}, "hash": "58827d3d73686c34996ecb1831668f7a823fed2b723f728ba250edf7c65917a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Funds Transfer\n\n- `send` transfers an amount to another account on the same chain.\n- `transfer` transfers an amount to another account, typically on another chain.\n- `transferSteps` transfers an amount in multiple steps, handling complex transfer paths.\n- `deposit` deposits payment from Zoe to the account. For remote accounts, an IBC Transfer will be executed to transfer\n  funds there.", "mimetype": "text/plain", "start_char_idx": 2786, "end_char_idx": 3178, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8157d4b5-d011-4503-9f4a-e24d7069d7be": {"__data__": {"id_": "8157d4b5-d011-4503-9f4a-e24d7069d7be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e33d199-cbdb-4af0-804d-bef3d2122616", "node_type": "1", "metadata": {}, "hash": "645faa1af13add1aa180ea733a466b1db38e99c880564dee6ccf61dc41853e76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0eaee26e-bdf5-4845-9e47-73fea7271068", "node_type": "1", "metadata": {}, "hash": "fa5c0c4157e25c31eb7155b18cfc39aac47949ed8147f2b054f5d382a499f5c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nawait orchestrationAccount.send(receiverAddress, amount);\nawait orchestrationAccount.transfer(amount, destinationAddress);\nawait orchestrationAccount.transferSteps(amount, transferMsg);\nawait orchestrationAccount.deposit(payment);\n```\n\n## ChainHub", "mimetype": "text/plain", "start_char_idx": 3180, "end_char_idx": 3433, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0eaee26e-bdf5-4845-9e47-73fea7271068": {"__data__": {"id_": "0eaee26e-bdf5-4845-9e47-73fea7271068", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8157d4b5-d011-4503-9f4a-e24d7069d7be", "node_type": "1", "metadata": {}, "hash": "58827d3d73686c34996ecb1831668f7a823fed2b723f728ba250edf7c65917a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e7d8bd9-dbe1-4685-9f8d-967897745cba", "node_type": "1", "metadata": {}, "hash": "c51a825d027e946249d9bc10a0e0ce3fa943f157228b4a0dc32067087a3330f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ChainHub is a centralized registry of chains, connections, and denoms that simplifies accessing and interacting with\nmultiple chains, providing a unified interface for the Orchestration logic to manage cross-chain operations effectively.\nA chainHub instance can be created using a call to `makeChainHub` that makes a new ChainHub in the zone (or in the heap\nif no [zone](/glossary/#zone) is provided). The resulting object is an [Exo](/glossary/#exo) singleton. It has no", "mimetype": "text/plain", "start_char_idx": 3435, "end_char_idx": 3906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e7d8bd9-dbe1-4685-9f8d-967897745cba": {"__data__": {"id_": "9e7d8bd9-dbe1-4685-9f8d-967897745cba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0eaee26e-bdf5-4845-9e47-73fea7271068", "node_type": "1", "metadata": {}, "hash": "fa5c0c4157e25c31eb7155b18cfc39aac47949ed8147f2b054f5d382a499f5c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca1c392f-694d-4974-960f-9d623f0e11ec", "node_type": "1", "metadata": {}, "hash": "717d610e1ea22d6d9808bfb76a925016c3319001bd25b55da77a02569568d384", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "precious state. Its only state is a cache of queries to `agoricNames` and the info provided in registration calls. When\nyou need a newer version you can simply make a hub and repeat the registrations. ChainHub allows dynamic registration\nand use of chain and connection information using the following APIs:", "mimetype": "text/plain", "start_char_idx": 3907, "end_char_idx": 4214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca1c392f-694d-4974-960f-9d623f0e11ec": {"__data__": {"id_": "ca1c392f-694d-4974-960f-9d623f0e11ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e7d8bd9-dbe1-4685-9f8d-967897745cba", "node_type": "1", "metadata": {}, "hash": "c51a825d027e946249d9bc10a0e0ce3fa943f157228b4a0dc32067087a3330f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cef81d03-82e4-4f8b-8415-067190ed2b21", "node_type": "1", "metadata": {}, "hash": "7f38449c34ad7384476ef52274ec1565fe68200719ced9d4259d4092168c0c41", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Registration APIs\n\n- `registerChain` register a new chain with `chainHub`. The name will override a name in well-known chain names.\n- `registerConnection` registers a connections between two given chain IDs.\n- `registerAsset` registers an asset that may be held on a chain other than the issuing chain. Both corresponding chains\n  should already be registered before this call.\n\n### Information Retrieval", "mimetype": "text/plain", "start_char_idx": 4216, "end_char_idx": 4624, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cef81d03-82e4-4f8b-8415-067190ed2b21": {"__data__": {"id_": "cef81d03-82e4-4f8b-8415-067190ed2b21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca1c392f-694d-4974-960f-9d623f0e11ec", "node_type": "1", "metadata": {}, "hash": "717d610e1ea22d6d9808bfb76a925016c3319001bd25b55da77a02569568d384", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38fa0dde-8c29-4e93-866d-458cd068105c", "node_type": "1", "metadata": {}, "hash": "d3f35459e29c256b97aabb3a257c88d4754e4cf4690d632df3376125d9344a7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Information Retrieval\n\n- `getChainInfo` takes a chain name to get chain info.\n- `getConnectionInfo` returns `Vow<IBCConnectionInfo>` for two given chain IDs.\n- `getChainsAndConnection` is used to get chain and connection info given primary and counter chain names.\n- `getAsset` retrieves holding, issuing chain names etc. for a denom.\n- `getDenom` retrieves denom (string) for a `Brand`.", "mimetype": "text/plain", "start_char_idx": 4599, "end_char_idx": 4990, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38fa0dde-8c29-4e93-866d-458cd068105c": {"__data__": {"id_": "38fa0dde-8c29-4e93-866d-458cd068105c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_key-concepts.md", "node_type": "4", "metadata": {}, "hash": "e0538b5c129d645ae4d4424c29feb6e26541569dd56701e7ecf248d17bc54d9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cef81d03-82e4-4f8b-8415-067190ed2b21", "node_type": "1", "metadata": {}, "hash": "7f38449c34ad7384476ef52274ec1565fe68200719ced9d4259d4092168c0c41", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the below example, `chainHub` is used to register a new chain and establish a connection between the Agoric chain and\nthe newly registered chain.\n\n```js\nconst chainHub = makeChainHub(privateArgs.agoricNames, vowTools);\n\n// Register a new chain with its information\nchainHub.registerChain(chainKey, chainInfo);\n\n// Register a connection between the Agoric chain and the new chain\nchainHub.registerConnection(\n  agoricChainInfo.chainId,\n  chainInfo.chainId,\n  connectionInfo\n);\n```", "mimetype": "text/plain", "start_char_idx": 4992, "end_char_idx": 5474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cae8ac61-e377-4aec-b255-e6bd73f2501b": {"__data__": {"id_": "cae8ac61-e377-4aec-b255-e6bd73f2501b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "248fc313-d221-4188-81b5-484bbe86eb8a", "node_type": "1", "metadata": {}, "hash": "6c39c877eceefd0531889e69ed6d5701c6b6a4255bebb0dc8cef1366c9a5aae9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Cross-Chain Unbond Contract\n\n<!-- XXX the diagram below is a useful part of the page but it needs to be updated before it is uncommented. -->\n<!-- ## Overview Diagram\n\n<br/>\n<img src=\"/reference/assets/sequence-diagrams/orchestration-unbond-example.svg\" width=\"100%\" />\n<br/> -->\n\nThis walkthrough outlines the functionality of the Unbond Contract that enables unbonding of assets from a\nCosmos-based chain and transferring them to another chain using IBC (Inter-Blockchain Communication).\n\n## Overview", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "248fc313-d221-4188-81b5-484bbe86eb8a": {"__data__": {"id_": "248fc313-d221-4188-81b5-484bbe86eb8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cae8ac61-e377-4aec-b255-e6bd73f2501b", "node_type": "1", "metadata": {}, "hash": "34656b756a9c43651307875f902f6f22b80f8bd0b626e2faab79b3d131e4d942", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21", "node_type": "1", "metadata": {}, "hash": "220252882c17ee80b58d03bf696a56141bab32428cbfce7954bf51d37b238e6f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Overview\n\nThe Unbond Contract leverages the Agoric Orchestration API to interact with external chains, like Osmosis and Stride, to facilitate unbonding and transferring assets from one chain to another.\n\nThe contract consists of two main parts:\n\n- **Contract File (`unbond.contract.js`)**: Defines the contract structure, and public-facing APIs.\n- **Flows File (`unbond.flows.js`)**: Implements the logic for the unbonding and transfer operations.\n\n## Contract: `unbond.contract.js`", "mimetype": "text/plain", "start_char_idx": 493, "end_char_idx": 978, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21": {"__data__": {"id_": "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "248fc313-d221-4188-81b5-484bbe86eb8a", "node_type": "1", "metadata": {}, "hash": "6c39c877eceefd0531889e69ed6d5701c6b6a4255bebb0dc8cef1366c9a5aae9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1cb45ef-085f-4acd-8e40-6baf119a72ab", "node_type": "1", "metadata": {}, "hash": "a4876dd081f40dc20c86d4a72ba1e5714d553a217b5788ebaa2051f8a1b33676", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Contract: `unbond.contract.js`\n\nThis file contains the main Orchestration contract, which is wrapped using the `withOrchestration` helper for Zoe. It exposes a public facet that allows users to initiate the unbonding process and transfer assets to another chain.\n\n### Imports\n\nThe key imports include the `withOrchestration` helper, pattern matching utility `M`, and the flows from `unbond.flows.js` files.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1354, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1cb45ef-085f-4acd-8e40-6baf119a72ab": {"__data__": {"id_": "b1cb45ef-085f-4acd-8e40-6baf119a72ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21", "node_type": "1", "metadata": {}, "hash": "220252882c17ee80b58d03bf696a56141bab32428cbfce7954bf51d37b238e6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "201c9515-f382-438e-8702-20ae64bbf963", "node_type": "1", "metadata": {}, "hash": "46a5aac33c5a2e1235deb84e1aa749953075f720f0196f5bff513dc12de04eea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { M } from '@endo/patterns';\nimport { withOrchestration } from '../utils/start-helper.js';\nimport * as flows from './unbond.flows.js';\n```\n\n### `contract` Function", "mimetype": "text/plain", "start_char_idx": 1356, "end_char_idx": 1532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "201c9515-f382-438e-8702-20ae64bbf963": {"__data__": {"id_": "201c9515-f382-438e-8702-20ae64bbf963", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1cb45ef-085f-4acd-8e40-6baf119a72ab", "node_type": "1", "metadata": {}, "hash": "a4876dd081f40dc20c86d4a72ba1e5714d553a217b5788ebaa2051f8a1b33676", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "886c5244-590b-4615-8313-e9f8e3988581", "node_type": "1", "metadata": {}, "hash": "00cbbc008eec875403c6ca5d75fae0e691e679c4c2da945d0570426df1fb47ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `contract` Function\n\nThe `contract` function when wrapped inside `withOrchestration` defines the [`start` function](#start-function) which is the entry point of the contract. The contract exports a `start` function [below](#start-function). It is merely a convention/convenience that we define a more abstract `contract` function here and pass it to `withOrchestration`. The `contract` function parameters include:", "mimetype": "text/plain", "start_char_idx": 1509, "end_char_idx": 1927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "886c5244-590b-4615-8313-e9f8e3988581": {"__data__": {"id_": "886c5244-590b-4615-8313-e9f8e3988581", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "201c9515-f382-438e-8702-20ae64bbf963", "node_type": "1", "metadata": {}, "hash": "46a5aac33c5a2e1235deb84e1aa749953075f720f0196f5bff513dc12de04eea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "796987b8-f691-4d03-9c55-5efa2a1274fd", "node_type": "1", "metadata": {}, "hash": "37627a826ec586f4fda925383353396bf600a4269917b70ac68d9df46bae9605", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `zcf`: Zoe Contract Facet.\n- `privateArgs`: Object containing remote references to various services.\n- `zone`: A `Zone` object with access to storage for persistent data.\n- `OrchestrationTools`: A set of Orchestration related tools needed by the contract.\n\n```js\nconst contract = async (\n  zcf,\n  privateArgs,\n  zone,\n  { orchestrateAll, zcfTools }\n) => {\n  const { unbondAndTransfer } = orchestrateAll(flows, { zcfTools });", "mimetype": "text/plain", "start_char_idx": 1929, "end_char_idx": 2355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "796987b8-f691-4d03-9c55-5efa2a1274fd": {"__data__": {"id_": "796987b8-f691-4d03-9c55-5efa2a1274fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "886c5244-590b-4615-8313-e9f8e3988581", "node_type": "1", "metadata": {}, "hash": "00cbbc008eec875403c6ca5d75fae0e691e679c4c2da945d0570426df1fb47ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e4c44fb-d636-453a-a217-312e9d715c96", "node_type": "1", "metadata": {}, "hash": "37059fd7513e1700cf88465284026a86c776b915abc21c4749a8ed10ff6017aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const publicFacet = zone.exo('publicFacet', undefined, {\n    makeUnbondAndTransferInvitation() {\n      return zcf.makeInvitation(\n        unbondAndTransfer,\n        'Unbond and transfer',\n        undefined,\n        harden({\n          give: {},\n          want: {},\n          exit: M.any()\n        })\n      );\n    }\n  });\n\n  return harden({ publicFacet });\n};\n```", "mimetype": "text/plain", "start_char_idx": 2359, "end_char_idx": 2720, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1e4c44fb-d636-453a-a217-312e9d715c96": {"__data__": {"id_": "1e4c44fb-d636-453a-a217-312e9d715c96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "796987b8-f691-4d03-9c55-5efa2a1274fd", "node_type": "1", "metadata": {}, "hash": "37627a826ec586f4fda925383353396bf600a4269917b70ac68d9df46bae9605", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f808142-54fe-4380-a75f-25a12a971f1c", "node_type": "1", "metadata": {}, "hash": "0a5ffb6e296fa3f12b9d2c30fa9e976a86be17f7ea7b58615d35e502723835bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `orchestrateAll` function links the flows from the flows file to the contract logic. In this case, it links the `unbondAndTransfer` flow. The `publicFacet` exposes the `makeUnbondAndTransferInvitation` method, which creates a Zoe invitation to allow users to make an offer for the unbonding and transferring process.\n\n### `start` function", "mimetype": "text/plain", "start_char_idx": 2722, "end_char_idx": 3064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f808142-54fe-4380-a75f-25a12a971f1c": {"__data__": {"id_": "1f808142-54fe-4380-a75f-25a12a971f1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e4c44fb-d636-453a-a217-312e9d715c96", "node_type": "1", "metadata": {}, "hash": "37059fd7513e1700cf88465284026a86c776b915abc21c4749a8ed10ff6017aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c2c9f35-bfc8-43bd-8b3c-c428243ce012", "node_type": "1", "metadata": {}, "hash": "0f0d0e854f1496fb2714407c653b58df1df1485be91abd1ef349585c6f106698", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `start` function\n\nThe following code defines the `start` function of the contract that is returned by a call to `withOrchestration` with [`contract` function](#contract-function) as a parameter. In essence `contract` function is the entry point or `start` function of this contract with some Orchestration setup.\n\n```js\nexport const start = withOrchestration(contract);\n```\n\n## Flows: `unbond.flows.js`", "mimetype": "text/plain", "start_char_idx": 3044, "end_char_idx": 3450, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c2c9f35-bfc8-43bd-8b3c-c428243ce012": {"__data__": {"id_": "6c2c9f35-bfc8-43bd-8b3c-c428243ce012", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f808142-54fe-4380-a75f-25a12a971f1c", "node_type": "1", "metadata": {}, "hash": "0a5ffb6e296fa3f12b9d2c30fa9e976a86be17f7ea7b58615d35e502723835bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6c792ca-c52f-4deb-8149-78954edcd6ca", "node_type": "1", "metadata": {}, "hash": "32efa0af4c70d30a45efe64adfccf56ee7feac1c451f97d16d0245f5adf873af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Flows: `unbond.flows.js`\n\nThis file contains the Orchestration flow that performs the unbonding and transferring of assets across chains.\n\n### Flow Function: `unbondAndTransfer`\n\nThe `unbondAndTransfer` flow orchestrates the process of unbonding assets from a source chain (e.g., Osmosis) and transferring them to a destination chain (e.g., Stride).", "mimetype": "text/plain", "start_char_idx": 3423, "end_char_idx": 3775, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6c792ca-c52f-4deb-8149-78954edcd6ca": {"__data__": {"id_": "e6c792ca-c52f-4deb-8149-78954edcd6ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c2c9f35-bfc8-43bd-8b3c-c428243ce012", "node_type": "1", "metadata": {}, "hash": "0f0d0e854f1496fb2714407c653b58df1df1485be91abd1ef349585c6f106698", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a6f4773-28f9-476b-ac99-7f1da2432a22", "node_type": "1", "metadata": {}, "hash": "cbb92eed4b45b396e27199c6429e1082464082a152f90262fc8fe46d231e3f39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nexport const unbondAndTransfer = async (orch, { zcfTools }) => {\n  const osmosis = await orch.getChain('osmosis');\n  const osmoDenom = (await osmosis.getChainInfo()).stakingTokens[0].denom;\n\n  const osmoAccount = await osmosis.makeAccount();\n  const delegations = await osmoAccount.getDelegations();\n  const osmoDelegations = delegations.filter(d => d.amount.denom === osmoDenom);\n\n  await osmoAccount.undelegate(osmoDelegations);", "mimetype": "text/plain", "start_char_idx": 3777, "end_char_idx": 4213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a6f4773-28f9-476b-ac99-7f1da2432a22": {"__data__": {"id_": "9a6f4773-28f9-476b-ac99-7f1da2432a22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6c792ca-c52f-4deb-8149-78954edcd6ca", "node_type": "1", "metadata": {}, "hash": "32efa0af4c70d30a45efe64adfccf56ee7feac1c451f97d16d0245f5adf873af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7", "node_type": "1", "metadata": {}, "hash": "09a4de96705d7f4bf9bcbb3ea6cd61966ab1c79c54dd504c9d4e220777f22160", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const stride = await orch.getChain('stride');\n  const strideAccount = await stride.makeAccount();\n\n  const balance = await osmoAccount.getBalance(osmoDenom);\n  await osmoAccount.transfer(strideAccount.getAddress(), balance);\n};\n```\n\nThe above code achieve several things including:", "mimetype": "text/plain", "start_char_idx": 4217, "end_char_idx": 4498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7": {"__data__": {"id_": "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a6f4773-28f9-476b-ac99-7f1da2432a22", "node_type": "1", "metadata": {}, "hash": "cbb92eed4b45b396e27199c6429e1082464082a152f90262fc8fe46d231e3f39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f608b63-df61-4c3e-8ea7-a97cd1dfcb94", "node_type": "1", "metadata": {}, "hash": "4e5ba807a2c32a6db7862727232d6db86505d683ee244ec62617ee5c7ba0c664", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Retrieval of `osmosis` chain object, and `osmo` denom from the chain info.\n- Create an `osmoAccount` on `osmosis`. _Note that in real-life scenario, this step would not be needed as we would be using an account that has already delegated some `osmo` assets_.\n- Perform `undelegate` on `osmo` delegations of the `osmoAccount`.\n- Create an account on `stride` chain.\n- Transfer all `osmo` balance from `osmoAccount` to `strideAccount`.", "mimetype": "text/plain", "start_char_idx": 4500, "end_char_idx": 4935, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f608b63-df61-4c3e-8ea7-a97cd1dfcb94": {"__data__": {"id_": "3f608b63-df61-4c3e-8ea7-a97cd1dfcb94", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md", "node_type": "4", "metadata": {}, "hash": "cca25a62c9e72fc1e681dd8a4a84e055c3afb56b6d602eea27ff66fb99a986bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7", "node_type": "1", "metadata": {}, "hash": "09a4de96705d7f4bf9bcbb3ea6cd61966ab1c79c54dd504c9d4e220777f22160", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Upon successful transfer, the assets are moved from the Osmosis chain to the Stride chain, ready for the user to claim.", "mimetype": "text/plain", "start_char_idx": 4937, "end_char_idx": 5056, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8e6749c-2cde-43dd-ae3c-fb5a51cd5ed9": {"__data__": {"id_": "a8e6749c-2cde-43dd-ae3c-fb5a51cd5ed9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_index.md", "node_type": "4", "metadata": {}, "hash": "9e160682de4617da6216a202547d1ece89b071726e13aeab721fdc98f9b2e377", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4daf89ab-24c4-4165-bed4-a881ea70a418", "node_type": "1", "metadata": {}, "hash": "6d732f0324a38e817e63f61ab69cbb9fec23e72ba27b891b729e747e95ba4a1f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Contract Walkthroughs\n\nThis section is designed to provide detailed explanations and insights into example Orchestration smart contracts.\n\nIn this section, we will cover two primary contracts:\n\n1. **Assets Transfer Contract**: A guide to `send-anywhere` contract that demonstrates a simple yet robust and secure way for cross-chain assets transfer.\n2. **Unbond Contract**: A detailed walkthrough of the unbonding and liquid staking process, highlighting the steps involved in managing cross-chain operations.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 510, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4daf89ab-24c4-4165-bed4-a881ea70a418": {"__data__": {"id_": "4daf89ab-24c4-4165-bed4-a881ea70a418", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_index.md", "node_type": "4", "metadata": {}, "hash": "9e160682de4617da6216a202547d1ece89b071726e13aeab721fdc98f9b2e377", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8e6749c-2cde-43dd-ae3c-fb5a51cd5ed9", "node_type": "1", "metadata": {}, "hash": "bd5cd42fa15daed26350f43f56ec8ec532ee43ac2a7bb02b29184a8223532699", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2240218-cae6-4273-b8ec-2b18aa513e46", "node_type": "1", "metadata": {}, "hash": "6b9f70021f9e463f921df395a552c5b054b08b2aa7d78224cc4f621447427df9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each walkthrough will include detailed explanations of the contract code, providing insights into the mechanics and best practices of smart contract development on the Agoric platform. By the end of these walkthroughs, you should have a solid understanding of how to utilize Agoric\u2019s tools and libraries to create robust and efficient cross-chain smart contracts.\n\n## Assets Transfer Contract", "mimetype": "text/plain", "start_char_idx": 512, "end_char_idx": 904, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2240218-cae6-4273-b8ec-2b18aa513e46": {"__data__": {"id_": "b2240218-cae6-4273-b8ec-2b18aa513e46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_index.md", "node_type": "4", "metadata": {}, "hash": "9e160682de4617da6216a202547d1ece89b071726e13aeab721fdc98f9b2e377", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4daf89ab-24c4-4165-bed4-a881ea70a418", "node_type": "1", "metadata": {}, "hash": "6d732f0324a38e817e63f61ab69cbb9fec23e72ba27b891b729e747e95ba4a1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd650052-4126-41a6-aa0b-52910d4460d2", "node_type": "1", "metadata": {}, "hash": "571f4117fa5495db993fc1d67121d9b8bbb9b2ec83f5073354d253474a8a93a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Assets Transfer Contract\n\nThe \"Send Anywhere\" contract is a robust and secure solution for transferring assets between blockchains. It ensures that:\n\n- Assets are securely held in a local account before being transferred.\n- Detailed logs are kept for transparency and error tracing.\n- The contract is resilient to failure, with built-in rollback mechanisms.\n- By using Agoric\u2019s Orchestration tools, this contract provides a secure way to facilitate cross-chain asset transfers.", "mimetype": "text/plain", "start_char_idx": 877, "end_char_idx": 1357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd650052-4126-41a6-aa0b-52910d4460d2": {"__data__": {"id_": "fd650052-4126-41a6-aa0b-52910d4460d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_index.md", "node_type": "4", "metadata": {}, "hash": "9e160682de4617da6216a202547d1ece89b071726e13aeab721fdc98f9b2e377", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2240218-cae6-4273-b8ec-2b18aa513e46", "node_type": "1", "metadata": {}, "hash": "6b9f70021f9e463f921df395a552c5b054b08b2aa7d78224cc4f621447427df9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "164defa3-1619-4325-ba15-2f089e173dca", "node_type": "1", "metadata": {}, "hash": "912996ff02aeaa05cba19bd4fb8950fa8c60b238018f8b29d0eefd33a9dd2140", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[See Contract Overview](/guides/orchestration/contract-walkthroughs/send-anywhere)\n\n## Unbond Contract\n\nThe Unbond Contract focuses on the process of unbonding staked assets and performing liquid staking. Key topics include:\n\n- Interacting with multiple chains using the orchestrator.\n- Implementing delegation and undelegation logic.\n- Managing asynchronous operations and ensuring the completion of long-running processes.", "mimetype": "text/plain", "start_char_idx": 1359, "end_char_idx": 1783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "164defa3-1619-4325-ba15-2f089e173dca": {"__data__": {"id_": "164defa3-1619-4325-ba15-2f089e173dca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_index.md", "node_type": "4", "metadata": {}, "hash": "9e160682de4617da6216a202547d1ece89b071726e13aeab721fdc98f9b2e377", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd650052-4126-41a6-aa0b-52910d4460d2", "node_type": "1", "metadata": {}, "hash": "571f4117fa5495db993fc1d67121d9b8bbb9b2ec83f5073354d253474a8a93a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[See Contract Overview](/guides/orchestration/contract-walkthroughs/cross-chain-unbond)", "mimetype": "text/plain", "start_char_idx": 1785, "end_char_idx": 1872, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc570d34-9b98-490d-a8be-2bee0b0d7fed": {"__data__": {"id_": "dc570d34-9b98-490d-a8be-2bee0b0d7fed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e091e647-2f3a-40ac-8474-9886c8e6cc1f", "node_type": "1", "metadata": {}, "hash": "b0e961691afd1be946e5f14b7e28563feafbf4e8d060860fc78b1097cb90a248", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \"Send Anywhere\" Contract Walkthrough\n\nThe \"Send Anywhere\" contract is designed to facilitate the transfer of assets from one chain to another using\nAgoric's [Orchestration](/glossary/#orchestration) library. The contract allows a user to send assets of a specific brand\nto a destination address on any supported blockchain.\n\nThe high-level flow of the contract is:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e091e647-2f3a-40ac-8474-9886c8e6cc1f": {"__data__": {"id_": "e091e647-2f3a-40ac-8474-9886c8e6cc1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc570d34-9b98-490d-a8be-2bee0b0d7fed", "node_type": "1", "metadata": {}, "hash": "a66557776a338e85c789e9ed2e2dc3dd940c938266d002da3b5611132ac6261b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11cc38b7-e8fe-4227-a4b3-5a9676399c43", "node_type": "1", "metadata": {}, "hash": "9802b810dfb5701fb8ffb46dd1cf8ef585cf847caf9d365dff0679fd41f8605a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Validates the asset brand on the source chain.\n- Creates or ensures the existence of a local account (held by the contract) to handle temporary holding.\n- Transfers the asset from the source address to the local account.\n- Initiates a transfer to the destination address, which could reside on the remote blockchain.\n- Gracefully handles the failures.\n\nThe contract is implemented in two separate files:", "mimetype": "text/plain", "start_char_idx": 368, "end_char_idx": 773, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11cc38b7-e8fe-4227-a4b3-5a9676399c43": {"__data__": {"id_": "11cc38b7-e8fe-4227-a4b3-5a9676399c43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e091e647-2f3a-40ac-8474-9886c8e6cc1f", "node_type": "1", "metadata": {}, "hash": "b0e961691afd1be946e5f14b7e28563feafbf4e8d060860fc78b1097cb90a248", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "638fc01d-1e84-4482-9e87-344c9783cb5c", "node_type": "1", "metadata": {}, "hash": "039dcb0324aff35d0721dc0f07287871eae87ab7420f7404c45cb24528139dd0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. `send-anywhere.contract.js` implements the `start` function of the contract to initialize the contract and\n   expose `publicFacet`.\n2. `send-anywhere.flows.js` implements the `sendIt` function which performs the actual transfer of assets when a user makes an offer.\n\nLet us walk through these files one by one.\n\n## 1. `send-anywhere.contract.js`\n\nThe contract begins by importing various modules and utilities necessary for its functionality. These include:", "mimetype": "text/plain", "start_char_idx": 775, "end_char_idx": 1235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "638fc01d-1e84-4482-9e87-344c9783cb5c": {"__data__": {"id_": "638fc01d-1e84-4482-9e87-344c9783cb5c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11cc38b7-e8fe-4227-a4b3-5a9676399c43", "node_type": "1", "metadata": {}, "hash": "9802b810dfb5701fb8ffb46dd1cf8ef585cf847caf9d365dff0679fd41f8605a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "022001ba-445e-409c-9d53-21c52d10113e", "node_type": "1", "metadata": {}, "hash": "75d607a8ebdb7c808cb3d883113595a79ea1c2ec6dc8d29bb3dbbeacdf202dac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **State management**: `makeSharedStateRecord` is imported to create and manage the state across contract incarnations.\n- **Type validation**: `AmountShape` and `InvitationShape` ensure that the contract works with correct data types, such as amounts and invitations.\n- **Orchestration utilities**: `withOrchestration` is imported to facilitate interactions with Orchestration functions.", "mimetype": "text/plain", "start_char_idx": 1237, "end_char_idx": 1625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "022001ba-445e-409c-9d53-21c52d10113e": {"__data__": {"id_": "022001ba-445e-409c-9d53-21c52d10113e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "638fc01d-1e84-4482-9e87-344c9783cb5c", "node_type": "1", "metadata": {}, "hash": "039dcb0324aff35d0721dc0f07287871eae87ab7420f7404c45cb24528139dd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32a33295-72ba-4464-a4b3-06c7990be5ec", "node_type": "1", "metadata": {}, "hash": "a88c61b7e4ba8e3b4ad14e2bde28399a25910107258383eab7070c84cb2bc4e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Flows**: The Orchestration flows for handling transfers are imported from `send-anywhere.flows.js` to be made available to Zoe.", "mimetype": "text/plain", "start_char_idx": 1626, "end_char_idx": 1757, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32a33295-72ba-4464-a4b3-06c7990be5ec": {"__data__": {"id_": "32a33295-72ba-4464-a4b3-06c7990be5ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "022001ba-445e-409c-9d53-21c52d10113e", "node_type": "1", "metadata": {}, "hash": "75d607a8ebdb7c808cb3d883113595a79ea1c2ec6dc8d29bb3dbbeacdf202dac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd69f62a-1755-4706-8cae-0d8ac5e6de8d", "node_type": "1", "metadata": {}, "hash": "b5f0f48057f25a4dc549cec4b73ed32edc79a4150efe9a6297c4f4391ab935aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "These imports set up the contract for the validation, orchestration, and execution of transfers through Zoe API.\n\n### Single Amount Record Validation\n\nIn order to ensure that only a single asset (or `brand`) is transferred per transaction, a `SingleNatAmountRecord` is defined:\n\n```js\nexport const SingleNatAmountRecord = M.and(\n  M.recordOf(M.string(), AnyNatAmountShape, {\n    numPropertiesLimit: 1\n  }),\n  M.not(harden({}))\n);\nharden(SingleNatAmountRecord);\n```", "mimetype": "text/plain", "start_char_idx": 1759, "end_char_idx": 2223, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd69f62a-1755-4706-8cae-0d8ac5e6de8d": {"__data__": {"id_": "bd69f62a-1755-4706-8cae-0d8ac5e6de8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32a33295-72ba-4464-a4b3-06c7990be5ec", "node_type": "1", "metadata": {}, "hash": "a88c61b7e4ba8e3b4ad14e2bde28399a25910107258383eab7070c84cb2bc4e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b519c80-b635-418d-a9de-d3fb7d1e4bd8", "node_type": "1", "metadata": {}, "hash": "2c01d1af79e601c352c1d2d6f89da98512a111ff3d288d471617075e80f43f8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This validation ensures that the proposal shape submitted by users contains exactly one asset and no other extraneous properties.\n\n### Contract State Setup\n\nThe contract defines a shared state record as below:\n\n```js\nconst contractState = makeSharedStateRecord(\n  /** @type {{ account: OrchestrationAccount<any> | undefined }} */ {\n    localAccount: undefined\n  }\n);\n```", "mimetype": "text/plain", "start_char_idx": 2225, "end_char_idx": 2595, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b519c80-b635-418d-a9de-d3fb7d1e4bd8": {"__data__": {"id_": "3b519c80-b635-418d-a9de-d3fb7d1e4bd8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd69f62a-1755-4706-8cae-0d8ac5e6de8d", "node_type": "1", "metadata": {}, "hash": "b5f0f48057f25a4dc549cec4b73ed32edc79a4150efe9a6297c4f4391ab935aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba0e88f7-9376-4e29-bcec-3330c56b12bd", "node_type": "1", "metadata": {}, "hash": "261819f7d59134748cf6f3ccb44e0c0bc2f392884205d2a3830f6f55a8584b34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This state keeps track of the local account that will hold the transferred assets temporarily before they are sent to the destination\naddress. The state starts with an undefined `localAccount`. This account will be created later during the offer handling process if\nneeded.\n\n### Logging setup", "mimetype": "text/plain", "start_char_idx": 2597, "end_char_idx": 2889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba0e88f7-9376-4e29-bcec-3330c56b12bd": {"__data__": {"id_": "ba0e88f7-9376-4e29-bcec-3330c56b12bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b519c80-b635-418d-a9de-d3fb7d1e4bd8", "node_type": "1", "metadata": {}, "hash": "2c01d1af79e601c352c1d2d6f89da98512a111ff3d288d471617075e80f43f8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2795f8ff-d13f-4dda-a8a9-a7c0463a879e", "node_type": "1", "metadata": {}, "hash": "10efa31b2d5f61b6154bb9f23340271cc2fe149170a354240f814e75aa831e59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Logging setup\n\nThe contract initializes a logging mechanism (`logNode`) to capture the contract's internal actions and state changes. Logs are written\nto a newly created `log` child in VStorage, making debugging and auditing easier.\n\n```js\nconst logNode = E(privateArgs.storageNode).makeChildNode('log');\n\nconst log = msg => vowTools.watch(E(logNode).setValue(msg));\n```\n\n### Orchestration functions", "mimetype": "text/plain", "start_char_idx": 2872, "end_char_idx": 3275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2795f8ff-d13f-4dda-a8a9-a7c0463a879e": {"__data__": {"id_": "2795f8ff-d13f-4dda-a8a9-a7c0463a879e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba0e88f7-9376-4e29-bcec-3330c56b12bd", "node_type": "1", "metadata": {}, "hash": "261819f7d59134748cf6f3ccb44e0c0bc2f392884205d2a3830f6f55a8584b34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "963e46ec-c517-451f-95f5-eb9f3b6ea541", "node_type": "1", "metadata": {}, "hash": "b19fa862e8ace8775ddd2f95ee559785ea9f77d209c4e714e679cdab4032d350", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Orchestration functions\n\nThese functions, imported from `send-anywhere.flows.js`, define the main behaviors for handling asset transfers. The contract wraps\nthese functions with the necessary context (such as the contract state, logging, and Zoe tools).\n\n```js\nconst orchFns = orchestrateAll(flows, {\n  contractState,\n  log,\n  zoeTools\n});\n```\n\n### Public Facet and Invitation Creation\n\nThe contract provides a public-facing API (`publicFacet`) that allows external users to interact with it:", "mimetype": "text/plain", "start_char_idx": 3248, "end_char_idx": 3744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "963e46ec-c517-451f-95f5-eb9f3b6ea541": {"__data__": {"id_": "963e46ec-c517-451f-95f5-eb9f3b6ea541", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2795f8ff-d13f-4dda-a8a9-a7c0463a879e", "node_type": "1", "metadata": {}, "hash": "10efa31b2d5f61b6154bb9f23340271cc2fe149170a354240f814e75aa831e59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0af3d3da-e991-430c-9917-76c5784c0bd5", "node_type": "1", "metadata": {}, "hash": "2e2540072871a0e6d969ed10bea8af07b3dd8570d6eebc0e1cab9a0ee2b3556d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst publicFacet = zone.exo(\n  'Send PF',\n  M.interface('Send PF', {\n    makeSendInvitation: M.callWhen().returns(InvitationShape)\n  }),\n  {\n    makeSendInvitation() {\n      return zcf.makeInvitation(\n        orchFns.sendIt,\n        'send',\n        undefined,\n        M.splitRecord({ give: SingleNatAmountRecord })\n      );\n    }\n  }\n);\n```", "mimetype": "text/plain", "start_char_idx": 3746, "end_char_idx": 4093, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0af3d3da-e991-430c-9917-76c5784c0bd5": {"__data__": {"id_": "0af3d3da-e991-430c-9917-76c5784c0bd5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963e46ec-c517-451f-95f5-eb9f3b6ea541", "node_type": "1", "metadata": {}, "hash": "b19fa862e8ace8775ddd2f95ee559785ea9f77d209c4e714e679cdab4032d350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "154784b6-ef2e-4be8-9875-5372e5e0fc76", "node_type": "1", "metadata": {}, "hash": "acae5b8d9b1fa48881608ff802c8d5f955b6dffdfdf0efee2d9ff70b6f5df9f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `makeSendInvitation` method creates an invitation for users, allowing them to initiate a transfer by submitting a proposal. The\nproposal must match the structure defined by the `SingleNatAmountRecord`, ensuring that only one asset is transferred per transaction.\nThe invitation is connected to the `sendIt` function (explained later), which performs the asset transfer.\n\n## 2. `send-anywhere.flows.js`", "mimetype": "text/plain", "start_char_idx": 4095, "end_char_idx": 4500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "154784b6-ef2e-4be8-9875-5372e5e0fc76": {"__data__": {"id_": "154784b6-ef2e-4be8-9875-5372e5e0fc76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0af3d3da-e991-430c-9917-76c5784c0bd5", "node_type": "1", "metadata": {}, "hash": "2e2540072871a0e6d969ed10bea8af07b3dd8570d6eebc0e1cab9a0ee2b3556d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "688527b9-2914-4e7e-a6b8-e4ffe61a539d", "node_type": "1", "metadata": {}, "hash": "207fe2bc2c6ddb637515abefffa7bf12e55f880b8fd15fb3f60ede3a731f8e67", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## 2. `send-anywhere.flows.js`\n\nThis flows file defines a single function `sendIt` that handles offers made to the contract. The `sendIt`\nfunction is the core of the transfer process. It handles the actual movement of assets between the local and\nremote chains. The parameters passed to this function include:", "mimetype": "text/plain", "start_char_idx": 4470, "end_char_idx": 4779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "688527b9-2914-4e7e-a6b8-e4ffe61a539d": {"__data__": {"id_": "688527b9-2914-4e7e-a6b8-e4ffe61a539d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "154784b6-ef2e-4be8-9875-5372e5e0fc76", "node_type": "1", "metadata": {}, "hash": "acae5b8d9b1fa48881608ff802c8d5f955b6dffdfdf0efee2d9ff70b6f5df9f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee6b0591-86a7-48a8-a0d8-8841ba7740df", "node_type": "1", "metadata": {}, "hash": "f0ee6010649b3203d24aa3214d7e283f21cf6f6d643bef0a3b85f3eb8233e724", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `orch`: The orchestrator object for managing chain/account interactions.\n- `ctx`: The contract state and utility functions, including:\n  - `contractState`: Holds the local account for intermediate storage.\n  - `localTransfer`: The transfer function for moving assets between local accounts.\n- `seat`: The Zoe seat representing the assets to be transferred.\n- `offerArgs`: Includes details about the destination chain and address.\n\nThe `sendIt` function performs following important steps:", "mimetype": "text/plain", "start_char_idx": 4781, "end_char_idx": 5271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee6b0591-86a7-48a8-a0d8-8841ba7740df": {"__data__": {"id_": "ee6b0591-86a7-48a8-a0d8-8841ba7740df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "688527b9-2914-4e7e-a6b8-e4ffe61a539d", "node_type": "1", "metadata": {}, "hash": "207fe2bc2c6ddb637515abefffa7bf12e55f880b8fd15fb3f60ede3a731f8e67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d54725ec-1413-4020-9c6f-87c55516eaff", "node_type": "1", "metadata": {}, "hash": "8f585eae7437795d9e182329f7d4d3938bddfff81ce8e2c09c995955dd3b6931", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Offer Validation and Setup\n\nUpon receiving an offer, the `sendIt` function:", "mimetype": "text/plain", "start_char_idx": 5273, "end_char_idx": 5352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d54725ec-1413-4020-9c6f-87c55516eaff": {"__data__": {"id_": "d54725ec-1413-4020-9c6f-87c55516eaff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee6b0591-86a7-48a8-a0d8-8841ba7740df", "node_type": "1", "metadata": {}, "hash": "f0ee6010649b3203d24aa3214d7e283f21cf6f6d643bef0a3b85f3eb8233e724", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84a930b1-bb44-456a-9d93-d2576f625e48", "node_type": "1", "metadata": {}, "hash": "7ba3e73a8404835cce807c3f3bde0742aa80b832c659cba73b244f0927479d95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Validates the offer arguments using [endo's pattern-matching library](https://github.com/endojs/endo/tree/master/packages/patterns) to ensure the correct structure is submitted.\n- Retrieves the `proposal` from the seat, extracting the asset (`brand` and `amount`) being transferred.\n- The contract ensures that the asset brand is registered on the local chain by querying the chain\u2019s asset registry (`vbank`). If not\n  the contract throws an error and exits the transaction.", "mimetype": "text/plain", "start_char_idx": 5354, "end_char_idx": 5830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84a930b1-bb44-456a-9d93-d2576f625e48": {"__data__": {"id_": "84a930b1-bb44-456a-9d93-d2576f625e48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d54725ec-1413-4020-9c6f-87c55516eaff", "node_type": "1", "metadata": {}, "hash": "8f585eae7437795d9e182329f7d4d3938bddfff81ce8e2c09c995955dd3b6931", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16a3144b-116f-4363-a4f6-243270e46fea", "node_type": "1", "metadata": {}, "hash": "8c2acdc435c665be5c5b5c06ff5c37f205fa88ea414e7db073a9b4309bf8545a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- If a local account for the contract doesn\u2019t already exist, the function creates one.", "mimetype": "text/plain", "start_char_idx": 5831, "end_char_idx": 5917, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16a3144b-116f-4363-a4f6-243270e46fea": {"__data__": {"id_": "16a3144b-116f-4363-a4f6-243270e46fea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84a930b1-bb44-456a-9d93-d2576f625e48", "node_type": "1", "metadata": {}, "hash": "7ba3e73a8404835cce807c3f3bde0742aa80b832c659cba73b244f0927479d95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab", "node_type": "1", "metadata": {}, "hash": "9c891eda7618ff3a852f41dd488b320949283018511701c4d3b2251824cea3af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nmustMatch(offerArgs, harden({ chainName: M.scalar(), destAddr: M.string() }));\nconst { chainName, destAddr } = offerArgs;", "mimetype": "text/plain", "start_char_idx": 5919, "end_char_idx": 6046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab": {"__data__": {"id_": "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16a3144b-116f-4363-a4f6-243270e46fea", "node_type": "1", "metadata": {}, "hash": "8c2acdc435c665be5c5b5c06ff5c37f205fa88ea414e7db073a9b4309bf8545a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a6a43b3-3110-41b0-ac28-a6861cdb7f55", "node_type": "1", "metadata": {}, "hash": "b1c6a89c235bd56fb2d492481b1abf194d4573d923e681ba2de1be34266efc68", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const { give } = seat.getProposal();\nconst [[_kw, amt]] = entries(give);\nvoid log(`sending {${amt.value}} from ${chainName} to ${destAddr}`);\nconst agoric = await orch.getChain('agoric');\nconst assets = await agoric.getVBankAssetInfo();\nvoid log(`got info for denoms: ${assets.map(a => a.denom).join(', ')}`);\nconst { denom } = NonNullish(\n  assets.find(a => a.brand === amt.brand),\n  `${amt.brand} not registered in vbank`\n);", "mimetype": "text/plain", "start_char_idx": 6048, "end_char_idx": 6474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a6a43b3-3110-41b0-ac28-a6861cdb7f55": {"__data__": {"id_": "8a6a43b3-3110-41b0-ac28-a6861cdb7f55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab", "node_type": "1", "metadata": {}, "hash": "9c891eda7618ff3a852f41dd488b320949283018511701c4d3b2251824cea3af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15", "node_type": "1", "metadata": {}, "hash": "37a14181b1e55271ed4e84bee01fffe27eab181af806ccc03dc89fec882b2758", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if (!contractState.localAccount) {\n  contractState.localAccount = await agoric.makeAccount();\n}\n```\n\nThis setup phase ensures the transaction is valid and the contract is prepared to handle it.\n\n### Assets Transfer\n\nOnce everything is validated, the contract performs the following steps:\n\n- **Local transfer**: The assets are first transferred from the Zoe seat to the contract\u2019s local account using `localTransfer` API.\n\n```js\nawait localTransfer(seat, contractState.localAccount, give);\n```", "mimetype": "text/plain", "start_char_idx": 6476, "end_char_idx": 6969, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15": {"__data__": {"id_": "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a6a43b3-3110-41b0-ac28-a6861cdb7f55", "node_type": "1", "metadata": {}, "hash": "b1c6a89c235bd56fb2d492481b1abf194d4573d923e681ba2de1be34266efc68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90fa6875-20bb-480b-9b1a-24b51ac9016f", "node_type": "1", "metadata": {}, "hash": "7dadf9fa8cf84def3ab0931d8e913442e41f6174ac8a89b81fbe6a14ab88bfa6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Remote transfer**: The contract initiates the transfer to the destination address on the remote chain. This transfer includes\n  details such as the destination chain ID and address.\n\n```js\nawait contractState.localAccount.transfer(\n  {\n    value: destAddr,\n    encoding: 'bech32',\n    chainId\n  },\n  { denom, value: amt.value }\n);\n```", "mimetype": "text/plain", "start_char_idx": 6971, "end_char_idx": 7309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90fa6875-20bb-480b-9b1a-24b51ac9016f": {"__data__": {"id_": "90fa6875-20bb-480b-9b1a-24b51ac9016f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15", "node_type": "1", "metadata": {}, "hash": "37a14181b1e55271ed4e84bee01fffe27eab181af806ccc03dc89fec882b2758", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32c4612a-fc81-4fa2-9b87-cb90eef59877", "node_type": "1", "metadata": {}, "hash": "268e957c24d3c293464d7c7c8a45e0257c56e2c48cc8ad65c363e2b871df2962", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Error handling**: If the transfer fails, the contract reverses the transaction by withdrawing the assets from the local account\n  back to the Zoe seat. A detailed error message is logged and the seat is exited with the error. This process ensures that assets\n  are transferred securely, with clear rollback mechanisms in case of failure.", "mimetype": "text/plain", "start_char_idx": 7311, "end_char_idx": 7652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32c4612a-fc81-4fa2-9b87-cb90eef59877": {"__data__": {"id_": "32c4612a-fc81-4fa2-9b87-cb90eef59877", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90fa6875-20bb-480b-9b1a-24b51ac9016f", "node_type": "1", "metadata": {}, "hash": "7dadf9fa8cf84def3ab0931d8e913442e41f6174ac8a89b81fbe6a14ab88bfa6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc702466-0697-411f-b824-97be0b1a8895", "node_type": "1", "metadata": {}, "hash": "e53c16e20591d5355055d03a83e028db3e98ec1a8363d80edf715b872966fb55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nawait withdrawToSeat(contractState.localAccount, seat, give);\nconst errorMsg = `IBC Transfer failed ${q(e)}`;\nvoid log(`ERROR: ${errorMsg}`);\nseat.exit(errorMsg);\nthrow makeError(errorMsg);\n```\n\n## Conclusion\n\nThe \"Send Anywhere\" contract is a robust and flexible solution for transferring assets between blockchains. It ensures that:", "mimetype": "text/plain", "start_char_idx": 7654, "end_char_idx": 7994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc702466-0697-411f-b824-97be0b1a8895": {"__data__": {"id_": "bc702466-0697-411f-b824-97be0b1a8895", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md", "node_type": "4", "metadata": {}, "hash": "53d0d73fdaacde770f76d2c6e2f38b4062fc76e084afedfe7465805fd1f81054", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32c4612a-fc81-4fa2-9b87-cb90eef59877", "node_type": "1", "metadata": {}, "hash": "268e957c24d3c293464d7c7c8a45e0257c56e2c48cc8ad65c363e2b871df2962", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Assets are securely held in a local account before being transferred.\n- Detailed logs are kept for transparency and error tracing.\n- The contract is resilient to failure, with built-in rollback mechanisms.\n- By using Agoric\u2019s Orchestration tools, this contract provides a secure way to facilitate cross-chain asset transfers.", "mimetype": "text/plain", "start_char_idx": 7996, "end_char_idx": 8323, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0982f476-fec6-440a-9fba-8235abcdbce5": {"__data__": {"id_": "0982f476-fec6-440a-9fba-8235abcdbce5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e835ef50-1679-4653-b00f-d3448ad50c59", "node_type": "1", "metadata": {}, "hash": "654bf4520aa301a522ab5236e19df01a1716bf467b0c9258cc3a82c3f02df4c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Orca Contract Code Walkthrough\n\nThis section provides a walkthrough of the Orca contract code, explaining its structure, key components, and\nfunctionality. The Orca contract is designed to manage Orchestration accounts and fund them. It interacts with multiple\nchains and provides functionality for creating accounts and funding them. The code for the contract logic is in two\nfiles:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 385, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e835ef50-1679-4653-b00f-d3448ad50c59": {"__data__": {"id_": "e835ef50-1679-4653-b00f-d3448ad50c59", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0982f476-fec6-440a-9fba-8235abcdbce5", "node_type": "1", "metadata": {}, "hash": "952ed7c85ef615818c6a858cb0f51fa472af353c704b5ba33c355c62c1545c18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7733f67-8ab6-423a-accc-ebbdced779ed", "node_type": "1", "metadata": {}, "hash": "e2ee9f76a240d2ae5fab53c3ed9484536533d3ffc890bae679f238a92819a665", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. [`orca.contract.js`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/contract/src/orca.contract.js)\n2. [`orca.flows.js`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/contract/src/orca.flows.js)\n\n## `orca.contract.js`\n\nThe `orca.contract.js` file brings in necessary dependencies and types from various Agoric packages. The `flows` import\ncontains specific logic for the Orca contract offer handling operations.", "mimetype": "text/plain", "start_char_idx": 387, "end_char_idx": 831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7733f67-8ab6-423a-accc-ebbdced779ed": {"__data__": {"id_": "c7733f67-8ab6-423a-accc-ebbdced779ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e835ef50-1679-4653-b00f-d3448ad50c59", "node_type": "1", "metadata": {}, "hash": "654bf4520aa301a522ab5236e19df01a1716bf467b0c9258cc3a82c3f02df4c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07fd3e71-a76d-426e-9a6f-b8c3345a6c69", "node_type": "1", "metadata": {}, "hash": "fe8aa333691f4c78362f502752f0bbb47ef1db23e03a2111b1ccd4de84c7f423", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { AmountShape } from '@agoric/ertp';\nimport { makeTracer } from '@agoric/internal';\nimport { withOrchestration } from '@agoric/orchestration/src/utils/start-helper.js';\nimport { ChainInfoShape } from '@agoric/orchestration/src/typeGuards.js';\nimport { InvitationShape } from '@agoric/zoe/src/typeGuards.js';\nimport { M } from '@endo/patterns';\nimport * as flows from './orca.flows.js';\n```\n\n### Type Definitions and Shapes", "mimetype": "text/plain", "start_char_idx": 833, "end_char_idx": 1268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07fd3e71-a76d-426e-9a6f-b8c3345a6c69": {"__data__": {"id_": "07fd3e71-a76d-426e-9a6f-b8c3345a6c69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7733f67-8ab6-423a-accc-ebbdced779ed", "node_type": "1", "metadata": {}, "hash": "e2ee9f76a240d2ae5fab53c3ed9484536533d3ffc890bae679f238a92819a665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e76dc33d-3fbd-4e0d-82ed-fef32e092446", "node_type": "1", "metadata": {}, "hash": "392bd20d84cf0c6162bed6c5574c930d263137f838bbea7a0a47bdd69f59b4dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Type Definitions and Shapes\n\nThe following definitions create shapes for validating the structure of `amount` and Orchestration powers.\n\n```js\nconst SingleAmountRecord = M.and(\n  M.recordOf(M.string(), AmountShape, { numPropertiesLimit: 1 }),\n  M.not(harden({}))\n);", "mimetype": "text/plain", "start_char_idx": 1237, "end_char_idx": 1506, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e76dc33d-3fbd-4e0d-82ed-fef32e092446": {"__data__": {"id_": "e76dc33d-3fbd-4e0d-82ed-fef32e092446", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07fd3e71-a76d-426e-9a6f-b8c3345a6c69", "node_type": "1", "metadata": {}, "hash": "fe8aa333691f4c78362f502752f0bbb47ef1db23e03a2111b1ccd4de84c7f423", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54e549b9-6cc9-46b2-8653-d10f06b36b4f", "node_type": "1", "metadata": {}, "hash": "d0455f6fb06fff01274971df1ac234724cd9ed65567aacd7c1f8a6cbbf2ba5a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const OrchestrationPowersShape = M.splitRecord({\n  localchain: M.remotable('localchain'),\n  orchestrationService: M.remotable('orchestrationService'),\n  storageNode: M.remotable('storageNode'),\n  timerService: M.remotable('timerService'),\n  agoricNames: M.remotable('agoricNames')\n});\n```\n\n### Main Contract Function\n\nThis is the main `contract` function that initializes and sets up the contract's functionality.", "mimetype": "text/plain", "start_char_idx": 1508, "end_char_idx": 1921, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54e549b9-6cc9-46b2-8653-d10f06b36b4f": {"__data__": {"id_": "54e549b9-6cc9-46b2-8653-d10f06b36b4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e76dc33d-3fbd-4e0d-82ed-fef32e092446", "node_type": "1", "metadata": {}, "hash": "392bd20d84cf0c6162bed6c5574c930d263137f838bbea7a0a47bdd69f59b4dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e527e1c4-d622-4d99-b322-e9cd07d1c851", "node_type": "1", "metadata": {}, "hash": "cbe0548e0e1fede4ce15b6720bcb190910b9d1be7d7b5f4415de6fd3f71e5f93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst contract = async (\n  zcf,\n  privateArgs,\n  zone,\n  { orchestrateAll, zoeTools, chainHub }\n) => {\n  // ... (contract logic)\n};\n```\n\nWithin the `contract` function, following actions are performed.\n\n- **Chain Registration**: Below code section registers chains and their connections with the `chainHub`.", "mimetype": "text/plain", "start_char_idx": 1923, "end_char_idx": 2236, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e527e1c4-d622-4d99-b322-e9cd07d1c851": {"__data__": {"id_": "e527e1c4-d622-4d99-b322-e9cd07d1c851", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54e549b9-6cc9-46b2-8653-d10f06b36b4f", "node_type": "1", "metadata": {}, "hash": "d0455f6fb06fff01274971df1ac234724cd9ed65567aacd7c1f8a6cbbf2ba5a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0367f22-2a28-425f-a1c4-2e944c8c1077", "node_type": "1", "metadata": {}, "hash": "d26bd70476c1b9ad8059279c547a2db229c2c6fb34706f4ec0a8a903b81d4ee9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { chainDetails } = zcf.getTerms();\nfor (const [name, info] of entries(chainDetails)) {\n  const { connections = {} } = info;\n  trace('register', name, {\n    chainId: info.chainId,\n    connections: keys(connections)\n  });\n  chainHub.registerChain(name, info);\n  for (const [chainId, connInfo] of entries(connections)) {\n    chainHub.registerConnection(info.chainId, chainId, connInfo);\n  }\n}\n```", "mimetype": "text/plain", "start_char_idx": 2238, "end_char_idx": 2643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0367f22-2a28-425f-a1c4-2e944c8c1077": {"__data__": {"id_": "f0367f22-2a28-425f-a1c4-2e944c8c1077", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e527e1c4-d622-4d99-b322-e9cd07d1c851", "node_type": "1", "metadata": {}, "hash": "cbe0548e0e1fede4ce15b6720bcb190910b9d1be7d7b5f4415de6fd3f71e5f93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97100d53-e9dc-4c78-be25-d2ed6575232f", "node_type": "1", "metadata": {}, "hash": "678b8c5530d50c4a8521003930d40931586ad7fe130ccaa68daaa7e63b2ec7e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Creating Account and Funding Functions**: These functions are created using the `orchestrateAll` helper, which sets\n  up the necessary flow logic for account creation and funding but the logic is implemented in `orca.flows.js` file\n  ([discussed below](#orca-flows-js)).\n\n```js\nconst { makeAccount, makeCreateAndFund } = orchestrateAll(flows, {\n  localTransfer: zoeTools.localTransfer\n});\n```", "mimetype": "text/plain", "start_char_idx": 2645, "end_char_idx": 3041, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97100d53-e9dc-4c78-be25-d2ed6575232f": {"__data__": {"id_": "97100d53-e9dc-4c78-be25-d2ed6575232f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0367f22-2a28-425f-a1c4-2e944c8c1077", "node_type": "1", "metadata": {}, "hash": "d26bd70476c1b9ad8059279c547a2db229c2c6fb34706f4ec0a8a903b81d4ee9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45193ccc-0ad5-4c22-9094-552a68c0fb75", "node_type": "1", "metadata": {}, "hash": "6c67db093448b3ce3100635945647629890d78dd6f7b50136a96e73b9bba8762", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Public Facet**: The public facet provides two methods: `makeAccountInvitation` creates an invitation to make an\n  Orchestration account, and `makeCreateAndFundInvitation` creates an invitation to make an account and fund it.", "mimetype": "text/plain", "start_char_idx": 3043, "end_char_idx": 3271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45193ccc-0ad5-4c22-9094-552a68c0fb75": {"__data__": {"id_": "45193ccc-0ad5-4c22-9094-552a68c0fb75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97100d53-e9dc-4c78-be25-d2ed6575232f", "node_type": "1", "metadata": {}, "hash": "678b8c5530d50c4a8521003930d40931586ad7fe130ccaa68daaa7e63b2ec7e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f48db4f4-81e1-4808-b9a5-0027e10d001a", "node_type": "1", "metadata": {}, "hash": "e41012f83fddbf7ecfd608f82fa1a2becefd98aa43fa7cbbc9ea23895fb82d35", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst publicFacet = zone.exo(\n  'Orca Public Facet',\n  M.interface('Orca PF', {\n    makeAccountInvitation: M.callWhen().returns(InvitationShape),\n    makeCreateAndFundInvitation: M.callWhen().returns(InvitationShape)\n  }),\n  {\n    makeAccountInvitation() {\n      return zcf.makeInvitation(makeAccount, 'Make an Orchestration Account');\n    },\n    makeCreateAndFundInvitation() {\n      return zcf.makeInvitation(\n        makeCreateAndFund,\n        'Make an Orchestration Account and Fund it',", "mimetype": "text/plain", "start_char_idx": 3273, "end_char_idx": 3770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f48db4f4-81e1-4808-b9a5-0027e10d001a": {"__data__": {"id_": "f48db4f4-81e1-4808-b9a5-0027e10d001a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45193ccc-0ad5-4c22-9094-552a68c0fb75", "node_type": "1", "metadata": {}, "hash": "6c67db093448b3ce3100635945647629890d78dd6f7b50136a96e73b9bba8762", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34a2618a-640e-47e7-8288-8fc55ea8e8fc", "node_type": "1", "metadata": {}, "hash": "abbc2110f54842b2932d7bd3d768cf4e0f17702f20bf2c58956bbfbb8746337a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "undefined,\n        M.splitRecord({ give: SingleAmountRecord })\n      );\n    }\n  }\n);\n```", "mimetype": "text/plain", "start_char_idx": 3779, "end_char_idx": 3867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34a2618a-640e-47e7-8288-8fc55ea8e8fc": {"__data__": {"id_": "34a2618a-640e-47e7-8288-8fc55ea8e8fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f48db4f4-81e1-4808-b9a5-0027e10d001a", "node_type": "1", "metadata": {}, "hash": "e41012f83fddbf7ecfd608f82fa1a2becefd98aa43fa7cbbc9ea23895fb82d35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51c1b1ac-be66-429b-a972-4c50c635a4eb", "node_type": "1", "metadata": {}, "hash": "61f6cee1e7a29b22c96bb0cb80debf4f62ae026e3da6d9e68d290caa1e2d909e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `start` Function\n\nThe start function is wrapped with `withOrchestration`, which provides additional Orchestration setup and tools for the\ncontract.\n\n```js\nexport const start = withOrchestration(contract);\nharden(start);\n```\n\n## `orca.flows.js`\n\nThis section provides a walkthrough of the `orca.flows.js` file, which contains flow functions for the Orca contract.\nThe `orca.flows.js` file defines two main functions:", "mimetype": "text/plain", "start_char_idx": 3869, "end_char_idx": 4288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51c1b1ac-be66-429b-a972-4c50c635a4eb": {"__data__": {"id_": "51c1b1ac-be66-429b-a972-4c50c635a4eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34a2618a-640e-47e7-8288-8fc55ea8e8fc", "node_type": "1", "metadata": {}, "hash": "abbc2110f54842b2932d7bd3d768cf4e0f17702f20bf2c58956bbfbb8746337a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "202e6459-4874-4355-96fa-b12df8848e1b", "node_type": "1", "metadata": {}, "hash": "ad2049e158c597ddccb8cdad7b838b8199c2ba3cf66fbbe226ab6e2135ecd893", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. `makeAccount`: Creates an account on a Cosmos chain.\n2. `makeCreateAndFund`: Creates an account on a Cosmos chain and funds it.\n\nThese functions are called by the Zoe vat when a user makes an offer using a corresponding orca contract inivitation.\n\n### `makeAccount` Function", "mimetype": "text/plain", "start_char_idx": 4290, "end_char_idx": 4567, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "202e6459-4874-4355-96fa-b12df8848e1b": {"__data__": {"id_": "202e6459-4874-4355-96fa-b12df8848e1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51c1b1ac-be66-429b-a972-4c50c635a4eb", "node_type": "1", "metadata": {}, "hash": "61f6cee1e7a29b22c96bb0cb80debf4f62ae026e3da6d9e68d290caa1e2d909e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "275a42ca-dfee-4559-be29-e7ea2700ddd3", "node_type": "1", "metadata": {}, "hash": "ffa6abf7fc4fdc9708b5d1ef0acf164e4bf1ff5452358c7411c9efb2c174b8e7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `makeAccount` Function\n\nThis function creates an account on a specified Cosmos chain. This function not only creates the account but also\nreturns a continuing offer that allows the user to perform further actions like delegation, rewards withdrawl, and\ntransfers. Here are the parameters of this function:", "mimetype": "text/plain", "start_char_idx": 4541, "end_char_idx": 4850, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "275a42ca-dfee-4559-be29-e7ea2700ddd3": {"__data__": {"id_": "275a42ca-dfee-4559-be29-e7ea2700ddd3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "202e6459-4874-4355-96fa-b12df8848e1b", "node_type": "1", "metadata": {}, "hash": "ad2049e158c597ddccb8cdad7b838b8199c2ba3cf66fbbe226ab6e2135ecd893", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65128cc5-257d-4add-b14d-315b4a1370b6", "node_type": "1", "metadata": {}, "hash": "d9337912691f62489585cd6def3182d81c6e22463fc4ed96992ee02da99155e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `orch`: An Orchestrator instance parameter represents an instance of the `Orchestrator`, a powerful abstraction that\n  manages interactions with the blockchain. It provides methods to interact with different chains, create accounts, and\n  fetch chain information.", "mimetype": "text/plain", "start_char_idx": 4852, "end_char_idx": 5117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "65128cc5-257d-4add-b14d-315b4a1370b6": {"__data__": {"id_": "65128cc5-257d-4add-b14d-315b4a1370b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "275a42ca-dfee-4559-be29-e7ea2700ddd3", "node_type": "1", "metadata": {}, "hash": "ffa6abf7fc4fdc9708b5d1ef0acf164e4bf1ff5452358c7411c9efb2c174b8e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10c8e301-176f-4257-bdcb-5ce314822cf7", "node_type": "1", "metadata": {}, "hash": "5fe5b3e986dd039505a48b79eda94a02f76895c878cbeeb00b403ca78eff2223", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `_ctx`: Unused context object\n- `seat`: A `ZCFSeat` instance. It holds a proposal object corresponding to the current offer.\n- `offerArgs`: An object containing `chainName` (that identifies the chain the Orchestration account should be created on) and `denom`.", "mimetype": "text/plain", "start_char_idx": 5119, "end_char_idx": 5381, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10c8e301-176f-4257-bdcb-5ce314822cf7": {"__data__": {"id_": "10c8e301-176f-4257-bdcb-5ce314822cf7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65128cc5-257d-4add-b14d-315b4a1370b6", "node_type": "1", "metadata": {}, "hash": "d9337912691f62489585cd6def3182d81c6e22463fc4ed96992ee02da99155e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f32ee26e-2ffd-4405-bcd2-23281ed5fe67", "node_type": "1", "metadata": {}, "hash": "c7c3beb37a0d769161304f59be93d101c11f507c540c25d07e287b31602b7c60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The function validates the `offerArgs` to ensure it contains a `chainName`, retrieves the specified chain using `orch`,\ncreates an account on the chain using `chain.makeAccount()`, and returns the account as a continuing offer. Below is the\ncode of `makeAccount` after removing some debug information logging code.", "mimetype": "text/plain", "start_char_idx": 5383, "end_char_idx": 5697, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f32ee26e-2ffd-4405-bcd2-23281ed5fe67": {"__data__": {"id_": "f32ee26e-2ffd-4405-bcd2-23281ed5fe67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10c8e301-176f-4257-bdcb-5ce314822cf7", "node_type": "1", "metadata": {}, "hash": "5fe5b3e986dd039505a48b79eda94a02f76895c878cbeeb00b403ca78eff2223", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b86b294-92f0-4e06-a5ea-c57ae76355a3", "node_type": "1", "metadata": {}, "hash": "1c57ab519576f340ef7a49d242fe426400dc87d43204e0c64b63302f47b75104", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nmustMatch(offerArgs, M.splitRecord({ chainName: M.string() }));\nconst { chainName } = offerArgs;\nseat.exit();\nconst chain = await orch.getChain(chainName);\nconst chainAccount = await chain.makeAccount();\nreturn chainAccount.asContinuingOffer();\n```", "mimetype": "text/plain", "start_char_idx": 5699, "end_char_idx": 5953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b86b294-92f0-4e06-a5ea-c57ae76355a3": {"__data__": {"id_": "5b86b294-92f0-4e06-a5ea-c57ae76355a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f32ee26e-2ffd-4405-bcd2-23281ed5fe67", "node_type": "1", "metadata": {}, "hash": "c7c3beb37a0d769161304f59be93d101c11f507c540c25d07e287b31602b7c60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaf00975-11c7-4868-841c-f2d2e9ad53c7", "node_type": "1", "metadata": {}, "hash": "ce30a47415be5044fbeb79c851ec252c7e11aa0067f83bd29fab75547937892c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once the account is created, the function returns a continuing offer by calling `chainAccount.asContinuingOffer()`. This\nallows the user to perform further actions on the account, such as delegating tokens or withdrawing rewards, through\nsubsequent offers.\n\n### `makeCreateAndFund` Function\n\nThis function creates an account on a specified Cosmos chain and funds it. It accepts the same set of parameters as\n`make Account`. The function:", "mimetype": "text/plain", "start_char_idx": 5955, "end_char_idx": 6392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aaf00975-11c7-4868-841c-f2d2e9ad53c7": {"__data__": {"id_": "aaf00975-11c7-4868-841c-f2d2e9ad53c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b86b294-92f0-4e06-a5ea-c57ae76355a3", "node_type": "1", "metadata": {}, "hash": "1c57ab519576f340ef7a49d242fe426400dc87d43204e0c64b63302f47b75104", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efa28d29-36e3-4e0d-80d6-84c51cced792", "node_type": "1", "metadata": {}, "hash": "52562871a8ab40b22b34902cde991aebfe442f01e9f37c5c46772a0d8962c5c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Extracts the amount to be transferred from the seat's proposal, and retrieves both the Agoric chain and the specified target chain.\n- Fetches chain info and asset information.\n- Creates accounts on both the Agoric chain (local) and the target chain (remote).\n- Transfers funds from the seat to the local account.\n- Transfers half of the received funds from the local account to the remote account.\n- Checks the balance of the remote account, and returns the remote account as a continuing offer.", "mimetype": "text/plain", "start_char_idx": 6394, "end_char_idx": 6891, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efa28d29-36e3-4e0d-80d6-84c51cced792": {"__data__": {"id_": "efa28d29-36e3-4e0d-80d6-84c51cced792", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaf00975-11c7-4868-841c-f2d2e9ad53c7", "node_type": "1", "metadata": {}, "hash": "ce30a47415be5044fbeb79c851ec252c7e11aa0067f83bd29fab75547937892c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50dbbfcd-bf01-45bc-8cac-124da20ef3af", "node_type": "1", "metadata": {}, "hash": "da2ce1335fa5024f52bc97e040d18423a8dd5f9df75a06fc263bddd3c778d3a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Below is the code of `makeCreateAndFund` after removing some debug information logging code.", "mimetype": "text/plain", "start_char_idx": 6893, "end_char_idx": 6985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50dbbfcd-bf01-45bc-8cac-124da20ef3af": {"__data__": {"id_": "50dbbfcd-bf01-45bc-8cac-124da20ef3af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efa28d29-36e3-4e0d-80d6-84c51cced792", "node_type": "1", "metadata": {}, "hash": "52562871a8ab40b22b34902cde991aebfe442f01e9f37c5c46772a0d8962c5c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "444a2d07-6dcf-44e3-8040-1d714f437c9e", "node_type": "1", "metadata": {}, "hash": "06f557b062c0b84420e1fbe642fd7d59e2442398ca60d2e6416fac3ed830a4c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { give } = seat.getProposal();\nconst [[_kw, amt]] = Object.entries(give);\nconst [agoric, chain] = await Promise.all([\n  orch.getChain('agoric'),\n  orch.getChain(chainName)\n]);\nconst localAccount = await agoric.makeAccount();\nconst remoteAccount = await chain.makeAccount();\nconst remoteAddress = await remoteAccount.getAddress();\nawait localTransfer(seat, localAccount, give);\nawait localAccount.transfer(\n  {\n    denom: 'ubld',\n    value: amt.value / 2n\n  },\n  remoteAddress\n);\nseat.exit();", "mimetype": "text/plain", "start_char_idx": 6987, "end_char_idx": 7490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "444a2d07-6dcf-44e3-8040-1d714f437c9e": {"__data__": {"id_": "444a2d07-6dcf-44e3-8040-1d714f437c9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50dbbfcd-bf01-45bc-8cac-124da20ef3af", "node_type": "1", "metadata": {}, "hash": "da2ce1335fa5024f52bc97e040d18423a8dd5f9df75a06fc263bddd3c778d3a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5485bba2-8106-4fa2-9eac-b9bb4223e9f3", "node_type": "1", "metadata": {}, "hash": "10d596546d96d8e8d31170f34db39f1c30f2f93ff81d1b159f0d22e6940c8cac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "remoteAddress\n);\nseat.exit();\nreturn remoteAccount.asContinuingOffer();\n```", "mimetype": "text/plain", "start_char_idx": 7461, "end_char_idx": 7536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5485bba2-8106-4fa2-9eac-b9bb4223e9f3": {"__data__": {"id_": "5485bba2-8106-4fa2-9eac-b9bb4223e9f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_contract.md", "node_type": "4", "metadata": {}, "hash": "6cbaa6c5c7fd2d8ce37a845759cd12870947f6695706106468ad4b3b207a311b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "444a2d07-6dcf-44e3-8040-1d714f437c9e", "node_type": "1", "metadata": {}, "hash": "06f557b062c0b84420e1fbe642fd7d59e2442398ca60d2e6416fac3ed830a4c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As in the previous case, the function returns a continuing offer by calling `remoteAccount.asContinuingOffer()` for\nfurther actions on the account.\n\nApart from above mentioned logic, several trace calls are made to log the current state of the function. This is useful\nfor debugging and ensuring that the function's inputs and intermediate states are correct.", "mimetype": "text/plain", "start_char_idx": 7538, "end_char_idx": 7897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d7119dd-fa3f-4da9-9359-b2f57e437fd3": {"__data__": {"id_": "7d7119dd-fa3f-4da9-9359-b2f57e437fd3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_index.md", "node_type": "4", "metadata": {}, "hash": "0e3413c76877e65bb7bf0a8a4ee9c75287773902641c9ee83f5fc833a82df842", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "479fd83d-4d08-41c2-9ac8-17263addf6c6", "node_type": "1", "metadata": {}, "hash": "39cfe519fdc1d999221efd60d8bf7d1a17803182f222982c069a05d8d0283ccd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# dApp Orchestration Basics\n\nTo get started with developing using the Orchestration API, developers can make use of our [dapp-orchestration-basics](https://github.com/Agoric/dapp-orchestration-basics) template.\n\nFollowing the dApp pattern of our existing dapp templates, `dapp-orchestration-basics` also contains a `contract` and a `ui`\ndirectory within a single yarn workspace. In this walkthrough, we learn about the installation process, the contract\ncode, and UI components of `dapp-orchestration-basics`.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 509, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "479fd83d-4d08-41c2-9ac8-17263addf6c6": {"__data__": {"id_": "479fd83d-4d08-41c2-9ac8-17263addf6c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_index.md", "node_type": "4", "metadata": {}, "hash": "0e3413c76877e65bb7bf0a8a4ee9c75287773902641c9ee83f5fc833a82df842", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d7119dd-fa3f-4da9-9359-b2f57e437fd3", "node_type": "1", "metadata": {}, "hash": "7347d325133b4a7f01781ca49c5bf6cd9eec40021ca87ab632933cab1b60c6d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. [Installation and Deployment](installation)\n2. [Contract Code Walkthrough](contract)\n3. [UI Walkthrough](ui)", "mimetype": "text/plain", "start_char_idx": 511, "end_char_idx": 622, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9646f24c-5a80-4d47-9924-488eaaff08e9": {"__data__": {"id_": "9646f24c-5a80-4d47-9924-488eaaff08e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_installation.md", "node_type": "4", "metadata": {}, "hash": "056661b7bf47eb36d3b13b0872e33f5d54480803bf09b7cc33447073e9832b0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc0696b0-e874-4d10-8720-450c4f990e5f", "node_type": "1", "metadata": {}, "hash": "ecc63581b9470a854a0310b5ed6dd4f44852de5fe013887211dde2e70ebbeb74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Installation and Deployment", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 29, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc0696b0-e874-4d10-8720-450c4f990e5f": {"__data__": {"id_": "dc0696b0-e874-4d10-8720-450c4f990e5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_installation.md", "node_type": "4", "metadata": {}, "hash": "056661b7bf47eb36d3b13b0872e33f5d54480803bf09b7cc33447073e9832b0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9646f24c-5a80-4d47-9924-488eaaff08e9", "node_type": "1", "metadata": {}, "hash": "8c99125017eaf5e150edcd676430256eaea34245109b82554b4590d6625fb918", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8657e00f-f537-4b39-8073-41999c819d3e", "node_type": "1", "metadata": {}, "hash": "954df16c4dfbff33e9dbaf17048817c5bc5e5d5f0ffc241a49ca67c7ee7e1212", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The dApp implements a smart contract that can be installed and deployed on any Agoric testnet. Since, the contract\ninteracts with the remote chains, we need a multichain environment for testing it on local network. [Agoric Multichain-Testing](https://github.com/Agoric/agoric-sdk/tree/master/multichain-testing) provides such an environment to test Orchestration based contracts.", "mimetype": "text/plain", "start_char_idx": 31, "end_char_idx": 410, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8657e00f-f537-4b39-8073-41999c819d3e": {"__data__": {"id_": "8657e00f-f537-4b39-8073-41999c819d3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_installation.md", "node_type": "4", "metadata": {}, "hash": "056661b7bf47eb36d3b13b0872e33f5d54480803bf09b7cc33447073e9832b0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc0696b0-e874-4d10-8720-450c4f990e5f", "node_type": "1", "metadata": {}, "hash": "ecc63581b9470a854a0310b5ed6dd4f44852de5fe013887211dde2e70ebbeb74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Follow the instructions in [dApp Readme](https://github.com/Agoric/dapp-orchestration-basics/blob/main/README.md) to install, deploy and interact with the dApp on your local machine.", "mimetype": "text/plain", "start_char_idx": 411, "end_char_idx": 593, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc4d02c1-08c2-4a9c-bfd2-ea516f4dcbe6": {"__data__": {"id_": "bc4d02c1-08c2-4a9c-bfd2-ea516f4dcbe6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5", "node_type": "1", "metadata": {}, "hash": "d1e34ff3cc243561fbd4eba590ffec3ab34fddc6bcd83879c55475fcd1890dcf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# DApp User Interface\n\nHere, we will walkthrough the components making up the user interface for the Orchestration dApp.\n\n## `Orchestration`", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 140, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5": {"__data__": {"id_": "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc4d02c1-08c2-4a9c-bfd2-ea516f4dcbe6", "node_type": "1", "metadata": {}, "hash": "d6ebc88d114cc11c63774a67998f0be8f1b02c4a8af7a495eae29ed596d45bf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "175d825e-7a99-4fca-bb5b-2dce57d80e7e", "node_type": "1", "metadata": {}, "hash": "b038104e9be29dec95c23b5bd6e6e9186d331990a74d79af04ab679cbc276fb1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `Orchestration`\n\nThe [`Orchestration`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/Orchestration.tsx) component serves as the main controller for the Orchestration dApp's user interface. It manages\nthe state and interactions required for users to create accounts, manage their balances, and perform various blockchain\ntransactions such as deposits, withdrawals, staking, and unstaking.\n\n## `AccountList`", "mimetype": "text/plain", "start_char_idx": 122, "end_char_idx": 578, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "175d825e-7a99-4fca-bb5b-2dce57d80e7e": {"__data__": {"id_": "175d825e-7a99-4fca-bb5b-2dce57d80e7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5", "node_type": "1", "metadata": {}, "hash": "d1e34ff3cc243561fbd4eba590ffec3ab34fddc6bcd83879c55475fcd1890dcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54749b79-a593-471c-8eff-e7fbf907ebdf", "node_type": "1", "metadata": {}, "hash": "c56af887620cac9036bdd275e37f497b9567a91b9f91201b3671c8a2ad885511", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `AccountList`\n\nThe [`AccountList`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/AccountList.tsx) component is responsible for displaying the list of user accounts and their associated balances in\nvarious native denoms. It presents account information in a structured and user-friendly format, allowing users to view\nand interact with their Orchestration Accounts directly.\n\n## `FetchBalances`", "mimetype": "text/plain", "start_char_idx": 562, "end_char_idx": 1006, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54749b79-a593-471c-8eff-e7fbf907ebdf": {"__data__": {"id_": "54749b79-a593-471c-8eff-e7fbf907ebdf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "175d825e-7a99-4fca-bb5b-2dce57d80e7e", "node_type": "1", "metadata": {}, "hash": "b038104e9be29dec95c23b5bd6e6e9186d331990a74d79af04ab679cbc276fb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1", "node_type": "1", "metadata": {}, "hash": "c19faa24c77be3ca889833cb31f1196856ce49329b56ad59f1adbd2c50559543", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `FetchBalances`\n\nThe [`FetchBalances`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/FetchBalances.tsx) component is responsible for retrieving the balances of user accounts from different\nblockchains. It interacts with the local RPC endpoints to fetch balance data for addresses on supported chains (for\nOsmosis and Agoric).\n\n## `ChainSelector`", "mimetype": "text/plain", "start_char_idx": 988, "end_char_idx": 1384, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1": {"__data__": {"id_": "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54749b79-a593-471c-8eff-e7fbf907ebdf", "node_type": "1", "metadata": {}, "hash": "c56af887620cac9036bdd275e37f497b9567a91b9f91201b3671c8a2ad885511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9955afec-f6d4-4727-b6ce-28cfac920fe4", "node_type": "1", "metadata": {}, "hash": "24fbce5db4018dbb3d8517464558a4aa9036e71715480cf89829774ebdf05a97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `ChainSelector`\n\nThe [`ChainSelector`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/ChainSelector.tsx) component provides a basic UI element for users to select the Cosmos chain they want to interact\nwith. The selected chain is passed back to the parent component, `Orchestration`, and used in further interactions.\n\n## `MakeAccount`", "mimetype": "text/plain", "start_char_idx": 1366, "end_char_idx": 1751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9955afec-f6d4-4727-b6ce-28cfac920fe4": {"__data__": {"id_": "9955afec-f6d4-4727-b6ce-28cfac920fe4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1", "node_type": "1", "metadata": {}, "hash": "c19faa24c77be3ca889833cb31f1196856ce49329b56ad59f1adbd2c50559543", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c238d4d9-a43f-4780-ac5a-f424807afba8", "node_type": "1", "metadata": {}, "hash": "b19d7377bb3a9afe19039163473d748b8b208951a5c6de928438573061dc08e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [`MakeAccount`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/MakeAccount.tsx) component provides a user interface for managing interchain accounts on the Agoric blockchain. It\nallows users to create new accounts on selected chains (like Osmosis or Agoric), fetch and display balances of these\naccounts, and perform actions such as deposit. The component interacts with the Agoric wallet to make offers and uses", "mimetype": "text/plain", "start_char_idx": 1753, "end_char_idx": 2216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c238d4d9-a43f-4780-ac5a-f424807afba8": {"__data__": {"id_": "c238d4d9-a43f-4780-ac5a-f424807afba8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9955afec-f6d4-4727-b6ce-28cfac920fe4", "node_type": "1", "metadata": {}, "hash": "24fbce5db4018dbb3d8517464558a4aa9036e71715480cf89829774ebdf05a97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f59cc60-8807-4475-b304-0b1f3591187d", "node_type": "1", "metadata": {}, "hash": "4c701c2aec07e05f72bb2e46346a362a625c5e876e73c7e74c9e2c3bc779aff4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "RPC endpoints to retrieve account balances, incorporating loading states and notifications to enhance the user\nexperience.", "mimetype": "text/plain", "start_char_idx": 2217, "end_char_idx": 2339, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f59cc60-8807-4475-b304-0b1f3591187d": {"__data__": {"id_": "4f59cc60-8807-4475-b304-0b1f3591187d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c238d4d9-a43f-4780-ac5a-f424807afba8", "node_type": "1", "metadata": {}, "hash": "b19d7377bb3a9afe19039163473d748b8b208951a5c6de928438573061dc08e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d09bbc1-c879-45f3-81aa-97b22b361455", "node_type": "1", "metadata": {}, "hash": "fce8af5677d31767b7edca38e2010173a177bb160fcf1f3531d1b1ffbeebfbcf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `MakeOffer`", "mimetype": "text/plain", "start_char_idx": 2341, "end_char_idx": 2355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d09bbc1-c879-45f3-81aa-97b22b361455": {"__data__": {"id_": "7d09bbc1-c879-45f3-81aa-97b22b361455", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f59cc60-8807-4475-b304-0b1f3591187d", "node_type": "1", "metadata": {}, "hash": "4c701c2aec07e05f72bb2e46346a362a625c5e876e73c7e74c9e2c3bc779aff4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83699ad1-f57e-4447-84ab-7c04999e0b2c", "node_type": "1", "metadata": {}, "hash": "a2a27ead4c5a8e8977bcb69c40e07d403c6ddb88644849062c2d85a95c138644", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [`MakeOffer`](https://github.com/Agoric/dapp-orchestration-basics/blob/main/ui/src/components/Orchestration/MakeOffer.tsx) component defines an asynchronous function `makeOffer` that facilitates making an offer through the\nAgoric wallet. It first checks if a `selectedChain` is provided and retrieves the necessary contract instance\n(specifically 'orca') and the `BLD` brand from the contract store. The function then constructs an offer where it gives", "mimetype": "text/plain", "start_char_idx": 2357, "end_char_idx": 2813, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83699ad1-f57e-4447-84ab-7c04999e0b2c": {"__data__": {"id_": "83699ad1-f57e-4447-84ab-7c04999e0b2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_orchestration_orchestration-basics_ui.md", "node_type": "4", "metadata": {}, "hash": "e8a7c0f7894ea34c6f17fbe5fa7381de13ca76c0700acd1681e3e51a6b0fd8fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d09bbc1-c879-45f3-81aa-97b22b361455", "node_type": "1", "metadata": {}, "hash": "fce8af5677d31767b7edca38e2010173a177bb160fcf1f3531d1b1ffbeebfbcf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "a deposit of `1000` units of `BLD`. It initiates the offer using the wallet's `makeOffer` method, providing callbacks to\nhandle various offer statuses such as 'error', 'accepted', 'refunded', and 'done'. Throughout the process, it updates\nthe loading state, toggles modals, sets status texts, and adds notifications to keep the user informed about the offer's\nprogress and outcome.", "mimetype": "text/plain", "start_char_idx": 2814, "end_char_idx": 3195, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56c35670-7d74-46b4-8620-7877b0e20db7": {"__data__": {"id_": "56c35670-7d74-46b4-8620-7877b0e20db7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "458bee02-8966-40de-9fb6-1d782afcd0c9", "node_type": "1", "metadata": {}, "hash": "cf73840df2f9f671ae098f217302366bc7142ec467cc76765fd859f6cb2ee76a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# The Agoric Platform\n\n![agoric stack](./assets/stack.svg)\n\nThis document focuses on the layers beneath Zoe and ERTP, what we call\nthe Agoric Platform. This includes \"SwingSet\", which can be thought of\nas our VM providing a distributed Javascript environment, as well as\nthe Cosmos SDK and IBC.\n\n## SwingSet", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 307, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "458bee02-8966-40de-9fb6-1d782afcd0c9": {"__data__": {"id_": "458bee02-8966-40de-9fb6-1d782afcd0c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56c35670-7d74-46b4-8620-7877b0e20db7", "node_type": "1", "metadata": {}, "hash": "e5720ced7d25434bc61b0162e9ed7bd44bc188a328e4e01efe1587a9376b2ff4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb9f8522-6743-4771-90cd-ea510df130e0", "node_type": "1", "metadata": {}, "hash": "cf5208cd637750c576dbbc37a72efc988f04f72ed6f453824f84dfc7604ec810", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "On a single blockchain, or even a single machine with multiple users,\nit's very important to ensure that one user cannot prevent another\nuser's code from executing and that the way in which code is\ninterleaved doesn't open up hazards such as reentrancy. SwingSet\nsolves that problem by dividing up the execution environment into\n_vats_. A [vat](../js-programming/#vats-the-unit-of-synchrony) is a _unit\nof synchrony_. This means that within a JavaScript vat, objects and", "mimetype": "text/plain", "start_char_idx": 309, "end_char_idx": 779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb9f8522-6743-4771-90cd-ea510df130e0": {"__data__": {"id_": "eb9f8522-6743-4771-90cd-ea510df130e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "458bee02-8966-40de-9fb6-1d782afcd0c9", "node_type": "1", "metadata": {}, "hash": "cf73840df2f9f671ae098f217302366bc7142ec467cc76765fd859f6cb2ee76a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7699642f-8c8a-4100-ba05-b201bef27774", "node_type": "1", "metadata": {}, "hash": "aa2bdc5b77e8ff5c274ddcbba99ec247ba4a0a5e3f931f162ac75e6fc244d6ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "functions can communicate with one another synchronously. Between\nvats, objects and functions communicate asynchronously, by design.", "mimetype": "text/plain", "start_char_idx": 780, "end_char_idx": 912, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7699642f-8c8a-4100-ba05-b201bef27774": {"__data__": {"id_": "7699642f-8c8a-4100-ba05-b201bef27774", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb9f8522-6743-4771-90cd-ea510df130e0", "node_type": "1", "metadata": {}, "hash": "cf5208cd637750c576dbbc37a72efc988f04f72ed6f453824f84dfc7604ec810", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffb6df95-69bd-47ce-91b3-ef8364d3b465", "node_type": "1", "metadata": {}, "hash": "1940b657f398231c428caff8eb1277ec6029f62524fd24d63c914d9b56ee4a7c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A physical machine can run one or several vats. A blockchain can run\none or several communicating vats.\n\nThe internal state of a vat can be stored in a persistent memory so\nthat the vat can be turned off and later turned back on (on the same\nor a different physical machine) by loading the stored state.", "mimetype": "text/plain", "start_char_idx": 914, "end_char_idx": 1217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ffb6df95-69bd-47ce-91b3-ef8364d3b465": {"__data__": {"id_": "ffb6df95-69bd-47ce-91b3-ef8364d3b465", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7699642f-8c8a-4100-ba05-b201bef27774", "node_type": "1", "metadata": {}, "hash": "aa2bdc5b77e8ff5c274ddcbba99ec247ba4a0a5e3f931f162ac75e6fc244d6ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6aea1100-b2d2-45d2-8932-c90c67a83743", "node_type": "1", "metadata": {}, "hash": "280e45c0f373967629c5a75969bedfea8b7f872eba6936a921a65a90a37840b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A SwingSet instance also handles communication between the vats it\nprovides and the outside world. On a blockchain, this means writing to\na part of the state that is intended to serve as an outbox. On a\nnon-blockchain machine, this might mean sending a message to a remote\nmachine.\n\nSwingSet provides [orthogonal persistence](<https://en.wikipedia.org/wiki/Persistence_(computer_science)#Orthogonal_or_transparent_persistence>).\n\n## Cosmos SDK", "mimetype": "text/plain", "start_char_idx": 1219, "end_char_idx": 1662, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6aea1100-b2d2-45d2-8932-c90c67a83743": {"__data__": {"id_": "6aea1100-b2d2-45d2-8932-c90c67a83743", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffb6df95-69bd-47ce-91b3-ef8364d3b465", "node_type": "1", "metadata": {}, "hash": "1940b657f398231c428caff8eb1277ec6029f62524fd24d63c914d9b56ee4a7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64361966-d6e2-436e-8756-da1577e30f30", "node_type": "1", "metadata": {}, "hash": "893ae1e2ec2be2aa83ce3a357af2d12eb571705b206a945dd54886193371a97e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Cosmos SDK\n\nOur testnet has a single SwingSet instance with multiple vats running\non top of Cosmos SDK. SwingSet and most of our code is written in\nJavaScript, so we currently have a complicated process that starts up\nthe JavaScript environment, starts a SwingSet instance, and then\nconnects through Go to the Cosmos SDK modules, the consensus algorithm\nin Tendermint, and back again.\n\n## Dynamic IBC", "mimetype": "text/plain", "start_char_idx": 1649, "end_char_idx": 2052, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64361966-d6e2-436e-8756-da1577e30f30": {"__data__": {"id_": "64361966-d6e2-436e-8756-da1577e30f30", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6aea1100-b2d2-45d2-8932-c90c67a83743", "node_type": "1", "metadata": {}, "hash": "280e45c0f373967629c5a75969bedfea8b7f872eba6936a921a65a90a37840b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "783fbc4b-ea41-4daf-be8b-f4856d811e9d", "node_type": "1", "metadata": {}, "hash": "938fb2ec2a837639e58a8545dfa694c4c4c79aef676466cdb7087c4f37d0bdfb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Dynamic IBC\n\nIBC is the protocol for [Inter-Blockchain\nCommunication](https://cosmos.network/ibc/). IBC enables messages to\nbe sent from one blockchain to another with the use of intermediary\nrelayers.\n\nDynamic IBC (dIBC) is a solution to the problem of rolling out a new\nprotocol without needing a platform upgrade or chain governance vote.", "mimetype": "text/plain", "start_char_idx": 2038, "end_char_idx": 2382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "783fbc4b-ea41-4daf-be8b-f4856d811e9d": {"__data__": {"id_": "783fbc4b-ea41-4daf-be8b-f4856d811e9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_platform_index.md", "node_type": "4", "metadata": {}, "hash": "580eaca6ed92bb38343075719a1d4602743903b43c1e0e504d007630ff00518a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64361966-d6e2-436e-8756-da1577e30f30", "node_type": "1", "metadata": {}, "hash": "893ae1e2ec2be2aa83ce3a357af2d12eb571705b206a945dd54886193371a97e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In essence, dIBC is the idea of using a smart contract or VM platform\nto deploy new contracts that support new protocols, all on an existing\nchain without having to wait for chain upgrades.\n\nFor more information, check out [a recent article on\ndIBC](https://medium.com/agoric/the-road-to-dynamic-ibc-4a43bc964bca).\n\n## Tendermint\n\nTendermint is a consensus engine, defining how blocks are agreed upon\nand created. Effectively, Tendermint is the lowest level layer that\ndefines the blockchain itself.", "mimetype": "text/plain", "start_char_idx": 2384, "end_char_idx": 2883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2d0581f-3542-4ec8-800c-410b4f24ec39": {"__data__": {"id_": "c2d0581f-3542-4ec8-800c-410b4f24ec39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fa6797c-5db8-440f-9093-58f61b264e7a", "node_type": "1", "metadata": {}, "hash": "db3025642a75701de73bd338f3a05e47f7dadf4dbab162bf5bcc0cc0522b3720", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Welcome To Agoric's UI Component Library\n\nYou'll find a collection of ready-to-use or pre-coded user interface elements that help accelerate your Agoric Dapp-building. These pre-designed elements include wallet connect buttons, chain selector, node selector, amount input, smart wallet provisioning and leap elements.\nUtilization of these building blocks ensures best practices in design and accessibility.\n\n## Installation and Setup", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 435, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fa6797c-5db8-440f-9093-58f61b264e7a": {"__data__": {"id_": "4fa6797c-5db8-440f-9093-58f61b264e7a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2d0581f-3542-4ec8-800c-410b4f24ec39", "node_type": "1", "metadata": {}, "hash": "7ba2ed2abc990200be73fff027a03710477ba001620fd7c5730af99c96ba717e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc2e1861-4f42-4d3d-bfb6-672badc4295d", "node_type": "1", "metadata": {}, "hash": "a1e7a15e78024a77cc91ef5fa3be9ad2501fce4450670b017bc6bedb6780eb34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Installation and Setup\n\nSee [Introduction to Agoric UI Kit](https://a0a31cba.documentation-7tp.pages.dev/guides/getting-started/how-to-use-ui-kit#introduction-to-agoric-ui-kit) for installation and setup how-to.\n\nOnce complete you'll need to run this yarn command:\n\n```sh\nyarn add @agoric/react-components\n```\n\n## UI Components List\n\nThese React UI components can be immediately used to streamline your Agoric Dapp UI", "mimetype": "text/plain", "start_char_idx": 410, "end_char_idx": 830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc2e1861-4f42-4d3d-bfb6-672badc4295d": {"__data__": {"id_": "dc2e1861-4f42-4d3d-bfb6-672badc4295d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fa6797c-5db8-440f-9093-58f61b264e7a", "node_type": "1", "metadata": {}, "hash": "db3025642a75701de73bd338f3a05e47f7dadf4dbab162bf5bcc0cc0522b3720", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b692a6c-8436-4dcd-995a-fc378516ba43", "node_type": "1", "metadata": {}, "hash": "85b252b9beebe982cb41be00c44dbb7f05b9cbcdfbbe58dcd05fba96065b9f9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Connect Wallet\n- Wallet Provisioning\n- Amount Input\n- Chain Selector\n- Node Selector\n- Leap Elements\n\n## Connect Wallet\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Connect Wallet\"\n  src=\"./assets/connectwallet.png\" />\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Wallet Address\"\n  src=\"./assets/walletaddress.png\" />\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Select Wallet\"\n  src=\"./assets/selectwallet.png\" />", "mimetype": "text/plain", "start_char_idx": 832, "end_char_idx": 1281, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b692a6c-8436-4dcd-995a-fc378516ba43": {"__data__": {"id_": "7b692a6c-8436-4dcd-995a-fc378516ba43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc2e1861-4f42-4d3d-bfb6-672badc4295d", "node_type": "1", "metadata": {}, "hash": "a1e7a15e78024a77cc91ef5fa3be9ad2501fce4450670b017bc6bedb6780eb34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2890915b-4346-4261-96c0-4474c6703d4c", "node_type": "1", "metadata": {}, "hash": "b3c643bd4bcd992e0869336dba09b475ccdc01f787b0469d23c66b0e35185005", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [Connecting with Wallet Connect Button](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#integrating)\n- [Connecting without Wallet Connect Button](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#connecting-without-connectwalletbutton)\n- [Using a Custom Chain Provider](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#using-a-custom-chainprovider)", "mimetype": "text/plain", "start_char_idx": 1283, "end_char_idx": 1693, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2890915b-4346-4261-96c0-4474c6703d4c": {"__data__": {"id_": "2890915b-4346-4261-96c0-4474c6703d4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b692a6c-8436-4dcd-995a-fc378516ba43", "node_type": "1", "metadata": {}, "hash": "85b252b9beebe982cb41be00c44dbb7f05b9cbcdfbbe58dcd05fba96065b9f9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742", "node_type": "1", "metadata": {}, "hash": "b87395b7720145bdcd9c11a3f423043157df3a16c366a0ee26510fff4ba48f28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Customizable Parameters\n| Parameter | Type | Description |\n|----------|----------|----------|\n| ClassName | string | CSS class name for the underlying `<button>` element |\n\n## Smart Wallet Provisioning\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Wallet provision\"\n  src=\"./assets/walletprovision.png\" />\n\n- [Smart Wallet Provisioning](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#smart-wallet-provisioning)", "mimetype": "text/plain", "start_char_idx": 1695, "end_char_idx": 2137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742": {"__data__": {"id_": "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2890915b-4346-4261-96c0-4474c6703d4c", "node_type": "1", "metadata": {}, "hash": "b3c643bd4bcd992e0869336dba09b475ccdc01f787b0469d23c66b0e35185005", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "785131bc-1171-413f-ac3a-3a73af849a85", "node_type": "1", "metadata": {}, "hash": "b8e63f881276bfbdaabde266dab9a11d8b7ca4cb028c6086d9be71bd5c3d3d71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See `AgoricProviderLite` component -> `provisionNoticeContent` prop:\n\nCustomizable Parameters\n| Parameter | Type | Description |\n|----------|----------|----------|\n| provisionNoticeContent | undefined | (fee?: bigint) => JSX.Element | The main content to show in the provision notice dialog (default shown in screenshot) |\n\n### Amount Input\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Amount Input\"\n  src=\"./assets/amountinput.png\" />", "mimetype": "text/plain", "start_char_idx": 2139, "end_char_idx": 2585, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "785131bc-1171-413f-ac3a-3a73af849a85": {"__data__": {"id_": "785131bc-1171-413f-ac3a-3a73af849a85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742", "node_type": "1", "metadata": {}, "hash": "b87395b7720145bdcd9c11a3f423043157df3a16c366a0ee26510fff4ba48f28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54a216a2-0479-48ac-827a-a15d1a8bd915", "node_type": "1", "metadata": {}, "hash": "21a837b81dc3604ab1d3596d5c8c668d4017b10574385a8e7066f3eaa1e80e8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [Amount Input](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#amount-inputs)", "mimetype": "text/plain", "start_char_idx": 2587, "end_char_idx": 2687, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54a216a2-0479-48ac-827a-a15d1a8bd915": {"__data__": {"id_": "54a216a2-0479-48ac-827a-a15d1a8bd915", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "785131bc-1171-413f-ac3a-3a73af849a85", "node_type": "1", "metadata": {}, "hash": "b8e63f881276bfbdaabde266dab9a11d8b7ca4cb028c6086d9be71bd5c3d3d71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e", "node_type": "1", "metadata": {}, "hash": "8c55e47100f6514e76e1e850083d363c0b29fb158d49c384aece1ebd33a5b94e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Customizable Parameters\n| Parameter | Type | Description |\n|----------|----------|----------|\n| value | bigint | null | The current value of the input |\n| decimalPlace | number | The number of decimal places used for displaying the denominated value |\n| className | string | undefined | CSS class name for the underlying `<input>` element |\n| onChange | undefined | (value: bigint) => void | Callback for handling input changes |", "mimetype": "text/plain", "start_char_idx": 2689, "end_char_idx": 3118, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e": {"__data__": {"id_": "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54a216a2-0479-48ac-827a-a15d1a8bd915", "node_type": "1", "metadata": {}, "hash": "21a837b81dc3604ab1d3596d5c8c668d4017b10574385a8e7066f3eaa1e80e8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bf2ca6e-1835-424a-89fc-62ec339170e5", "node_type": "1", "metadata": {}, "hash": "dc35bea7b9f46dac3fce3ae69ec1f37e839b39b3126d2c97bf12d812e8066375", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| disabled | boolean | undefined | Whether or not the input is disabled. Defaults to false. |", "mimetype": "text/plain", "start_char_idx": 3119, "end_char_idx": 3212, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4bf2ca6e-1835-424a-89fc-62ec339170e5": {"__data__": {"id_": "4bf2ca6e-1835-424a-89fc-62ec339170e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e", "node_type": "1", "metadata": {}, "hash": "8c55e47100f6514e76e1e850083d363c0b29fb158d49c384aece1ebd33a5b94e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c95889ff-4b12-419d-b72a-8f1e95c7e48d", "node_type": "1", "metadata": {}, "hash": "a12c93dc493ec2736206e67d433a50502daf407ce44f0534a91bf2c78ef2af5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Chain Selector\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Chain Selector\"\n  src=\"./assets/chainselector.png\" />\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: Chain Selector 2\"\n  src=\"./assets/chainselector2.png\" />\n\n- [Network Dropdown](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#network-dropdown)", "mimetype": "text/plain", "start_char_idx": 3214, "end_char_idx": 3563, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c95889ff-4b12-419d-b72a-8f1e95c7e48d": {"__data__": {"id_": "c95889ff-4b12-419d-b72a-8f1e95c7e48d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bf2ca6e-1835-424a-89fc-62ec339170e5", "node_type": "1", "metadata": {}, "hash": "dc35bea7b9f46dac3fce3ae69ec1f37e839b39b3126d2c97bf12d812e8066375", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "580b6f9e-2929-45da-9e57-7a366161b8a7", "node_type": "1", "metadata": {}, "hash": "be7d166dd272c6569e4f24db518bb7190092b7bb9254b43a57ddd5e1302d6a44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Customizable Parameters\n| Parameter | Type | Description |\n|----------|----------|----------|\n| networkConfigs | NetworkConfig[] | The list of Agoric network configs to choose from. |\n| label | ChangeChainCombobox[\u2018label\u2019] | See [ChangeChainCombobox](https://storybook.cosmology.zone/?path=/docs/swap-changechaincombobox--docs) |\n| size | ChangeChainCombobox[\u2018size\u2019] | See [ChangeChainCombobox](https://storybook.cosmology.zone/?path=/docs/swap-changechaincombobox--docs) |", "mimetype": "text/plain", "start_char_idx": 3565, "end_char_idx": 4038, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "580b6f9e-2929-45da-9e57-7a366161b8a7": {"__data__": {"id_": "580b6f9e-2929-45da-9e57-7a366161b8a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c95889ff-4b12-419d-b72a-8f1e95c7e48d", "node_type": "1", "metadata": {}, "hash": "a12c93dc493ec2736206e67d433a50502daf407ce44f0534a91bf2c78ef2af5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f", "node_type": "1", "metadata": {}, "hash": "b5387f44b1d5f51e14684da0dc9b2b435f81add31e24bb0a885441a0823e6521", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| appearance | ChangeChainCombobox[\u2018appearance\u2019] | See [ChangeChainCombobox](https://storybook.cosmology.zone/?path=/docs/swap-changechaincombobox--docs) |\n| maxHeight | ChangeChainCombobox[\u2018maxHeight\u2019] | See [ChangeChainCombobox](https://storybook.cosmology.zone/?path=/docs/swap-changechaincombobox--docs) |", "mimetype": "text/plain", "start_char_idx": 4039, "end_char_idx": 4348, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f": {"__data__": {"id_": "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "580b6f9e-2929-45da-9e57-7a366161b8a7", "node_type": "1", "metadata": {}, "hash": "be7d166dd272c6569e4f24db518bb7190092b7bb9254b43a57ddd5e1302d6a44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "589e2845-9027-48a4-845e-cc47e7d984e7", "node_type": "1", "metadata": {}, "hash": "7ffb1ac8e2d3930e4ac30505cac01a001acbca1bd78ecadedd2e5f3ba8960385", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Node Selector\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: node selector\"\n  src=\"./assets/nodeselector.png\" />\n\n- [Node Selector](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#node-selector)\n\nCustomizable Parameters\n| Parameter | Type | Description |\n|----------|----------|----------|\n| isOpen | boolean | undefined | Whether or not the modal is open |\n| onClose | () => void | Triggered when the user tries to close the modal |\n\n## Leap Elements", "mimetype": "text/plain", "start_char_idx": 4350, "end_char_idx": 4834, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "589e2845-9027-48a4-845e-cc47e7d984e7": {"__data__": {"id_": "589e2845-9027-48a4-845e-cc47e7d984e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_UIComponentLibrary_index.md", "node_type": "4", "metadata": {}, "hash": "1ec0bf6c7f47b26d46596a05cf1b1283e899fec62bb43c081afa313e85584d40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f", "node_type": "1", "metadata": {}, "hash": "b5387f44b1d5f51e14684da0dc9b2b435f81add31e24bb0a885441a0823e6521", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Leap Elements\n\n<img style=\"border: 2px solid grey\"\n  alt=\"Screenshot: node selector\"\n  src=\"./assets/leapelements.png\" />\n\n- [Leap Elements](https://github.com/Agoric/ui-kit/tree/main/packages/react-components#leap-elements)", "mimetype": "text/plain", "start_char_idx": 4818, "end_char_idx": 5045, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78af4c77-a795-44f3-82a2-8a2ac9c75b21": {"__data__": {"id_": "78af4c77-a795-44f3-82a2-8a2ac9c75b21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ced04e23-e88d-458c-9b89-513053012874", "node_type": "1", "metadata": {}, "hash": "08e9d19b85f35c584d1644d31ae91bb61ad17fdf0e680348e8b98aa380ca6094", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Agoric Wallet\n\nThis page documents the _Agoric Wallet_, including its use of _petnames_ and its place in the Agoric Platform\narchitecture. See also [tour of the Wallet UI](./ui), [Wallet API reference](/reference/wallet-api/).\n\n## Wallet and Agoric Architecture\n\nThe Agoric System consists of interconnected Agoric VMs. Some are\non the blockchain, some are local. The Wallet is a user's trusted\nagent for interacting with the Agoric VM network.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ced04e23-e88d-458c-9b89-513053012874": {"__data__": {"id_": "ced04e23-e88d-458c-9b89-513053012874", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78af4c77-a795-44f3-82a2-8a2ac9c75b21", "node_type": "1", "metadata": {}, "hash": "c8a44eaf35c3f5a656eb5c3fe0af469aed62fa609e83ea5658ebd30acda8b35a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c814bf64-0875-42c4-b09d-52c6ab32aa3e", "node_type": "1", "metadata": {}, "hash": "a39cb8764401281aae7f22f4ea800ad6b0b10ae7fd404d9643081c3412567e30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We also have Dapps (_Decentralized applications_), which are Web UIs\nthat interact with Agoric VMs. Dapps have their own agendas...which\nmay include wanting to steal assets from Wallets.\n\nAn _Ag-Solo_ is a single off-chain Agoric VM. They have their own UI\nand way of communicating with chains (including multiple chains and\nnetwork connections). They serve as entry points into the Agoric System.", "mimetype": "text/plain", "start_char_idx": 448, "end_char_idx": 845, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c814bf64-0875-42c4-b09d-52c6ab32aa3e": {"__data__": {"id_": "c814bf64-0875-42c4-b09d-52c6ab32aa3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ced04e23-e88d-458c-9b89-513053012874", "node_type": "1", "metadata": {}, "hash": "08e9d19b85f35c584d1644d31ae91bb61ad17fdf0e680348e8b98aa380ca6094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f39ae275-8674-4d50-8665-6b83a9244b4e", "node_type": "1", "metadata": {}, "hash": "dfeb9b3db6a0c1487d4c524df2edfa131158c2ee884a1b06446f981fad506e95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When you run `agoric start`, you get a private ag-solo that runs your\nprivate wallet. The wallet is a user's _trusted agent_. It lets you\nenable or disable inbound connections from Dapps and approve or decline\nproposals from those Dapps you enabled. The Wallet is visible\nwhen you run `agoric open`.", "mimetype": "text/plain", "start_char_idx": 847, "end_char_idx": 1146, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f39ae275-8674-4d50-8665-6b83a9244b4e": {"__data__": {"id_": "f39ae275-8674-4d50-8665-6b83a9244b4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c814bf64-0875-42c4-b09d-52c6ab32aa3e", "node_type": "1", "metadata": {}, "hash": "a39cb8764401281aae7f22f4ea800ad6b0b10ae7fd404d9643081c3412567e30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8d73ce5-965d-41c6-adef-8436878056ff", "node_type": "1", "metadata": {}, "hash": "2ee4718f8272e10a28bbb71692852d452dc35b7d90693ddd318ad0ef9d7f2bcc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The way this works in the Wallet's UI is via the _proposals_ that are\npart of a Zoe _offer_; a Dapp says it wants the user to offer something.\nThe wallet expresses that request/offer in a popup, and the user indicates\nif they want to enact or decline it.", "mimetype": "text/plain", "start_char_idx": 1148, "end_char_idx": 1402, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8d73ce5-965d-41c6-adef-8436878056ff": {"__data__": {"id_": "e8d73ce5-965d-41c6-adef-8436878056ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f39ae275-8674-4d50-8665-6b83a9244b4e", "node_type": "1", "metadata": {}, "hash": "dfeb9b3db6a0c1487d4c524df2edfa131158c2ee884a1b06446f981fad506e95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e3bdc20-a7da-4577-9257-ece401b475bc", "node_type": "1", "metadata": {}, "hash": "b1f1e0efcf12820bfbe65f275e96a1a59dc0a798b4bf820482e467a872f03543", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Dapps can be anywhere; they can be web apps interacting with wallets,\nusually because they want your money and/or help you exchange something\nwith someone else. They may even want to give you something for free.\nBut a Dapp's main use is exchanging something on the chain, in addition\nto controlling what access they have and managing the proposals.\n\n## Wallet Bridge Protocol", "mimetype": "text/plain", "start_char_idx": 1404, "end_char_idx": 1779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8e3bdc20-a7da-4577-9257-ece401b475bc": {"__data__": {"id_": "8e3bdc20-a7da-4577-9257-ece401b475bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8d73ce5-965d-41c6-adef-8436878056ff", "node_type": "1", "metadata": {}, "hash": "2ee4718f8272e10a28bbb71692852d452dc35b7d90693ddd318ad0ef9d7f2bcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8", "node_type": "1", "metadata": {}, "hash": "7f3e0169fab2636cb5e5b10c4e3ffd909678acb20af46a3ed84cdf5d5acb21f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Wallet Bridge Protocol\n\nThe _wallet bridge_ is a web page with direct access to an Agoric Wallet. It provides\nthe Dapp with a facet of an API. Dapps never talk directly to a Wallet, only to\nthis bridge that knows where the Wallet is. So, for example, if a Dapp is running in\nyour browser at `https://treasury.agoric.app/` and the Wallet is running locally,\nthey don't communicate directly. They do so by sending JSON-encoded messages through\nthe wallet bridge.\n\n## Petnames and Paths", "mimetype": "text/plain", "start_char_idx": 1754, "end_char_idx": 2240, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8": {"__data__": {"id_": "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e3bdc20-a7da-4577-9257-ece401b475bc", "node_type": "1", "metadata": {}, "hash": "b1f1e0efcf12820bfbe65f275e96a1a59dc0a798b4bf820482e467a872f03543", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cf6f85e-2012-4459-becf-8c6e5b71f54c", "node_type": "1", "metadata": {}, "hash": "bc574bc2a07759ed8e9d3746d624cb737e7abda051b934491ac3fb590d687e2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Before we get into the Wallet itself, you should know about _petnames_,\nwhich are your personal names for objects. No one else can see or\nmodify a petname without your permission. You can think of them as\nyour phone's contacts list. The actual phone number is what your phone\nuses to call someone, but for you to more easily tell who a number is\nassociated with, you've assigned a petname to it, such as Mom,\nGrandpa, Kate S., etc. Different people can have different petnames for", "mimetype": "text/plain", "start_char_idx": 2242, "end_char_idx": 2722, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cf6f85e-2012-4459-becf-8c6e5b71f54c": {"__data__": {"id_": "1cf6f85e-2012-4459-becf-8c6e5b71f54c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8", "node_type": "1", "metadata": {}, "hash": "7f3e0169fab2636cb5e5b10c4e3ffd909678acb20af46a3ed84cdf5d5acb21f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1523f74-6366-49f6-8f29-e0519050a686", "node_type": "1", "metadata": {}, "hash": "d44e4460d7f41add4a2f1426e4394aca0544163c800f65983176e4582bbcc439", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "different objects. For example, the same person is \"Mom\" to you, \"Mimi\"\nto her granddaughter, and \"Mrs. Watson\" to many others.", "mimetype": "text/plain", "start_char_idx": 2723, "end_char_idx": 2850, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1523f74-6366-49f6-8f29-e0519050a686": {"__data__": {"id_": "d1523f74-6366-49f6-8f29-e0519050a686", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cf6f85e-2012-4459-becf-8c6e5b71f54c", "node_type": "1", "metadata": {}, "hash": "bc574bc2a07759ed8e9d3746d624cb737e7abda051b934491ac3fb590d687e2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8152a3ec-2b06-4d89-aeca-6e97cb20dadd", "node_type": "1", "metadata": {}, "hash": "501622d95c633cab0c64d7176507cd0a23475fbc448bf5f36352f4e3c193748c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Your Wallet manages your petnames for Dapps, asset types, issuers, etc.\n\nThe wallet bridge protocol is migrating petnames to _paths_. All former petnames\nare now either a _path_ or still a plain string. A path is an array of strings\nwhose first element is the user's petname for a Dapp. Dapps must be able to\nwork with either plain string petnames or array-of-strings paths.", "mimetype": "text/plain", "start_char_idx": 2852, "end_char_idx": 3226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8152a3ec-2b06-4d89-aeca-6e97cb20dadd": {"__data__": {"id_": "8152a3ec-2b06-4d89-aeca-6e97cb20dadd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1523f74-6366-49f6-8f29-e0519050a686", "node_type": "1", "metadata": {}, "hash": "d44e4460d7f41add4a2f1426e4394aca0544163c800f65983176e4582bbcc439", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "425e8a91-7726-41d1-8efd-cf99cfb6e587", "node_type": "1", "metadata": {}, "hash": "6517cb3444047eeba64d0ee398193bd9e2ef69bbd37093ada705a602cd27e6cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "They can do this via `JSON.stringify(petnameOrPath)` before using the `petnameOrPath` in\na programmatic string-only context (such as a key in a Map or Set, or an HTML element's\nattribute value, such as an ID). When displaying a path to users, you should join its\nelements with `'.'`. If in a UI, you should ideally color the first element\ndifferently from the dots and other elements. The first element is a trusted,\nuser-assigned petname for the Dapp, while the other elements were automatically", "mimetype": "text/plain", "start_char_idx": 3228, "end_char_idx": 3724, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "425e8a91-7726-41d1-8efd-cf99cfb6e587": {"__data__": {"id_": "425e8a91-7726-41d1-8efd-cf99cfb6e587", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8152a3ec-2b06-4d89-aeca-6e97cb20dadd", "node_type": "1", "metadata": {}, "hash": "501622d95c633cab0c64d7176507cd0a23475fbc448bf5f36352f4e3c193748c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbf5b954-9d5a-4c82-a948-458903e02f2b", "node_type": "1", "metadata": {}, "hash": "7da3fc79560d0c25733a214b4bc6b4f044ee1f25c9ad8a50d843e4591ade26f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "generated by the Dapp or wallet. Thus, they have no special relationship to the user.", "mimetype": "text/plain", "start_char_idx": 3725, "end_char_idx": 3810, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbf5b954-9d5a-4c82-a948-458903e02f2b": {"__data__": {"id_": "bbf5b954-9d5a-4c82-a948-458903e02f2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "425e8a91-7726-41d1-8efd-cf99cfb6e587", "node_type": "1", "metadata": {}, "hash": "6517cb3444047eeba64d0ee398193bd9e2ef69bbd37093ada705a602cd27e6cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7", "node_type": "1", "metadata": {}, "hash": "d99ec84d8649c2053796a31a7a263505c82df978392f464c1dc1cf2da0c97678", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Dapp-Specific Path Suggestions\n\nYour Dapp should suggest names for any Installations, Instances, or Issuers wallet users\nwill interact with. When a wallet accepts them, it returns them to the Dapp as paths (arrays\nof strings) that start with the user's petname for the Dapp.\n\nFor example, here are [the messages that the Fungible Faucet Dapp\nsends](https://github.com/Agoric/dapp-fungible-faucet/blob/6092d6648a7a773d299c79fecd44bb650f6cfa06/ui/public/src/main.js#L145)\nover the wallet bridge:", "mimetype": "text/plain", "start_char_idx": 3812, "end_char_idx": 4309, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7": {"__data__": {"id_": "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbf5b954-9d5a-4c82-a948-458903e02f2b", "node_type": "1", "metadata": {}, "hash": "7da3fc79560d0c25733a214b4bc6b4f044ee1f25c9ad8a50d843e4591ade26f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a7b3576-87e1-47c1-8562-b9a95fc1b95b", "node_type": "1", "metadata": {}, "hash": "69b514a42de5b849933001a0467c48d95c9e0ec26a97cbeb71f0544af14f9b43", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Our issuer will default to something like `FungibleFaucet.Installation`.\nwalletSend({\n  type: 'walletSuggestInstallation',\n  petname: 'Installation',\n  boardId: INSTALLATION_BOARD_ID\n});\n// Our issuer will default to something like `FungibleFaucet.Instance`.\nwalletSend({\n  type: 'walletSuggestInstance',\n  petname: 'Instance',\n  boardId: INSTANCE_BOARD_ID\n});\n// Our issuer will default to something like `FungibleFaucet.Token`.\nwalletSend({\n  type: 'walletSuggestIssuer',\n  petname: 'Token',", "mimetype": "text/plain", "start_char_idx": 4311, "end_char_idx": 4813, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a7b3576-87e1-47c1-8562-b9a95fc1b95b": {"__data__": {"id_": "0a7b3576-87e1-47c1-8562-b9a95fc1b95b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7", "node_type": "1", "metadata": {}, "hash": "d99ec84d8649c2053796a31a7a263505c82df978392f464c1dc1cf2da0c97678", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3145a487-f4ab-4dd7-983d-55762b4652b4", "node_type": "1", "metadata": {}, "hash": "fcc0da7d8a1f219687b57cb15a6266495e05db96f0bf2e08b62ac3da65703758", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "petname: 'Token',\n  boardId: TOKEN_ISSUER_BOARD_ID\n});\n```", "mimetype": "text/plain", "start_char_idx": 4796, "end_char_idx": 4854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3145a487-f4ab-4dd7-983d-55762b4652b4": {"__data__": {"id_": "3145a487-f4ab-4dd7-983d-55762b4652b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a7b3576-87e1-47c1-8562-b9a95fc1b95b", "node_type": "1", "metadata": {}, "hash": "69b514a42de5b849933001a0467c48d95c9e0ec26a97cbeb71f0544af14f9b43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "790848c7-b0d8-430c-95d3-4cb73d1cf206", "node_type": "1", "metadata": {}, "hash": "84090f7cbdd58e3b75c9627308a32ab14e6706dcbd7d63c1831d147a9c27d1c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Agoric Board\n\nSeveral Wallet API methods use _Agoric's Board_, a key-value \"bulletin board\" that\nlets users make data generally available. Users can obtain an Id by posting a value and\nothers can get the value just by knowing the Id. You can make Id(s) known by any\ncommunication method you like; private email, an email blast to a mailing list\nor many individuals, buying an ad on a website, tv program, or newspaper,\nlisting it on your website, etc.", "mimetype": "text/plain", "start_char_idx": 4856, "end_char_idx": 5314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "790848c7-b0d8-430c-95d3-4cb73d1cf206": {"__data__": {"id_": "790848c7-b0d8-430c-95d3-4cb73d1cf206", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_index.md", "node_type": "4", "metadata": {}, "hash": "350d58ce145080827cf3b0a781f95a6ff7e28189364ffa80d9e4167840a552de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3145a487-f4ab-4dd7-983d-55762b4652b4", "node_type": "1", "metadata": {}, "hash": "fcc0da7d8a1f219687b57cb15a6266495e05db96f0bf2e08b62ac3da65703758", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/ertp/guide/test-readme.js#getValue\n\nTo get an object, such as a depositFacet, using the Board, first you have\nto be told what Board Id is associated with it. Using the `getValue()` method,\nyou retrieve the reference to the depositFacet and can deposit payments into it.", "mimetype": "text/plain", "start_char_idx": 5316, "end_char_idx": 5603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bfc93d3c-c529-4802-b687-77f00c0765d3": {"__data__": {"id_": "bfc93d3c-c529-4802-b687-77f00c0765d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa358715-ddcd-4c85-9989-fed57c7a1cea", "node_type": "1", "metadata": {}, "hash": "3d8ab82125cee1c170360cf1b450eb1a1ad4258a65a95e2873d23d4a3e901130", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wallet UI\n\nFrom a shell window, run `agoric open` to open the Wallet UI in a browser tab.\n\nThe wallet facilitates several core user interactions within the Agoric ecosystem, described in the below sections.\n\n## Dapps\n\nTo interact with a dapp, it first must be connected in the wallet. The dapp will attempt to connect to the wallet instance registered at https://wallet.agoric.app/locator/.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa358715-ddcd-4c85-9989-fed57c7a1cea": {"__data__": {"id_": "fa358715-ddcd-4c85-9989-fed57c7a1cea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfc93d3c-c529-4802-b687-77f00c0765d3", "node_type": "1", "metadata": {}, "hash": "272a981762daf8e8bcd1d6ae8a43c5f8723ce039ed90372b58f9d2c1fefce2c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09dcf02a-8376-4ee2-8f2e-aabdab565afc", "node_type": "1", "metadata": {}, "hash": "24a15a6bfe9ac335aef1975a7ff922f654f72922f73fc64f88244f8c5ba7a090", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Before the dapp is able to make offers, the connection must be accepted from the wallet. Incoming dapp connections can be managed from the Dashboard view:\n\n<img width=\"500\" alt=\"Dapp Connection\" src=\"./assets/dapp-connection.png\">\n\nOnce accepted, they can be viewed and managed from the Dapps view:\n\n<img width=\"499\" alt=\"Dapps\" src=\"./assets/dapps.png\">", "mimetype": "text/plain", "start_char_idx": 394, "end_char_idx": 748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09dcf02a-8376-4ee2-8f2e-aabdab565afc": {"__data__": {"id_": "09dcf02a-8376-4ee2-8f2e-aabdab565afc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa358715-ddcd-4c85-9989-fed57c7a1cea", "node_type": "1", "metadata": {}, "hash": "3d8ab82125cee1c170360cf1b450eb1a1ad4258a65a95e2873d23d4a3e901130", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0af8fbba-37c5-4e03-8647-3f1692c185e8", "node_type": "1", "metadata": {}, "hash": "23965c8a0b7fcaceee2358fb89a1c1c5cb959b129ee7137236a60b81679a6de4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The petname is a string used to personally identify the dapp and should be unique. It can be modified as desired with the text field. It can be thought of like a contact name in a cellphone.\n\nDapps can be removed so that they are no longer able to propose offers.\n\n## Offers", "mimetype": "text/plain", "start_char_idx": 750, "end_char_idx": 1024, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0af8fbba-37c5-4e03-8647-3f1692c185e8": {"__data__": {"id_": "0af8fbba-37c5-4e03-8647-3f1692c185e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09dcf02a-8376-4ee2-8f2e-aabdab565afc", "node_type": "1", "metadata": {}, "hash": "24a15a6bfe9ac335aef1975a7ff922f654f72922f73fc64f88244f8c5ba7a090", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cb7790b-f133-47de-aa86-19949a93decc", "node_type": "1", "metadata": {}, "hash": "6f975902973a8a1236f2502268a93c9664eb7906323cefbbfdee3dea3aba0bdd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offers\n\nAfter connecting to a dapp, it is able to propose offers in the user's wallet. Offers are a unique concept to Agoric's Zoe framework. Users are guaranteed to receive that they are asking for in an offer, or get a full refund (a property called \"[Offer Safety](../zoe/#what-is-zoe)\").\n\nWhen an offer is proposed (usually from some interaction in a dapp), it will appear in the dashboard view:\n\n<img width=\"501\" alt=\"Propsed Offer\" src=\"./assets/proposed-offer.png\">", "mimetype": "text/plain", "start_char_idx": 1015, "end_char_idx": 1490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cb7790b-f133-47de-aa86-19949a93decc": {"__data__": {"id_": "1cb7790b-f133-47de-aa86-19949a93decc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0af8fbba-37c5-4e03-8647-3f1692c185e8", "node_type": "1", "metadata": {}, "hash": "23965c8a0b7fcaceee2358fb89a1c1c5cb959b129ee7137236a60b81679a6de4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2250e5c-ad76-433e-94e6-af3d44826d48", "node_type": "1", "metadata": {}, "hash": "80003770ea51fc2d5f308f6b121d7c6924977d78312c0f687236ca6959a78006", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the offer is approved, it will show as pending:\n\n<img width=\"498\" alt=\"Pending Offer\" src=\"./assets/pending-offer.png\">\n\nDepending on the terms of the smart contract being interacted with, some offers may be \"exited\" before completion. Exiting an offer does not revert any asset transfers that have already taken place, but may prevent the contract from executing any future planned transfers (e.g. a user may \"exit\" to withdraw a bid from an auction before the deadline).", "mimetype": "text/plain", "start_char_idx": 1492, "end_char_idx": 1967, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2250e5c-ad76-433e-94e6-af3d44826d48": {"__data__": {"id_": "c2250e5c-ad76-433e-94e6-af3d44826d48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cb7790b-f133-47de-aa86-19949a93decc", "node_type": "1", "metadata": {}, "hash": "6f975902973a8a1236f2502268a93c9664eb7906323cefbbfdee3dea3aba0bdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1790c2a-13a2-45df-b63a-b46cbb64b457", "node_type": "1", "metadata": {}, "hash": "df20d72ae523efd7170b4a5137f815c70942c34c17e4b99a95669a37500f58ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Completed offers will either show up in an accepted or rejected state, and can be dismissed by the user.\n\n<img width=\"500\" alt=\"Accepted Offer\" src=\"./assets/accepted-offer.png\">\n\n## Transfers\n\nThe wallet can be used to transfer funds to and from other wallets, as well as between purses within the same wallet.", "mimetype": "text/plain", "start_char_idx": 1969, "end_char_idx": 2280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1790c2a-13a2-45df-b63a-b46cbb64b457": {"__data__": {"id_": "b1790c2a-13a2-45df-b63a-b46cbb64b457", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2250e5c-ad76-433e-94e6-af3d44826d48", "node_type": "1", "metadata": {}, "hash": "80003770ea51fc2d5f308f6b121d7c6924977d78312c0f687236ca6959a78006", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e86d2b7b-4c81-40e6-ab72-5011698238c9", "node_type": "1", "metadata": {}, "hash": "a7a754ae24247aa2a7060feafbe9b2238ab624bf6b73aee6ec80ed2c28185618", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Every type of asset can be identified by a unique \"Brand\", and there exists one global Issuer for each Brand. If a user wants to send or receive a tokens of a particular Brand, its Issuer must be imported from the \"Asset Issuers\" view:\n\n<img width=\"630\" alt=\"Issuers\" src=\"./assets/issuers.png\">", "mimetype": "text/plain", "start_char_idx": 2282, "end_char_idx": 2577, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e86d2b7b-4c81-40e6-ab72-5011698238c9": {"__data__": {"id_": "e86d2b7b-4c81-40e6-ab72-5011698238c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1790c2a-13a2-45df-b63a-b46cbb64b457", "node_type": "1", "metadata": {}, "hash": "df20d72ae523efd7170b4a5137f815c70942c34c17e4b99a95669a37500f58ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27542914-a587-43a4-8952-9f71de34166e", "node_type": "1", "metadata": {}, "hash": "1235b4aaca273c87d48f3f5b3b10aacbf1146afacd08fa9ded759aaee209f145", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Some issuers are imported by default in the wallet as shown above. The user can make as many purses as they want for each issuer. The purses are where the actual tokens are held, and can be managed from the \"Dashboard\" view:\n\n<img width=\"636\" alt=\"Purses\" src=\"./assets/purses.png\">\n\nTokens can be freely sent between purses within the same wallet. To send tokens to another wallet, that wallet's Board ID must be imported in the \"Contacts\" view:\n\n<img width=\"458\" alt=\"Contacts\" src=\"./assets/contacts.png\">", "mimetype": "text/plain", "start_char_idx": 2579, "end_char_idx": 3087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27542914-a587-43a4-8952-9f71de34166e": {"__data__": {"id_": "27542914-a587-43a4-8952-9f71de34166e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_wallet_ui.md", "node_type": "4", "metadata": {}, "hash": "b3f78ebc4ab83e6a38f8af4b84d9f4f8fc1c8f7ec4588bbc3634f87fb05a5960", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e86d2b7b-4c81-40e6-ab72-5011698238c9", "node_type": "1", "metadata": {}, "hash": "a7a754ae24247aa2a7060feafbe9b2238ab624bf6b73aee6ec80ed2c28185618", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Then, a user can select the \"Irrevocable one-way\" transfer option to send their tokens to another wallet in their contacts:\n\n<img width=\"469\" alt=\"Transfer\" src=\"./assets/transfer.png\">", "mimetype": "text/plain", "start_char_idx": 3089, "end_char_idx": 3274, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41745386-d96b-457f-aa53-a8f4532cb644": {"__data__": {"id_": "41745386-d96b-457f-aa53-a8f4532cb644", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51050da0-421a-4073-bb57-400f90553a51", "node_type": "1", "metadata": {}, "hash": "aac186909a299e3ff4b5a06b5416e0835c6429b2c9c534cee43af9cb3f9bb349", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Access Control with Objects", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 29, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51050da0-421a-4073-bb57-400f90553a51": {"__data__": {"id_": "51050da0-421a-4073-bb57-400f90553a51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41745386-d96b-457f-aa53-a8f4532cb644", "node_type": "1", "metadata": {}, "hash": "bcd88e419914cd87f20b46ecdea3aa4d6b5fc6163ce5a05e64cc2d62d246169c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00c877f2-628f-4560-b412-1c9197190ceb", "node_type": "1", "metadata": {}, "hash": "64bb0edff1c16bed24ec9f40235bf2d143cdf9d054828b40b03778f844eb99ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In our third smart contract, we will demostrate how to control access to different functions of a smart contract. So far, we have only used `publicFacet` to expose all functions. There is an other facet, called `creatorFacet` that is provided only to the caller who creates the contract instance.\nIn this smart contract, we\nlimit the `publicFacet` API to a read-only function `get()`, and use `creatorFacet` API to expose the `set()` method to the caller who creates the contract instanace.", "mimetype": "text/plain", "start_char_idx": 31, "end_char_idx": 521, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00c877f2-628f-4560-b412-1c9197190ceb": {"__data__": {"id_": "00c877f2-628f-4560-b412-1c9197190ceb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51050da0-421a-4073-bb57-400f90553a51", "node_type": "1", "metadata": {}, "hash": "aac186909a299e3ff4b5a06b5416e0835c6429b2c9c534cee43af9cb3f9bb349", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e65c53ac-e71c-44cf-a0c2-7f0ec990f899", "node_type": "1", "metadata": {}, "hash": "04fdde0201b4f0d108415c0a8f6a91971232091b8bc76a34c8c74f0a63d5e618", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Here is the complete code for `03-access.js` smart contract:\n\n<<< @/../snippets/zoe/src/03-access.js#access-contract\n\nWe can write a simple test as below to make sure that trying to `set` using the `publicFacet` throws an exception, but using the `creatorFacet` works:\n\n<<< @/../snippets/zoe/contracts/test-zoe-hello.js#test-access", "mimetype": "text/plain", "start_char_idx": 523, "end_char_idx": 854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e65c53ac-e71c-44cf-a0c2-7f0ec990f899": {"__data__": {"id_": "e65c53ac-e71c-44cf-a0c2-7f0ec990f899", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00c877f2-628f-4560-b412-1c9197190ceb", "node_type": "1", "metadata": {}, "hash": "64bb0edff1c16bed24ec9f40235bf2d143cdf9d054828b40b03778f844eb99ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82cae29c-c767-493a-b5f2-1c129473ab96", "node_type": "1", "metadata": {}, "hash": "f7a0c68cf0a8931b6f0a6ad20962ea37882154059d3161eddf60b31eebbf9ac3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that the `set()` method has no access check inside it. Access control is based on separation of powers between the `publicFacet`, which is expected to be [shared widely](/guides/js-programming/hardened-js.html#widely-shared-capabilities), and the `creatorFacet`, which is [closely held](/guides/js-programming/hardened-js.html#closely-held-capabilities). _We'll discuss this [object capabilities](../js-programming/hardened-js#object-capabilities-ocaps) approach more later._ If you're having trouble,", "mimetype": "text/plain", "start_char_idx": 856, "end_char_idx": 1362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82cae29c-c767-493a-b5f2-1c129473ab96": {"__data__": {"id_": "82cae29c-c767-493a-b5f2-1c129473ab96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e65c53ac-e71c-44cf-a0c2-7f0ec990f899", "node_type": "1", "metadata": {}, "hash": "04fdde0201b4f0d108415c0a8f6a91971232091b8bc76a34c8c74f0a63d5e618", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b26ca27-626d-44a1-b2bb-7eaec7351ced", "node_type": "1", "metadata": {}, "hash": "cacae390544aeef8a06f0041c0b81a763844b619378eeff8db98e46bc4cdf813", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "later._ If you're having trouble, check out the [`tut-03-access`](https://github.com/Agoric/dapp-offer-up/tree/tut-03-access) branch in the example repo.", "mimetype": "text/plain", "start_char_idx": 1329, "end_char_idx": 1482, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b26ca27-626d-44a1-b2bb-7eaec7351ced": {"__data__": {"id_": "3b26ca27-626d-44a1-b2bb-7eaec7351ced", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82cae29c-c767-493a-b5f2-1c129473ab96", "node_type": "1", "metadata": {}, "hash": "f7a0c68cf0a8931b6f0a6ad20962ea37882154059d3161eddf60b31eebbf9ac3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3", "node_type": "1", "metadata": {}, "hash": "a27621a6e7fb1b0d323007b6eaf9305117766ac3285cfd3248b21e1d376c9fcc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Object Access Rules\n\nThe object access rules include introduction, parenthood, endowment, and initial conditions, which help manage and control access to objects within the contract:", "mimetype": "text/plain", "start_char_idx": 1484, "end_char_idx": 1669, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3": {"__data__": {"id_": "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b26ca27-626d-44a1-b2bb-7eaec7351ced", "node_type": "1", "metadata": {}, "hash": "cacae390544aeef8a06f0041c0b81a763844b619378eeff8db98e46bc4cdf813", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b189c568-d524-43c3-9506-ebb9e734b0b4", "node_type": "1", "metadata": {}, "hash": "95ed87612ddf86bfc2d439c30497889b0f3b30ae2af31e98b58320d712011ed4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Introduction**: Objects can only reference other objects that they have been introduced to. This prevents unauthorized access by ensuring that only known objects can interact.\n- **Parenthood**: Objects can create child objects. The parent object has control over the child object\u2019s initial state and capabilities, defining what the child can and cannot do.", "mimetype": "text/plain", "start_char_idx": 1671, "end_char_idx": 2031, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b189c568-d524-43c3-9506-ebb9e734b0b4": {"__data__": {"id_": "b189c568-d524-43c3-9506-ebb9e734b0b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3", "node_type": "1", "metadata": {}, "hash": "a27621a6e7fb1b0d323007b6eaf9305117766ac3285cfd3248b21e1d376c9fcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58fcc06c-bf82-4066-b51d-7ccaa1f415f4", "node_type": "1", "metadata": {}, "hash": "80d5545a3da6bb8b1d58dd057ca97b31d3767566cd469f6c0aef48eca1fb6636", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Endowment**: Objects can be endowed with certain capabilities or resources upon creation. This allows the contract to control what actions an object can perform based on its endowments.\n- **Initial Conditions**: Objects are initialized with certain conditions or states. These initial conditions define the starting point for the object\u2019s behavior and interactions.", "mimetype": "text/plain", "start_char_idx": 2032, "end_char_idx": 2401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58fcc06c-bf82-4066-b51d-7ccaa1f415f4": {"__data__": {"id_": "58fcc06c-bf82-4066-b51d-7ccaa1f415f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-access-control.md", "node_type": "4", "metadata": {}, "hash": "b407f8eafb742be5553cfa39ffd4da81914bb14cd81e30ff5dd474321425dd73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b189c568-d524-43c3-9506-ebb9e734b0b4", "node_type": "1", "metadata": {}, "hash": "95ed87612ddf86bfc2d439c30497889b0f3b30ae2af31e98b58320d712011ed4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Also see [Object Capability Model](https://en.wikipedia.org/wiki/Object-capability_model)\n\nNext, let's look at minting and trading assets with [Zoe](../zoe/).", "mimetype": "text/plain", "start_char_idx": 2403, "end_char_idx": 2561, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d506b960-0110-4df8-8f9d-356b9f26ef73": {"__data__": {"id_": "d506b960-0110-4df8-8f9d-356b9f26ef73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6bfab0f-3406-498a-9242-a9dfa03b8d29", "node_type": "1", "metadata": {}, "hash": "c85b1e9ca7affb8c3b80977bbd8aa31a56589a990610e4e9b8fbd7a8dc1dcc89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Smart Contract Basics", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 23, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6bfab0f-3406-498a-9242-a9dfa03b8d29": {"__data__": {"id_": "d6bfab0f-3406-498a-9242-a9dfa03b8d29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d506b960-0110-4df8-8f9d-356b9f26ef73", "node_type": "1", "metadata": {}, "hash": "7f9e299252850bc4c73999171225a7a5129e8fa816f79a4dbb1ed9780d415e9f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a626448b-298a-47fd-8977-1f02292ff843", "node_type": "1", "metadata": {}, "hash": "281783e11ec44670836904837ed61a57032b2fd80aa86f9a684305fd254ac65d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This guide is designed to help developers understand how to write smart contracts efficiently and securely. Here, you will find detailed examples that demonstrate different functionalities and use-cases within the context of smart contracts starting from the very basics. To follow along, verify your work, or to get help if you get stuck, you can use the https://github.com/Agoric/dapp-offer-up/ repo as a reference. Each section of the tutorial has an associated branch in the repo to act as a checkpoint.", "mimetype": "text/plain", "start_char_idx": 25, "end_char_idx": 532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a626448b-298a-47fd-8977-1f02292ff843": {"__data__": {"id_": "a626448b-298a-47fd-8977-1f02292ff843", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6bfab0f-3406-498a-9242-a9dfa03b8d29", "node_type": "1", "metadata": {}, "hash": "c85b1e9ca7affb8c3b80977bbd8aa31a56589a990610e4e9b8fbd7a8dc1dcc89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc7b261d-c8c6-4305-a050-cd5d7fe2697a", "node_type": "1", "metadata": {}, "hash": "19d6b7247914e506a84a11b46c10843a5b0182414e6c52fb1d68dd03e7bf13bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Examples\n\nWe provide three core examples to illustrate how to implement various smart contract functionalities:\n\n### 1. Hello World Contract\n\nThe **Hello World Contract** demonstrates how to create a simple contract that greets the caller. This example is perfect for understanding the basic structure and syntax of smart contracts. The relevant code is available in [`tut-01-hello` branch](https://github.com/Agoric/dapp-offer-up/tree/tut-01-hello).\n\n### 2. State Contract", "mimetype": "text/plain", "start_char_idx": 534, "end_char_idx": 1010, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc7b261d-c8c6-4305-a050-cd5d7fe2697a": {"__data__": {"id_": "bc7b261d-c8c6-4305-a050-cd5d7fe2697a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a626448b-298a-47fd-8977-1f02292ff843", "node_type": "1", "metadata": {}, "hash": "281783e11ec44670836904837ed61a57032b2fd80aa86f9a684305fd254ac65d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc23e134-f11f-45dc-b480-ceb499148113", "node_type": "1", "metadata": {}, "hash": "c73db4678a1748e0dccd657177466b22b71d4c76269b038b2ddf2fdfd80a2cbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 2. State Contract\n\nThe **State Contract** shows how to maintain a state or a variable within a smart contract. This is useful for contracts that need to store data or state across transactions. The relevant code is available in [`tut-02-state` branch](https://github.com/Agoric/dapp-offer-up/tree/tut-02-state).\n\n### 3. Access-Control Contract", "mimetype": "text/plain", "start_char_idx": 989, "end_char_idx": 1336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc23e134-f11f-45dc-b480-ceb499148113": {"__data__": {"id_": "dc23e134-f11f-45dc-b480-ceb499148113", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc7b261d-c8c6-4305-a050-cd5d7fe2697a", "node_type": "1", "metadata": {}, "hash": "19d6b7247914e506a84a11b46c10843a5b0182414e6c52fb1d68dd03e7bf13bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b632d194-3f6b-4e5c-83b2-0c10bd3dcfca", "node_type": "1", "metadata": {}, "hash": "4f0786d9ee7a6bf13895844ae67bec24da7f25790eeda8af3c5ba47df6660ca6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### 3. Access-Control Contract\n\nThe **Access-Control Contract** provides an example of how to implement access control, ensuring that only authorized users can call certain functions within the smart contract. The relevant code is available in [`tut-03-access` branch](https://github.com/Agoric/dapp-offer-up/tree/tut-03-access).\n\nLet us get started!\n\nSee also:", "mimetype": "text/plain", "start_char_idx": 1306, "end_char_idx": 1667, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b632d194-3f6b-4e5c-83b2-0c10bd3dcfca": {"__data__": {"id_": "b632d194-3f6b-4e5c-83b2-0c10bd3dcfca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-basics.md", "node_type": "4", "metadata": {}, "hash": "8477287aa4826be8b539a8f521c936e7444f16415cad081b2139de0f71694abf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc23e134-f11f-45dc-b480-ceb499148113", "node_type": "1", "metadata": {}, "hash": "c73db4678a1748e0dccd657177466b22b71d4c76269b038b2ddf2fdfd80a2cbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let us get started!\n\nSee also:\n\n- [\\$LOCKDOWN_OPTIONS for better diagnositcs](https://github.com/Agoric/agoric-sdk/wiki/Developing-with-better-error-diagnostics)\n- [\\$DEBUG](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#debug)\n- [\\$TRACK_TURNS](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#track_turns)", "mimetype": "text/plain", "start_char_idx": 1637, "end_char_idx": 1970, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8c56c7b-1e1a-4df1-89a5-5b270640e62c": {"__data__": {"id_": "b8c56c7b-1e1a-4df1-89a5-5b270640e62c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33de0ab2-090b-44d5-b335-5ee18c6acd20", "node_type": "1", "metadata": {}, "hash": "51de335646809675b9a79f7db9a2429b8940535f17c0bc8f2bafee09b2a8e6b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Durable Contract Details\n\nZoe allows you to write smart contracts that manage interactions between cooperative, but possibly untrusting,\nparties. Some contracts perform a single simple task like trading one good for another, and then are\ndone. Others stay around and manage assets and interactions over time. The first kind don't need persistence\nor the ability to upgrade, while the second kind need to make use of more sophisticated functionality.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 451, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33de0ab2-090b-44d5-b335-5ee18c6acd20": {"__data__": {"id_": "33de0ab2-090b-44d5-b335-5ee18c6acd20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8c56c7b-1e1a-4df1-89a5-5b270640e62c", "node_type": "1", "metadata": {}, "hash": "29244258fc12c6d881d797a727e2906d08ccaca94c127836335c772e09a6eb53", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "542cc243-e4d4-4b08-9839-b2d124184caf", "node_type": "1", "metadata": {}, "hash": "6ff30ae0b01303320e06976802b0a3f417862e27204ccded06dd9bf160a60982", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When a contract is intended to continue running and serving many customers over a long time, its objects and\ndata need to be persistent, its owners or managers may need to be able to adjust parameters or perform other\ngovernance actions, and it needs to be upgradeable so that the code can adapt over time.\n\n## Durable Objects", "mimetype": "text/plain", "start_char_idx": 453, "end_char_idx": 779, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "542cc243-e4d4-4b08-9839-b2d124184caf": {"__data__": {"id_": "542cc243-e4d4-4b08-9839-b2d124184caf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33de0ab2-090b-44d5-b335-5ee18c6acd20", "node_type": "1", "metadata": {}, "hash": "51de335646809675b9a79f7db9a2429b8940535f17c0bc8f2bafee09b2a8e6b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee", "node_type": "1", "metadata": {}, "hash": "3b98aa38f3bbc30d9e453eda663ef7f5ed8d376676756c3e2b858ede6aa481e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Durable Objects\n\nThe first step toward contracts that can be upgraded is storing all the data that a later incarnation will\nneed. This means putting relevant state in\n[Baggage](http://localhost:5173/guides/zoe/contract-upgrade.html#baggage), and ensuring that reachable objects\nthat will be accessible to users have an identity that can be maintained as the behavior changes with contract\nupgrades.\n\nWe use zone.exo(), zone.exoClass(), and zone.exoClassKit() to  define durable objects.", "mimetype": "text/plain", "start_char_idx": 761, "end_char_idx": 1250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee": {"__data__": {"id_": "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "542cc243-e4d4-4b08-9839-b2d124184caf", "node_type": "1", "metadata": {}, "hash": "6ff30ae0b01303320e06976802b0a3f417862e27204ccded06dd9bf160a60982", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09c2e092-8034-4be4-84fe-3aa196b9320c", "node_type": "1", "metadata": {}, "hash": "da2dbfa948cd3cff7c920fd8d5f6dfe5c533fbdca92f63ac2d48a878cb1fb34a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[Zone](http://localhost:5173/glossary/#zone) provides an interface for defining objects and classes that\nsupports both ephemeral objects (allocated on the heap), and durable objects that can persist and that\nSwingSet will page in or out on demand.", "mimetype": "text/plain", "start_char_idx": 1253, "end_char_idx": 1500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09c2e092-8034-4be4-84fe-3aa196b9320c": {"__data__": {"id_": "09c2e092-8034-4be4-84fe-3aa196b9320c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee", "node_type": "1", "metadata": {}, "hash": "3b98aa38f3bbc30d9e453eda663ef7f5ed8d376676756c3e2b858ede6aa481e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54927b82-4f1e-4b68-96b2-fc531e8099dc", "node_type": "1", "metadata": {}, "hash": "200552bc8e2563aaa131111e4e066b8a4cbc13c47964373e8824c02f1427c5f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Our persistent objects are designed to encapsulate their state, and can present different facets to different\nclients to distinguish different aspects of authority. `zone.exoClass()` defines a kind with a single facet,\nwhile `zone.exoClassKit()` defines a kind with multiple facets. (Here are some relevant [naming\nconventions](https://docs.agoric.com/guides/ertp/#method-naming-structure).)", "mimetype": "text/plain", "start_char_idx": 1502, "end_char_idx": 1893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54927b82-4f1e-4b68-96b2-fc531e8099dc": {"__data__": {"id_": "54927b82-4f1e-4b68-96b2-fc531e8099dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09c2e092-8034-4be4-84fe-3aa196b9320c", "node_type": "1", "metadata": {}, "hash": "da2dbfa948cd3cff7c920fd8d5f6dfe5c533fbdca92f63ac2d48a878cb1fb34a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8ff539c-6244-4fef-966a-2e91a084ab82", "node_type": "1", "metadata": {}, "hash": "62b685a886272197ed8ecda012c467e9a426c9d44fff5cac19d7418e9eda20bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nzone.exoClassKit(tag, guard, init, methodKit, options)\nzone.exoClass(tag, guard, init, methods, options)\nzone.exo(tag, guard, methods, options)\n```\n\nThe next several sub-sections explain how the parameters to those functions are used.\n\n### Tag: naming kinds of objects", "mimetype": "text/plain", "start_char_idx": 1895, "end_char_idx": 2167, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8ff539c-6244-4fef-966a-2e91a084ab82": {"__data__": {"id_": "f8ff539c-6244-4fef-966a-2e91a084ab82", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54927b82-4f1e-4b68-96b2-fc531e8099dc", "node_type": "1", "metadata": {}, "hash": "200552bc8e2563aaa131111e4e066b8a4cbc13c47964373e8824c02f1427c5f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34a020b6-766e-4f31-a18a-4db5f66441b9", "node_type": "1", "metadata": {}, "hash": "2b041ad20c3c1ee2816350f526948bfd47087cae02ac433b0f2bdfaa6ed0abe2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Tag: naming kinds of objects\n\nThe `tag` provides the identity of the kind of object, which is associated with the defined behavior. When a\ncontract (or other vat) is restarted or upgraded, SwingSet requires that all kinds that were previously\ndefined in a vat be defined again. With an upgrade, the behavior can be changed. We use the term \"null\nupgrade\" to refer to upgrades that don't change the behavior.\n\n### Init: specifying state", "mimetype": "text/plain", "start_char_idx": 2135, "end_char_idx": 2574, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34a020b6-766e-4f31-a18a-4db5f66441b9": {"__data__": {"id_": "34a020b6-766e-4f31-a18a-4db5f66441b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8ff539c-6244-4fef-966a-2e91a084ab82", "node_type": "1", "metadata": {}, "hash": "62b685a886272197ed8ecda012c467e9a426c9d44fff5cac19d7418e9eda20bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e", "node_type": "1", "metadata": {}, "hash": "a3493a55cddc2c5d2f4858a35411ff59dc6b4aaa2622b668698a8931478db35b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `init` parameter defines a function that is used to define the state associated with each instance of an\nobject. Notice that `exo()` doesn't take `init` as a parameter; this limits the defined (singleton) object to\nreferencing values defined in the enclosing scope. Classes can also refer to variables in their defining\nscope, but any values inherited from the scope will be accessible to all instances of that type. The `init`", "mimetype": "text/plain", "start_char_idx": 2576, "end_char_idx": 3007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e": {"__data__": {"id_": "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34a020b6-766e-4f31-a18a-4db5f66441b9", "node_type": "1", "metadata": {}, "hash": "2b041ad20c3c1ee2816350f526948bfd47087cae02ac433b0f2bdfaa6ed0abe2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ebb6620-193e-4b1d-8981-09cb15946180", "node_type": "1", "metadata": {}, "hash": "66c5417d722791307ffaa8670cb5bc2676e995b45a26dca08d8e7bf7edef0e38", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function's parameters become the parameters of the maker function returned by `exoClass()` and\n`exoClassKit()`.  `init`'s return value is the state that will be preserved by SwingSet for each\nobject. `exo()` doesn't have an init parameter, so it creates and returns the singleton immediately rather\nthan returning a maker.", "mimetype": "text/plain", "start_char_idx": 3008, "end_char_idx": 3330, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ebb6620-193e-4b1d-8981-09cb15946180": {"__data__": {"id_": "1ebb6620-193e-4b1d-8981-09cb15946180", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e", "node_type": "1", "metadata": {}, "hash": "a3493a55cddc2c5d2f4858a35411ff59dc6b4aaa2622b668698a8931478db35b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4df3c633-23b5-41f9-89d7-f8df9fc30236", "node_type": "1", "metadata": {}, "hash": "225ef9f0ec4e592cde97ba78811ffa97ce1a6c4c041653f1588d5fcbd68cf50a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Exo objects (or just \"Exos\") defined by these functions are both persistent and virtualizable. SwingSet\nknows their complete state, so it can page them out when space is tight, and page them back in when they are\nreferenced again.", "mimetype": "text/plain", "start_char_idx": 3332, "end_char_idx": 3566, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4df3c633-23b5-41f9-89d7-f8df9fc30236": {"__data__": {"id_": "4df3c633-23b5-41f9-89d7-f8df9fc30236", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ebb6620-193e-4b1d-8981-09cb15946180", "node_type": "1", "metadata": {}, "hash": "66c5417d722791307ffaa8670cb5bc2676e995b45a26dca08d8e7bf7edef0e38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27f32658-accc-443c-96b6-efd3706cea72", "node_type": "1", "metadata": {}, "hash": "dcb0e935b663c779a0d285b63b0cc642004b672d07bf9ff6103f7ced95c3dc8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Fields of the object returned by the `init` function become fields of the persistent state. (These cannot\ncurrently be changed on upgrade, though we're considering relaxing that restriction.) Within methods they can\neach be accessed as fields of `this.state`. Our convention is to extract the fields that will be used in a\nmethod on its first line, like `const { a, b } = this.state;` Once that has been done, those variable can be", "mimetype": "text/plain", "start_char_idx": 3568, "end_char_idx": 3999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27f32658-accc-443c-96b6-efd3706cea72": {"__data__": {"id_": "27f32658-accc-443c-96b6-efd3706cea72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4df3c633-23b5-41f9-89d7-f8df9fc30236", "node_type": "1", "metadata": {}, "hash": "225ef9f0ec4e592cde97ba78811ffa97ce1a6c4c041653f1588d5fcbd68cf50a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1603918d-ce1b-4938-8028-1cca1570970f", "node_type": "1", "metadata": {}, "hash": "d00b0f965198d7e55e9b09d2ea3cf329d72ff375f8814683bb303a07724a2694", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "read or written as normal javascript variables, and the values will persist. (For more details, see [the note\nhere](https://docs.agoric.com/guides/zoe/contract-upgrade.html#kinds)).", "mimetype": "text/plain", "start_char_idx": 4000, "end_char_idx": 4181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1603918d-ce1b-4938-8028-1cca1570970f": {"__data__": {"id_": "1603918d-ce1b-4938-8028-1cca1570970f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27f32658-accc-443c-96b6-efd3706cea72", "node_type": "1", "metadata": {}, "hash": "dcb0e935b663c779a0d285b63b0cc642004b672d07bf9ff6103f7ced95c3dc8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "452258fe-741c-4125-b966-74a200480ec1", "node_type": "1", "metadata": {}, "hash": "251885035f9df95a48f084ce855bef360b93c4284c872f95581638b7429ba961", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Methods: defining behavior\n\nThe methods argument of `exoClass()` is a bag of methods, written in [concise method\nsyntax](https://github.com/Agoric/agoric-sdk/wiki/Arrow-Function-Style#far-classes-do-not-use-arrow-function-style).\n`exoClass()` defines a single facet.", "mimetype": "text/plain", "start_char_idx": 4183, "end_char_idx": 4453, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "452258fe-741c-4125-b966-74a200480ec1": {"__data__": {"id_": "452258fe-741c-4125-b966-74a200480ec1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1603918d-ce1b-4938-8028-1cca1570970f", "node_type": "1", "metadata": {}, "hash": "d00b0f965198d7e55e9b09d2ea3cf329d72ff375f8814683bb303a07724a2694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4799cd63-5431-44b0-9bae-1ee415fdfb36", "node_type": "1", "metadata": {}, "hash": "b8fb4de07ea0ca5e4bb6a830e18549fa52ef500441469394e274deaf13a10653", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The methodKit parameter to `exoClassKit` is a record of labelled bags of methods. Each label defines a facet\nof the object. All facets of each object share access to the same state, but each facet is a separate\ncapability. Within the methods, other facets can be reached by name within `this.facets`. The maker you get\nfrom `exoClassKit()` builds a new object each time it is called, and return all the facets. The caller can\ndecide which of the facets to pass to each recipient.\n\n### Guards: defensive methods", "mimetype": "text/plain", "start_char_idx": 4455, "end_char_idx": 4965, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4799cd63-5431-44b0-9bae-1ee415fdfb36": {"__data__": {"id_": "4799cd63-5431-44b0-9bae-1ee415fdfb36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "452258fe-741c-4125-b966-74a200480ec1", "node_type": "1", "metadata": {}, "hash": "251885035f9df95a48f084ce855bef360b93c4284c872f95581638b7429ba961", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "809453a0-e465-4c84-84dc-2d6d79d93580", "node_type": "1", "metadata": {}, "hash": "fe1f6276853f4ac8ab2ddb9a60c18ea7e9e3dccc9bb6cded7703d2431a8e276d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "These objects and facets are designed to be durable and shareable across address space boundaries. Since code\nin different vats might not be mutually trusting, code needs to be defensive about parameters received from\nremote callers. Interface Guards let us express in code what parameters each method expects and can handle\nsafely. If a caller provides a parameter that doesn't match the template specified in the guard, SwingSet", "mimetype": "text/plain", "start_char_idx": 4967, "end_char_idx": 5397, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "809453a0-e465-4c84-84dc-2d6d79d93580": {"__data__": {"id_": "809453a0-e465-4c84-84dc-2d6d79d93580", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4799cd63-5431-44b0-9bae-1ee415fdfb36", "node_type": "1", "metadata": {}, "hash": "b8fb4de07ea0ca5e4bb6a830e18549fa52ef500441469394e274deaf13a10653", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c25009ca-89e3-45eb-9e41-97874166d396", "node_type": "1", "metadata": {}, "hash": "ecf4d7cd03f2cc15ec8ec227ad32faabc4a4acde2e8d92d67babdaf71cc82822", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "returns an exception to the caller without notifying the receiver. If the return value doesn't match, the\nfunction returns an exception to the caller.", "mimetype": "text/plain", "start_char_idx": 5398, "end_char_idx": 5548, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c25009ca-89e3-45eb-9e41-97874166d396": {"__data__": {"id_": "c25009ca-89e3-45eb-9e41-97874166d396", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "809453a0-e465-4c84-84dc-2d6d79d93580", "node_type": "1", "metadata": {}, "hash": "fe1f6276853f4ac8ab2ddb9a60c18ea7e9e3dccc9bb6cded7703d2431a8e276d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3", "node_type": "1", "metadata": {}, "hash": "724b5c5d2599bdb286a8f17442bcda22629c44e4b11db5ef9b8e9230536af193", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`exoClass()` takes a guard for a single interface, defined by\n\n```\nM.interface('name', {\n  methodA: M.call(paramsAShape).returns(resultAShape),\n  methodB: M.callWhen(M.await(paramsBShape)).returns(resultBShape),\n}\n```", "mimetype": "text/plain", "start_char_idx": 5550, "end_char_idx": 5767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3": {"__data__": {"id_": "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c25009ca-89e3-45eb-9e41-97874166d396", "node_type": "1", "metadata": {}, "hash": "ecf4d7cd03f2cc15ec8ec227ad32faabc4a4acde2e8d92d67babdaf71cc82822", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c", "node_type": "1", "metadata": {}, "hash": "0cae17ca1487e55d7a3a6767ef7063f4557f37b7015e29cdf9f8ace976d6fddd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`M.call()` verifies that all parameters match the guard before passing them through to the\nmethod. `M.callWhen(M.await(paramsBGuard))` awaits the resolution of the parameter, and then verifies that the\nresult matches before invoking the method. When a guard is written this latter way, the method doesn't have to\nbe `async`. In both cases, the method  doesn't have to check for compliance with the guard.", "mimetype": "text/plain", "start_char_idx": 5769, "end_char_idx": 6173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c": {"__data__": {"id_": "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3", "node_type": "1", "metadata": {}, "hash": "724b5c5d2599bdb286a8f17442bcda22629c44e4b11db5ef9b8e9230536af193", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b12b5e7-cd56-4c84-9c74-c602c74ad489", "node_type": "1", "metadata": {}, "hash": "98f0ceeb7fea39c367f1f2c1d96ff0594421b9554f78fb1e2d5edddb0c2b7a4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[Shapes can specify](https://endojs.github.io/endo/interfaces/_endo_patterns.PatternMatchers.html) simple\ntypes like `M.string()`, `M.remotable()`, and `M.number()`, as well as complex structures of records and\narrays. The list of parameters can specify required and optional parameters, as well as allowing unspecified\nrest parameters.", "mimetype": "text/plain", "start_char_idx": 6175, "end_char_idx": 6511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b12b5e7-cd56-4c84-9c74-c602c74ad489": {"__data__": {"id_": "2b12b5e7-cd56-4c84-9c74-c602c74ad489", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c", "node_type": "1", "metadata": {}, "hash": "0cae17ca1487e55d7a3a6767ef7063f4557f37b7015e29cdf9f8ace976d6fddd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7643f9a3-0a3d-4777-a289-e0657b09c71b", "node_type": "1", "metadata": {}, "hash": "63857e9e9a2cc6d61e352ecce4161ebf735ed70da7114e45d09107cee4dcb10e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If you want to make use of the power of this type-checking within methods, you can call `mustMatch(specimen,\npattern)` or `matches(specimen, pattern)` directly. The former throws if the pattern doesn't match, while the\nlatter returns a boolean.\n\n### Options: finish and stateShape", "mimetype": "text/plain", "start_char_idx": 6513, "end_char_idx": 6793, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7643f9a3-0a3d-4777-a289-e0657b09c71b": {"__data__": {"id_": "7643f9a3-0a3d-4777-a289-e0657b09c71b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b12b5e7-cd56-4c84-9c74-c602c74ad489", "node_type": "1", "metadata": {}, "hash": "98f0ceeb7fea39c367f1f2c1d96ff0594421b9554f78fb1e2d5edddb0c2b7a4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e624b34d-1fbd-425a-b11a-f20246515e8b", "node_type": "1", "metadata": {}, "hash": "74789fde558094e69cd13bb377f72d4998bd717f6e0175d4ee0090f4f61e46b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Options: finish and stateShape\n\nAll the type definers can also take an [options\nargument](https://endojs.github.io/endo/types/_endo_exo.FarClassOptions.html) at the end, which is commonly\nused for a `finish()` function to complete initialization, or a stateShape, which can enforce invariants on\nthe state values.", "mimetype": "text/plain", "start_char_idx": 6759, "end_char_idx": 7076, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e624b34d-1fbd-425a-b11a-f20246515e8b": {"__data__": {"id_": "e624b34d-1fbd-425a-b11a-f20246515e8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-details.md", "node_type": "4", "metadata": {}, "hash": "7778df4334a363475e414b2fe50aa275220a1061f8011a6d758d922fd1371cfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7643f9a3-0a3d-4777-a289-e0657b09c71b", "node_type": "1", "metadata": {}, "hash": "63857e9e9a2cc6d61e352ecce4161ebf735ed70da7114e45d09107cee4dcb10e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`finish()`, if provided, is called after instances have been created but before they are returned to the\ncaller. They can be used to send an initial state update, or to complete initialization which couldn't be done\nin `init`. `finish` has access to state and facets if needed.", "mimetype": "text/plain", "start_char_idx": 7078, "end_char_idx": 7355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7afc97d-37cb-4c78-a94f-108ceaa68d8e": {"__data__": {"id_": "e7afc97d-37cb-4c78-a94f-108ceaa68d8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a", "node_type": "1", "metadata": {}, "hash": "aa7af22316040b1a947745dd571add43117c88ec97d5d1520d165357320c8e8c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Hello World Smart Contract\n\nBefore we look at how to make a contract such as the one in [the\nbasic dapp](../getting-started/) in the previous section, let's cover some basics by writing a simple contract that returns a greeting message. We will simply call it _hello-world smart contract_.\n\nA contract is defined by a JavaScript module that exports a `start` function. For our hello-world smart contract, the declaration of `start` function looks like this:\n\n<<< @/../snippets/zoe/src/01-hello.js#start", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 504, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a": {"__data__": {"id_": "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7afc97d-37cb-4c78-a94f-108ceaa68d8e", "node_type": "1", "metadata": {}, "hash": "a77a192da4a3f49a5023b89d1126f2600217b28c24fc3553e28f3d128d0916d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2", "node_type": "1", "metadata": {}, "hash": "eb651667715f043c2d5162257ec4e3fb77e06083e65d08b3cd07aa505648d65a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For the hello-world smart contract, we will have a simple `greet` function apart from `start` function. The `greet` function takes a string as a parameter (for example, name of the person calling the function) and returns a customized greeting message.\n\n<<< @/../snippets/zoe/src/01-hello.js#greet", "mimetype": "text/plain", "start_char_idx": 506, "end_char_idx": 803, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2": {"__data__": {"id_": "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a", "node_type": "1", "metadata": {}, "hash": "aa7af22316040b1a947745dd571add43117c88ec97d5d1520d165357320c8e8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f1ca97f-d384-4915-81c2-eb9e7a376021", "node_type": "1", "metadata": {}, "hash": "87466c89b2e8775a4badec7d70e3165cca5304a428bf891ee44f974d3602392d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `greet` function, along with any other public function, must be made accessible through the `publicFacet` of the contract. The `start` function returns an object with a `publicFacet` property. In the hello-world contract, the `start` function exposes the `greet` function by defining it as a method of the contract's `publicFacet`, as shown below:\n\n<<< @/../snippets/zoe/src/01-hello.js#publicFacet", "mimetype": "text/plain", "start_char_idx": 805, "end_char_idx": 1207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f1ca97f-d384-4915-81c2-eb9e7a376021": {"__data__": {"id_": "3f1ca97f-d384-4915-81c2-eb9e7a376021", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2", "node_type": "1", "metadata": {}, "hash": "eb651667715f043c2d5162257ec4e3fb77e06083e65d08b3cd07aa505648d65a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b6200ef-c8a1-4de2-bd4a-b93309842646", "node_type": "1", "metadata": {}, "hash": "4d78c77f18b26535de15273956306c6a7b0772c11a78134b1f97bae95383eb07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We wrap the value of the `publicFacet` property in a `Far(...)` call to safely expose it as a remote object, accessible from outside the contract. This also gives it a suggestive interface name `Hello` for debugging.\n_We'll discuss [Far in more detail](../js-programming/far) later._\n\nPutting it all together:\n\n<<< @/../snippets/zoe/src/01-hello.js#contract\n\nLet us save this code to a file named `01-hello.js` inside `src` directory.\n\n## Testing a contract", "mimetype": "text/plain", "start_char_idx": 1209, "end_char_idx": 1666, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b6200ef-c8a1-4de2-bd4a-b93309842646": {"__data__": {"id_": "6b6200ef-c8a1-4de2-bd4a-b93309842646", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f1ca97f-d384-4915-81c2-eb9e7a376021", "node_type": "1", "metadata": {}, "hash": "87466c89b2e8775a4badec7d70e3165cca5304a428bf891ee44f974d3602392d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e36a584-39b4-4015-b0c6-dd548c8ef532", "node_type": "1", "metadata": {}, "hash": "0034c1650509925d8e81f4180e74f0754ce6f322b367eda0c24aaffe1991dc51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Agoric contracts are typically tested using the [ava](https://github.com/avajs/ava) framework. The test file begins with an `import @endo/init` to establish a [Hardened JavaScript](../js-programming/hardened-js) environment. We also import `E()` in order to make asynchronous method calls and `test` function from `ava`. _We'll talk more about [using `E()` for async method calls](../js-programming/eventual-send) later._ Following these `import` statements, we write a simple test that validates that the", "mimetype": "text/plain", "start_char_idx": 1668, "end_char_idx": 2173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2e36a584-39b4-4015-b0c6-dd548c8ef532": {"__data__": {"id_": "2e36a584-39b4-4015-b0c6-dd548c8ef532", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b6200ef-c8a1-4de2-bd4a-b93309842646", "node_type": "1", "metadata": {}, "hash": "4d78c77f18b26535de15273956306c6a7b0772c11a78134b1f97bae95383eb07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83", "node_type": "1", "metadata": {}, "hash": "5ef0372783f3e140c6abbaf64b96885e04c0256bf7bdcba83a5b65c8e06953f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "simple test that validates that the `greet` method works as expected.", "mimetype": "text/plain", "start_char_idx": 2138, "end_char_idx": 2207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83": {"__data__": {"id_": "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e36a584-39b4-4015-b0c6-dd548c8ef532", "node_type": "1", "metadata": {}, "hash": "0034c1650509925d8e81f4180e74f0754ce6f322b367eda0c24aaffe1991dc51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "307a6503-144b-419b-add4-033fea470b50", "node_type": "1", "metadata": {}, "hash": "1e80cd6620aff9a2b1dd1c383b2054604b1b31c24df70eaa9273056b8549a51b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Putting it all together:\n\n<<< @/../snippets/zoe/contracts/test-zoe-01-hello.js#test-01-hello\n\nLet's save this code in a file named `test-01-hello.js` in a `test` directory. Both `src` and `test` directories should lie in the same `contract` directory. Let us run the following command to execute the test:\n\n```sh\nyarn ava --match=\"contract greets by name\"\n```\n\nYou should see the following line towards the end of the output:\n\n```\n1 test passed\n```", "mimetype": "text/plain", "start_char_idx": 2209, "end_char_idx": 2657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "307a6503-144b-419b-add4-033fea470b50": {"__data__": {"id_": "307a6503-144b-419b-add4-033fea470b50", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83", "node_type": "1", "metadata": {}, "hash": "5ef0372783f3e140c6abbaf64b96885e04c0256bf7bdcba83a5b65c8e06953f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78578ec8-bf88-4769-a2a2-e27139a68f33", "node_type": "1", "metadata": {}, "hash": "0c49e0e84535ee2dd68884da37fcabe1907256675ab0ff2e584ad0479bc8bc61", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n1 test passed\n```\n\nCongratulations! You have written and tested your first smart contract. Our next goal is to learn about the state of a smart contract.\n\nIf you're having trouble, check out the [`tut-01-hello`](https://github.com/Agoric/dapp-offer-up/tree/tut-01-hello) branch in the example repo.\n\nSee also:", "mimetype": "text/plain", "start_char_idx": 2636, "end_char_idx": 2949, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78578ec8-bf88-4769-a2a2-e27139a68f33": {"__data__": {"id_": "78578ec8-bf88-4769-a2a2-e27139a68f33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-hello.md", "node_type": "4", "metadata": {}, "hash": "d8df1175e3b00a3a913f5b6103a91ccab892febf2716016e699409c790363b98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "307a6503-144b-419b-add4-033fea470b50", "node_type": "1", "metadata": {}, "hash": "1e80cd6620aff9a2b1dd1c383b2054604b1b31c24df70eaa9273056b8549a51b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See also:\n\n- [\\$LOCKDOWN_OPTIONS for better diagnositcs](https://github.com/Agoric/agoric-sdk/wiki/Developing-with-better-error-diagnostics)\n- [\\$DEBUG](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#debug)\n- [\\$TRACK_TURNS](https://github.com/Agoric/agoric-sdk/blob/master/docs/env.md#track_turns)", "mimetype": "text/plain", "start_char_idx": 2940, "end_char_idx": 3252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3986fc4d-36d0-49a2-b922-12287a0c9b64": {"__data__": {"id_": "3986fc4d-36d0-49a2-b922-12287a0c9b64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a323ac27-986e-4059-9193-e53df6fead00", "node_type": "1", "metadata": {}, "hash": "c761ad7a41d5ccaff85b6df76dfecd2e1c8663bb68e4e6b07383c9c5ddefe5e9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Contract Requirements\n\n<Zoe-Version/>\n\nWhen writing a smart contract to run on Zoe, you need\nto know the proper format and other expectations.\n\nA Zoe smart contract is a JavaScript module that exports a `start` function\nand may import other code, including:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 259, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a323ac27-986e-4059-9193-e53df6fead00": {"__data__": {"id_": "a323ac27-986e-4059-9193-e53df6fead00", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3986fc4d-36d0-49a2-b922-12287a0c9b64", "node_type": "1", "metadata": {}, "hash": "fe3500fdf12dc338ca2369115394eb37abaa84300991cd4dc3b5552afb6ba02f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1850b0e8-bd6a-43e0-b369-74275f2b39cd", "node_type": "1", "metadata": {}, "hash": "46677dc01390b68a12e2c09d37583d56b3e445b33e4f822243fd7b5d6285496b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [@endo/harden](https://www.npmjs.com/package/@endo/harden): A package for recursively deep-freezing.\n- [@endo/nat](https://www.npmjs.com/package/@endo/nat): A package\n  for testing whether something is a natural number (natural numbers\n  are recommended for currency-related programming in order to avoid\n  rounding issues) and throwing an error if not.\n- [@agoric/notifier](https://www.npmjs.com/package/@agoric/zoe): A package that provides updates through\n  smartly resolving promises rather than polling.", "mimetype": "text/plain", "start_char_idx": 261, "end_char_idx": 771, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1850b0e8-bd6a-43e0-b369-74275f2b39cd": {"__data__": {"id_": "1850b0e8-bd6a-43e0-b369-74275f2b39cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a323ac27-986e-4059-9193-e53df6fead00", "node_type": "1", "metadata": {}, "hash": "c761ad7a41d5ccaff85b6df76dfecd2e1c8663bb68e4e6b07383c9c5ddefe5e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd7ef474-3afb-4e60-a7d5-07e3532304a0", "node_type": "1", "metadata": {}, "hash": "ebc47081bb11079afd87a505ba84be946bd103556ea986b814bbbe91421ded7f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [@agoric/zoe](https://www.npmjs.com/package/@agoric/zoe): Zoe has\n  helpers that contracts can use by importing\n  `@agoric/zoe/src/contractSupport/zoeHelpers.js`.", "mimetype": "text/plain", "start_char_idx": 772, "end_char_idx": 936, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd7ef474-3afb-4e60-a7d5-07e3532304a0": {"__data__": {"id_": "fd7ef474-3afb-4e60-a7d5-07e3532304a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1850b0e8-bd6a-43e0-b369-74275f2b39cd", "node_type": "1", "metadata": {}, "hash": "46677dc01390b68a12e2c09d37583d56b3e445b33e4f822243fd7b5d6285496b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09909dd4-e8f4-407a-9ad1-821417b36003", "node_type": "1", "metadata": {}, "hash": "d8d098b16afdf3ca22f16e2376b611e87997a75e2f7ccb4df9b9f9a563e819f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A Zoe contract will be bundled up, so you should feel free to divide\nyour contract into multiple files (perhaps putting helper functions in a\nseparate file, for example) and import them.", "mimetype": "text/plain", "start_char_idx": 938, "end_char_idx": 1124, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09909dd4-e8f4-407a-9ad1-821417b36003": {"__data__": {"id_": "09909dd4-e8f4-407a-9ad1-821417b36003", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd7ef474-3afb-4e60-a7d5-07e3532304a0", "node_type": "1", "metadata": {}, "hash": "ebc47081bb11079afd87a505ba84be946bd103556ea986b814bbbe91421ded7f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9499c368-c7ce-4194-bc38-fb3556e7e9cf", "node_type": "1", "metadata": {}, "hash": "53fadafffba2805a3e722160386b870cbf1c8266531a4a7b8738bdc037980197", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A Zoe contract needs to be able to run under [Agoric's SES shim for Hardened JavaScript](https://github.com/endojs/endo/tree/master/packages/ses). Some legacy\nJavaScript code is incompatible with Hardened JavaScript, because Lockdown freezes the\nJavaScript objects you start out with (the primordials, such as `Object`), and some legacy code tries to\nmutate these.", "mimetype": "text/plain", "start_char_idx": 1126, "end_char_idx": 1490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9499c368-c7ce-4194-bc38-fb3556e7e9cf": {"__data__": {"id_": "9499c368-c7ce-4194-bc38-fb3556e7e9cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09909dd4-e8f4-407a-9ad1-821417b36003", "node_type": "1", "metadata": {}, "hash": "d8d098b16afdf3ca22f16e2376b611e87997a75e2f7ccb4df9b9f9a563e819f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f412e368-6474-4c2a-b100-2cb9604bee9a", "node_type": "1", "metadata": {}, "hash": "7e8329e61ec4f58f552a42f2881f00b931fdeb6c3972df7e328c7bbe361eda56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If you add this type annotation, TypeScript-aware tools\n(IDEs like vsCode and WebStorm) will inform the developer about parameters\nand return values for your contract and `zcf` methods and warn about mismatches.\nPut it right before the start of your contract code.\n\n```js\n/**\n * @type {ContractStartFn}\n */\n```", "mimetype": "text/plain", "start_char_idx": 1492, "end_char_idx": 1802, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f412e368-6474-4c2a-b100-2cb9604bee9a": {"__data__": {"id_": "f412e368-6474-4c2a-b100-2cb9604bee9a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9499c368-c7ce-4194-bc38-fb3556e7e9cf", "node_type": "1", "metadata": {}, "hash": "53fadafffba2805a3e722160386b870cbf1c8266531a4a7b8738bdc037980197", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccb66049-d0fc-4a08-8153-f27bddd019ec", "node_type": "1", "metadata": {}, "hash": "0f791d0d6654387f5df34c841d36650d97b5ac4a67e40ad1c2be1d7b759c9b4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Your contract code must export a function `start` as a non-default export.\n`zcf` is the [Zoe Contract Facet](/reference/zoe-api/zoe-contract-facet) and is\nthe first argument provided to the contract.\nThe second argument, `privateArgs`, is used by the caller of `startInstance`\nto pass in any arguments that should not be part of the public terms.\n`privateArgs` is an object with keys and values as decided by the caller of\n`startInstance`. If no private arguments are passed, `privateArgs` is undefined.", "mimetype": "text/plain", "start_char_idx": 1804, "end_char_idx": 2307, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ccb66049-d0fc-4a08-8153-f27bddd019ec": {"__data__": {"id_": "ccb66049-d0fc-4a08-8153-f27bddd019ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f412e368-6474-4c2a-b100-2cb9604bee9a", "node_type": "1", "metadata": {}, "hash": "7e8329e61ec4f58f552a42f2881f00b931fdeb6c3972df7e328c7bbe361eda56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa", "node_type": "1", "metadata": {}, "hash": "075cc90f62635b18c26743c9b337da06bb211fb76949ea78d360350c08299088", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst start = (zcf, privateArgs) => {\n  // ...\n  // your code here\n  return harden({ creatorFacet, creatorInvitation, publicFacet });\n};\nharden(start);\nexport { start };\n```\n\nThe contract must return a record with any (or none) of the following:", "mimetype": "text/plain", "start_char_idx": 2309, "end_char_idx": 2560, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa": {"__data__": {"id_": "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccb66049-d0fc-4a08-8153-f27bddd019ec", "node_type": "1", "metadata": {}, "hash": "0f791d0d6654387f5df34c841d36650d97b5ac4a67e40ad1c2be1d7b759c9b4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e89d62e4-47d7-4b7d-8402-7755a35792f4", "node_type": "1", "metadata": {}, "hash": "948f109f914f986e2363e38df57afce2e4148e2a7ebf96fae21080cc498f333a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **creatorFacet**: An object, usually with admin authority. It is only given to the entity\n  that calls `E(zoe).startInstance()`; i.e. the party that was the creator of the current\n  contract `instance`. It might create `invitations` for other parties, or take actions that\n  are unrelated to making offers.\n- **creatorInvitation**: A Zoe `invitation` only given to the entity that\n  calls `E(zoe).startInstance()`; i.e. the party that was the creator of the current", "mimetype": "text/plain", "start_char_idx": 2562, "end_char_idx": 3029, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e89d62e4-47d7-4b7d-8402-7755a35792f4": {"__data__": {"id_": "e89d62e4-47d7-4b7d-8402-7755a35792f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa", "node_type": "1", "metadata": {}, "hash": "075cc90f62635b18c26743c9b337da06bb211fb76949ea78d360350c08299088", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "393b77b0-aa2a-4ca3-a337-d8722508017c", "node_type": "1", "metadata": {}, "hash": "c73a32db3d3ed86519df6185254d4849bde59bac27d92d4a00e7b9a0c1c701b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "contract `instance`. This is usually used when a party has to make an offer first,\n  such as escrowing the underlying good for sale in an auction or covered call.\n- **publicFacet**: An object available through Zoe to anyone who knows the contract `instance`.\n  Use the `publicFacet` for general queries and actions, such as getting the current price\n  or creating public `invitations`.", "mimetype": "text/plain", "start_char_idx": 3032, "end_char_idx": 3417, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "393b77b0-aa2a-4ca3-a337-d8722508017c": {"__data__": {"id_": "393b77b0-aa2a-4ca3-a337-d8722508017c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e89d62e4-47d7-4b7d-8402-7755a35792f4", "node_type": "1", "metadata": {}, "hash": "948f109f914f986e2363e38df57afce2e4148e2a7ebf96fae21080cc498f333a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "247f7b99-15d4-405f-a258-c01676734f58", "node_type": "1", "metadata": {}, "hash": "103396d8141db42303b9e8fa572b4d602e371c450856ae133187fe4f666dbfbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The contract can contain arbitrary JavaScript code, but there are a few things you'll want\nto do in order to act as a contract, and interact with Zoe and zcf (the internal contract\nfacet).", "mimetype": "text/plain", "start_char_idx": 3419, "end_char_idx": 3607, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "247f7b99-15d4-405f-a258-c01676734f58": {"__data__": {"id_": "247f7b99-15d4-405f-a258-c01676734f58", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "393b77b0-aa2a-4ca3-a337-d8722508017c", "node_type": "1", "metadata": {}, "hash": "c73a32db3d3ed86519df6185254d4849bde59bac27d92d4a00e7b9a0c1c701b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9f9ea62-e1b4-4c61-8a59-cca7b251c991", "node_type": "1", "metadata": {}, "hash": "936061d8c6d1760726db93d40519062bd3c0e40251b93f2cdbd4efa8dff901b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For users to make offers, the contract has to include a handler with the\ncode for what to do when the `invitation` is used to make an offer. This handler is passed\nto `zcf.makeInvitation()`, and the resulting `invitation` is made available (using the\n`creatorFacet`, the `publicFacet`, or whatever makes sense for the particular contract.", "mimetype": "text/plain", "start_char_idx": 3609, "end_char_idx": 3947, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9f9ea62-e1b4-4c61-8a59-cca7b251c991": {"__data__": {"id_": "d9f9ea62-e1b4-4c61-8a59-cca7b251c991", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "247f7b99-15d4-405f-a258-c01676734f58", "node_type": "1", "metadata": {}, "hash": "103396d8141db42303b9e8fa572b4d602e371c450856ae133187fe4f666dbfbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2b480b0-e336-4ab2-9f6d-e5d47601271c", "node_type": "1", "metadata": {}, "hash": "3cd9a3f91338bc86931d3c39f442cea4e2a15f033588041b7d3e94bba5d7fd99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For instance, AtomicSwap makes two `invitations`. The first is used to create the initial\noffer, so it defines the terms that the counterparty responds to. The second party\nneeds to make a matching offer, so there are more constraints.\n\nUse `zcf.makeInvitation()` to create the first party's `invitation`:\n\n```js\nconst creatorInvitation = zcf.makeInvitation(\n  makeMatchingInvitation,\n  'firstOffer'\n);\n```\n\n`makeMatchingInvitation()` creates the second `invitation`.", "mimetype": "text/plain", "start_char_idx": 3949, "end_char_idx": 4416, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2b480b0-e336-4ab2-9f6d-e5d47601271c": {"__data__": {"id_": "c2b480b0-e336-4ab2-9f6d-e5d47601271c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9f9ea62-e1b4-4c61-8a59-cca7b251c991", "node_type": "1", "metadata": {}, "hash": "936061d8c6d1760726db93d40519062bd3c0e40251b93f2cdbd4efa8dff901b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19fc4757-a999-4131-bec9-f54f177036be", "node_type": "1", "metadata": {}, "hash": "08b841726196ee81238896d14906d681eebe3bb9eb052ca40448c6233485f499", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst matchingSeatInvitation = zcf.makeInvitation(\n  matchingSeatOfferHandler,\n  'matchOffer',\n  {\n    asset: give.Asset,\n    price: want.Price\n  }\n);\n```", "mimetype": "text/plain", "start_char_idx": 4418, "end_char_idx": 4578, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19fc4757-a999-4131-bec9-f54f177036be": {"__data__": {"id_": "19fc4757-a999-4131-bec9-f54f177036be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2b480b0-e336-4ab2-9f6d-e5d47601271c", "node_type": "1", "metadata": {}, "hash": "3cd9a3f91338bc86931d3c39f442cea4e2a15f033588041b7d3e94bba5d7fd99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c112258-1b2f-4600-b820-9f9eb3524393", "node_type": "1", "metadata": {}, "hash": "9060c9d9e3c3c50aaec3da29e047d81b0fbabc4ab27801ebed1c2f350bd5f967", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The third argument (which is optional and wasn't needed for the first `invitation`) says\nthe counterparty has to offer an `amount` matching the first party's `want.Price`,\nand should ask for the first party's `give.Asset`. The optional third argument to\n`makeInvitation()` is included so the `invitation` will contain the `terms` so the `invitation`\nrecipient can rely on them.", "mimetype": "text/plain", "start_char_idx": 4580, "end_char_idx": 4957, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c112258-1b2f-4600-b820-9f9eb3524393": {"__data__": {"id_": "8c112258-1b2f-4600-b820-9f9eb3524393", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19fc4757-a999-4131-bec9-f54f177036be", "node_type": "1", "metadata": {}, "hash": "08b841726196ee81238896d14906d681eebe3bb9eb052ca40448c6233485f499", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ec84829-5ca9-44e6-84ad-5dd962b69ce9", "node_type": "1", "metadata": {}, "hash": "6680d9481e3be81890e13d677c985b8698e2bf6607a60f989402a40b93741db0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `matchingSeatOfferHandler` for this very simple contract calls `swap()`, a helper for\nthe simple case that each party wants what the other offered. If the terms match, Zoe\ngives each the `payout` they asked for, and closes out the contract. If the terms don't\nmatch, they each get back what they brought to the exchange, and it's still over.\n\n```js\nconst matchingSeatOfferHandler = matchingSeat => {\n  const swapResult = swap(zcf, firstSeat, matchingSeat);\n  zcf.shutdown();\n  return swapResult;\n};\n```", "mimetype": "text/plain", "start_char_idx": 4959, "end_char_idx": 5465, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ec84829-5ca9-44e6-84ad-5dd962b69ce9": {"__data__": {"id_": "0ec84829-5ca9-44e6-84ad-5dd962b69ce9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c112258-1b2f-4600-b820-9f9eb3524393", "node_type": "1", "metadata": {}, "hash": "9060c9d9e3c3c50aaec3da29e047d81b0fbabc4ab27801ebed1c2f350bd5f967", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1f0be40-ddfe-4644-b694-df11b4f3df1d", "node_type": "1", "metadata": {}, "hash": "3a1b25d86391d02d8e076df2e2d3686ea5002f4bc42f2ffcd1d5412f893bc035", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If you study other contracts, you'll see they all have this basic format. Depending\non their goals, they may do additional bookkeeping, or try to find compatible terms\nbetween multiple offers, or create new assets to order.\n\n## Making an Invitation\n\nTo create an invitation in the contract, use the Zoe Contract\nFacet method [`zcf.makeInvitation(...)`](/reference/zoe-api/zoe-contract-facet#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape).\n\n## Using bundleSource", "mimetype": "text/plain", "start_char_idx": 5467, "end_char_idx": 5954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1f0be40-ddfe-4644-b694-df11b4f3df1d": {"__data__": {"id_": "c1f0be40-ddfe-4644-b694-df11b4f3df1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ec84829-5ca9-44e6-84ad-5dd962b69ce9", "node_type": "1", "metadata": {}, "hash": "6680d9481e3be81890e13d677c985b8698e2bf6607a60f989402a40b93741db0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f473db88-2002-44c1-be89-9ce2a457b2ff", "node_type": "1", "metadata": {}, "hash": "1e25035970b15be0a1c337050ed1c22ace85e9d79a25080f51b92156e2529a80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using bundleSource\n\nModules start as files on disk, but then are bundled together\ninto an archive before being loaded into a vat. The bundling tool uses several standard\nfunctions to locate other modules that must be included. These are not a part of Hardened JavaScript, but\nare allowed in module source code, and are translated or removed before execution.", "mimetype": "text/plain", "start_char_idx": 5933, "end_char_idx": 6294, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f473db88-2002-44c1-be89-9ce2a457b2ff": {"__data__": {"id_": "f473db88-2002-44c1-be89-9ce2a457b2ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1f0be40-ddfe-4644-b694-df11b4f3df1d", "node_type": "1", "metadata": {}, "hash": "3a1b25d86391d02d8e076df2e2d3686ea5002f4bc42f2ffcd1d5412f893bc035", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd3f6c59-491e-4308-ad9a-4f018355a2d9", "node_type": "1", "metadata": {}, "hash": "1ed680e400b9269e3b375c194f8989375a9aa40970929abe2948092c3ff1424e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `import` and `export` syntax are allowed in ESM-style modules (preferred over CommonJS).\n  These are not globals as such, but top-level syntax that defines the module graph.\n- `require`, `module`, `module.exports`, and `exports` are allowed in CommonJS-style modules,\n  and should work as expected. However, new code should be written as ESM modules. They\n  are either consumed by the bundling process, provided (in some form) by the execution\n  environment, or otherwise rewritten to work sensibly.", "mimetype": "text/plain", "start_char_idx": 6296, "end_char_idx": 6797, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd3f6c59-491e-4308-ad9a-4f018355a2d9": {"__data__": {"id_": "fd3f6c59-491e-4308-ad9a-4f018355a2d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f473db88-2002-44c1-be89-9ce2a457b2ff", "node_type": "1", "metadata": {}, "hash": "1e25035970b15be0a1c337050ed1c22ace85e9d79a25080f51b92156e2529a80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6328f06-fbad-40dd-8eed-bd9d2eebe28b", "node_type": "1", "metadata": {}, "hash": "9cbd5253840668aabff52bb055dea86889e03dba152f3eb170aa440e62be8444", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `__dirname` and `__filename` are not provided.\n- The dynamic import expression (`await import('name')`) is currently prohibited in vat\n  code, but a future SES implementation of Hardened JavaScript may allow it.", "mimetype": "text/plain", "start_char_idx": 6798, "end_char_idx": 7011, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6328f06-fbad-40dd-8eed-bd9d2eebe28b": {"__data__": {"id_": "a6328f06-fbad-40dd-8eed-bd9d2eebe28b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd3f6c59-491e-4308-ad9a-4f018355a2d9", "node_type": "1", "metadata": {}, "hash": "1ed680e400b9269e3b375c194f8989375a9aa40970929abe2948092c3ff1424e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fbb5be9-f608-43d1-a6a5-66be80c844df", "node_type": "1", "metadata": {}, "hash": "9af1b0447101bbd36634cfdd04eac21460a4cd794cab436fa9dabd253317463f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The [Node.js API](https://nodejs.org/dist/latest-v14.x/docs/api/) includes \"built-in\nmodules\", such as `http` and `crypto`. Some are clearly platform-specific (e.g. `v8`), while\nothers are not so obvious (`stream`). All are accessed by importing a\nmodule (`const v8 = require('v8')` in CommonJS modules, or `import v8 from 'v8'` in ESM modules).\nThese modules are built out of native code (C++), not plain JS.", "mimetype": "text/plain", "start_char_idx": 7013, "end_char_idx": 7422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fbb5be9-f608-43d1-a6a5-66be80c844df": {"__data__": {"id_": "0fbb5be9-f608-43d1-a6a5-66be80c844df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6328f06-fbad-40dd-8eed-bd9d2eebe28b", "node_type": "1", "metadata": {}, "hash": "9cbd5253840668aabff52bb055dea86889e03dba152f3eb170aa440e62be8444", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b90b6d2a-086c-4530-87f9-a5629bc5821f", "node_type": "1", "metadata": {}, "hash": "9922682ea08db784712d22b6c32019c681972437a6b68bad21650071a8742502", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "None of these built-in modules are available to vat code. `require` or `import` can be used\non pure JS modules, but not on modules including native code. For a vat to exercise authority\nfrom a built-in module, you have to write a _device_ with an endowment with the built-in\nmodule's functions, then have the vat send messages to the device.\n\n## Library Compatibility", "mimetype": "text/plain", "start_char_idx": 7424, "end_char_idx": 7791, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b90b6d2a-086c-4530-87f9-a5629bc5821f": {"__data__": {"id_": "b90b6d2a-086c-4530-87f9-a5629bc5821f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fbb5be9-f608-43d1-a6a5-66be80c844df", "node_type": "1", "metadata": {}, "hash": "9af1b0447101bbd36634cfdd04eac21460a4cd794cab436fa9dabd253317463f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "088be608-a832-4e31-8dc1-b20eaafe5af2", "node_type": "1", "metadata": {}, "hash": "df58ee5a3733435494bec593920ffd4a2d1c4c98560a47a322ee6431650aa31f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Library Compatibility\n\nVat code can use `import` or `require()` to import other libraries consisting\nonly of JS code, which are compatible with the Hardened JavaScript environment. This includes\na significant portion of the NPM registry.", "mimetype": "text/plain", "start_char_idx": 7767, "end_char_idx": 8007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "088be608-a832-4e31-8dc1-b20eaafe5af2": {"__data__": {"id_": "088be608-a832-4e31-8dc1-b20eaafe5af2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b90b6d2a-086c-4530-87f9-a5629bc5821f", "node_type": "1", "metadata": {}, "hash": "9922682ea08db784712d22b6c32019c681972437a6b68bad21650071a8742502", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7102c9a5-33b7-4490-aad7-8c841a32a475", "node_type": "1", "metadata": {}, "hash": "d84de0c2783267aa298d247b33c78a6507085b09e6b2b8ce482a37452003fe52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "However, many NPM packages use built-in Node.js modules. If used at import\ntime (in their top-level code), vat code cannot use the package and fails\nto load at all. If they use the built-in features at runtime, then the\npackage can load. However, it might fail later when a function is invoked\nthat accesses the missing functionality. So some NPM packages are partially\ncompatible; you can use them if you don't invoke certain features.", "mimetype": "text/plain", "start_char_idx": 8009, "end_char_idx": 8445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7102c9a5-33b7-4490-aad7-8c841a32a475": {"__data__": {"id_": "7102c9a5-33b7-4490-aad7-8c841a32a475", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-requirements.md", "node_type": "4", "metadata": {}, "hash": "56528ed6eda87288bb2d9538c284e60f6fc07d90eef068780782873c56a4cfdd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "088be608-a832-4e31-8dc1-b20eaafe5af2", "node_type": "1", "metadata": {}, "hash": "df58ee5a3733435494bec593920ffd4a2d1c4c98560a47a322ee6431650aa31f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The same is true for NPM packages that use missing globals, or attempt to\nmodify frozen primordials.", "mimetype": "text/plain", "start_char_idx": 8447, "end_char_idx": 8547, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3032798d-0b1f-4867-9da3-0ddb896c50c0": {"__data__": {"id_": "3032798d-0b1f-4867-9da3-0ddb896c50c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f043428-a6f0-49ca-9885-dd6baa6c1440", "node_type": "1", "metadata": {}, "hash": "de0bb2a307134f7688bac7d002178342fe9895174c52c2e1333a6f9e3d5376bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# State Smart Contract\n\nIn our first `hello-world` smart contract, we created a `greet` function and exposed it using `publicFacet` so that it can be remotely called. However, if you notice, there is no state in our smart contract that is preserved between calls. Contracts can use ordinary variables and data structures for state.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f043428-a6f0-49ca-9885-dd6baa6c1440": {"__data__": {"id_": "8f043428-a6f0-49ca-9885-dd6baa6c1440", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3032798d-0b1f-4867-9da3-0ddb896c50c0", "node_type": "1", "metadata": {}, "hash": "b06ab5ba5994bf5a0e41a696de240aafe460f964c1056249296c20b7190282ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3448a719-17ab-4cdf-a273-62c52e5f3732", "node_type": "1", "metadata": {}, "hash": "d9f62cd3e931318b20b67da3652e9d962cad800fa88173eb675c5c35b6cc88d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In our second example smart contract, we will manage a list of rooms. We want everyone with access to `publicFacet` to be able to create a new room, and also get current count of rooms. We maintain state using `Map` data structure as below:\n\n<<< @/../snippets/zoe/src/02-state.js#rooms-map\n\nAnyone can add new rooms by making a call to `makeRoom` which is defined as:\n\n<<< @/../snippets/zoe/src/02-state.js#makeRoom", "mimetype": "text/plain", "start_char_idx": 333, "end_char_idx": 748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3448a719-17ab-4cdf-a273-62c52e5f3732": {"__data__": {"id_": "3448a719-17ab-4cdf-a273-62c52e5f3732", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f043428-a6f0-49ca-9885-dd6baa6c1440", "node_type": "1", "metadata": {}, "hash": "de0bb2a307134f7688bac7d002178342fe9895174c52c2e1333a6f9e3d5376bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1783f7f3-9054-4a04-b02b-1ddcd002a31b", "node_type": "1", "metadata": {}, "hash": "3c9ac18107dc1eeb39d4419fed6355513da5658c0cc2e72bb755b7f420026358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Using `makeRoom` creates a new room, exposing these functions to be invoked on the newly added room, `getId`, `incr`, and `decr`. As you can see this pattern follows the `Object Capability model`, as whoever receives the room by invoking `makeRoom`, will now have access to these three methods. Following this, `rooms.set(id, room)` adds the newly created room, into the contract's map state variable. A call to `getRoomCount` function returns the number of rooms in this map.", "mimetype": "text/plain", "start_char_idx": 750, "end_char_idx": 1226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1783f7f3-9054-4a04-b02b-1ddcd002a31b": {"__data__": {"id_": "1783f7f3-9054-4a04-b02b-1ddcd002a31b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3448a719-17ab-4cdf-a273-62c52e5f3732", "node_type": "1", "metadata": {}, "hash": "d9f62cd3e931318b20b67da3652e9d962cad800fa88173eb675c5c35b6cc88d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7e41fa6-4a9a-4401-a622-14ce19f13366", "node_type": "1", "metadata": {}, "hash": "72d7510ddb7ce119ddf27c16aa36897ef5dc113beb193908720f73828d65e2c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/src/02-state.js#getRoomCount\n\nPutting it all together:\n\n<<< @/../snippets/zoe/src/02-state.js#state-contract\n\nLet us save this contract as `02-state.js` and creating a simple test to validate its functionality:\n\n<<< @/../snippets/zoe/contracts/test-zoe-hello.js#test-state", "mimetype": "text/plain", "start_char_idx": 1228, "end_char_idx": 1522, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7e41fa6-4a9a-4401-a622-14ce19f13366": {"__data__": {"id_": "f7e41fa6-4a9a-4401-a622-14ce19f13366", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1783f7f3-9054-4a04-b02b-1ddcd002a31b", "node_type": "1", "metadata": {}, "hash": "3c9ac18107dc1eeb39d4419fed6355513da5658c0cc2e72bb755b7f420026358", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1c63fc1-15af-41df-a132-9cf1be926b5a", "node_type": "1", "metadata": {}, "hash": "551359ff694ed727ee88071e13ba4eeeeede94304203a4674311d0e6b336fc4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This test asserts that in the beginning the number of rooms is zero and after a call to `makeRoom`, the number of rooms changes to one. If you're having trouble, check out the [`tut-02-state`](https://github.com/Agoric/dapp-offer-up/tree/tut-02-state) branch in the example repo.\n\n::: tip Heap state is persistent\n\nOrdinary heap state persists between contract invocations.", "mimetype": "text/plain", "start_char_idx": 1524, "end_char_idx": 1897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1c63fc1-15af-41df-a132-9cf1be926b5a": {"__data__": {"id_": "b1c63fc1-15af-41df-a132-9cf1be926b5a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-state.md", "node_type": "4", "metadata": {}, "hash": "a69d766ef0540b94764513a3eacf983215346f96b77ce283af2661a23440fabf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7e41fa6-4a9a-4401-a622-14ce19f13366", "node_type": "1", "metadata": {}, "hash": "72d7510ddb7ce119ddf27c16aa36897ef5dc113beb193908720f73828d65e2c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We'll discuss more explicit state management for\nlarge numbers of objects (_virtual objects_) and\nobjects that last across upgrades ([durable objects](./contract-upgrade#durability)) later.\n\n:::", "mimetype": "text/plain", "start_char_idx": 1899, "end_char_idx": 2093, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ac54280-deeb-4b71-8bb3-8695116788d8": {"__data__": {"id_": "5ac54280-deeb-4b71-8bb3-8695116788d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ebdc93b-0829-40d6-8ea5-ce540587b78b", "node_type": "1", "metadata": {}, "hash": "4f52226453d4cd86d1cd8be4a359455a908429be6ba9a89e021b522ecefb784d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Contract Upgrade\n\nThe result of starting a contract includes the right to upgrade the contract instance. A call to [E(zoe).startInstance(...)](/reference/zoe-api/zoe.md#e-zoe-startinstance-installation-issuerkeywordrecord-terms-privateargs) returns a record of several objects that represent different levels of access.\nThe `publicFacet` and `creatorFacet` are defined by the contract.\nThe `adminFacet` is defined by Zoe and includes methods to upgrade the contract.\n\n::: tip Upgrade Governance", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ebdc93b-0829-40d6-8ea5-ce540587b78b": {"__data__": {"id_": "4ebdc93b-0829-40d6-8ea5-ce540587b78b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ac54280-deeb-4b71-8bb3-8695116788d8", "node_type": "1", "metadata": {}, "hash": "9fac3dc192561a7d1c2f6a2696e6cc2a9e4650b53765b101f0731677fef6ce98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137", "node_type": "1", "metadata": {}, "hash": "dc2ce5d2d4c8d4cc016f754b55b604f82d4b4fa50239a24fc919ada7bf02b31c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Upgrade Governance\n\nGovernance of the right to upgrade is a complex topic that we cover only briefly here.", "mimetype": "text/plain", "start_char_idx": 470, "end_char_idx": 584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137": {"__data__": {"id_": "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ebdc93b-0829-40d6-8ea5-ce540587b78b", "node_type": "1", "metadata": {}, "hash": "4f52226453d4cd86d1cd8be4a359455a908429be6ba9a89e021b522ecefb784d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "867d9661-df9a-420f-a2af-6b4996fbfc4c", "node_type": "1", "metadata": {}, "hash": "0c3d586ce0f6ac33c8797f3a847d1f9f8d29794e91633014fc564012190b0087", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- When [BLD staker governance](https://community.agoric.com/t/about-the-governance-category/15) makes a decision to start a contract using [swingset.CoreEval](../coreeval/),\n  to date, the `adminFacet` is stored in the bootstrap [vat](/glossary/#vat), allowing\n  the BLD stakers to upgrade such a contract in a later `swingset.CoreEval`.\n- The `adminFacet` reference can be discarded, so that noone can upgrade\n  the contract from within the JavaScript VM. (BLD staker governace", "mimetype": "text/plain", "start_char_idx": 586, "end_char_idx": 1064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "867d9661-df9a-420f-a2af-6b4996fbfc4c": {"__data__": {"id_": "867d9661-df9a-420f-a2af-6b4996fbfc4c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137", "node_type": "1", "metadata": {}, "hash": "dc2ce5d2d4c8d4cc016f754b55b604f82d4b4fa50239a24fc919ada7bf02b31c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "740d3fcf-c737-4eea-993e-9137b9f552d0", "node_type": "1", "metadata": {}, "hash": "e5bf99dc57c072184eb6e6fa6889b86a55bdbf0bf110e7970b03149a61c4f2ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "could, in theory, change the VM itself.)\n- The `adminFacet` can be managed using the [@agoric/governance](https://github.com/Agoric/agoric-sdk/tree/master/packages/governance#readme) framework; for example, using the `committee.js` contract.", "mimetype": "text/plain", "start_char_idx": 1067, "end_char_idx": 1308, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "740d3fcf-c737-4eea-993e-9137b9f552d0": {"__data__": {"id_": "740d3fcf-c737-4eea-993e-9137b9f552d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "867d9661-df9a-420f-a2af-6b4996fbfc4c", "node_type": "1", "metadata": {}, "hash": "0c3d586ce0f6ac33c8797f3a847d1f9f8d29794e91633014fc564012190b0087", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf5e2b31-def6-4759-a35d-2659e41cc628", "node_type": "1", "metadata": {}, "hash": "10b4c43f1ab649b2a4d264dbca46f7b1456f6f19b488217f4191f721b176f9ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n## Upgrading a Contract\n\nUpgrading a contract instance means re-starting the contract using a different [code bundle](./contract-walkthru#bundling-a-contract). Suppose we start a contract as usual, using\nthe bundle ID of a bundle we already sent to the chain:\n\n```js\nconst bundleID = 'b1-1234abcd...';\nconst installation = await E(zoe).installBundleID(bundleID);\nconst { instance, ... facets } = await E(zoe).startInstance(installation, ...);\n\n// ... use facets.publicFacet, instance etc. as usual\n```", "mimetype": "text/plain", "start_char_idx": 1310, "end_char_idx": 1816, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf5e2b31-def6-4759-a35d-2659e41cc628": {"__data__": {"id_": "bf5e2b31-def6-4759-a35d-2659e41cc628", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "740d3fcf-c737-4eea-993e-9137b9f552d0", "node_type": "1", "metadata": {}, "hash": "e5bf99dc57c072184eb6e6fa6889b86a55bdbf0bf110e7970b03149a61c4f2ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1d23916-15c5-45c0-9002-a84925f4bcb7", "node_type": "1", "metadata": {}, "hash": "b0387cfdefb7b193745c96e33ea045b6d0d90b5b478d32f0a04f5571faf275e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If we have the `adminFacet` and the bundle ID of a new version,\nwe can use the `upgradeContract` method to upgrade the contract instance:\n\n```js\nconst v2BundleId = 'b1-feed1234...`; // hash of bundle with new feature\nconst { incarnationNumber } = await E(facets.adminFacet).upgradeContract(v2BundleId);\n```\n\nThe `incarnationNumber` is 1 after the 1st upgrade, 2 after the 2nd, and so on.\n\n::: details re-using the same bundle", "mimetype": "text/plain", "start_char_idx": 1818, "end_char_idx": 2243, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a1d23916-15c5-45c0-9002-a84925f4bcb7": {"__data__": {"id_": "a1d23916-15c5-45c0-9002-a84925f4bcb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf5e2b31-def6-4759-a35d-2659e41cc628", "node_type": "1", "metadata": {}, "hash": "10b4c43f1ab649b2a4d264dbca46f7b1456f6f19b488217f4191f721b176f9ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "477975e5-a478-47ef-86ff-9281733a66c6", "node_type": "1", "metadata": {}, "hash": "583a8137e61b451d8e19fccc48ff7ac42ba42336f20321cac14df26be55dabb0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that a \"null upgrade\" that re-uses the original bundle is valid, and a legitimate approach to deleting accumulated heap state.\n\nSee also `E(adminFacet).restartContract()`.\n\n:::\n\n## Upgradable Contracts\n\nThere are a few requirements for the contract that differ from non-upgradable contracts:\n\n1. [Upgradable Declaration](#upgradable-declaration)\n2. [Durability](#durability)\n3. [Kinds](#kinds)\n4. [Crank](#crank)\n\n### Upgradable Declaration", "mimetype": "text/plain", "start_char_idx": 2245, "end_char_idx": 2690, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "477975e5-a478-47ef-86ff-9281733a66c6": {"__data__": {"id_": "477975e5-a478-47ef-86ff-9281733a66c6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1d23916-15c5-45c0-9002-a84925f4bcb7", "node_type": "1", "metadata": {}, "hash": "b0387cfdefb7b193745c96e33ea045b6d0d90b5b478d32f0a04f5571faf275e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2580e8e-eed2-4609-a448-3cb39362447b", "node_type": "1", "metadata": {}, "hash": "32c714fc3fcb4c57bfc6cae0a20ff7b4a8d850a6a199d7aefafc64656569fe4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Upgradable Declaration\n\nThe new code bundle declares that it supports upgrade by exporting a `prepare` function in place of `start`.\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#export-prepare\n\n### Durability\n\nThe 3rd argument, `baggage`, of the `prepare` function is a `MapStore`\nthat provides a way to preserve state and behavior of objects\nbetween incarnations in a way that preserves identity of objects\nas seen from other vats:", "mimetype": "text/plain", "start_char_idx": 2664, "end_char_idx": 3103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2580e8e-eed2-4609-a448-3cb39362447b": {"__data__": {"id_": "b2580e8e-eed2-4609-a448-3cb39362447b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "477975e5-a478-47ef-86ff-9281733a66c6", "node_type": "1", "metadata": {}, "hash": "583a8137e61b451d8e19fccc48ff7ac42ba42336f20321cac14df26be55dabb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb", "node_type": "1", "metadata": {}, "hash": "3b7616c0a60a6d65f5bc87a27b7cc891f1fb49ab40a49667ea855b3ac04fc511", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nlet rooms;\nif (!baggage.has('rooms')) {\n  // initial incarnation: create the object\n  rooms = makeScalarBigMapStore('rooms', { durable: true });\n  baggage.init('rooms', rooms);\n} else {\n  // subsequent incarnation: use the object from the initial incarnation\n  rooms = baggage.get('rooms');\n}\n```\n\nThe `provide` function supports a concise idiom for this find-or-create pattern:\n\n```js\nimport { provide } from '@agoric/vat-data';", "mimetype": "text/plain", "start_char_idx": 3105, "end_char_idx": 3540, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb": {"__data__": {"id_": "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2580e8e-eed2-4609-a448-3cb39362447b", "node_type": "1", "metadata": {}, "hash": "32c714fc3fcb4c57bfc6cae0a20ff7b4a8d850a6a199d7aefafc64656569fe4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aabd6d0e-b859-4b08-bb57-5263bc97ad43", "node_type": "1", "metadata": {}, "hash": "3b08b15139a3f5052257f892ab4a8876a77091bf872fc332a723b163b85c87c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const rooms = provide(baggage, 'rooms', () =>\n  makeScalarBigMapStore('rooms', { durable: true })\n);\n```\n\nThe `zone` API is a convenient way to manage durability. Its store methods integrate the `provide` pattern:\n\n::: details import { makeDurableZone } ...\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#import-zone\n\n:::\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#zone1\n\n::: details What happens if we don't use baggage?", "mimetype": "text/plain", "start_char_idx": 3542, "end_char_idx": 3969, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aabd6d0e-b859-4b08-bb57-5263bc97ad43": {"__data__": {"id_": "aabd6d0e-b859-4b08-bb57-5263bc97ad43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb", "node_type": "1", "metadata": {}, "hash": "3b7616c0a60a6d65f5bc87a27b7cc891f1fb49ab40a49667ea855b3ac04fc511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60e68dd7-3b13-42ca-9017-2991721ef6c9", "node_type": "1", "metadata": {}, "hash": "d317b8e66d3646d32ab33ddef8e03d0e64901dffb351446f6f039ba11b074c26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When the contract instance is restarted, its [vat](../js-programming/#vats-the-unit-of-synchrony) gets a fresh heap, so [ordinary heap state](./contract-basics.md#state) does not survive upgrade. This implementation does not persist the rooms nor their counts between incarnations:\n\n<<< @/../snippets/zoe/src/02-state.js#heap-state{2}\n\n:::\n\n### Kinds\n\nUse `zone.exoClass()` to define state and methods of kinds of durable objects such as `Room`:\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#exoclass", "mimetype": "text/plain", "start_char_idx": 3971, "end_char_idx": 4473, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60e68dd7-3b13-42ca-9017-2991721ef6c9": {"__data__": {"id_": "60e68dd7-3b13-42ca-9017-2991721ef6c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aabd6d0e-b859-4b08-bb57-5263bc97ad43", "node_type": "1", "metadata": {}, "hash": "3b08b15139a3f5052257f892ab4a8876a77091bf872fc332a723b163b85c87c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068", "node_type": "1", "metadata": {}, "hash": "c289aaaf948db99f0aa1ee5f475c81e4213f473c1b518aab3d202e6682813997", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Defining `publicFacet` as a singleton `exo` allows clients to\ncontinue to use it after an upgrade:\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#exo\n\nNow we have all the parts of an upgradable contract.\n\n::: details full contract listing\n\n<<< @/../snippets/zoe/src/02b-state-durable.js#contract\n\n:::\n\nWe can then upgrade it to have another method:\n\n```js\nconst makeRoom = zone.exoClass('Room', RoomI, id => ({ id, value: 0 }), {\n  // ...\n  clear(delta) {\n    this.state.value = 0;\n  }\n});\n```", "mimetype": "text/plain", "start_char_idx": 4475, "end_char_idx": 4969, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068": {"__data__": {"id_": "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60e68dd7-3b13-42ca-9017-2991721ef6c9", "node_type": "1", "metadata": {}, "hash": "d317b8e66d3646d32ab33ddef8e03d0e64901dffb351446f6f039ba11b074c26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a44ed04e-eeb0-4061-8b2c-24fb7b156d55", "node_type": "1", "metadata": {}, "hash": "2ada9d74057c8a25445a7c012a4e2e2f40b8922a89513e7a0ab79869246ba71e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The interface guard also needs updating.\n<small>_See [@endo/patterns](https://endojs.github.io/endo/modules/_endo_patterns.html) for more on interface guards._</small>\n\n```js\nconst RoomI = M.interface('Room', {\n  // ...\n  clear: M.call().returns()\n});\n```\n\n::: tip Notes", "mimetype": "text/plain", "start_char_idx": 4971, "end_char_idx": 5241, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a44ed04e-eeb0-4061-8b2c-24fb7b156d55": {"__data__": {"id_": "a44ed04e-eeb0-4061-8b2c-24fb7b156d55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068", "node_type": "1", "metadata": {}, "hash": "c289aaaf948db99f0aa1ee5f475c81e4213f473c1b518aab3d202e6682813997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d592d7c7-9ac1-4a02-ab77-78ef4848c250", "node_type": "1", "metadata": {}, "hash": "c1be58a4bc12c67ba0488ac2a40922e4c0b5472a7393c9ff54f3087f339b1c40", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Once the state is defined by the `init` function (3rd arg), properties cannot be added or removed.\n- Values of state properties must be serializable.\n- Values of state properties are hardened on assignment.\n- You can replace the value of a state property (e.g. `state.zot = [...state.zot, 'last']`), and you can update stores (`state.players.set(1, player1)`), but you cannot do things like `state.zot.push('last')`, and if jot is part of state (`state.jot = { x: 1 };`), then you can't do `state.jot.x = 2;`", "mimetype": "text/plain", "start_char_idx": 5243, "end_char_idx": 5753, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d592d7c7-9ac1-4a02-ab77-78ef4848c250": {"__data__": {"id_": "d592d7c7-9ac1-4a02-ab77-78ef4848c250", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a44ed04e-eeb0-4061-8b2c-24fb7b156d55", "node_type": "1", "metadata": {}, "hash": "2ada9d74057c8a25445a7c012a4e2e2f40b8922a89513e7a0ab79869246ba71e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a", "node_type": "1", "metadata": {}, "hash": "75360cd75602e60dbec330f8d846e1bde7022907d07f424110820ceb631708ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The tag (1st arg) is used to form a key in `baggage`, so take care to avoid collisions. `zone.subZone()` may be used to partition namespaces.\n- See also [defineExoClass](https://endojs.github.io/endo/functions/_endo_exo.defineExoClass.html) for further detail `zone.exoClass`.\n- To define multiple objects that share state, use `zone.exoClassKit`.\n  - See also [defineExoClassKit](https://endojs.github.io/endo/functions/_endo_exo.defineExoClassKit.html)", "mimetype": "text/plain", "start_char_idx": 5754, "end_char_idx": 6210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a": {"__data__": {"id_": "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d592d7c7-9ac1-4a02-ab77-78ef4848c250", "node_type": "1", "metadata": {}, "hash": "c1be58a4bc12c67ba0488ac2a40922e4c0b5472a7393c9ff54f3087f339b1c40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b100f9a-0df6-429c-bae8-4a422cc84844", "node_type": "1", "metadata": {}, "hash": "9161c61e77a5b348f0e1a4d35cadac16ae114f7c44434f7bf748c4d402936168", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- For an extended test / example, see [test-coveredCall-service-upgrade.js](https://github.com/Agoric/agoric-sdk/blob/master/packages/zoe/test/swingsetTests/upgradeCoveredCall/test-coveredCall-service-upgrade.js).", "mimetype": "text/plain", "start_char_idx": 6211, "end_char_idx": 6424, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b100f9a-0df6-429c-bae8-4a422cc84844": {"__data__": {"id_": "4b100f9a-0df6-429c-bae8-4a422cc84844", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a", "node_type": "1", "metadata": {}, "hash": "75360cd75602e60dbec330f8d846e1bde7022907d07f424110820ceb631708ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1", "node_type": "1", "metadata": {}, "hash": "dc4062da9c743a3ac2cd4d0683bdf9777a566f38428e88b481069a6f48ee8eb5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n### Crank\n\nDefine all exo classes/kits before any incoming method calls from other vats -- in the first \"crank\".\n\n::: tip Note\n\n- For more on crank constraints, see [Virtual and Durable Objects](https://github.com/Agoric/agoric-sdk/blob/master/packages/SwingSet/docs/virtual-objects.md#virtual-and-durable-objects) in [SwingSet docs](https://github.com/Agoric/agoric-sdk/tree/master/packages/SwingSet/docs)\n\n:::\n\n### Baggage", "mimetype": "text/plain", "start_char_idx": 6426, "end_char_idx": 6855, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1": {"__data__": {"id_": "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b100f9a-0df6-429c-bae8-4a422cc84844", "node_type": "1", "metadata": {}, "hash": "9161c61e77a5b348f0e1a4d35cadac16ae114f7c44434f7bf748c4d402936168", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "900aa10e-d39e-4fbd-92b8-eed65f1ddc06", "node_type": "1", "metadata": {}, "hash": "b1b245bac34416bf99c16c552404d42a9452cde20be2b9d7f175fed6aef6acf5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n### Baggage\n\nbaggage is a MapStore that provides a way to preserve the state and behavior of objects between [smart contract upgrades](/guides/zoe/contract-upgrade) in a way that preserves the identity of objects as seen from other [vats](#vat). In the provided contract, baggage is used to ensure that the state of various components is maintained even after the contract is upgraded.", "mimetype": "text/plain", "start_char_idx": 6839, "end_char_idx": 7229, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "900aa10e-d39e-4fbd-92b8-eed65f1ddc06": {"__data__": {"id_": "900aa10e-d39e-4fbd-92b8-eed65f1ddc06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1", "node_type": "1", "metadata": {}, "hash": "dc4062da9c743a3ac2cd4d0683bdf9777a566f38428e88b481069a6f48ee8eb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dcc50d4-2618-4a2b-aa07-7186a32189bf", "node_type": "1", "metadata": {}, "hash": "af66a9f30e58b6eb05115e2568d163da6f6d362c91100de5174844131deabae2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nexport const start = async (zcf, privateArgs, baggage) => {\n  // ...\n  const { accountsStorageNode } = await provideAll(baggage, {\n    accountsStorageNode: () => E(storageNode).makeChildNode('accounts')\n  });\n  // ...\n};\n```\n\n### Exo\n\nAn Exo object is an exposed Remotable object with methods (aka a [`Far`](/guides/js-programming/far) object) which is\nnormally defined with an `InterfaceGuard` as a protective outer layer, providing the first\nlayer of defensiveness.", "mimetype": "text/plain", "start_char_idx": 7231, "end_char_idx": 7704, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9dcc50d4-2618-4a2b-aa07-7186a32189bf": {"__data__": {"id_": "9dcc50d4-2618-4a2b-aa07-7186a32189bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "900aa10e-d39e-4fbd-92b8-eed65f1ddc06", "node_type": "1", "metadata": {}, "hash": "b1b245bac34416bf99c16c552404d42a9452cde20be2b9d7f175fed6aef6acf5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c4ad7f2-92ac-4de3-817e-559dfc43c957", "node_type": "1", "metadata": {}, "hash": "f369b2024f762d96d8a0d9bf427773f0d95e2b6e4b4716f3912c6b3e37ce7903", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This [@endo/exo](https://github.com/endojs/endo/tree/master/packages/exo) package defines the APIs for making\nExo objects, and for defining ExoClasses and ExoClassKits for making Exo objects.", "mimetype": "text/plain", "start_char_idx": 7706, "end_char_idx": 7897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c4ad7f2-92ac-4de3-817e-559dfc43c957": {"__data__": {"id_": "5c4ad7f2-92ac-4de3-817e-559dfc43c957", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dcc50d4-2618-4a2b-aa07-7186a32189bf", "node_type": "1", "metadata": {}, "hash": "af66a9f30e58b6eb05115e2568d163da6f6d362c91100de5174844131deabae2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee", "node_type": "1", "metadata": {}, "hash": "b24f1012c2e63a2a71d908da9cd048e16155651f02e435727721383a64172f90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst publicFacet = zone.exo(\n  'StakeAtom',\n  M.interface('StakeAtomI', {\n    makeAccount: M.callWhen().returns(M.remotable('ChainAccount')),\n    makeAccountInvitationMaker: M.callWhen().returns(InvitationShape)\n  }),\n  {\n    async makeAccount() {\n      trace('makeAccount');\n      const holder = await makeAccountKit();\n      return holder;\n    },\n    makeAccountInvitationMaker() {\n      trace('makeCreateAccountInvitation');\n      return zcf.makeInvitation(async seat => {\n        seat.exit();", "mimetype": "text/plain", "start_char_idx": 7899, "end_char_idx": 8402, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee": {"__data__": {"id_": "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c4ad7f2-92ac-4de3-817e-559dfc43c957", "node_type": "1", "metadata": {}, "hash": "f369b2024f762d96d8a0d9bf427773f0d95e2b6e4b4716f3912c6b3e37ce7903", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64abe725-8752-4f74-96d3-e595a66444c3", "node_type": "1", "metadata": {}, "hash": "ef1a6ae3e618a5575e95d6fada6c2c2e90cbcb82a73dcec399933504663ebb3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "seat.exit();\n        const holder = await makeAccountKit();\n        return holder.asContinuingOffer();\n      }, 'wantStakingAccount');\n    }\n  }\n);\n```", "mimetype": "text/plain", "start_char_idx": 8390, "end_char_idx": 8541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64abe725-8752-4f74-96d3-e595a66444c3": {"__data__": {"id_": "64abe725-8752-4f74-96d3-e595a66444c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee", "node_type": "1", "metadata": {}, "hash": "b24f1012c2e63a2a71d908da9cd048e16155651f02e435727721383a64172f90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5155a395-aa0c-4d8a-a9b4-f7d483395791", "node_type": "1", "metadata": {}, "hash": "8f6e5450f51efb64b27bfa8a056be430e735b5db0eec0d5fa02e96a9775084b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Zones\n\nEach [Zone](/glossary/#zone) provides an API that allows the allocation of [Exo objects](#exo) and Stores [(object collections)](https://github.com/Agoric/agoric-sdk/tree/master/packages/store/README.md) which use the same underlying persistence mechanism. This allows library code to be agnostic to whether its objects are backed purely by the JS heap (ephemeral), pageable out to disk (virtual), or can be revived after a vat upgrade (durable).", "mimetype": "text/plain", "start_char_idx": 8543, "end_char_idx": 9000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5155a395-aa0c-4d8a-a9b4-f7d483395791": {"__data__": {"id_": "5155a395-aa0c-4d8a-a9b4-f7d483395791", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64abe725-8752-4f74-96d3-e595a66444c3", "node_type": "1", "metadata": {}, "hash": "ef1a6ae3e618a5575e95d6fada6c2c2e90cbcb82a73dcec399933504663ebb3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec575abb-6920-434f-995f-0be660aec0b9", "node_type": "1", "metadata": {}, "hash": "6605beaa69f0baf11ef28d363dce96d72e4520e376a7e1d7dc9ce54ce8d2cc8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "See [SwingSet vat upgrade documentation](https://github.com/Agoric/agoric-sdk/tree/master/packages/SwingSet/docs/vat-upgrade.md) for more example use of the zone API.\n\n```js\nconst zone = makeDurableZone(baggage);\n// ...\nzone.subZone('vows');\n```\n\n### Durable Zone\n\nA zone specifically designed for durability, allowing the contract to persist its state across upgrades. This is critical for maintaining the continuity and reliability of the contract\u2019s operations.", "mimetype": "text/plain", "start_char_idx": 9002, "end_char_idx": 9465, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec575abb-6920-434f-995f-0be660aec0b9": {"__data__": {"id_": "ec575abb-6920-434f-995f-0be660aec0b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5155a395-aa0c-4d8a-a9b4-f7d483395791", "node_type": "1", "metadata": {}, "hash": "8f6e5450f51efb64b27bfa8a056be430e735b5db0eec0d5fa02e96a9775084b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "622ba776-1512-4cbb-9804-9c0158ffb33d", "node_type": "1", "metadata": {}, "hash": "f2b2062d889e99a47cb9f044d614674dc3ef6ac0bfa990921fe753b0bc42ec1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst zone = makeDurableZone(baggage);\n```\n\n### Vow Tools\n\nSee [Vow](/glossary/#vow); These tools handle promises and asynchronous operations within the contract. `prepareVowTools` prepares the necessary utilities to manage these asynchronous tasks, ensuring that the contract can handle complex workflows that involve waiting for events or responses from other chains.", "mimetype": "text/plain", "start_char_idx": 9467, "end_char_idx": 9842, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "622ba776-1512-4cbb-9804-9c0158ffb33d": {"__data__": {"id_": "622ba776-1512-4cbb-9804-9c0158ffb33d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-upgrade.md", "node_type": "4", "metadata": {}, "hash": "98df59ecf19e12436bfbca2bc21750c1c2be900c517ef15c270fa481d756f0ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec575abb-6920-434f-995f-0be660aec0b9", "node_type": "1", "metadata": {}, "hash": "6605beaa69f0baf11ef28d363dce96d72e4520e376a7e1d7dc9ce54ce8d2cc8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst vowTools = prepareVowTools(zone.subZone('vows'));\n// ...\nconst makeLocalOrchestrationAccountKit = prepareLocalChainAccountKit(\n  zone,\n  makeRecorderKit,\n  zcf,\n  privateArgs.timerService,\n  vowTools,\n  makeChainHub(privateArgs.agoricNames)\n);\n// ...\nconst makeCosmosOrchestrationAccount = prepareCosmosOrchestrationAccount(\n  zone,\n  makeRecorderKit,\n  vowTools,\n  zcf\n);\n```", "mimetype": "text/plain", "start_char_idx": 9844, "end_char_idx": 10232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6583085a-b98b-47f4-bd09-1e71adfb68d9": {"__data__": {"id_": "6583085a-b98b-47f4-bd09-1e71adfb68d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "acdec986-b84a-41b8-a0ae-b61f43a7b1df", "node_type": "1", "metadata": {}, "hash": "bde53896dba90ca204ca682f5ddfff3a12f5841b9e3e4f2ba4914b7b5ae509c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Complete Contract Walk-Through\n\nLet's look at the contract from [the basic dapp](../getting-started/) in some detail.\n\n## Bundling a Contract\n\nIn [deploying the basic dapp contract](../getting-started/#starting-the-dapp-smart-contract),\nthe first step was to _bundle_ all of its modules into a single artifact.\nWe used the [agoric run](../agoric-cli/#agoric-run) command in that case.\nThe core mechanism used in `agoric run` is a call to `bundleSource()`.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 457, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "acdec986-b84a-41b8-a0ae-b61f43a7b1df": {"__data__": {"id_": "acdec986-b84a-41b8-a0ae-b61f43a7b1df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6583085a-b98b-47f4-bd09-1e71adfb68d9", "node_type": "1", "metadata": {}, "hash": "538caecb4f30840e5feb57a874b61d7c51dbf5be3f09a7f633be8b3311f43748", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f174d7c-0eef-41ac-8cfa-d7f210cab09d", "node_type": "1", "metadata": {}, "hash": "500017ef5a92175f6526d7dba413c0566f2da32b378a887d7d09503ae380de2b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In the `contract` directory of the dapp,\nrun `test-bundle-source.js` following `ava` conventions:\n\n```sh\ncd contract\nyarn ava test/test-bundle-source.js\n```\n\nThe results look something like...\n\n```console\n  \u2714 bundleSource() bundles the contract for use with zoe (2.7s)\n    \u2139 1e1aeca9d3ebc0bd39130fe5ef6fbb077177753563db522d6623886da9b43515816df825f7ebcb009cbe86dcaf70f93b9b8595d1a87c2ab9951ee7a32ad8e572\n    \u2139 Object @Alleged: BundleInstallation {}\n  \u2500\n\n  1 test passed\n```\n\n::: details Test Setup", "mimetype": "text/plain", "start_char_idx": 459, "end_char_idx": 956, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f174d7c-0eef-41ac-8cfa-d7f210cab09d": {"__data__": {"id_": "3f174d7c-0eef-41ac-8cfa-d7f210cab09d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "acdec986-b84a-41b8-a0ae-b61f43a7b1df", "node_type": "1", "metadata": {}, "hash": "bde53896dba90ca204ca682f5ddfff3a12f5841b9e3e4f2ba4914b7b5ae509c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24ff8a87-cb71-4317-b071-c470c7d1aed5", "node_type": "1", "metadata": {}, "hash": "b09c314efccd4d22af4358909493bf6a9665a8945602c573b276094316fa4592", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: details Test Setup\n\nThe test uses `createRequire` from the node `module` API to resolve the main module specifier:\n\n<<< @/../snippets/zoe/contracts/test-bundle-source.js#bundleSourceImports\n\n<<< @/../snippets/zoe/contracts/test-bundle-source.js#contractPath\n:::\n\n`bundleSource()` returns a bundle object with `moduleFormat`, a hash, and the contents:\n\n<<< @/../snippets/zoe/contracts/test-bundle-source.js#testBundleSource{1}\n\n::: details Getting the zip file from inside a bundle", "mimetype": "text/plain", "start_char_idx": 934, "end_char_idx": 1418, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24ff8a87-cb71-4317-b071-c470c7d1aed5": {"__data__": {"id_": "24ff8a87-cb71-4317-b071-c470c7d1aed5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f174d7c-0eef-41ac-8cfa-d7f210cab09d", "node_type": "1", "metadata": {}, "hash": "500017ef5a92175f6526d7dba413c0566f2da32b378a887d7d09503ae380de2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c94d7037-2f91-45be-a825-49d80fc9c8b8", "node_type": "1", "metadata": {}, "hash": "862f179ac6af8db4b3b906870dcc20d9ed41dff694e99c45eb21f5534701176b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An endo bundle is a zip file inside JSON. To get it back out:\n\n```sh\njq -r .endoZipBase64 bundle-xyz.json | base64 -d >xyz.zip\n```\n\nYou can then, for example, look at its contents:\n\n```sh\nunzip -l xyz.zip\n```\n\n:::\n\n## Contract Installation\n\nTo identify the code of contracts that parties consent to participate in, Zoe\nuses _Installation_ objects.\n\nLet's try it with the contract from our [basic dapp](../getting-started/):\n\n```sh\nyarn ava test/test-contract.js -m 'Install the contract'\n```", "mimetype": "text/plain", "start_char_idx": 1420, "end_char_idx": 1911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c94d7037-2f91-45be-a825-49d80fc9c8b8": {"__data__": {"id_": "c94d7037-2f91-45be-a825-49d80fc9c8b8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24ff8a87-cb71-4317-b071-c470c7d1aed5", "node_type": "1", "metadata": {}, "hash": "b09c314efccd4d22af4358909493bf6a9665a8945602c573b276094316fa4592", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8664b83f-b796-4e86-aa5e-452a4854975a", "node_type": "1", "metadata": {}, "hash": "924be366004e26d29d3e918bd69780da4631ad954a291091f6cd04a7bdda9204", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n  \u2714 Install the contract\n    \u2139 Object @Alleged: BundleInstallation {}\n```\n\n::: details Test Setup\n\nThe test starts by using `makeZoeKitForTest` to set up zoe for testing:\n\n<<< @/../snippets/zoe/contracts/test-bundle-source.js#importZoeForTest\n\n```js\nconst { zoeService: zoe } = makeZoeKitForTest();\n```\n\n:::\n\nIt gets an installation using a bundle as in the previous section:\n\n```js{1}\nconst installation = await E(zoe).install(bundle);\nt.log(installation);\nt.is(typeof installation, 'object');\n```", "mimetype": "text/plain", "start_char_idx": 1913, "end_char_idx": 2415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8664b83f-b796-4e86-aa5e-452a4854975a": {"__data__": {"id_": "8664b83f-b796-4e86-aa5e-452a4854975a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c94d7037-2f91-45be-a825-49d80fc9c8b8", "node_type": "1", "metadata": {}, "hash": "862f179ac6af8db4b3b906870dcc20d9ed41dff694e99c45eb21f5534701176b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70ac8def-4fe9-4819-8cae-01ced0a0ba29", "node_type": "1", "metadata": {}, "hash": "30bf6dd942764e117f5070f92212519f0928372388587712368ff25fa723eaf4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `installation` identifies the basic contract that we'll\ngo over in detail in the sections below.\n\n::: details offer-up.contract.js listing\n\n<<< @/../snippets/zoe/src/offer-up.contract.js#file\n\n:::\n\n## Starting a Contract Instance\n\nNow we're ready to start an _instance_ of the [basic dapp](../getting-started/) contract:\n\n```sh\nyarn ava test/test-contract.js -m 'Start the contract'\n```", "mimetype": "text/plain", "start_char_idx": 2417, "end_char_idx": 2807, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70ac8def-4fe9-4819-8cae-01ced0a0ba29": {"__data__": {"id_": "70ac8def-4fe9-4819-8cae-01ced0a0ba29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8664b83f-b796-4e86-aa5e-452a4854975a", "node_type": "1", "metadata": {}, "hash": "924be366004e26d29d3e918bd69780da4631ad954a291091f6cd04a7bdda9204", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "800c9c35-63d0-4130-94f4-a637f2f01d98", "node_type": "1", "metadata": {}, "hash": "8ccf095deb28f721801b0e66b1686970f174ecd60962b8503e9e643957181d8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n  \u2714 Start the contract (652ms)\n    \u2139 terms: {\n        tradePrice: {\n          brand: Object @Alleged: PlayMoney brand {},\n          value: 5n,\n        },\n      }\n    \u2139 Object @Alleged: InstanceHandle {}\n```\n\nContracts can be parameterized by _terms_.\nThe price of joining the game is not fixed in the source code of this contract,\nbut rather chosen when starting an instance of the contract.\nLikewise, when starting an instance, we can choose which asset _issuers_\nthe contract should use for its business:", "mimetype": "text/plain", "start_char_idx": 2809, "end_char_idx": 3319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "800c9c35-63d0-4130-94f4-a637f2f01d98": {"__data__": {"id_": "800c9c35-63d0-4130-94f4-a637f2f01d98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70ac8def-4fe9-4819-8cae-01ced0a0ba29", "node_type": "1", "metadata": {}, "hash": "30bf6dd942764e117f5070f92212519f0928372388587712368ff25fa723eaf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d310c77f-0b52-4d0e-bcce-6b22ab7f68db", "node_type": "1", "metadata": {}, "hash": "66db67adc4cc165fa8540a755355d36508db0e37a69c9d67cfdc588489d13a8c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js{8}\nconst money = makeIssuerKit('PlayMoney');\nconst issuers = { Price: money.issuer };\nconst terms = { tradePrice: AmountMath.make(money.brand, 5n) };\nt.log('terms:', terms);\n\n/** @type {ERef<Installation<GameContractFn>>} */\nconst installation = E(zoe).install(bundle);\nconst { instance } = await E(zoe).startInstance(installation, issuers, terms);\nt.log(instance);\nt.is(typeof instance, 'object');\n```", "mimetype": "text/plain", "start_char_idx": 3321, "end_char_idx": 3729, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d310c77f-0b52-4d0e-bcce-6b22ab7f68db": {"__data__": {"id_": "d310c77f-0b52-4d0e-bcce-6b22ab7f68db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "800c9c35-63d0-4130-94f4-a637f2f01d98", "node_type": "1", "metadata": {}, "hash": "8ccf095deb28f721801b0e66b1686970f174ecd60962b8503e9e643957181d8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a145b6b0-a8af-4294-9632-5ab661114000", "node_type": "1", "metadata": {}, "hash": "ee963cc72ac05027672aa727d6bc22c5728f5a870a5a67def3eeb66d5d50885f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_`makeIssuerKit` and `AmountMath.make` are covered in the [ERTP](../ertp/) section, along with `makeEmptyPurse`, `mintPayment`, and `getAmountOf` below._\n\n_See also [E(zoe).startInstance(...)](/reference/zoe-api/zoe.md#e-zoe-startinstance-installation-issuerkeywordrecord-terms-privateargs)._", "mimetype": "text/plain", "start_char_idx": 3731, "end_char_idx": 4023, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a145b6b0-a8af-4294-9632-5ab661114000": {"__data__": {"id_": "a145b6b0-a8af-4294-9632-5ab661114000", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d310c77f-0b52-4d0e-bcce-6b22ab7f68db", "node_type": "1", "metadata": {}, "hash": "66db67adc4cc165fa8540a755355d36508db0e37a69c9d67cfdc588489d13a8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c14030dc-ff3e-413e-a4b4-aad219d4b422", "node_type": "1", "metadata": {}, "hash": "93648cadac564625b2a99187d82d7c9414bd965efa1764bbf6c9f1bbd9f7b9b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let's take a look at what happens in the contract when it starts. A _facet_ of Zoe, the _Zoe Contract Facet_, is passed to the contract `start` function.\nThe contract uses this `zcf` to get its terms. Likewise it uses `zcf` to\nmake a `proceeds` seat where it can store assets that it receives in trade\nas well as a `mint` for making assets consisting of collections (bags) of Items:\n\n<<< @/../snippets/zoe/src/offer-up.contract.js#start", "mimetype": "text/plain", "start_char_idx": 4025, "end_char_idx": 4461, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c14030dc-ff3e-413e-a4b4-aad219d4b422": {"__data__": {"id_": "c14030dc-ff3e-413e-a4b4-aad219d4b422", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a145b6b0-a8af-4294-9632-5ab661114000", "node_type": "1", "metadata": {}, "hash": "ee963cc72ac05027672aa727d6bc22c5728f5a870a5a67def3eeb66d5d50885f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09002ee7-a056-43b6-8ced-9b645d231895", "node_type": "1", "metadata": {}, "hash": "602dfaa8c67d7dc6a214dc29418614b3a88e5ea63b1c1b791654870513ce7ecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It defines a `proposalShape` and `tradeHandler` but doesn't do anything with them yet. They will come into play later. It defines and returns a [hardened](/glossary/#harden) `publicFacet` object and stands by.\n\n<<< @/../snippets/zoe/src/offer-up.contract.js#started\n\n## Trading with Offer Safety\n\nOur [basic dapp](../getting-started/) includes a test of trading:\n\n```sh\nyarn ava test/test-contract.js -m 'Alice trades*'\n```", "mimetype": "text/plain", "start_char_idx": 4463, "end_char_idx": 4886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09002ee7-a056-43b6-8ced-9b645d231895": {"__data__": {"id_": "09002ee7-a056-43b6-8ced-9b645d231895", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c14030dc-ff3e-413e-a4b4-aad219d4b422", "node_type": "1", "metadata": {}, "hash": "93648cadac564625b2a99187d82d7c9414bd965efa1764bbf6c9f1bbd9f7b9b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51be263e-6373-4098-97f2-104e54f6ed0b", "node_type": "1", "metadata": {}, "hash": "eaa2427a8e9ab879e46a855975c37d4a8cc50ccbdc566e7e4644ea09e7820c92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\n  \u2714 Alice trades: give some play money, want items (309ms)\n    \u2139 Object @Alleged: InstanceHandle {}\n    \u2139 Alice gives {\n        Price: {\n          brand: Object @Alleged: PlayMoney brand {},\n          value: 5n,\n        },\n      }\n    \u2139 Alice payout brand Object @Alleged: Item brand {}\n    \u2139 Alice payout value Object @copyBag {\n        payload: [\n          [\n            'scroll',\n            1n,\n          ],\n          [\n            'map',\n            1n,\n          ],\n        ],\n      }\n```", "mimetype": "text/plain", "start_char_idx": 4888, "end_char_idx": 5386, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51be263e-6373-4098-97f2-104e54f6ed0b": {"__data__": {"id_": "51be263e-6373-4098-97f2-104e54f6ed0b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09002ee7-a056-43b6-8ced-9b645d231895", "node_type": "1", "metadata": {}, "hash": "602dfaa8c67d7dc6a214dc29418614b3a88e5ea63b1c1b791654870513ce7ecd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02babf16-ec5b-4863-9f99-d3f9300af04b", "node_type": "1", "metadata": {}, "hash": "c8370f1b3d5ad586e90aa217c81b95c5b7faa2c4855302dbd38a5fe8d02c5eba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We start by putting some money in a purse for Alice:\n\n```js{4}\nconst alicePurse = money.issuer.makeEmptyPurse();\nconst amountOfMoney = AmountMath.make(money.brand, 10n);\nconst moneyPayment = money.mint.mintPayment(amountOfMoney);\nalicePurse.deposit(moneyPayment);\n```\n\nThen we pass the contract instance and the purse to our code for `alice`:\n\n```js\nawait alice(t, zoe, instance, alicePurse);\n```\n\nAlice starts by using the `instance` to get the contract's `publicFacet` and `terms` from Zoe:", "mimetype": "text/plain", "start_char_idx": 5388, "end_char_idx": 5880, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02babf16-ec5b-4863-9f99-d3f9300af04b": {"__data__": {"id_": "02babf16-ec5b-4863-9f99-d3f9300af04b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51be263e-6373-4098-97f2-104e54f6ed0b", "node_type": "1", "metadata": {}, "hash": "eaa2427a8e9ab879e46a855975c37d4a8cc50ccbdc566e7e4644ea09e7820c92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa", "node_type": "1", "metadata": {}, "hash": "b6dabe4d74ef0543dd6d7c35588623d6b0a4b60e2ed00496d0815b6905915500", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src=\"./assets/trade-offer-safety-1.svg\"\n  style=\"border: 2px solid\" width=\"600\" />\n\n<<< @/../snippets/zoe/contracts/alice-trade.js#queryInstance\n\nThen she constructs a _proposal_ to give the `tradePrice` in exchange\nfor 1 map and 1 scroll, denominated in the game's `Item` brand; and she withdraws a payment from her purse:\n\n<<< @/../snippets/zoe/contracts/alice-trade.js#makeProposal", "mimetype": "text/plain", "start_char_idx": 5882, "end_char_idx": 6271, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa": {"__data__": {"id_": "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02babf16-ec5b-4863-9f99-d3f9300af04b", "node_type": "1", "metadata": {}, "hash": "c8370f1b3d5ad586e90aa217c81b95c5b7faa2c4855302dbd38a5fe8d02c5eba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f830b152-903c-4132-b657-6e8ebef8a1c2", "node_type": "1", "metadata": {}, "hash": "3de977bda834dd70c220ac9767f593828d25cd22f4338119f023cc74428dc592", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "She then requests an _invitation_ to join the game; makes an _offer_ with\n(a promise for) this invitation, her proposal, and her payment;\nand awaits her **Items** payout:\n\n<img src=\"./assets/trade-offer-safety-2.svg\"\n  style=\"border: 2px solid\" width=\"600\" />\n\n<<< @/../snippets/zoe/contracts/alice-trade.js#trade\n\n::: details Troubleshooting missing brands in offers\n\nIf you see...\n\n```\nError#1: key Object [Alleged: IST brand] {} not found in collection brandToIssuerRecord\n```", "mimetype": "text/plain", "start_char_idx": 6273, "end_char_idx": 6752, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f830b152-903c-4132-b657-6e8ebef8a1c2": {"__data__": {"id_": "f830b152-903c-4132-b657-6e8ebef8a1c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa", "node_type": "1", "metadata": {}, "hash": "b6dabe4d74ef0543dd6d7c35588623d6b0a4b60e2ed00496d0815b6905915500", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "042dfcac-ac34-4d63-a569-50927e3a7944", "node_type": "1", "metadata": {}, "hash": "c45621b4a515eebd6463d20ebb5ecb7f9e6749445d7411e2106086ea0024e23d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "then it may be that your offer uses brands that are not known to the contract.\nUse [E(zoe).getTerms()](/reference/zoe-api/zoe#e-zoe-getterms-instance) to find out what issuers\nare known to the contract.\n\nIf you're writing or instantiating the contract, you can tell the contract about issuers\nwhen you are [creating an instance](#starting-a-contract-instance) or by using\n[zcf.saveIssuer()](/reference/zoe-api/zoe-contract-facet#zcf-saveissuer-issuer-keyword).\n\n:::", "mimetype": "text/plain", "start_char_idx": 6754, "end_char_idx": 7219, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "042dfcac-ac34-4d63-a569-50927e3a7944": {"__data__": {"id_": "042dfcac-ac34-4d63-a569-50927e3a7944", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f830b152-903c-4132-b657-6e8ebef8a1c2", "node_type": "1", "metadata": {}, "hash": "3de977bda834dd70c220ac9767f593828d25cd22f4338119f023cc74428dc592", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2", "node_type": "1", "metadata": {}, "hash": "820f566a433ee6fe919d03907accf6854c366e95ee3067bebdced048d7d56f98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\nThe contract gets Alice's `E(publicFacet).makeTradeInvitation()` call and uses `zcf` to make an invitation with an associated handler, description, and proposal shape. Zoe gets Alice's `E(zoe).offer(...)` call, checks the proposal against the proposal shape, escrows the payment, and invokes the handler.\n\n<img src=\"./assets/trade-offer-safety-3.svg\"\n  style=\"border: 2px solid\" width=\"600\" />\n\n<<< @/../snippets/zoe/src/offer-up.contract.js#makeInvitation", "mimetype": "text/plain", "start_char_idx": 7216, "end_char_idx": 7677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2": {"__data__": {"id_": "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "042dfcac-ac34-4d63-a569-50927e3a7944", "node_type": "1", "metadata": {}, "hash": "c45621b4a515eebd6463d20ebb5ecb7f9e6749445d7411e2106086ea0024e23d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193", "node_type": "1", "metadata": {}, "hash": "205c68cb15816e159c6e9e9996f9bb94700f39f8115614bc8dc05f2d1633e5a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The offer handler is invoked with a _seat_ representing the party making the offer.\nIt extracts the `give` and `want` from the party's offer and checks that\nthey are giving at least the `tradePrice` and not asking for too many\nitems in return.\n\nWith all these prerequisites met, the handler instructs `zcf` to mint the requested\n**Item** assets, allocate what the player is giving into its own `proceeds` seat,\nand allocate the minted items to the player. Finally, it concludes its business with the player.", "mimetype": "text/plain", "start_char_idx": 7679, "end_char_idx": 8186, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193": {"__data__": {"id_": "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2", "node_type": "1", "metadata": {}, "hash": "820f566a433ee6fe919d03907accf6854c366e95ee3067bebdced048d7d56f98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "157eac4b-61cc-4e14-a072-0f524e86b5d7", "node_type": "1", "metadata": {}, "hash": "0ed73971b14aa9086b386b5633b0324d7ccaf863651fe6899b78879584406bf9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src=\"./assets/trade-offer-safety-4.svg\"\n  style=\"border: 2px solid\" width=\"600\" />\n\n<<< @/../snippets/zoe/src/offer-up.contract.js#handler\n\nZoe checks that the contract's instructions are consistent with\nthe offer and with conservation of assets. Then it allocates\nthe escrowed payment to the contract's proceeds seat and pays out\nthe place NFTs to Alice in response to the earlier `getPayout(...)` call.\n\nAlice asks the `Item` issuer what her payout is worth\nand tests that it's what she wanted.", "mimetype": "text/plain", "start_char_idx": 8188, "end_char_idx": 8689, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "157eac4b-61cc-4e14-a072-0f524e86b5d7": {"__data__": {"id_": "157eac4b-61cc-4e14-a072-0f524e86b5d7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contract-walkthru.md", "node_type": "4", "metadata": {}, "hash": "b1ef552a0176c6c869362bb415ed6fafda5ad670b7c62310d4c4d0fcbabcdee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193", "node_type": "1", "metadata": {}, "hash": "205c68cb15816e159c6e9e9996f9bb94700f39f8115614bc8dc05f2d1633e5a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<img src=\"./assets/trade-offer-safety-5.svg\"\n  style=\"border: 2px solid\" width=\"600\" />\n\n<<< @/../snippets/zoe/contracts/alice-trade.js#payouts", "mimetype": "text/plain", "start_char_idx": 8691, "end_char_idx": 8834, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2efda485-4d91-49f9-8e65-a6a72ef9bb1d": {"__data__": {"id_": "2efda485-4d91-49f9-8e65-a6a72ef9bb1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23989c15-da83-46da-9aab-0751647e1f24", "node_type": "1", "metadata": {}, "hash": "56ec8cbe7dd3fdf3c429f3b3ffd5f02fdad40c2d96736af4aa3afa81c29260f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe Overview\n\nThe Zoe service and smart contract API support credibly trading assets with reduced risk.\n\n- **Zoe is Safer for Users:** Zoe guarantees that when you make an offer, you get either\n  what you said you wanted or a full refund of the assets you put in,\n  even if the contract is buggy or malicious.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23989c15-da83-46da-9aab-0751647e1f24": {"__data__": {"id_": "23989c15-da83-46da-9aab-0751647e1f24", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2efda485-4d91-49f9-8e65-a6a72ef9bb1d", "node_type": "1", "metadata": {}, "hash": "d79b7fdf8eed9bd9621afd309246fe578c59e695ca29930918114d7c4d067ebe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62fa7bec-3c79-444e-841e-672589e55419", "node_type": "1", "metadata": {}, "hash": "87b8022fb1563d494da5843042e84d1f83bfe82e8f6b92af9447ba0cfd49049a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **Zoe is Safer for Developers**: For a given offer, if you\n  make a mistake with the amount of assets you take or give,\n  Zoe guarantees that your users will either get what they say\n  they wanted or get a refund.\n\n## High Level Trading Flow\n\nTrading with a contract using Zoe typically goes through these steps:\n\n<img src=\"./assets/offer-safety-flow.svg\" alt=\"offer safety flow with contracts, zoe, and parties\"\n style=\"border: 2px solid\" />", "mimetype": "text/plain", "start_char_idx": 313, "end_char_idx": 757, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "62fa7bec-3c79-444e-841e-672589e55419": {"__data__": {"id_": "62fa7bec-3c79-444e-841e-672589e55419", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23989c15-da83-46da-9aab-0751647e1f24", "node_type": "1", "metadata": {}, "hash": "56ec8cbe7dd3fdf3c429f3b3ffd5f02fdad40c2d96736af4aa3afa81c29260f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8ee671e-b888-4096-a6e6-ff48ad56cf0a", "node_type": "1", "metadata": {}, "hash": "a85502e5df4aafc625db6048ece0d81c6ca9fb4ba357e190f55cfd8bcfd76df2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Parties call [E(zoe).offer(invitation, proposal, assets)](/reference/zoe-api/zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs). Zoe escrows the assets.\n2. Zoe relays the proposal to the contract identified in the invitation.\n3. The contract handles proposals using its custom business logic.\n4. The contract instructs Zoe to [reallocate](/reference/zoe-api/zoe-contract-facet#zcf-reallocate-seats) assets among the parties.", "mimetype": "text/plain", "start_char_idx": 759, "end_char_idx": 1204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8ee671e-b888-4096-a6e6-ff48ad56cf0a": {"__data__": {"id_": "f8ee671e-b888-4096-a6e6-ff48ad56cf0a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62fa7bec-3c79-444e-841e-672589e55419", "node_type": "1", "metadata": {}, "hash": "87b8022fb1563d494da5843042e84d1f83bfe82e8f6b92af9447ba0cfd49049a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f6f3676-c2d5-45a2-aea8-36df26f54e27", "node_type": "1", "metadata": {}, "hash": "eb2e31d9b831a442eca7e3bd2add174c0d8260765edeacc9c4e6b701952b4800", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "5. The contract completes (aka [exits](/reference/zoe-api/zcfseat#azcfseat-exit-completion)) the offers.\n6. Zoe pays out assets to the parties.", "mimetype": "text/plain", "start_char_idx": 1205, "end_char_idx": 1348, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f6f3676-c2d5-45a2-aea8-36df26f54e27": {"__data__": {"id_": "7f6f3676-c2d5-45a2-aea8-36df26f54e27", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8ee671e-b888-4096-a6e6-ff48ad56cf0a", "node_type": "1", "metadata": {}, "hash": "a85502e5df4aafc625db6048ece0d81c6ca9fb4ba357e190f55cfd8bcfd76df2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18", "node_type": "1", "metadata": {}, "hash": "f5c545c8771cad8ea0c881cf3dc12c2a0cb92bb7446512289c792b78dd702109", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that in this flow, _assets are not sent to the contract_; only information about them. _For more on this distinction, see [The Settlers of Blockchain](https://agoric.com/blog/technology/the-settlers-of-blockchain) Jun 2021._\n\n::: tip Watch: Offer Safety: Partitioning Risk in Smart Contracts (20 min. Sep 2019)", "mimetype": "text/plain", "start_char_idx": 1350, "end_char_idx": 1665, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18": {"__data__": {"id_": "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f6f3676-c2d5-45a2-aea8-36df26f54e27", "node_type": "1", "metadata": {}, "hash": "eb2e31d9b831a442eca7e3bd2add174c0d8260765edeacc9c4e6b701952b4800", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196", "node_type": "1", "metadata": {}, "hash": "0f4f3a6b40958d6daa1cbc3786904300f908219a8200f33d9e20a06d402de219", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<ClientOnly>\n<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/T6h6TMuVHKQ?si=NzWre0vhlxjBxG-5&amp;controls=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</ClientOnly>\n\n:::\n\n## Building and Using Contracts\n\n- [Zoe Smart Contract Basics](./contract-basics.md)\n- [A Complete Contract Walk-Through: offer-up](./contract-walkthru)", "mimetype": "text/plain", "start_char_idx": 1667, "end_char_idx": 2147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196": {"__data__": {"id_": "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18", "node_type": "1", "metadata": {}, "hash": "f5c545c8771cad8ea0c881cf3dc12c2a0cb92bb7446512289c792b78dd702109", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54c790d4-859d-4e6b-9b58-37fc31fcde29", "node_type": "1", "metadata": {}, "hash": "7f7122d2fce7d42880b527ae0cb2ab1ba59ef67213c2fd9bcb88a442308d7db2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Live Coding and Example Contracts\n\n::: tip Watch: How To Build a Composable DeFi Contract (1:47 Dec 2020)\n\n<ClientOnly>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/e9dMkC2oFh8?si=3Luwp25R8d23elAa\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</ClientOnly>", "mimetype": "text/plain", "start_char_idx": 2149, "end_char_idx": 2565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54c790d4-859d-4e6b-9b58-37fc31fcde29": {"__data__": {"id_": "54c790d4-859d-4e6b-9b58-37fc31fcde29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196", "node_type": "1", "metadata": {}, "hash": "0f4f3a6b40958d6daa1cbc3786904300f908219a8200f33d9e20a06d402de219", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa51d138-2aeb-474f-aa6e-71c76db38d4b", "node_type": "1", "metadata": {}, "hash": "abc0441298dac1251b5a7ef15c961f86b6360dbbbe0420d14ca628c9b8622aea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Agoric has written [a number of example contracts that you can\nuse](./contracts/index), including:\n\n- an [Automated Market Maker (AMM)\n  implementation](./contracts/constantProductAMM)\n- a [covered call option contract](./contracts/covered-call)\n- an [OTC Desk market maker contract](./contracts/otc-desk)\n- contracts for [minting fungible](./contracts/mint-payments) and\n  [non-fungible tokens](./contracts/mint-and-sell-nfts)\n\n::: warning Beta Features", "mimetype": "text/plain", "start_char_idx": 2567, "end_char_idx": 3021, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa51d138-2aeb-474f-aa6e-71c76db38d4b": {"__data__": {"id_": "fa51d138-2aeb-474f-aa6e-71c76db38d4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_index.md", "node_type": "4", "metadata": {}, "hash": "aeec4579474929cdf95bd31b6f81b30113dc6832a7e64679250b1efdb01b2c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54c790d4-859d-4e6b-9b58-37fc31fcde29", "node_type": "1", "metadata": {}, "hash": "7f7122d2fce7d42880b527ae0cb2ab1ba59ef67213c2fd9bcb88a442308d7db2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: warning Beta Features\n\nThese contracts may depend on features from our Beta release\nthat are not available in mainnet.\n\n:::", "mimetype": "text/plain", "start_char_idx": 2996, "end_char_idx": 3123, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b465d9fe-d550-4b4c-bc4e-db073acb91c1": {"__data__": {"id_": "b465d9fe-d550-4b4c-bc4e-db073acb91c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f", "node_type": "1", "metadata": {}, "hash": "8c4206a2016f68148f7e5547e23e5f29e2daf022936cb70e87761dfa941b0886", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe: Offer-Safety Enforcement\n\n<Zoe-Version/>\n\n## What is Zoe?\n\n**For users**: Zoe guarantees that as a user of a smart contract, you\nwill either get what you wanted or get a full refund, even if the\nsmart contract is buggy or malicious. (In fact, the smart contract\nnever has access to your digital assets.)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 310, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f": {"__data__": {"id_": "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b465d9fe-d550-4b4c-bc4e-db073acb91c1", "node_type": "1", "metadata": {}, "hash": "c86774999804fc9a7cd2cf0d0cc4a08f773333bbc1642855d2dc6ba377b8a2d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cd627df-337c-4875-8844-7bb3cc4bfa88", "node_type": "1", "metadata": {}, "hash": "8859276c8d0bb3b4978fe7e7c9446bcd649769507328fe98bfe077be0b22ff25", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**For developers**: Zoe provides a safety net so you can focus on what\nyour smart contract does best, without worrying about your users\nlosing their assets due to a bug in the code that you wrote. Writing a\nsmart contract on Zoe is easy: all of the Zoe smart contracts are\nwritten in the familiar language of JavaScript.\n\n## Sounds Like Magic. How Does it Actually Work?", "mimetype": "text/plain", "start_char_idx": 312, "end_char_idx": 682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cd627df-337c-4875-8844-7bb3cc4bfa88": {"__data__": {"id_": "0cd627df-337c-4875-8844-7bb3cc4bfa88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f", "node_type": "1", "metadata": {}, "hash": "8c4206a2016f68148f7e5547e23e5f29e2daf022936cb70e87761dfa941b0886", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1693c152-5014-49bd-a3d8-79f0746443dc", "node_type": "1", "metadata": {}, "hash": "68a7b2eb0d41b1e765c1f75266bb7d7c79673c0b06ded12a81188ac7fc6826eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To use Zoe, we put things in terms of \"offers\". An offer proposal is a\nstatement about what you want and what you're willing to offer. It\nturns out, many smart contracts (apart from gifts and one-way\npayments) involve an exchange of digital assets that can be put in\nterms of offer proposals. We\ncan say things like, \"I'll give you [three wool for two\nbricks](https://en.wikipedia.org/wiki/Catan).\" [Learn more about the\nparticulars of structuring an offer proposal here](./proposal).", "mimetype": "text/plain", "start_char_idx": 684, "end_char_idx": 1168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1693c152-5014-49bd-a3d8-79f0746443dc": {"__data__": {"id_": "1693c152-5014-49bd-a3d8-79f0746443dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cd627df-337c-4875-8844-7bb3cc4bfa88", "node_type": "1", "metadata": {}, "hash": "8859276c8d0bb3b4978fe7e7c9446bcd649769507328fe98bfe077be0b22ff25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95fbd3a7-0594-4c25-acfe-62262032bb0d", "node_type": "1", "metadata": {}, "hash": "8a74fb3cee7f97dbdeae3ba91cdab20eab40a9e04f30231d2f6453544aecb406", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Offers are a structured way of describing user intent. To a certain\nextent, an offer's rules (called a _proposal_) are the user's\n_contractual understanding_ of the agreement they are entering into.", "mimetype": "text/plain", "start_char_idx": 1170, "end_char_idx": 1368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95fbd3a7-0594-4c25-acfe-62262032bb0d": {"__data__": {"id_": "95fbd3a7-0594-4c25-acfe-62262032bb0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1693c152-5014-49bd-a3d8-79f0746443dc", "node_type": "1", "metadata": {}, "hash": "68a7b2eb0d41b1e765c1f75266bb7d7c79673c0b06ded12a81188ac7fc6826eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53c06484-5bed-484d-a532-a0661f2d6df0", "node_type": "1", "metadata": {}, "hash": "5b47439f741c91a53d3419415e5b061a2c5cc3a58e494a2d2ed03f4e6e87d466", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You might have noticed that the offer doesn't specify the mechanism by\nwhich the exchange happens. The offer doesn't say whether the item you\nwant is up for auction, in an exchange, or part of a private trade.\nThe offer doesn't mention the particular mechanism because an\nimportant part of the design of Zoe is a **separation of concerns**.", "mimetype": "text/plain", "start_char_idx": 1370, "end_char_idx": 1710, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53c06484-5bed-484d-a532-a0661f2d6df0": {"__data__": {"id_": "53c06484-5bed-484d-a532-a0661f2d6df0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95fbd3a7-0594-4c25-acfe-62262032bb0d", "node_type": "1", "metadata": {}, "hash": "8a74fb3cee7f97dbdeae3ba91cdab20eab40a9e04f30231d2f6453544aecb406", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b", "node_type": "1", "metadata": {}, "hash": "22810ec996d416c58e357db921732355556869b9eda97493bdf3b158a61076e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Zoe is responsible for enforcing what we call \"offer safety\", and the\nsmart contract that runs on top of Zoe is responsible for figuring out\na proposed reallocation of resources. To use an auction as an example,\nthe smart contract is responsible for figuring out who wins the\nauction and how much they pay, but Zoe handles the escrowing of the\nbids and the payments. You can think of this as similar to e-commerce\nwebsites using a separate payment-processor so that they don't have to", "mimetype": "text/plain", "start_char_idx": 1712, "end_char_idx": 2196, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b": {"__data__": {"id_": "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53c06484-5bed-484d-a532-a0661f2d6df0", "node_type": "1", "metadata": {}, "hash": "5b47439f741c91a53d3419415e5b061a2c5cc3a58e494a2d2ed03f4e6e87d466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c506e0c5-2b8e-45f5-868f-b21810f5369b", "node_type": "1", "metadata": {}, "hash": "eb2d5d1ef3098cc3676c4ba76b4ff955534ccd538cefc927413a8ab114ace609", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "handle the credit cards themselves.", "mimetype": "text/plain", "start_char_idx": 2197, "end_char_idx": 2232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c506e0c5-2b8e-45f5-868f-b21810f5369b": {"__data__": {"id_": "c506e0c5-2b8e-45f5-868f-b21810f5369b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b", "node_type": "1", "metadata": {}, "hash": "22810ec996d416c58e357db921732355556869b9eda97493bdf3b158a61076e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6", "node_type": "1", "metadata": {}, "hash": "668b15b72cb64e1ec0db86e0b79a7b5ba0ff704bea71485b0453785e88f94529", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### What is \"Offer Safety\"?\n\nZoe guarantees offer safety, meaning that when a user makes an offer\nand it is escrowed with Zoe, Zoe guarantees that the user either\ngets back what they said they wanted, or gets back (refunded) what they\noriginally offered and escrowed.\n\nWhen a user escrows with Zoe, they get back\na JavaScript promise for a future payout. Let's\nlook a particular example to see how this works.\n\n## An Example: A Swap", "mimetype": "text/plain", "start_char_idx": 2234, "end_char_idx": 2666, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6": {"__data__": {"id_": "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c506e0c5-2b8e-45f5-868f-b21810f5369b", "node_type": "1", "metadata": {}, "hash": "eb2d5d1ef3098cc3676c4ba76b4ff955534ccd538cefc927413a8ab114ace609", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8da273f0-3d3f-4585-8d88-c43a8b00087f", "node_type": "1", "metadata": {}, "hash": "51e4bfd3212ade5e05683283d0c42a3195770b63f3fba87c91190fdbb53473b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## An Example: A Swap\n\nI want to trade my three bricks for five wool. You realize you have\nfive wool and agree to the deal. Without Zoe, you might send\nme the five wool, and I might disappear without ever giving you the\nthree bricks. With Zoe, we can safely trade with each other,\neven if we don't trust each other. We are assured that at worst, if\nthe swap contract behaves badly, we both get a refund, and at\nbest, we get what we each wanted.", "mimetype": "text/plain", "start_char_idx": 2645, "end_char_idx": 3089, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8da273f0-3d3f-4585-8d88-c43a8b00087f": {"__data__": {"id_": "8da273f0-3d3f-4585-8d88-c43a8b00087f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6", "node_type": "1", "metadata": {}, "hash": "668b15b72cb64e1ec0db86e0b79a7b5ba0ff704bea71485b0453785e88f94529", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "450d3fad-1b08-4ddb-965f-5680f10b704c", "node_type": "1", "metadata": {}, "hash": "d636988bc57bb0b4a65e6f9fc6f4d07ef31cc1f597ba0314c129bd242fa42c3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let's look at the basic [Atomic Swap contract](/guides/zoe/contracts/atomic-swap)\n(link includes [real contract code](https://github.com/Agoric/agoric-sdk/blob/f29591519809dbadf19db0a26f38704d87429b89/packages/zoe/src/contracts/atomicSwap.js)).\n\nHere's a high-level overview of what happens:", "mimetype": "text/plain", "start_char_idx": 3091, "end_char_idx": 3382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "450d3fad-1b08-4ddb-965f-5680f10b704c": {"__data__": {"id_": "450d3fad-1b08-4ddb-965f-5680f10b704c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8da273f0-3d3f-4585-8d88-c43a8b00087f", "node_type": "1", "metadata": {}, "hash": "51e4bfd3212ade5e05683283d0c42a3195770b63f3fba87c91190fdbb53473b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "381f35b7-3cf1-40de-a66b-fe11b87042a1", "node_type": "1", "metadata": {}, "hash": "adbc593a8ab80e64b948c2ce681efe043fc7e9531e9b22b32bc6333bc4ceab93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. I make an instance of the swap contract, and get an invitation to\n   participate in the contract.\n2. I make an offer through Zoe by presenting my invitation, a proposal\n   of 3 bricks for 5 wool, and a payment with the 3 bricks. Zoe escrows\n   the bricks and returns me a seat (a `UserSeat` to be precise) in the\n   contract, from which I can get the results of my offer, the payouts, etc.\n3. The result of processing my offer is an invitation for my counterparty.", "mimetype": "text/plain", "start_char_idx": 3384, "end_char_idx": 3851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "381f35b7-3cf1-40de-a66b-fe11b87042a1": {"__data__": {"id_": "381f35b7-3cf1-40de-a66b-fe11b87042a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "450d3fad-1b08-4ddb-965f-5680f10b704c", "node_type": "1", "metadata": {}, "hash": "d636988bc57bb0b4a65e6f9fc6f4d07ef31cc1f597ba0314c129bd242fa42c3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8475be6-6641-4345-a6cb-859f0ade7d5f", "node_type": "1", "metadata": {}, "hash": "f519a13edfd9ad688cfa5e0d13d2426ef899a53c82563cd21a9883a03bc9c41a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "I send you that invitation to participate in this contract instance.\n4. You inspect the invitation and verify it was created by the\n   `atomicSwap` contract code.\n5. You use your invitation to make your matching offer with Zoe (5 wool for\n   3 bricks). You get your own seat\n   to with which to access your payout and offer results.\n6. The contract confirms that our offers match, and reallocates our bricks\n   and wool and exits our offers. That will resolve our respective payout", "mimetype": "text/plain", "start_char_idx": 3855, "end_char_idx": 4336, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8475be6-6641-4345-a6cb-859f0ade7d5f": {"__data__": {"id_": "b8475be6-6641-4345-a6cb-859f0ade7d5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "381f35b7-3cf1-40de-a66b-fe11b87042a1", "node_type": "1", "metadata": {}, "hash": "adbc593a8ab80e64b948c2ce681efe043fc7e9531e9b22b32bc6333bc4ceab93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07c4a197-1cdd-437c-9efe-f74582c3ab89", "node_type": "1", "metadata": {}, "hash": "ecb5573b3d96f33d48ecd10e66bc5dd7834ba36fd2bfae860a6efa247342a63c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "promises, mine to the five wool that I wanted, and yours to the three\n   bricks that you wanted. Success!", "mimetype": "text/plain", "start_char_idx": 4340, "end_char_idx": 4445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07c4a197-1cdd-437c-9efe-f74582c3ab89": {"__data__": {"id_": "07c4a197-1cdd-437c-9efe-f74582c3ab89", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8475be6-6641-4345-a6cb-859f0ade7d5f", "node_type": "1", "metadata": {}, "hash": "f519a13edfd9ad688cfa5e0d13d2426ef899a53c82563cd21a9883a03bc9c41a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be9ef972-1d24-4b97-b096-583569ce0e7a", "node_type": "1", "metadata": {}, "hash": "03d1643fdbaed953d751da98e2b7d21a916e926f23b237910339f840185f85d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## How to Write Smart Contracts\n\nWriting smart contracts that run on Zoe is easy. Let's look\nat a simple contract like [Automatic Refund](/guides/zoe/contracts/automatic-refund)\n(link includes [real contract\ncode](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/automaticRefund.js)).\nIt only does one thing, and it's pretty useless&mdash;it gives you back what you put in.", "mimetype": "text/plain", "start_char_idx": 4447, "end_char_idx": 4881, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be9ef972-1d24-4b97-b096-583569ce0e7a": {"__data__": {"id_": "be9ef972-1d24-4b97-b096-583569ce0e7a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07c4a197-1cdd-437c-9efe-f74582c3ab89", "node_type": "1", "metadata": {}, "hash": "ecb5573b3d96f33d48ecd10e66bc5dd7834ba36fd2bfae860a6efa247342a63c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ac3a771-ca83-467e-93a1-3935361adb06", "node_type": "1", "metadata": {}, "hash": "61637fe09704cc8b201238ec05ccc90a3e9780e1c35c768ce6fa0d9cc74221da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst start = zcf => {\n  const refund = seat => {\n    seat.exit();\n    return `The offer was accepted`;\n  };\n  const makeRefundInvitation = () => zcf.makeInvitation(refund, 'getRefund');\n\n  const publicFacet = Far('publicFacet', {\n    makeInvitation: makeRefundInvitation\n  });\n\n  const creatorInvitation = makeRefundInvitation();\n\n  return harden({ creatorInvitation, publicFacet });\n};\n\nharden(start);\nexport { start };\n```", "mimetype": "text/plain", "start_char_idx": 4883, "end_char_idx": 5314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ac3a771-ca83-467e-93a1-3935361adb06": {"__data__": {"id_": "2ac3a771-ca83-467e-93a1-3935361adb06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be9ef972-1d24-4b97-b096-583569ce0e7a", "node_type": "1", "metadata": {}, "hash": "03d1643fdbaed953d751da98e2b7d21a916e926f23b237910339f840185f85d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d53f23c2-295b-4578-a73c-a38c9abcc133", "node_type": "1", "metadata": {}, "hash": "05dbb3db4946c912db305a9e438340e41b622fa5f547553b32ec022a81ec22a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Whenever we create a new object or array, we recursively\nfreeze it with `harden`. You can learn more about `harden` in the\n[Endo and Hardened JavaScript\ndocumentation](https://github.com/endojs/endo/blob/HEAD/packages/ses/README.md).\n\nThe `automaticRefund` contract behavior is implemented in `refund`.\nIt just tells Zoe to exit the offer, which gives the user their payout\nthrough Zoe.", "mimetype": "text/plain", "start_char_idx": 5316, "end_char_idx": 5702, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d53f23c2-295b-4578-a73c-a38c9abcc133": {"__data__": {"id_": "d53f23c2-295b-4578-a73c-a38c9abcc133", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ac3a771-ca83-467e-93a1-3935361adb06", "node_type": "1", "metadata": {}, "hash": "61637fe09704cc8b201238ec05ccc90a3e9780e1c35c768ce6fa0d9cc74221da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a83814c3-6c71-45c8-bafb-f9a96b91296c", "node_type": "1", "metadata": {}, "hash": "9ec7af1f171855cb7c4ba819c876cdee7a5197a0671298294ef57f2cdec211c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A smart contract on Zoe must export a function named `start` that\ntakes a single parameter: `zcf`, which is the contract-internal API\nfor Zoe. The `start` function must return an object with any of\nseveral optional properties:\n\n- **creatorInvitation**: An invitation only available to the creator of the contract instance.\n- **creatorFacet**: An object with operations made accessible only to the creator.\n- **publicFacet**: An object with operations available to any client with access to the instance.", "mimetype": "text/plain", "start_char_idx": 5704, "end_char_idx": 6207, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a83814c3-6c71-45c8-bafb-f9a96b91296c": {"__data__": {"id_": "a83814c3-6c71-45c8-bafb-f9a96b91296c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d53f23c2-295b-4578-a73c-a38c9abcc133", "node_type": "1", "metadata": {}, "hash": "05dbb3db4946c912db305a9e438340e41b622fa5f547553b32ec022a81ec22a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "762f351f-2880-41de-8cc6-0ccdd23378e1", "node_type": "1", "metadata": {}, "hash": "420294ed201732480f6fed2c82356a64058a3fda783646538b0b75b4e8e17ba4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Diving Deeper\n\nLet's dive back into the [Atomic Swap contract](/guides/zoe/contracts/atomic-swap)\n(link includes [real contract code](https://github.com/Agoric/agoric-sdk/blob/f29591519809dbadf19db0a26f38704d87429b89/packages/zoe/src/contracts/atomicSwap.js)).\n\nThe contract first confirms that `issuers` are setup for the `Asset` and `Price` keywords. Those are the two items that will be swapped.", "mimetype": "text/plain", "start_char_idx": 6209, "end_char_idx": 6610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "762f351f-2880-41de-8cc6-0ccdd23378e1": {"__data__": {"id_": "762f351f-2880-41de-8cc6-0ccdd23378e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a83814c3-6c71-45c8-bafb-f9a96b91296c", "node_type": "1", "metadata": {}, "hash": "9ec7af1f171855cb7c4ba819c876cdee7a5197a0671298294ef57f2cdec211c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8b81047-0ec6-4885-b096-ece47af967a8", "node_type": "1", "metadata": {}, "hash": "599a5b4702ee39d7eb2c593818af78eee043b5060cad1f928dd4232493663c0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following uses the [`assertIssuerKeywords` helper function](/reference/zoe-api/zoe-helpers#assertissuerkeywords-zcf-expected). It\nchecks properties of the running contract instance's terms.\n\n```js\nconst start = zcf => {\n  assertIssuerKeywords(zcf, harden(['Asset', 'Price']));\n```", "mimetype": "text/plain", "start_char_idx": 6612, "end_char_idx": 6896, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8b81047-0ec6-4885-b096-ece47af967a8": {"__data__": {"id_": "d8b81047-0ec6-4885-b096-ece47af967a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "762f351f-2880-41de-8cc6-0ccdd23378e1", "node_type": "1", "metadata": {}, "hash": "420294ed201732480f6fed2c82356a64058a3fda783646538b0b75b4e8e17ba4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "687c99cf-92e4-4196-ad34-ed1b12f2bd2c", "node_type": "1", "metadata": {}, "hash": "456580a97d142615a2322dbbbda732f367eda5a04ff07cde1153c8c3121a40fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `makeMatchingInvitation()` handler is for the contract instance's creator, and it\nmakes the `invitation` for the other party to use. At the end of this section, we'll see how it's incorporated into\nthe contract. When the associated `creatorInvitation` is used to make an offer, `makeMatchingInvitation()` is invoked\nwith the `seat` for that offer.", "mimetype": "text/plain", "start_char_idx": 6898, "end_char_idx": 7249, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "687c99cf-92e4-4196-ad34-ed1b12f2bd2c": {"__data__": {"id_": "687c99cf-92e4-4196-ad34-ed1b12f2bd2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8b81047-0ec6-4885-b096-ece47af967a8", "node_type": "1", "metadata": {}, "hash": "599a5b4702ee39d7eb2c593818af78eee043b5060cad1f928dd4232493663c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "688a4573-9cfa-49eb-9534-41acf24cc55c", "node_type": "1", "metadata": {}, "hash": "12e1ab0e381b0b46c26d727cdeaf8ac2afd88531fe75b5690068a2165ec77900", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract uses the\n[`assertProposalShape` helper function](/reference/zoe-api/zoe-helpers#assertproposalshape-seat-expected) to\ncheck that the offer proposes the kind of trade the contract accepts. In this case, offers must\nhave a proposal of the form:\n\n```js\n{\n  give: { Asset: amount1 },\n  want: { Price: amount2 },\n}\n```\n\n`amount1` and `amount2` are amounts with the correct issuers for the keywords.\nThe contract then uses `getProposal()` to extract the properties of the proposal for later matching.", "mimetype": "text/plain", "start_char_idx": 7251, "end_char_idx": 7759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "688a4573-9cfa-49eb-9534-41acf24cc55c": {"__data__": {"id_": "688a4573-9cfa-49eb-9534-41acf24cc55c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "687c99cf-92e4-4196-ad34-ed1b12f2bd2c", "node_type": "1", "metadata": {}, "hash": "456580a97d142615a2322dbbbda732f367eda5a04ff07cde1153c8c3121a40fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0f61d47-94ad-4a5a-8951-fe8ca8054521", "node_type": "1", "metadata": {}, "hash": "6dffbf797d475732bae610083e5ed207f54eb92ce174ad7327ab9845c955fa87", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n  const makeMatchingInvitation = firstSeat => {\n    assertProposalShape(firstSeat, {\n      give: { Asset: null },\n      want: { Price: null },\n    });\n    const { want, give } = firstSeat.getProposal();\n```", "mimetype": "text/plain", "start_char_idx": 7761, "end_char_idx": 7973, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a0f61d47-94ad-4a5a-8951-fe8ca8054521": {"__data__": {"id_": "a0f61d47-94ad-4a5a-8951-fe8ca8054521", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "688a4573-9cfa-49eb-9534-41acf24cc55c", "node_type": "1", "metadata": {}, "hash": "12e1ab0e381b0b46c26d727cdeaf8ac2afd88531fe75b5690068a2165ec77900", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "448d7264-c132-4fc2-87e4-5856c7c10140", "node_type": "1", "metadata": {}, "hash": "a94cf9fcd32320e970597fc5ac62b0a68463dd371809edf5a3a97d5ef3d8c3e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`makeMatchingInvitation()` then constructs a `matchingSeatOfferHandler()` handler\nfor the second offer, with the first offer's `want` and `give` in scope. This second\nhandler is responsible for the final step.\nIt uses the [`swap` helper function](/reference/zoe-api/zoe-helpers#swap-zcf-leftseat-rightseat)\nto attempt asset reallocation between the two seats as described above and then\n(whether or not the attempt succeeds) exits both seats, making payouts available to", "mimetype": "text/plain", "start_char_idx": 7975, "end_char_idx": 8445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "448d7264-c132-4fc2-87e4-5856c7c10140": {"__data__": {"id_": "448d7264-c132-4fc2-87e4-5856c7c10140", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0f61d47-94ad-4a5a-8951-fe8ca8054521", "node_type": "1", "metadata": {}, "hash": "6dffbf797d475732bae610083e5ed207f54eb92ce174ad7327ab9845c955fa87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d3da71a-04fb-4db1-ac22-580d26d9cef8", "node_type": "1", "metadata": {}, "hash": "a7b09f67e6445ff4e17a816b5180af5b27566bb2ee5697c5ab65b49c86b71fa1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "both parties. Finally, `matchingSeatOfferHandler()` shuts down the contract.", "mimetype": "text/plain", "start_char_idx": 8446, "end_char_idx": 8522, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d3da71a-04fb-4db1-ac22-580d26d9cef8": {"__data__": {"id_": "3d3da71a-04fb-4db1-ac22-580d26d9cef8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "448d7264-c132-4fc2-87e4-5856c7c10140", "node_type": "1", "metadata": {}, "hash": "a94cf9fcd32320e970597fc5ac62b0a68463dd371809edf5a3a97d5ef3d8c3e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72127efb-dcbd-489a-b14d-6a0e0db8f85f", "node_type": "1", "metadata": {}, "hash": "27b0fec841399c35b34eecbe75610a088ab760d03715bb55b73b661af2466ba0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst matchingSeatOfferHandler = matchingSeat => {\n  const swapResult = swap(zcf, firstSeat, matchingSeat);\n  zcf.shutdown();\n  return swapResult;\n};\n```\n\nNow let's put it together. The final step of `makeMatchingInvitation()`\nis to create and return the second party's invitation, using\n`matchingSeatOfferHandler()` and including custom properties for the proposal of the invited offer.", "mimetype": "text/plain", "start_char_idx": 8524, "end_char_idx": 8917, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72127efb-dcbd-489a-b14d-6a0e0db8f85f": {"__data__": {"id_": "72127efb-dcbd-489a-b14d-6a0e0db8f85f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d3da71a-04fb-4db1-ac22-580d26d9cef8", "node_type": "1", "metadata": {}, "hash": "a7b09f67e6445ff4e17a816b5180af5b27566bb2ee5697c5ab65b49c86b71fa1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a90f6e31-8a84-404a-9f53-8c13dc01c554", "node_type": "1", "metadata": {}, "hash": "c137f5596ae26778c1c01ed6bb7a72a3e9902da84044067572eac4aebbd22afe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    const matchingSeatInvitation = zcf.makeInvitation(\n      matchingSeatOfferHandler,\n      'matchOffer',\n      {\n        asset: give.Asset,\n        price: want.Price,\n      },\n    );\n    return matchingSeatInvitation;\n  };\n```\n\nFinally, the `start` function makes an invitation for the instance's creator\nand returns it as `creatorInvitation`.\n\n```js\n  const creatorInvitation = zcf.makeInvitation(\n    makeMatchingInvitation,\n    'firstOffer',\n  );\n  return { creatorInvitation };\n};\n```", "mimetype": "text/plain", "start_char_idx": 8919, "end_char_idx": 9415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a90f6e31-8a84-404a-9f53-8c13dc01c554": {"__data__": {"id_": "a90f6e31-8a84-404a-9f53-8c13dc01c554", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-enforcement.md", "node_type": "4", "metadata": {}, "hash": "f572636a56ff64efd99c0edde47dac14cdf08b2f9dc8ca7cf30cc90be8cdbcf9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72127efb-dcbd-489a-b14d-6a0e0db8f85f", "node_type": "1", "metadata": {}, "hash": "27b0fec841399c35b34eecbe75610a088ab760d03715bb55b73b661af2466ba0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `creatorInvitation` is only available to the contract instance's creator\n(see [`startInstance`](/reference/zoe-api/zoe#e-zoe-startinstance-installation-issuerkeywordrecord-terms-privateargs)).\nThe creator can use it to make their own offer, or can send it to some other party.", "mimetype": "text/plain", "start_char_idx": 9417, "end_char_idx": 9697, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e94c3105-a396-4949-b1a3-e7878c1465ad": {"__data__": {"id_": "e94c3105-a396-4949-b1a3-e7878c1465ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f3d2ffb-6224-47a8-b4ee-8474afbac32e", "node_type": "1", "metadata": {}, "hash": "f225aa665a64193a98bc7dc4834222f38151e4d0712475b305283bbe23f145f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Offer Safety\n\n<Zoe-Version/>\n\n**Definition**: _Offer safety_ means that the user is guaranteed to either\nget what they wanted or get back a full refund of what they offered.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f3d2ffb-6224-47a8-b4ee-8474afbac32e": {"__data__": {"id_": "8f3d2ffb-6224-47a8-b4ee-8474afbac32e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e94c3105-a396-4949-b1a3-e7878c1465ad", "node_type": "1", "metadata": {}, "hash": "839251628cfbec18d516546a6f2e74aa7cae36519a0a9d1e430997208ec93ebf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "044bee6b-feba-45d9-a0d9-03bc8fc83f0f", "node_type": "1", "metadata": {}, "hash": "2d27c8cf90c39571e8f6102858b1b4eb28aaa41f2f962ccca979a81c70e957cb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For Zoe to enforce offer safety, the user must\ngive Zoe a `proposal`. This is a description of both what they want and what\nthey are offering, and when and how the user can exit the contract. Zoe uses\nthis last to enforce payout liveness. The exit specification is optional, and\ndefaults to `OnDemand`, meaning a user can exit the contract instance at their\ndiscretion.\n\nFor example, I want to buy an event ticket for which I offer $100. In Zoe,\nmy `proposal` is:", "mimetype": "text/plain", "start_char_idx": 177, "end_char_idx": 640, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "044bee6b-feba-45d9-a0d9-03bc8fc83f0f": {"__data__": {"id_": "044bee6b-feba-45d9-a0d9-03bc8fc83f0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f3d2ffb-6224-47a8-b4ee-8474afbac32e", "node_type": "1", "metadata": {}, "hash": "f225aa665a64193a98bc7dc4834222f38151e4d0712475b305283bbe23f145f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25db8f96-531f-497d-904f-5e93195c291f", "node_type": "1", "metadata": {}, "hash": "cef7bf778a05e2e48f9b1f09baf9aaed77fc8b9aeff997261468b7d6c459e51d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n{\n  give: { Price: dollars100 },\n  want: { Asset: ticket1 },\n}\n```\n\n`Asset` and `Price` are the `keywords` of a contract. Keywords\nlet contract users easily and consistently refer to parts of\na proposal, payments escrowed with Zoe, and payouts received from Zoe.\n\nFor example, the user escrows assets with Zoe by submitting payments\nusing keywords. In this example, I would send Zoe a $100 payment to\nescrow my offer, as Zoe immediately escrows the `give:`-specified payment.", "mimetype": "text/plain", "start_char_idx": 642, "end_char_idx": 1123, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25db8f96-531f-497d-904f-5e93195c291f": {"__data__": {"id_": "25db8f96-531f-497d-904f-5e93195c291f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "044bee6b-feba-45d9-a0d9-03bc8fc83f0f", "node_type": "1", "metadata": {}, "hash": "2d27c8cf90c39571e8f6102858b1b4eb28aaa41f2f962ccca979a81c70e957cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80529836-4e08-47b9-8cb0-238bff0e63e1", "node_type": "1", "metadata": {}, "hash": "d1359aeb4fe48c9b2c5a6b99819f893bed27717f22b363f68a1ac5d96568d7b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "After the user escrows, they get a promise for a payout from Zoe.\nThis is the payout that offer safety is enforced over. The payout _must_\nbe either what the user wanted (an event ticket in the above example)\nor a full refund of what they escrowed ($100 in this example).", "mimetype": "text/plain", "start_char_idx": 1125, "end_char_idx": 1396, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80529836-4e08-47b9-8cb0-238bff0e63e1": {"__data__": {"id_": "80529836-4e08-47b9-8cb0-238bff0e63e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25db8f96-531f-497d-904f-5e93195c291f", "node_type": "1", "metadata": {}, "hash": "cef7bf778a05e2e48f9b1f09baf9aaed77fc8b9aeff997261468b7d6c459e51d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfc3bf37-05ee-4a91-b322-28063cde25f4", "node_type": "1", "metadata": {}, "hash": "006af6da7649fd133d246045526effc483fd082a383b83ed2d1bb9c45bebbf16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We can enforce offer safety because Zoe controls the payout. In the example,\nif I try to buy my event ticket using a smart contract on Zoe, the contract\ncan tell Zoe to update its bookkeeping to say I've bought a ticket.\nBut, Zoe only actually updates its records and gives me an event ticket\npayout if that update is offer-safe and conserves total supply.", "mimetype": "text/plain", "start_char_idx": 1398, "end_char_idx": 1754, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfc3bf37-05ee-4a91-b322-28063cde25f4": {"__data__": {"id_": "dfc3bf37-05ee-4a91-b322-28063cde25f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80529836-4e08-47b9-8cb0-238bff0e63e1", "node_type": "1", "metadata": {}, "hash": "d1359aeb4fe48c9b2c5a6b99819f893bed27717f22b363f68a1ac5d96568d7b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c639921-d9dd-47d4-814c-3c84ba39bed8", "node_type": "1", "metadata": {}, "hash": "989b45beb1ce9783459d426b3d2ab7fccf1c89f4c403502188f2bdeef346bf22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The offer safety enforcement code is in\n[offerSafety.js](https://github.com/Agoric/agoric-sdk/blob/HEAD/packages/zoe/src/contractFacet/offerSafety.js).\nTests, including edge cases, are in [test-offerSafety.js](https://github.com/Agoric/agoric-sdk/blob/HEAD/packages/zoe/test/unitTests/test-offerSafety.js).\n\n## Implementation Questions\n\n**Under offer safety, can I get a full refund _and_ what I wanted?**", "mimetype": "text/plain", "start_char_idx": 1756, "end_char_idx": 2161, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c639921-d9dd-47d4-814c-3c84ba39bed8": {"__data__": {"id_": "8c639921-d9dd-47d4-814c-3c84ba39bed8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfc3bf37-05ee-4a91-b322-28063cde25f4", "node_type": "1", "metadata": {}, "hash": "006af6da7649fd133d246045526effc483fd082a383b83ed2d1bb9c45bebbf16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "205d4bdd-4b29-4f55-99dd-1295f6a0b939", "node_type": "1", "metadata": {}, "hash": "d772a2aa2f089092f16e84476a810a5fe0b034ccad38df2511266934a9810cba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Yes, you can get a full refund _and_ what you wanted. Offer safety guarantees at least\none is true. Both could also be true.\n\n**What if there are no rules under `give`?**\n\nIf there are no rules or if `give` is omitted, then you get a full refund\nof what you put in, fulfilling offer safety. It's just the case that\nyou put in nothing, so you get back nothing. However, you _might_ also\nget what you wanted, depending on whether your offer of\nnothing for it is accepted.", "mimetype": "text/plain", "start_char_idx": 2163, "end_char_idx": 2632, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "205d4bdd-4b29-4f55-99dd-1295f6a0b939": {"__data__": {"id_": "205d4bdd-4b29-4f55-99dd-1295f6a0b939", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_offer-safety.md", "node_type": "4", "metadata": {}, "hash": "649de3cff326ec4f82df450426394a43e9b08fb13fe861bd9b2e762313b2fa2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c639921-d9dd-47d4-814c-3c84ba39bed8", "node_type": "1", "metadata": {}, "hash": "989b45beb1ce9783459d426b3d2ab7fccf1c89f4c403502188f2bdeef346bf22", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**What if there are no rules under `want`**\n\nIf there are no rules or `want` is omitted, then you get what\nyou wanted, in this case nothing. This fulfills offer safety.", "mimetype": "text/plain", "start_char_idx": 2634, "end_char_idx": 2802, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c7589d9-09a3-4048-b001-1a8d9af01bce": {"__data__": {"id_": "7c7589d9-09a3-4048-b001-1a8d9af01bce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "246cdf7f-abd1-4acd-8c0b-7701e27af148", "node_type": "1", "metadata": {}, "hash": "b1165e2b3c3405704bbfdf1ed5eada58b1bf9036de0f183e97ac0f5758084bd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Price Authority\n\nA `priceAuthority` can be used in contracts (usually specified in the\nterms of a contract) to provide a price feed, on-demand quotes, and wakeups for\nvarious time and price conditions.\n\n## Examples\n\nTo see a `priceAuthority` in use, see the [Loan\ncontract](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts/loan)\nand the [Call Spread\ncontracts](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts/callSpread).\n\n## Receiving a Quote", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "246cdf7f-abd1-4acd-8c0b-7701e27af148": {"__data__": {"id_": "246cdf7f-abd1-4acd-8c0b-7701e27af148", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c7589d9-09a3-4048-b001-1a8d9af01bce", "node_type": "1", "metadata": {}, "hash": "0920d7a66fde083ad5cf04d3673929190558b05b34b0714d8d39e603b7cccd0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64a8354a-899c-449d-9f81-b15f1b78b194", "node_type": "1", "metadata": {}, "hash": "11d3f34f735d16eab14121332d0525a3b3efb0b5659f8e24867069b67e7d14ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Receiving a Quote\n\nA `priceAuthority` has a number of different methods that will return\nofficial `priceQuotes`. A `priceQuote` is a record with an amount and a payment,\nwhere the amount is also the current balance of the payment:\n\n```js\nconst { quoteAmount, quotePayment } = priceQuote;\n```", "mimetype": "text/plain", "start_char_idx": 480, "end_char_idx": 774, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64a8354a-899c-449d-9f81-b15f1b78b194": {"__data__": {"id_": "64a8354a-899c-449d-9f81-b15f1b78b194", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "246cdf7f-abd1-4acd-8c0b-7701e27af148", "node_type": "1", "metadata": {}, "hash": "b1165e2b3c3405704bbfdf1ed5eada58b1bf9036de0f183e97ac0f5758084bd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5178c68-178b-404a-8887-24f007836afe", "node_type": "1", "metadata": {}, "hash": "b2f1671eda45059e06cfa909598f841ae06e1b3ceb8801a429f84f67b38c0ede", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Because these are ERTP amounts and payments, they have issuers. And\nthe payments are minted by an ERTP mint. A quote issuer and mint may\nbe shared by several `priceAuthorities`, and a `priceAuthority` may\nuse several quoteIssuers.\n\nImportantly, you can confirm the brand of a quote and that it was minted by the\nmint associated with the quoteIssuer by using the `quoteIssuer` to obtain the\n`quoteAmount` of the `quotePayment`:", "mimetype": "text/plain", "start_char_idx": 776, "end_char_idx": 1202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5178c68-178b-404a-8887-24f007836afe": {"__data__": {"id_": "d5178c68-178b-404a-8887-24f007836afe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64a8354a-899c-449d-9f81-b15f1b78b194", "node_type": "1", "metadata": {}, "hash": "11d3f34f735d16eab14121332d0525a3b3efb0b5659f8e24867069b67e7d14ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e8310db-7894-48b4-9f84-2a1b53a95d8d", "node_type": "1", "metadata": {}, "hash": "23ac5fdec678cc8564acfafd73ae3a47de85ea66b91701a16e2f235d78314ebe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst verifiedQuoteAmount = await E(quoteIssuer).getAmountOf(quotePayment);\n```\n\nOnce you have a `quoteAmount` (or a `verifiedQuoteAmount`), you can extract the\nquoted amounts:\n\n```js\nconst [{ value: { amountIn, amountOut, timestamp, timer }] = quoteAmount;\n```", "mimetype": "text/plain", "start_char_idx": 1204, "end_char_idx": 1471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e8310db-7894-48b4-9f84-2a1b53a95d8d": {"__data__": {"id_": "6e8310db-7894-48b4-9f84-2a1b53a95d8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5178c68-178b-404a-8887-24f007836afe", "node_type": "1", "metadata": {}, "hash": "b2f1671eda45059e06cfa909598f841ae06e1b3ceb8801a429f84f67b38c0ede", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d6322b4-926d-4a68-bc4b-98afeb8f83a4", "node_type": "1", "metadata": {}, "hash": "97fa05b658ba817b30fe2dc08e26a2e7dd9058d9e79039819c86bb2f1aef2706", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This means that the `priceAuthority` asserts that when `timestamp` according to\n`timer` happened, you could sell `amountIn` and receive `amountOut` for it.\n`amountIn` and `amountOut` are ERTP amounts for the `brandIn` and `brandOut` you\nrequested.\n\n## Mutable Price Quotes", "mimetype": "text/plain", "start_char_idx": 1473, "end_char_idx": 1745, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d6322b4-926d-4a68-bc4b-98afeb8f83a4": {"__data__": {"id_": "5d6322b4-926d-4a68-bc4b-98afeb8f83a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_price-authority.md", "node_type": "4", "metadata": {}, "hash": "d46132c7222c87287b7d3095b18ccefc1ae90a2cfcb1f669fa19b5af136412e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e8310db-7894-48b4-9f84-2a1b53a95d8d", "node_type": "1", "metadata": {}, "hash": "23ac5fdec678cc8564acfafd73ae3a47de85ea66b91701a16e2f235d78314ebe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Mutable Price Quotes\n\n`MutableQuote`'s method `getPromise()` returns a `Promise` for a `PriceQuote`,\nwhich is the same as what is returned by the `quoteWhenLTE()` API method and variants.\nEffectively, the non-mutable price quote methods return a single `PriceQuote`, while\nthe mutable price quote methods return a reusable object which can be manipulated\nby changing its trigger levels or by cancelling it.\n\n## API Reference\n\nSee [Price Authority API](/reference/zoe-api/price-authority).", "mimetype": "text/plain", "start_char_idx": 1722, "end_char_idx": 2213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edd0d2b7-cf6f-42d6-85e9-8223e2da1382": {"__data__": {"id_": "edd0d2b7-cf6f-42d6-85e9-8223e2da1382", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b77caf91-e102-48b4-9874-cd7e358422fb", "node_type": "1", "metadata": {}, "hash": "844e03ce225e4b9cacf218b65a8d5d342be9ce66217d5d6c03589bf0ffeb0224", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# The Structure of Offers\n\n<Zoe-Version/>\n\n## Making An offer\n\nTo make an offer, you use [`E(zoe).offer(...)`](/reference/zoe-api/zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs), which takes up to four arguments:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 233, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b77caf91-e102-48b4-9874-cd7e358422fb": {"__data__": {"id_": "b77caf91-e102-48b4-9874-cd7e358422fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edd0d2b7-cf6f-42d6-85e9-8223e2da1382", "node_type": "1", "metadata": {}, "hash": "df0583188a933e0a805f50317fb454887c49c57ec47f3496181a5eb9e429b542", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b", "node_type": "1", "metadata": {}, "hash": "ed2dbf99965a6a05e31bd92b6f047e91f09eb48b1d2dba7bc73ac7474c773936", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- An **invitation** to participate in this contract instance.\n- A **proposal** stating your offer conditions.\n- The **payments** escrowed for the offer, each corresponding with a **give** [Keyword](/reference/zoe-api/zoe-data-types#keyword) in **proposal**.\n- **offerArgs** expressing additional arguments for the **offerHandler** associated with the invitation by [`zcf.makeInvitation(...)`](/reference/zoe-api/zoe-contract-facet#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape).", "mimetype": "text/plain", "start_char_idx": 235, "end_char_idx": 739, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b": {"__data__": {"id_": "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b77caf91-e102-48b4-9874-cd7e358422fb", "node_type": "1", "metadata": {}, "hash": "844e03ce225e4b9cacf218b65a8d5d342be9ce66217d5d6c03589bf0ffeb0224", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "689d4a26-d2c9-4837-9510-c4b34706fd37", "node_type": "1", "metadata": {}, "hash": "96c8a768cc6b2429898ef80c00e233e639d3e4b958d9b5997d0d8375e7595fbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Invitations\n\nAn [Invitation](/reference/zoe-api/zoe-data-types#invitation) is a special case of ERTP [Payment](/reference/ertp-api/payment). Each is linked to a specific contract [Instance](/reference/zoe-api/zoe-data-types#instance), and\nhaving one gives you the right to participate in that contract instance\nby using that invitation as the first argument to `E(zoe).offer(...)`.\n\nThere are two ways for contract users to get an invitation:", "mimetype": "text/plain", "start_char_idx": 741, "end_char_idx": 1186, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "689d4a26-d2c9-4837-9510-c4b34706fd37": {"__data__": {"id_": "689d4a26-d2c9-4837-9510-c4b34706fd37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b", "node_type": "1", "metadata": {}, "hash": "ed2dbf99965a6a05e31bd92b6f047e91f09eb48b1d2dba7bc73ac7474c773936", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b4b2684-92ce-4f55-916f-126bafc130c1", "node_type": "1", "metadata": {}, "hash": "9093566a763f0a46068fbab47f59d720bed7701296c94e1d2d476b16749e588f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- If you create the contract instance, the contract might supply a special creator invitation.\n- Someone (possibly you) who holds the right objects has created an invitation for a contract instance and gives it to\n  you in some way. This could've been by sending it to you, posting it on a public online location, etc. It\n  doesn't matter (nor does Zoe specify or have any requirements) how or why it got to you, only that you have it.\n\n## Proposals", "mimetype": "text/plain", "start_char_idx": 1188, "end_char_idx": 1637, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b4b2684-92ce-4f55-916f-126bafc130c1": {"__data__": {"id_": "9b4b2684-92ce-4f55-916f-126bafc130c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "689d4a26-d2c9-4837-9510-c4b34706fd37", "node_type": "1", "metadata": {}, "hash": "96c8a768cc6b2429898ef80c00e233e639d3e4b958d9b5997d0d8375e7595fbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9536fd22-2ff4-4b29-a6e3-d048ebef8616", "node_type": "1", "metadata": {}, "hash": "8834f5643babfe19f172841364222f546e927c32486028750b213f3c33e59cba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Proposals\n\nProposals are records with **give**, **want**, and/or **exit** keys.\n\n```js\nconst myProposal = harden({\n  give: { Asset: AmountMath.make(quatloosBrand, 4n) },\n  want: { Price: AmountMath.make(moolaBrand, 15n) },\n  exit: { onDemand: null }\n});\n```", "mimetype": "text/plain", "start_char_idx": 1625, "end_char_idx": 1885, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9536fd22-2ff4-4b29-a6e3-d048ebef8616": {"__data__": {"id_": "9536fd22-2ff4-4b29-a6e3-d048ebef8616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b4b2684-92ce-4f55-916f-126bafc130c1", "node_type": "1", "metadata": {}, "hash": "9093566a763f0a46068fbab47f59d720bed7701296c94e1d2d476b16749e588f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64264200-f916-4b40-b173-2eda571743d0", "node_type": "1", "metadata": {}, "hash": "7d35cbd25d5a9ddcb43674fee3a61d21183bb0eb2944b98f738eb29d7594f000", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**give** and **want** use [Keywords](/reference/zoe-api/zoe-data-types#keyword) defined by the contract.\nKeywords are unique identifiers per contract, that tie together proposals,\npayments to be escrowed, and payouts to users.\nIn the example above, \"Asset\" and \"Price\" are the Keywords. However, in an auction contract,\nthe Keywords might be \"Asset\" and \"Bid\".", "mimetype": "text/plain", "start_char_idx": 1887, "end_char_idx": 2247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64264200-f916-4b40-b173-2eda571743d0": {"__data__": {"id_": "64264200-f916-4b40-b173-2eda571743d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9536fd22-2ff4-4b29-a6e3-d048ebef8616", "node_type": "1", "metadata": {}, "hash": "8834f5643babfe19f172841364222f546e927c32486028750b213f3c33e59cba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1409fcfb-389e-4f8b-b691-38c6236d338d", "node_type": "1", "metadata": {}, "hash": "c01605e380471725799d2bcdf38a83c87ed369bd81d85fa6b8cbf21f56cb3e05", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each `AmountMath.make` call above is just making an ERTP [Amount](/reference/ertp-api/ertp-data-types#amount), or description of digital assets.\nIn this case, `AmountMath.make(quatloosBrand, 4n)` creates a description of 4 units\nof our imaginary Quatloos currency and `AmountMath.make(moolaBrand, 15n)` creates a description\nof 15 units of our imaginary Moola currency. (The \"n\" appended after each number indicates that", "mimetype": "text/plain", "start_char_idx": 2249, "end_char_idx": 2669, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1409fcfb-389e-4f8b-b691-38c6236d338d": {"__data__": {"id_": "1409fcfb-389e-4f8b-b691-38c6236d338d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64264200-f916-4b40-b173-2eda571743d0", "node_type": "1", "metadata": {}, "hash": "7d35cbd25d5a9ddcb43674fee3a61d21183bb0eb2944b98f738eb29d7594f000", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "187014a5-2bd6-4952-bd1f-6ed5b09168de", "node_type": "1", "metadata": {}, "hash": "c7d1fc6fd7b5c60e9208f35f00263b0dee8bdfa1243a4337539b2fc03bcb68ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "it is represented as a [BigInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt)\nrather than a [Number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number))", "mimetype": "text/plain", "start_char_idx": 2670, "end_char_idx": 2903, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "187014a5-2bd6-4952-bd1f-6ed5b09168de": {"__data__": {"id_": "187014a5-2bd6-4952-bd1f-6ed5b09168de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1409fcfb-389e-4f8b-b691-38c6236d338d", "node_type": "1", "metadata": {}, "hash": "c01605e380471725799d2bcdf38a83c87ed369bd81d85fa6b8cbf21f56cb3e05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9548336b-2e1e-4ea1-8f8b-ecb9235b3359", "node_type": "1", "metadata": {}, "hash": "0b4961159a20c767d36a4c2215d5b487643c21f5293c57fc39ae8b0f421dae72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: warning Note\nAmounts are just _descriptions_ of assets, and have no intrinsic value of their own.\nIn contrast, [Payments](/reference/ertp-api/payment) hold actual digital assets.\n:::\n\n**exit** specifies how the offer can be cancelled. It must conform to one of three shapes:", "mimetype": "text/plain", "start_char_idx": 2905, "end_char_idx": 3183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9548336b-2e1e-4ea1-8f8b-ecb9235b3359": {"__data__": {"id_": "9548336b-2e1e-4ea1-8f8b-ecb9235b3359", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "187014a5-2bd6-4952-bd1f-6ed5b09168de", "node_type": "1", "metadata": {}, "hash": "c7d1fc6fd7b5c60e9208f35f00263b0dee8bdfa1243a4337539b2fc03bcb68ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4f40d72-7f03-4671-913c-02622c52889f", "node_type": "1", "metadata": {}, "hash": "6b969ae7c1f1c32c496f5616ec8d3cf34aedba9192855a791eb8126c64ebdb0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `{ onDemand: null }`: (Default) The offering party can cancel on demand.\n- `{ waived: null }`: The offering party can't cancel and relies entirely on the smart contract to complete (finish or fail) their offer.\n- `{ afterDeadline: deadlineDetails }`: The offer is automatically cancelled after a deadline,\n  as determined by its `timer` and `deadline` properties.\n\nFor more details, see [Proposals](/reference/zoe-api/zoe#proposals).\n\n## Escrowed Payments", "mimetype": "text/plain", "start_char_idx": 3185, "end_char_idx": 3642, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4f40d72-7f03-4671-913c-02622c52889f": {"__data__": {"id_": "b4f40d72-7f03-4671-913c-02622c52889f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9548336b-2e1e-4ea1-8f8b-ecb9235b3359", "node_type": "1", "metadata": {}, "hash": "0b4961159a20c767d36a4c2215d5b487643c21f5293c57fc39ae8b0f421dae72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c", "node_type": "1", "metadata": {}, "hash": "881372e34765dc3303792827d3ba50fd135c47b36621963fe7d1e9f41ae8e4d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Escrowed Payments\n\nUsing the same Keywords as the **give** object in your **proposal**, you must specify a [PaymentPKeywordRecord](/reference/zoe-api/zoe-data-types#keywordrecord) containing [Payments](/reference/ertp-api/payment) of the corresponding digital assets.\nZoe escrows these payments on behalf of your offer until it is completed\nor rejected or the assets are reassigned to another offer.\n\n```js\nconst payments = {\n  Asset: quatloosPayment,\n  Price: moolaPayment\n};\n```\n\n## Offer Arguments", "mimetype": "text/plain", "start_char_idx": 3622, "end_char_idx": 4125, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c": {"__data__": {"id_": "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4f40d72-7f03-4671-913c-02622c52889f", "node_type": "1", "metadata": {}, "hash": "6b969ae7c1f1c32c496f5616ec8d3cf34aedba9192855a791eb8126c64ebdb0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecc0d59e-129c-49d1-82f9-67cd95431555", "node_type": "1", "metadata": {}, "hash": "5cda0838c5f016b4c0c62d22db3a0ec60b6e68b1e3c0389cd5a19185dab4cdd9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Offer Arguments\n\nTo pass additional arguments to the **offerHandler** contract code associated with the\ninvitation, send them in an **offerArgs** [CopyRecord](/glossary/#copyrecord).\nEach contract can define the properties it supports and which are required, and\nis responsible for handling any unexpected or missing arguments.", "mimetype": "text/plain", "start_char_idx": 4107, "end_char_idx": 4437, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ecc0d59e-129c-49d1-82f9-67cd95431555": {"__data__": {"id_": "ecc0d59e-129c-49d1-82f9-67cd95431555", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_proposal.md", "node_type": "4", "metadata": {}, "hash": "82fb86f98cc04b243c1c27c5d6a0c8b7c38d8d2e8117bf0da0e4c196b9584f05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c", "node_type": "1", "metadata": {}, "hash": "881372e34765dc3303792827d3ba50fd135c47b36621963fe7d1e9f41ae8e4d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: danger\nContract code should be careful interacting with **offerArgs**. These values need input validation\nbefore being used since they are coming directly from the caller and may have malicious behavior.\n:::\n\n## Returned Value\n\n`E(zoe).offer(...)` returns a promise for a `UserSeat` object. Its name comes from the concept of\n\"having a seat at the table\" for the contract's execution.", "mimetype": "text/plain", "start_char_idx": 4439, "end_char_idx": 4827, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e6ac5f46-2774-4bb2-a824-4d3959f7aaf4": {"__data__": {"id_": "e6ac5f46-2774-4bb2-a824-4d3959f7aaf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f1283b8-96d3-431f-a2b1-d939db5a31a6", "node_type": "1", "metadata": {}, "hash": "fef603c31709f4079c6016922876c1085e1f6d148e3f68bba7f6e22d64af7fcf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Publishing to chainStorage\n\nContracts can use [notifiers and subscriptions](../js-programming/notifiers)\nto publish to clients. To publish data visible to [vstorage queries](../getting-started/contract-rpc#querying-vstorage), contracts should connect\na subscriber to a `chainStorage` node.\n\n## Deployment Capabilities for Publishing to chainStorage", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 350, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f1283b8-96d3-431f-a2b1-d939db5a31a6": {"__data__": {"id_": "0f1283b8-96d3-431f-a2b1-d939db5a31a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6ac5f46-2774-4bb2-a824-4d3959f7aaf4", "node_type": "1", "metadata": {}, "hash": "02847596b259c0b204ca01364cc3bc3de52eda8f006d8e130fb5e47bd604e8f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac7a3503-e2b5-4197-90ae-a352a12a09dd", "node_type": "1", "metadata": {}, "hash": "1bf9f66b7d0f058281378839b70493da5d5bc5b312752b562ce75b1e3f71ffbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In [Adding Parameter Governance to a Contract](../governance/#adding-parameter-governance-to-a-contract),\n`storageNode` and `marshaller` are passed to the contract in its `privateArgs` so it can publish to chainStorage.\n\nIn [dapp-agoric-basics](https://github.com/Agoric/dapp-agoric-basics), the `startSwapContract` uses 2 [permitted deployment capabilities](../coreeval/permissions), `chainStorage` and `board` and uses them to make the `privateArgs`:", "mimetype": "text/plain", "start_char_idx": 352, "end_char_idx": 804, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac7a3503-e2b5-4197-90ae-a352a12a09dd": {"__data__": {"id_": "ac7a3503-e2b5-4197-90ae-a352a12a09dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f1283b8-96d3-431f-a2b1-d939db5a31a6", "node_type": "1", "metadata": {}, "hash": "fef603c31709f4079c6016922876c1085e1f6d148e3f68bba7f6e22d64af7fcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64d2cc9c-8d52-453b-acb1-1b129c3e49a8", "node_type": "1", "metadata": {}, "hash": "890064bcab7bc7ca3650e3bdabaf88d60de78b5e414d207792b9e16dcdfc1ed0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst marshaller = await E(board).getPublishingMarshaller();\nconst storageNode = await E(chainStorage).makeChildNode(contractName);\n```", "mimetype": "text/plain", "start_char_idx": 806, "end_char_idx": 947, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64d2cc9c-8d52-453b-acb1-1b129c3e49a8": {"__data__": {"id_": "64d2cc9c-8d52-453b-acb1-1b129c3e49a8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac7a3503-e2b5-4197-90ae-a352a12a09dd", "node_type": "1", "metadata": {}, "hash": "1bf9f66b7d0f058281378839b70493da5d5bc5b312752b562ce75b1e3f71ffbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c", "node_type": "1", "metadata": {}, "hash": "3c470bfc419e113ff6abba349cef5dacdbe5c33afa32bcabc6ac25ba513c8b1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A `Marshaller` is parameterized by functions for mapping unforgeable object identities to plain data slot references and back. Using the [board](../integration/name-services#the-board-publishing-under-arbitrary-names) name service gives consistent slot references across contracts.\nAs discussed in [Marshalling Amounts and Instances](../getting-started/contract-rpc#marshalling-amounts-and-instances), this lets\noff-chain clients use the same `@endo/marshal` API.", "mimetype": "text/plain", "start_char_idx": 949, "end_char_idx": 1412, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c": {"__data__": {"id_": "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64d2cc9c-8d52-453b-acb1-1b129c3e49a8", "node_type": "1", "metadata": {}, "hash": "890064bcab7bc7ca3650e3bdabaf88d60de78b5e414d207792b9e16dcdfc1ed0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb5bba8a-ace2-4253-aee6-ce48f1991a64", "node_type": "1", "metadata": {}, "hash": "d98cf698863e336ed22538abb7035493602aed5fd69ae4cb97caccf2dfce9282", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `chainStorage` node corresponds to the `published` key in the\n[vstorage hierarchy](/reference/vstorage-ref).\nUsing `E(chainStorage).makeChildNode(contractName)` gives the contract\naccess to write to the `published.swaparoo` key and all keys under it.\n\nThe `swaparoo` contract delegates the rest of publishing governance parameters to the `@agoric/governance` package.\n\n## Publishing structured data to chainStorage", "mimetype": "text/plain", "start_char_idx": 1414, "end_char_idx": 1832, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb5bba8a-ace2-4253-aee6-ce48f1991a64": {"__data__": {"id_": "cb5bba8a-ace2-4253-aee6-ce48f1991a64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c", "node_type": "1", "metadata": {}, "hash": "3c470bfc419e113ff6abba349cef5dacdbe5c33afa32bcabc6ac25ba513c8b1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e40d6e18-8036-47e6-942c-ed09b1a22a65", "node_type": "1", "metadata": {}, "hash": "39c4c6017e6f91c5fa93be151b4ee49a05e22d771b6292475957a79d594b6427", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let's look at the Inter Protocol [assetReserve.js](https://github.com/Agoric/agoric-sdk/blob/agoric-upgrade-13/packages/inter-protocol/src/reserve/assetReserve.js) contract to get more of the details. It publishes to [published.reserve.metrics](https://github.com/Agoric/agoric-sdk/blob/agoric-upgrade-13/packages/inter-protocol/test/reserve/snapshots/test-reserve.js.md) data of the form", "mimetype": "text/plain", "start_char_idx": 1834, "end_char_idx": 2222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e40d6e18-8036-47e6-942c-ed09b1a22a65": {"__data__": {"id_": "e40d6e18-8036-47e6-942c-ed09b1a22a65", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb5bba8a-ace2-4253-aee6-ce48f1991a64", "node_type": "1", "metadata": {}, "hash": "d98cf698863e336ed22538abb7035493602aed5fd69ae4cb97caccf2dfce9282", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07efedaa-a5ba-4035-98ee-a79386446c9e", "node_type": "1", "metadata": {}, "hash": "096e38d85789f146b386220c44e8793d776899e1522ce2008ca5846e58cd9926", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n/**\n * @typedef {object} MetricsNotification\n * @property {AmountKeywordRecord} allocations\n * @property {Amount<'nat'>} shortfallBalance shortfall from liquidation that\n *   has not yet been compensated.\n * @property {Amount<'nat'>} totalFeeMinted total Fee tokens minted to date\n * @property {Amount<'nat'>} totalFeeBurned total Fee tokens burned to date\n */\n```\n\nFor example:", "mimetype": "text/plain", "start_char_idx": 2224, "end_char_idx": 2608, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07efedaa-a5ba-4035-98ee-a79386446c9e": {"__data__": {"id_": "07efedaa-a5ba-4035-98ee-a79386446c9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e40d6e18-8036-47e6-942c-ed09b1a22a65", "node_type": "1", "metadata": {}, "hash": "39c4c6017e6f91c5fa93be151b4ee49a05e22d771b6292475957a79d594b6427", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7f51be4-aff2-433a-97f7-8d566a40100f", "node_type": "1", "metadata": {}, "hash": "4e3984e31aa5948cf70d0c2b29dd8d88ecb25333e4861b8ebb7a54e272798644", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      allocations: {\n        Fee: {\n          brand: Object @Alleged: IST brand {},\n          value: 64561373455n,\n        },\n        ATOM: {\n          brand: Object @Alleged: ATOM brand {},\n          value: 6587020n\n        },\n      },\n      shortfallBalance: {\n        brand: Object @Alleged: IST brand {},\n        value: 5747205025n,\n      },\n      totalFeeBurned: {\n        brand: Object @Alleged: IST brand {},\n        value: n,\n      },\n      totalFeeMinted: {", "mimetype": "text/plain", "start_char_idx": 2610, "end_char_idx": 3088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7f51be4-aff2-433a-97f7-8d566a40100f": {"__data__": {"id_": "a7f51be4-aff2-433a-97f7-8d566a40100f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07efedaa-a5ba-4035-98ee-a79386446c9e", "node_type": "1", "metadata": {}, "hash": "096e38d85789f146b386220c44e8793d776899e1522ce2008ca5846e58cd9926", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4582780d-dda8-4757-b147-efcbd332a744", "node_type": "1", "metadata": {}, "hash": "ab2e30780d8935a5411bfe9f967ffb65ebed5dcf0bfd837c67eb311ea7ea22fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n      totalFeeMinted: {\n        brand: Object @Alleged: IST brand {},\n        value: 0n,\n      },\n    },\n```", "mimetype": "text/plain", "start_char_idx": 3062, "end_char_idx": 3173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4582780d-dda8-4757-b147-efcbd332a744": {"__data__": {"id_": "4582780d-dda8-4757-b147-efcbd332a744", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7f51be4-aff2-433a-97f7-8d566a40100f", "node_type": "1", "metadata": {}, "hash": "4e3984e31aa5948cf70d0c2b29dd8d88ecb25333e4861b8ebb7a54e272798644", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c", "node_type": "1", "metadata": {}, "hash": "5b07cb8f637f8ccd115557e735c7a15e07c615846ebc164150fd874c85f20c7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The method that writes this data is:\n\n```js\n        writeMetrics() {\n          const { state } = this;\n          const metrics = harden({\n            allocations: state.collateralSeat.getCurrentAllocation(),\n            shortfallBalance: state.shortfallBalance,\n            totalFeeMinted: state.totalFeeMinted,\n            totalFeeBurned: state.totalFeeBurned,\n          });\n          void state.metricsKit.recorder.write(metrics);\n        },\n```\n\nThe `metricsKit` is made with a `makeRecorderKit` function:", "mimetype": "text/plain", "start_char_idx": 3175, "end_char_idx": 3683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c": {"__data__": {"id_": "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4582780d-dda8-4757-b147-efcbd332a744", "node_type": "1", "metadata": {}, "hash": "ab2e30780d8935a5411bfe9f967ffb65ebed5dcf0bfd837c67eb311ea7ea22fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c021aa2d-f094-4db4-b4ed-1661a63b2036", "node_type": "1", "metadata": {}, "hash": "ff924b0271918c7dfdb908fa39928c54537a6fa650b2969e4f9996ff71220a6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n        metricsKit: makeRecorderKit(\n          metricsNode,\n          /** @type {import('@agoric/zoe/src/contractSupport/recorder.js').TypedMatcher<MetricsNotification>} */ (\n            M.any()\n          ),\n        ),\n```\n\nWe \"prepare\" (in the [exo](https://endojs.github.io/endo/modules/_endo_exo.html) sense) that function for making\na `RecorderKit` using [prepareRecorderKitMakers](/reference/zoe-api/zoe-helpers#preparerecorderkitmakers-baggage-marshaller).", "mimetype": "text/plain", "start_char_idx": 3685, "end_char_idx": 4153, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c021aa2d-f094-4db4-b4ed-1661a63b2036": {"__data__": {"id_": "c021aa2d-f094-4db4-b4ed-1661a63b2036", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c", "node_type": "1", "metadata": {}, "hash": "5b07cb8f637f8ccd115557e735c7a15e07c615846ebc164150fd874c85f20c7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad", "node_type": "1", "metadata": {}, "hash": "c85cd1131b40068aa531365210d5c3a8a350a765fb43de80d3b6aaa7dd9b468f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { makeRecorderKit } = prepareRecorderKitMakers(\n  baggage,\n  privateArgs.marshaller\n);\n```\n\nThe contract gets `baggage`, along with `privateArgs` when it starts in\n[the usual way for upgradable contracts](./contract-upgrade.html#upgradable-declaration):", "mimetype": "text/plain", "start_char_idx": 4155, "end_char_idx": 4420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad": {"__data__": {"id_": "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c021aa2d-f094-4db4-b4ed-1661a63b2036", "node_type": "1", "metadata": {}, "hash": "ff924b0271918c7dfdb908fa39928c54537a6fa650b2969e4f9996ff71220a6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51327a8a-f060-4642-b85e-0183bef2a412", "node_type": "1", "metadata": {}, "hash": "6a119fc82491a9e089183cbfd6bb2701818a6e940634459edf1e94f3d1145c39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n/**\n * Asset Reserve holds onto assets for the Inter Protocol, and ...\n *\n * @param {{\n *   ...\n *   marshaller: ERef<Marshaller>,\n *   storageNode: ERef<StorageNode>,\n * }} privateArgs\n * @param {Baggage} baggage\n */\nexport const prepare = async (zcf, privateArgs, baggage) => {\n  // ...\n};\n```\n\nThe reserve uses its `StorageNode` and makes a child to get `metricsNode`:\n\n```js\nconst metricsNode = await E(storageNode).makeChildNode('metrics');\n```", "mimetype": "text/plain", "start_char_idx": 4422, "end_char_idx": 4877, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51327a8a-f060-4642-b85e-0183bef2a412": {"__data__": {"id_": "51327a8a-f060-4642-b85e-0183bef2a412", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad", "node_type": "1", "metadata": {}, "hash": "c85cd1131b40068aa531365210d5c3a8a350a765fb43de80d3b6aaa7dd9b468f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "229421a8-22c0-47ba-a5e9-a95669b26a7b", "node_type": "1", "metadata": {}, "hash": "149da0e7600130d338098aaaa79ac8004a6e2eaa61dca458f84fb4d73e77df92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `marshaller` is used to serialize data structures such as `MetricsNotification` above.\n\n### Deployment Capabilities for the reserve\n\nTo start `assetReserve`, the [setupReserve](https://github.com/Agoric/agoric-sdk/blob/agoric-upgrade-13/packages/inter-protocol/src/proposals/econ-behaviors.js#L76) function again supplies\nthe two relevant `privateArgs`, `marshaller` and `storageNode`:", "mimetype": "text/plain", "start_char_idx": 4879, "end_char_idx": 5268, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "229421a8-22c0-47ba-a5e9-a95669b26a7b": {"__data__": {"id_": "229421a8-22c0-47ba-a5e9-a95669b26a7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_pub-to-storage.md", "node_type": "4", "metadata": {}, "hash": "6ef21a2e23cecf841cf4779df13e33537a0b682c648c58e308641018e1c9f975", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51327a8a-f060-4642-b85e-0183bef2a412", "node_type": "1", "metadata": {}, "hash": "6a119fc82491a9e089183cbfd6bb2701818a6e940634459edf1e94f3d1145c39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst STORAGE_PATH = 'reserve';\nconst storageNode = await E(storageNode).makeChildNode(STORAGE_PATH);\nconst marshaller = await E(board).getReadonlyMarshaller();\n```\n\nThe `setupReserve` function gets `chainStorage` and `board` deployment capabilities passed in:\n\n```js\nexport const setupReserve = async ({\n  consume: {\n    board,\n    chainStorage,\n// ...\n  },\n// ...\n}) => { ... };\n```", "mimetype": "text/plain", "start_char_idx": 5270, "end_char_idx": 5660, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "800fcd38-a17f-4e3e-a4ee-daff24f517be": {"__data__": {"id_": "800fcd38-a17f-4e3e-a4ee-daff24f517be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71129f3e-2431-4e33-884b-66ab7779a34a", "node_type": "1", "metadata": {}, "hash": "4503873576fe2bfd8f7980766dac408bc632793d086a9e3eb99c66acbb0a5c6d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deployed Zoe Contracts\n\nIn the [mainnet-1B release of agoric-sdk](https://github.com/Agoric/agoric-sdk/releases/tag/mainnet1B-rc3), the chain is configured to automatically deploy the following Zoe contracts. A [community post on Inter Protocol Vaults Contract Implementations](https://community.agoric.com/t/inter-protocol-vaults-contract-implementations/261) has a high level description.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71129f3e-2431-4e33-884b-66ab7779a34a": {"__data__": {"id_": "71129f3e-2431-4e33-884b-66ab7779a34a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "800fcd38-a17f-4e3e-a4ee-daff24f517be", "node_type": "1", "metadata": {}, "hash": "cb004e978fab9d454342bffc99b9d06116f4af31317bda64827dab21d7b73021", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce365aeb-e6c1-4528-96ed-9db99a5f198e", "node_type": "1", "metadata": {}, "hash": "7428a2502cefa73d7e4e6b20b758fdbbfeaa3c68710cf98ba18f20a5e354245b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract             | Description                                                                                                                                                     |\n| -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 394, "end_char_idx": 767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce365aeb-e6c1-4528-96ed-9db99a5f198e": {"__data__": {"id_": "ce365aeb-e6c1-4528-96ed-9db99a5f198e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71129f3e-2431-4e33-884b-66ab7779a34a", "node_type": "1", "metadata": {}, "hash": "4503873576fe2bfd8f7980766dac408bc632793d086a9e3eb99c66acbb0a5c6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a20f0460-d23b-4772-a956-3805be784e55", "node_type": "1", "metadata": {}, "hash": "4ea2264a4bdb1c6d9284cbd061027ed688a99452b79db196b17099d873da22bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| centralSupply        | used to initialize the vbank IST purse balance based on supply reported from the cosmos x/bank module                                                           |\n| mintHolder           | use to hold mints for BLD as well as inter-chain assets such as ATOM, USDC, and USDT                                                                            |", "mimetype": "text/plain", "start_char_idx": 768, "end_char_idx": 1141, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a20f0460-d23b-4772-a956-3805be784e55": {"__data__": {"id_": "a20f0460-d23b-4772-a956-3805be784e55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce365aeb-e6c1-4528-96ed-9db99a5f198e", "node_type": "1", "metadata": {}, "hash": "7428a2502cefa73d7e4e6b20b758fdbbfeaa3c68710cf98ba18f20a5e354245b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67566902-de6d-4d0f-b8f4-d7001b3eb389", "node_type": "1", "metadata": {}, "hash": "72596096b4ad0379d228559ed556e3afc8f51e83f6663abebdd560f6c9dddf93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| committee            | represents the Economic Committee that governs Inter Protocol parameters                                                                                        |\n| binaryVoteCounter    | instantiated once for each question that a committee votes on                                                                                                   |", "mimetype": "text/plain", "start_char_idx": 1142, "end_char_idx": 1515, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "67566902-de6d-4d0f-b8f4-d7001b3eb389": {"__data__": {"id_": "67566902-de6d-4d0f-b8f4-d7001b3eb389", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a20f0460-d23b-4772-a956-3805be784e55", "node_type": "1", "metadata": {}, "hash": "4ea2264a4bdb1c6d9284cbd061027ed688a99452b79db196b17099d873da22bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2e6e495-bc00-430e-b8b7-48bf9756f477", "node_type": "1", "metadata": {}, "hash": "d8c1d2485326f600116ba7f1cd6a2c841a3327d0b85e570944c6675de40b92e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| econCommitteeCharter | controls what questions can be put to the economic committee                                                                                                    |\n| contractGovernor     | each governed contract is started by starting its governor                                                                                                      |", "mimetype": "text/plain", "start_char_idx": 1516, "end_char_idx": 1889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2e6e495-bc00-430e-b8b7-48bf9756f477": {"__data__": {"id_": "b2e6e495-bc00-430e-b8b7-48bf9756f477", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67566902-de6d-4d0f-b8f4-d7001b3eb389", "node_type": "1", "metadata": {}, "hash": "72596096b4ad0379d228559ed556e3afc8f51e83f6663abebdd560f6c9dddf93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c54a7d82-b094-425b-a882-6a889d3379dd", "node_type": "1", "metadata": {}, "hash": "d7e3e49692fb4cf7cb4b964a201e39a89fbe18c1003ac884c3edd4bb063bfc5e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [PSM](./PSM)         | The Parity Stability Module (PSM) supports efficiently minting and burning Inter Stable Tokens (ISTs) in exchange for approved external stable tokens.          |\n| vaultFactory         | allows users to mint IST backed by collateral such as ATOM; hands off vaults to auctioneer when value of collateral in a vault falls below a governed threshold |", "mimetype": "text/plain", "start_char_idx": 1890, "end_char_idx": 2263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c54a7d82-b094-425b-a882-6a889d3379dd": {"__data__": {"id_": "c54a7d82-b094-425b-a882-6a889d3379dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2e6e495-bc00-430e-b8b7-48bf9756f477", "node_type": "1", "metadata": {}, "hash": "d8c1d2485326f600116ba7f1cd6a2c841a3327d0b85e570944c6675de40b92e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e93cf64-fcbe-48b6-a6f7-f5381b863497", "node_type": "1", "metadata": {}, "hash": "bea19b28b1c7d1bc69e361701533605e98cd2c1560b4642714dcbd1ef45f1b14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| auctioneer           | auctions collateral from liquidated vaults                                                                                                                      |\n| fluxAggregator       | a [Price Authority](../price-authority) that aggregates prices from oracle oeprators                                                                            |", "mimetype": "text/plain", "start_char_idx": 2264, "end_char_idx": 2637, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e93cf64-fcbe-48b6-a6f7-f5381b863497": {"__data__": {"id_": "3e93cf64-fcbe-48b6-a6f7-f5381b863497", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c54a7d82-b094-425b-a882-6a889d3379dd", "node_type": "1", "metadata": {}, "hash": "d7e3e49692fb4cf7cb4b964a201e39a89fbe18c1003ac884c3edd4bb063bfc5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3b77662-6745-4e9b-ad66-c8dd781f13fc", "node_type": "1", "metadata": {}, "hash": "ecc26b12b88281d06cf9602ecb388d8bd531dc2814a186927a97efd6bd9922eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| scaledPriceAuthoriy  | provides prices for tradeable assets such as ATOM in terms of idealized \"oracle ATOM\" prices from oracle operators                                              |\n| feeDistributor       | collects fees from Inter Protocol contracts and distributes to reserve and/or stakers                                                                           |", "mimetype": "text/plain", "start_char_idx": 2638, "end_char_idx": 3011, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3b77662-6745-4e9b-ad66-c8dd781f13fc": {"__data__": {"id_": "b3b77662-6745-4e9b-ad66-c8dd781f13fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e93cf64-fcbe-48b6-a6f7-f5381b863497", "node_type": "1", "metadata": {}, "hash": "bea19b28b1c7d1bc69e361701533605e98cd2c1560b4642714dcbd1ef45f1b14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3916d525-94a6-49cb-8264-44fbf8f67092", "node_type": "1", "metadata": {}, "hash": "36607eed800d375b1707c124a31b637fd8cea3b348d711aa3f406a4151d0a27d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| assetReserve         | holds assets in reserve to back IST                                                                                                                             |\n| walletFactory        | executes Zoe offers on behalf of users                                                                                                                          |", "mimetype": "text/plain", "start_char_idx": 3012, "end_char_idx": 3385, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3916d525-94a6-49cb-8264-44fbf8f67092": {"__data__": {"id_": "3916d525-94a6-49cb-8264-44fbf8f67092", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3b77662-6745-4e9b-ad66-c8dd781f13fc", "node_type": "1", "metadata": {}, "hash": "ecc26b12b88281d06cf9602ecb388d8bd531dc2814a186927a97efd6bd9922eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e", "node_type": "1", "metadata": {}, "hash": "7166c0192697b8494ffe62014e9f632baf4881ea2a6358430fa901de9cc5e59a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Deployed Vat Services\n\nOther services run in vats that are not contracts.", "mimetype": "text/plain", "start_char_idx": 3387, "end_char_idx": 3463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e": {"__data__": {"id_": "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3916d525-94a6-49cb-8264-44fbf8f67092", "node_type": "1", "metadata": {}, "hash": "36607eed800d375b1707c124a31b637fd8cea3b348d711aa3f406a4151d0a27d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9181861-d639-4b05-827d-b13c1af9ea85", "node_type": "1", "metadata": {}, "hash": "e97411c9aee581dfe833ea9fd13c77b11db9ee66ced5dfd73d9467170278b47a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| vat            | services                                                                               |\n| -------------- | -------------------------------------------------------------------------------------- |\n| bootstrap      | initial vat. also runs [core eval scripts](/guides/coreeval/)                          |\n| vatAdmin       | creates, [upgrades](/guides/zoe/contract-upgrade), and terminates vats                 |", "mimetype": "text/plain", "start_char_idx": 3465, "end_char_idx": 3896, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9181861-d639-4b05-827d-b13c1af9ea85": {"__data__": {"id_": "e9181861-d639-4b05-827d-b13c1af9ea85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e", "node_type": "1", "metadata": {}, "hash": "7166c0192697b8494ffe62014e9f632baf4881ea2a6358430fa901de9cc5e59a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecbd568a-35e9-4fe4-ae4c-920437e24191", "node_type": "1", "metadata": {}, "hash": "f747f1369830f00d712f1dd314e0763e7af974ab3f00c947b692733cbc7a690c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| agoricNames    | the `agoricNames` [name service](/guides/integration/name-services)                    |\n| bank           | connects cosmos denoms with ERTP Brands/Issuers/Mints                                  |\n| board          | the `board` [name service](/guides/integration/name-services)                          |\n| bridge         | chainStorage etc.                                                                      |", "mimetype": "text/plain", "start_char_idx": 3897, "end_char_idx": 4328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ecbd568a-35e9-4fe4-ae4c-920437e24191": {"__data__": {"id_": "ecbd568a-35e9-4fe4-ae4c-920437e24191", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_index.md", "node_type": "4", "metadata": {}, "hash": "8fffed921b4aecfe498f01a09efe15c610407526b70747c4e8a0c91397bf8c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9181861-d639-4b05-827d-b13c1af9ea85", "node_type": "1", "metadata": {}, "hash": "e97411c9aee581dfe833ea9fd13c77b11db9ee66ced5dfd73d9467170278b47a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| priceAuthority | registers [Price Authorities](../price-authority) and routes requests for price quotes |\n| provisioning   | `namesByAddress` [name service](/guides/integration/name-services)                     |\n| timer          | `chainTimerService`                                                                    |\n| zoe            | the Zoe Service                                                                        |", "mimetype": "text/plain", "start_char_idx": 4329, "end_char_idx": 4760, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74b39792-f398-466c-8839-bfffa9e060ba": {"__data__": {"id_": "74b39792-f398-466c-8839-bfffa9e060ba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6230462-b827-4246-95f1-f329ad4ab5f5", "node_type": "1", "metadata": {}, "hash": "590bd976379a8d2d5195a67664281fc0bc2f5ff2b98fe2cb3cdb850c9f36f8f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# PSM Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/master/packages/inter-protocol/src/psm/psm.js) (Last updated: Aug 15, 2022)\n\nThe Parity Stability Module (PSM) contract allows users to convert Inter Stable Tokens (ISTs)\nto external stable tokens at a specified fixed ratio, and vice versa.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6230462-b827-4246-95f1-f329ad4ab5f5": {"__data__": {"id_": "c6230462-b827-4246-95f1-f329ad4ab5f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74b39792-f398-466c-8839-bfffa9e060ba", "node_type": "1", "metadata": {}, "hash": "be4e8a5101cf8f96e30b88dfe69d6808dccf9038c48e5e5c81b00d3d6a37f3f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1abf9c70-4515-4097-8bf4-78eb89e0b46f", "node_type": "1", "metadata": {}, "hash": "9422b3640618eb9aa50c1dab851134a6452c1e4eafd10ded7140d7810510d81c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "IST is an evolving, fully collateralized, cryptocurrency-backed decentralized stable\ntoken for the interchain ecosystem on the Agoric chain. IST is designed to maintain parity\nwith the US dollar (USD) for broad accessibility and provides Agoric and the interchain\necosystem users an asset with minimum price volatility. In addition, IST is the native\nfee token for the Agoric platform and provides some of the core functionality and stability", "mimetype": "text/plain", "start_char_idx": 348, "end_char_idx": 790, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1abf9c70-4515-4097-8bf4-78eb89e0b46f": {"__data__": {"id_": "1abf9c70-4515-4097-8bf4-78eb89e0b46f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6230462-b827-4246-95f1-f329ad4ab5f5", "node_type": "1", "metadata": {}, "hash": "590bd976379a8d2d5195a67664281fc0bc2f5ff2b98fe2cb3cdb850c9f36f8f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d62fb75-e0db-4029-9c9a-d7781d62269e", "node_type": "1", "metadata": {}, "hash": "6b12db714872dfe90799ad27ef1b3b2f89bdd74cf900601771b47b5a0ed2634e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for the Agoric cryptoeconomy. Currently the PSM is the only minter of IST.", "mimetype": "text/plain", "start_char_idx": 791, "end_char_idx": 865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d62fb75-e0db-4029-9c9a-d7781d62269e": {"__data__": {"id_": "1d62fb75-e0db-4029-9c9a-d7781d62269e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1abf9c70-4515-4097-8bf4-78eb89e0b46f", "node_type": "1", "metadata": {}, "hash": "9422b3640618eb9aa50c1dab851134a6452c1e4eafd10ded7140d7810510d81c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b09f046-cab0-4483-8775-694006952cbb", "node_type": "1", "metadata": {}, "hash": "c53a271f94bb48394ca788ad5c93d248935d60d074805f0cd51545dd09db3fa1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Which external stable tokens are supported is determined by governance in the form of a\nvote of the economic committee. Governance may elect to only support one external stable token,\nin which case only one PSM will be instantiated.\n\n## Instantiating the PSM\n\nEach PSM instance pairs IST with one other token. To allow trading IST with\nmultiple tokens, instantiate the PSM contract once for each.\n\n## Creating an Offer", "mimetype": "text/plain", "start_char_idx": 867, "end_char_idx": 1285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b09f046-cab0-4483-8775-694006952cbb": {"__data__": {"id_": "7b09f046-cab0-4483-8775-694006952cbb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d62fb75-e0db-4029-9c9a-d7781d62269e", "node_type": "1", "metadata": {}, "hash": "6b12db714872dfe90799ad27ef1b3b2f89bdd74cf900601771b47b5a0ed2634e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e34d8971-e18d-41b8-abbd-8adbc95b0f58", "node_type": "1", "metadata": {}, "hash": "8cdf059892c1f10a08e1c419d5d919a1b4cc1badf23d2d0b51ec710b6d182e01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Creating an Offer\n\nThe PSM contract supports 2 different offer types: swapping external stable tokens for IST tokens,\nand swapping IST tokens for external stable tokens. For both offer types only one user is required\nfor a successful offer; in both cases the PSM itself acts as the other trading party.\n\n### Swapping External Stable Tokens for IST Tokens\n\nTo create an offer to swap external stable tokens for IST tokens, do the following:", "mimetype": "text/plain", "start_char_idx": 1265, "end_char_idx": 1707, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e34d8971-e18d-41b8-abbd-8adbc95b0f58": {"__data__": {"id_": "e34d8971-e18d-41b8-abbd-8adbc95b0f58", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b09f046-cab0-4483-8775-694006952cbb", "node_type": "1", "metadata": {}, "hash": "c53a271f94bb48394ca788ad5c93d248935d60d074805f0cd51545dd09db3fa1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257", "node_type": "1", "metadata": {}, "hash": "44b12caca87f44c0c14a603777ccfa6b424a83949ea6c5c32a338e84842a6c6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1.  Create an invitation using the makeWantMintedInvitation method.\n    ```js\n    const myInvitation = E(publicFacet).makeWantMintedInvitation();\n    ```\n2.  Create Amounts for the external stable tokens you want to trade and for the IST tokens\n    you want to receive.\n\n        ```js\n        const giveAnchorAmount = AmountMath.make(anchorBrand, 200_000_000n);\n        const wantMintedAmount = AmountMath.make(istBrand, 200_000_000n);\n        ```", "mimetype": "text/plain", "start_char_idx": 1709, "end_char_idx": 2156, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257": {"__data__": {"id_": "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e34d8971-e18d-41b8-abbd-8adbc95b0f58", "node_type": "1", "metadata": {}, "hash": "8cdf059892c1f10a08e1c419d5d919a1b4cc1badf23d2d0b51ec710b6d182e01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f5d8694-87ca-45ca-8388-813699441302", "node_type": "1", "metadata": {}, "hash": "4b1567c7e7e01868b2a4c8cf3a48f7103a9a9a4d9d2ad9cfad30990ca1f59fdd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3.  Create a proposal. Use the keywords **In** and **Out**, where **In** is the amount of\n    external stable tokens you\u2019re offering, and **Out** is the amount of IST tokens you expect\n    to receive. Note that because the PSM will always be able to act as the other trading partner,\n    this proposal doesn\u2019t have (or need) an exit condition.\n\n        ```js\n        const myProposal = {\n          give: { In: giveAnchorAmount },\n          want: { Out: wantMintedAmount }\n        };\n        ```", "mimetype": "text/plain", "start_char_idx": 2158, "end_char_idx": 2652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f5d8694-87ca-45ca-8388-813699441302": {"__data__": {"id_": "5f5d8694-87ca-45ca-8388-813699441302", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257", "node_type": "1", "metadata": {}, "hash": "44b12caca87f44c0c14a603777ccfa6b424a83949ea6c5c32a338e84842a6c6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04ecab38-f089-4e9b-8f12-06fc84814aac", "node_type": "1", "metadata": {}, "hash": "e57e35fd6cc8004d1f5c6dff6d74cb147547372eb6a4fc11b6ce74ee4c57c30d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "4.  Create a payment record containing the external stable tokens you\u2019re trading to the PSM.\n\n    ```js\n    const myPaymentRecord = { In: anchorPayment };\n    ```\n\n5.  Create the offer, remembering to harden the proposal & payment record.\n\n    ```js\n    const seat = E(zoe).offer(\n      myInvitation,\n      harden(myProposal),\n      harden(myPaymentRecord)\n    );\n    ```\n\n### Swapping IST Tokens for External Stable Tokens\n\nTo create an offer to swap IST tokens for external stable tokens, do the following:", "mimetype": "text/plain", "start_char_idx": 2654, "end_char_idx": 3162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04ecab38-f089-4e9b-8f12-06fc84814aac": {"__data__": {"id_": "04ecab38-f089-4e9b-8f12-06fc84814aac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f5d8694-87ca-45ca-8388-813699441302", "node_type": "1", "metadata": {}, "hash": "4b1567c7e7e01868b2a4c8cf3a48f7103a9a9a4d9d2ad9cfad30990ca1f59fdd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f40a0200-145f-4c79-99a0-d3e2c1a14baf", "node_type": "1", "metadata": {}, "hash": "fc3c4c9ffdac38756f3a80e6fbfb66e92b32055702c94ed414673ae0a596a94b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Create an invitation using the makeGiveMintedInvitation method.\n\n   ```js\n   const myInvitation = E(publicFacet).makeGiveMintedInvitation();\n   ```", "mimetype": "text/plain", "start_char_idx": 3164, "end_char_idx": 3314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f40a0200-145f-4c79-99a0-d3e2c1a14baf": {"__data__": {"id_": "f40a0200-145f-4c79-99a0-d3e2c1a14baf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04ecab38-f089-4e9b-8f12-06fc84814aac", "node_type": "1", "metadata": {}, "hash": "e57e35fd6cc8004d1f5c6dff6d74cb147547372eb6a4fc11b6ce74ee4c57c30d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5747a033-5240-4f72-9aae-b80cb6424734", "node_type": "1", "metadata": {}, "hash": "cf9757d8e413165cf5960132a3072d86cd8485843c7facded0412496720380c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "2. Create Amounts for the IST tokens you want to trade and for the external stable\n   tokens you want to receive.\n   `js\nconst giveMintedAmount = AmountMath.make(istBrand, 200_000_000n);\nconst wantAnchorAmount = AmountMath.make(anchorBrand, 200_000_000n);\n`\n3. Create and harden a proposal. Use the keywords **In** and **Out**, where **In** is the amount\n   of IST tokens you\u2019re offering, and **Out** is the amount of external stable tokens you", "mimetype": "text/plain", "start_char_idx": 3316, "end_char_idx": 3760, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5747a033-5240-4f72-9aae-b80cb6424734": {"__data__": {"id_": "5747a033-5240-4f72-9aae-b80cb6424734", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f40a0200-145f-4c79-99a0-d3e2c1a14baf", "node_type": "1", "metadata": {}, "hash": "fc3c4c9ffdac38756f3a80e6fbfb66e92b32055702c94ed414673ae0a596a94b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c8e374e-d445-4ee2-a305-e8fa52a17998", "node_type": "1", "metadata": {}, "hash": "5118c51a6566d07eb1ac4d46af2704ea57db113a6d29926cafff50f073fdd0dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "expect to receive. Note that because the PSM will always be able to act as the other\n   trading partner, this proposal doesn\u2019t have (or need) an exit condition.\n   `js\nconst myProposal = harden({ \n  give: { In: giveMintedAmount },\n  want: { Out: wantAnchorAmount },\n });\n`\n4. Create and harden a payment record containing the IST tokens you\u2019re trading to the PSM.\n   ```js\n   const myPaymentRecord = harden({ In: mintedPayment });\n   ```\n5. Create the offer.\n   ```js", "mimetype": "text/plain", "start_char_idx": 3764, "end_char_idx": 4231, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c8e374e-d445-4ee2-a305-e8fa52a17998": {"__data__": {"id_": "7c8e374e-d445-4ee2-a305-e8fa52a17998", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_actual-contracts_PSM.md", "node_type": "4", "metadata": {}, "hash": "0e415884036384e87df8a733aa8a36c1f03f45ab5bf2b3751cbebdb54bbd6530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5747a033-5240-4f72-9aae-b80cb6424734", "node_type": "1", "metadata": {}, "hash": "cf9757d8e413165cf5960132a3072d86cd8485843c7facded0412496720380c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "5. Create the offer.\n   ```js\n   const seat = E(zoe).offer(myInvitation, myProposal, myPaymentRecord);\n   ```", "mimetype": "text/plain", "start_char_idx": 4202, "end_char_idx": 4311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34026042-91ca-4144-a120-f6a5768574f5": {"__data__": {"id_": "34026042-91ca-4144-a120-f6a5768574f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57089aad-3126-43f7-8556-5366b146f914", "node_type": "1", "metadata": {}, "hash": "7005c0d105cc1e1b079600434687ff70c287a3f26d40be972723139898c14f89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Atomic Swap Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/f29591519809dbadf19db0a26f38704d87429b89/packages/zoe/src/contracts/atomicSwap.js) (Last updated: Sep 12, 2020)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "57089aad-3126-43f7-8556-5366b146f914": {"__data__": {"id_": "57089aad-3126-43f7-8556-5366b146f914", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34026042-91ca-4144-a120-f6a5768574f5", "node_type": "1", "metadata": {}, "hash": "348a65e1ca60348b3ee41e5c192faba18467e3a7c076c18965b0b7bea4808c45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80210bfe-784d-4699-8afb-17058c35063b", "node_type": "1", "metadata": {}, "hash": "f94e92bc1452fa4a3112907ea3e75e5291259a0ba0b4628c4b7d16a9722436ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If I want to trade one kind of asset for another kind, I could send\nyou the asset and ask you to send the other kind back. But, you\ncould behave opportunistically by receiving my asset and giving\nnothing back.\n\nTo solve this problem, Zoe-based swap contracts let users\nsecurely trade one kind of digital asset for another kind.\nBy using Zoe for escrow and offer safety, they insure no\nuser can ever behave opportunistically.", "mimetype": "text/plain", "start_char_idx": 342, "end_char_idx": 766, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80210bfe-784d-4699-8afb-17058c35063b": {"__data__": {"id_": "80210bfe-784d-4699-8afb-17058c35063b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57089aad-3126-43f7-8556-5366b146f914", "node_type": "1", "metadata": {}, "hash": "7005c0d105cc1e1b079600434687ff70c287a3f26d40be972723139898c14f89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a", "node_type": "1", "metadata": {}, "hash": "b1924ac49f84d9541d2ac80c92a32f1289ba707af1c63886327f0e32790bff74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In our `atomicSwap` contract, anyone can securely swap with a counterparty.\nThey escrow the to-be-swapped digital assets with Zoe and then send\nan invitation to a possible counterparty. Without an invitation to this\nparticular swap contract instance, you can't be a counterparty.\n\nLet's say Alice wants to swap with Bob as counterparty. She\nalready has access to the contract's installation, so she\ncan create a swap instance for this particular transaction.", "mimetype": "text/plain", "start_char_idx": 768, "end_char_idx": 1226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a": {"__data__": {"id_": "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80210bfe-784d-4699-8afb-17058c35063b", "node_type": "1", "metadata": {}, "hash": "f94e92bc1452fa4a3112907ea3e75e5291259a0ba0b4628c4b7d16a9722436ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b3bdd1c-6af3-43f2-86fd-4f542644768e", "node_type": "1", "metadata": {}, "hash": "ad36e8f4dcbdd6b71bfc6626d3314a1772a3c0d61a66c4227ee092978bbfc5f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst issuerKeywordRecord = harden({\n  Asset: moolaIssuer,\n  Price: simoleanIssuer\n});\nconst { creatorInvitation } = await E(zoe).startInstance(\n  atomicSwapInstallation,\n  issuerKeywordRecord\n);\n```\n\nThen Alice escrows her offer with Zoe. She passes in two\nthings; the actual ERTP payments of her offer, and a\n`proposal`. Zoe uses the proposal to protect Alice from the\nsmart contract (which may have been written by someone else)\nand other participants.\n\nA proposal has three parts:", "mimetype": "text/plain", "start_char_idx": 1228, "end_char_idx": 1718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b3bdd1c-6af3-43f2-86fd-4f542644768e": {"__data__": {"id_": "9b3bdd1c-6af3-43f2-86fd-4f542644768e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a", "node_type": "1", "metadata": {}, "hash": "b1924ac49f84d9541d2ac80c92a32f1289ba707af1c63886327f0e32790bff74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb07cfda-c0ab-4090-b980-8e2909c625e3", "node_type": "1", "metadata": {}, "hash": "54523b94fc44869aa440e3e99092fe138efc8274501b3bf1cef76f94e70dae83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A proposal has three parts:\n\n- `give`: What this party will give to the swap. Used by Zoe to enforce offer safety (Alice will get back what she gave or what she wanted).\n- `want`: What this party wants to get from the swap. Used by Zoe to enforce offer safety (Alice will get back what she gave or what she wanted).\n- `exit`: How this party can exit from the contract instance. Used by Zoe to enforce payout liveness (Alice will be able to get a payout according to the exit rule she specifies)", "mimetype": "text/plain", "start_char_idx": 1691, "end_char_idx": 2185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb07cfda-c0ab-4090-b980-8e2909c625e3": {"__data__": {"id_": "bb07cfda-c0ab-4090-b980-8e2909c625e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b3bdd1c-6af3-43f2-86fd-4f542644768e", "node_type": "1", "metadata": {}, "hash": "ad36e8f4dcbdd6b71bfc6626d3314a1772a3c0d61a66c4227ee092978bbfc5f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "466f97aa-130f-43cd-9cf2-5dcffda623f6", "node_type": "1", "metadata": {}, "hash": "4c91796154767b09df63135613632817262f7f0d793ca5da5fe78ed273ede727", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In this case, Alice's exit rule is `onDemand`, meaning she\ncan exit the contract instance at any time.\n\n```js\nconst threeMoola = AmountMath.make(moolaBrand, 3);\nconst aliceProposal = harden({\n  give: { Asset: threeMoola },\n  want: { Price: AmountMath.make(simoleanBrand, 7) },\n  exit: { onDemand: null }\n});\n\nconst alicePayment = await E(aliceMoolaPurse).withdraw(threeMoola);\n```", "mimetype": "text/plain", "start_char_idx": 2187, "end_char_idx": 2567, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "466f97aa-130f-43cd-9cf2-5dcffda623f6": {"__data__": {"id_": "466f97aa-130f-43cd-9cf2-5dcffda623f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb07cfda-c0ab-4090-b980-8e2909c625e3", "node_type": "1", "metadata": {}, "hash": "54523b94fc44869aa440e3e99092fe138efc8274501b3bf1cef76f94e70dae83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab396034-e347-4a95-bfa3-ddb5267f9506", "node_type": "1", "metadata": {}, "hash": "e11de9cfd5a94a4586e587e1c12022b19917e10e4ffea565874d7f202eb297cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For Alice to escrow with Zoe, she needs to use her invitation.\nThen she makes her offer and receives a `seat`. The `seat`\ngives her access to the offer's result and her payouts.\n\n```js\nconst aliceSeat = await E(zoe).offer(\n  creatorInvitation,\n  aliceProposal,\n  harden({ Asset: alicePayment })\n);\n```\n\nThis first offer's outcome is an invitation Alice can send to anyone she wants. In\nthis example, she sends it to Bob.\n\n```js\nconst invitationP = aliceSeat.getOfferResult();\n```", "mimetype": "text/plain", "start_char_idx": 2569, "end_char_idx": 3048, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab396034-e347-4a95-bfa3-ddb5267f9506": {"__data__": {"id_": "ab396034-e347-4a95-bfa3-ddb5267f9506", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "466f97aa-130f-43cd-9cf2-5dcffda623f6", "node_type": "1", "metadata": {}, "hash": "4c91796154767b09df63135613632817262f7f0d793ca5da5fe78ed273ede727", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1", "node_type": "1", "metadata": {}, "hash": "3135ecf0efc665e25806eb9bf24cfdd603034a34637fcbb33d006e25017a7785", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob examines the invitation's details to see if they match Alice's claims\nabout it.\n\n```js secondary style2\nconst { installation: bobInstallation, instance } =\n  E(zoe).getInvitationDetails(invitationP);\nconst bobIssuers = E(zoe).getIssuers(instance);\n\nconst bobExclusiveInvitation = await invitationIssuer.claim(invitationP);\nconst bobInvitationValue = await E(zoe).getInvitationDetails(\n  bobExclusiveInvitation\n);", "mimetype": "text/plain", "start_char_idx": 3050, "end_char_idx": 3466, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1": {"__data__": {"id_": "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab396034-e347-4a95-bfa3-ddb5267f9506", "node_type": "1", "metadata": {}, "hash": "e11de9cfd5a94a4586e587e1c12022b19917e10e4ffea565874d7f202eb297cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e27c004-ac2d-49c0-ac47-230eb90d7d82", "node_type": "1", "metadata": {}, "hash": "917348a43acadfcc9682870c6e695e3e396cd8d09154476763302b12dcb9ec80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Bob verifies the invitation.\nassert(bobInstallation === atomicSwapInstallation, details`wrong contract`);\nassert(bobIssuers.Asset === moolaIssuer, details`unexpected Asset issuer`);\nassert(bobIssuers.Price === simoleanIssuer, details`unexpected Price issuer`);\nassert(\n  AmountMath.isEqual(bobInvitationValue.asset, moola(3)),\n  details`wrong asset`\n);\nassert(\n  AmountMath.isEqual(bobInvitationValue.price, simoleans(7)),\n  details`wrong price`\n);\n```", "mimetype": "text/plain", "start_char_idx": 3468, "end_char_idx": 3923, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e27c004-ac2d-49c0-ac47-230eb90d7d82": {"__data__": {"id_": "4e27c004-ac2d-49c0-ac47-230eb90d7d82", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1", "node_type": "1", "metadata": {}, "hash": "3135ecf0efc665e25806eb9bf24cfdd603034a34637fcbb33d006e25017a7785", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40663f9d-3792-4620-bbd3-3357b4ba34b2", "node_type": "1", "metadata": {}, "hash": "ae83d8356f768486b92586a74e7c8c76bb2d41b94a557a797a0e72928ef6b044", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob decides to exercise the invitation, and to escrow his payments. He then\nuses his invitation to make an offer, the same way that Alice used hers.\nBut Bob has written his proposal to match Alice's (notice that the `give`\nand `want` clauses are reversed from Alice's proposal):\n\n```js secondary style2\nconst sevenSimoleans = AmountMath.make(simoleanBrand, 7n);\nconst bobProposal = harden({\n  want: { Asset: AmountMath.make(moolaBrand, 3n) },\n  give: { Price: sevenSimoleans },\n  exit: { onDemand: null }\n});", "mimetype": "text/plain", "start_char_idx": 3925, "end_char_idx": 4433, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40663f9d-3792-4620-bbd3-3357b4ba34b2": {"__data__": {"id_": "40663f9d-3792-4620-bbd3-3357b4ba34b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e27c004-ac2d-49c0-ac47-230eb90d7d82", "node_type": "1", "metadata": {}, "hash": "917348a43acadfcc9682870c6e695e3e396cd8d09154476763302b12dcb9ec80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "408c07d0-c24e-4713-8de0-576781f65b9d", "node_type": "1", "metadata": {}, "hash": "e1216d1d70ed83327fb9cea95c5d277dc13c9f70d2240eb51786d80014f7e196", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const bobPayment = await E(bobSimoleansPurse).withdraw(sevenSimoleans);\n// Bob escrows with zoe and makes an offer\nconst bobSeat = await E(zoe).offer(\n  bobExclusiveInvitation,\n  bobProposal,\n  harden({ Price: bobPayment })\n);\n```\n\nBob has made his offer, so the contract executes. Since Alice\nand Bob's offers match, Alice's payouts resolve. She uses her\n`seat` to retrieve them. Then she deposits the moola\npayout to find out if Zoe returned some of it.", "mimetype": "text/plain", "start_char_idx": 4435, "end_char_idx": 4890, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "408c07d0-c24e-4713-8de0-576781f65b9d": {"__data__": {"id_": "408c07d0-c24e-4713-8de0-576781f65b9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40663f9d-3792-4620-bbd3-3357b4ba34b2", "node_type": "1", "metadata": {}, "hash": "ae83d8356f768486b92586a74e7c8c76bb2d41b94a557a797a0e72928ef6b044", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7220566-12e3-4db3-a61a-72e1c96b206b", "node_type": "1", "metadata": {}, "hash": "35bdb345f669d11022606f97faf31d807340424ebc46ac88b662c22d6abec9c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst aliceAssetPayout = await aliceSeat.getPayout('Asset');\nconst alicePricePayout = await aliceSeat.getPayout('Price');\nconst moolaRefundAmount = aliceMoolaPurse.deposit(aliceAssetPayout);\nconst simoleanGainAmount = aliceSimoleansPurse.deposit(alicePricePayout);\n```\n\nBob's payout is also available. Since he already knows what Alice's offer was,\nhe doesn't need to look for a simolean refund.", "mimetype": "text/plain", "start_char_idx": 4892, "end_char_idx": 5293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7220566-12e3-4db3-a61a-72e1c96b206b": {"__data__": {"id_": "e7220566-12e3-4db3-a61a-72e1c96b206b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_atomic-swap.md", "node_type": "4", "metadata": {}, "hash": "e60d9da55f4aa442afb31a490e831a08705323c289761b2df551d2eb89f2b815", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "408c07d0-c24e-4713-8de0-576781f65b9d", "node_type": "1", "metadata": {}, "hash": "e1216d1d70ed83327fb9cea95c5d277dc13c9f70d2240eb51786d80014f7e196", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js secondary style2\nconst bobAssetPayout = await bobSeat.getPayout('Asset');\nconst bobMoolaGainAmount = bobMoolaPurse.deposit(bobAssetPayout);\n```", "mimetype": "text/plain", "start_char_idx": 5295, "end_char_idx": 5444, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8343a08c-95f4-47f7-8cd8-f8f045eba1ec": {"__data__": {"id_": "8343a08c-95f4-47f7-8cd8-f8f045eba1ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_automatic-refund.md", "node_type": "4", "metadata": {}, "hash": "513e4aa5c96fb4e7ed0851b10569b89f1fdeddc0eb2e695869dd3f06359f0917", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04e63339-adc3-40f3-81f7-3f35afce4cb3", "node_type": "1", "metadata": {}, "hash": "c9e8c7f4899acbd4c6db8a515f2dbb98448450229de4cb83ec47bbb27f7d0254", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Automatic Refund Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/automaticRefund.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 350, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04e63339-adc3-40f3-81f7-3f35afce4cb3": {"__data__": {"id_": "04e63339-adc3-40f3-81f7-3f35afce4cb3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_automatic-refund.md", "node_type": "4", "metadata": {}, "hash": "513e4aa5c96fb4e7ed0851b10569b89f1fdeddc0eb2e695869dd3f06359f0917", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8343a08c-95f4-47f7-8cd8-f8f045eba1ec", "node_type": "1", "metadata": {}, "hash": "e60c086ff26aa7e33eb748d24c57a322946ae4fdc539c018d38567e2f765c287", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is a very trivial contract to explain and test Zoe.\nAutomaticRefund just gives you back what you put in. AutomaticRefund\ntells Zoe to exit the seat, which gives the user their payout\nthrough Zoe. Other contracts use these same steps, but they\nhave more sophisticated logic and interfaces.\n\nSince the contract doesn't attempt any reallocation, the offer can contain\nanything in `give` and `want`. The amounts in `give` will be returned, and\n`want` will be ignored.", "mimetype": "text/plain", "start_char_idx": 352, "end_char_idx": 820, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e80c0345-da68-46c8-bf8d-1624c324c4c2": {"__data__": {"id_": "e80c0345-da68-46c8-bf8d-1624c324c4c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_barter-exchange.md", "node_type": "4", "metadata": {}, "hash": "2e86cf239efed5bc329e31e7fdbb0e0c78836bba39fe1b0aafce0fa19cd2d0c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edde4510-9302-4286-aec1-cad5a4e9e9d6", "node_type": "1", "metadata": {}, "hash": "823c4620cb6b1be29eb4013eda63056639d9ef1dfd64c7748214065a9290e5dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Barter Exchange Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/a564c6081976d7b66b3cdf54e0ba8903c8f1ee6d/packages/zoe/src/contracts/barterExchange.js) (Last updated: Sep 14, 2020)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\nBarter Exchange takes offers for trading arbitrary goods for one another.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edde4510-9302-4286-aec1-cad5a4e9e9d6": {"__data__": {"id_": "edde4510-9302-4286-aec1-cad5a4e9e9d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_barter-exchange.md", "node_type": "4", "metadata": {}, "hash": "2e86cf239efed5bc329e31e7fdbb0e0c78836bba39fe1b0aafce0fa19cd2d0c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e80c0345-da68-46c8-bf8d-1624c324c4c2", "node_type": "1", "metadata": {}, "hash": "f766662266b2ea882c0a007c40796d85bee5101a7ad21c312a88413940687c4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb8d305-5862-44a4-8cce-8f2d06804f73", "node_type": "1", "metadata": {}, "hash": "53411e483331425b7a4d4b55bedb7828d8eae33da0180b1f3d08756af1ae790c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This Barter Exchange accepts offers to trade arbitrary goods for other\nthings. It doesn't require registration of Issuers. If two offers satisfy\neach other, it exchanges the specified amounts in each side's want clause.", "mimetype": "text/plain", "start_char_idx": 425, "end_char_idx": 644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dcb8d305-5862-44a4-8cce-8f2d06804f73": {"__data__": {"id_": "dcb8d305-5862-44a4-8cce-8f2d06804f73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_barter-exchange.md", "node_type": "4", "metadata": {}, "hash": "2e86cf239efed5bc329e31e7fdbb0e0c78836bba39fe1b0aafce0fa19cd2d0c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edde4510-9302-4286-aec1-cad5a4e9e9d6", "node_type": "1", "metadata": {}, "hash": "823c4620cb6b1be29eb4013eda63056639d9ef1dfd64c7748214065a9290e5dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "653107d7-6468-4e27-93d3-f9546c1bea8e", "node_type": "1", "metadata": {}, "hash": "a0ea61013273d32a9ab5a00a6ee7ff93cb8ccb683df0d345db66a35c69dd4123", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Since it pays no attention to keywords, and doesn't require\nregistration of issuers, it can handle trades between goods of any\ntype. It's like conventional \"barter\" in that there's no common\ncurrency. \"I have cantaloupes and am looking for pillow cases.\" It\nkeeps an order book, and each time it receives a new offer, it looks\nfor matches throughout the order book.\n\nThe Barter Exchange only accepts offers that look like\n`{ give: { In: amount }, want: { Out: amount }` }", "mimetype": "text/plain", "start_char_idx": 646, "end_char_idx": 1117, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "653107d7-6468-4e27-93d3-f9546c1bea8e": {"__data__": {"id_": "653107d7-6468-4e27-93d3-f9546c1bea8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_barter-exchange.md", "node_type": "4", "metadata": {}, "hash": "2e86cf239efed5bc329e31e7fdbb0e0c78836bba39fe1b0aafce0fa19cd2d0c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb8d305-5862-44a4-8cce-8f2d06804f73", "node_type": "1", "metadata": {}, "hash": "53411e483331425b7a4d4b55bedb7828d8eae33da0180b1f3d08756af1ae790c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The want amount will be matched, while the give amount is a maximum. Each\nsuccessful trader gets their `want` and may trade with counter-parties who\nspecify any amount up to their specified `give`.", "mimetype": "text/plain", "start_char_idx": 1119, "end_char_idx": 1316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be0756c1-bdfd-4af5-b633-7604b70e92aa": {"__data__": {"id_": "be0756c1-bdfd-4af5-b633-7604b70e92aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94a837e1-b42f-48e6-929a-19fb9e4914ab", "node_type": "1", "metadata": {}, "hash": "1b39b8debd4e8ceeb83c04dbc0499e4d30dff8bf15755650b1baf2f4111af231", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ConstantProduct AMM Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/7d141a47b311363f099f496d4ed9b4d0f28c8fff/packages/inter-protocol/src/vpool-xyk-amm/multipoolMarketMaker.js) (Last updated: Aug 15, 2022)\n\n##### [View contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 369, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94a837e1-b42f-48e6-929a-19fb9e4914ab": {"__data__": {"id_": "94a837e1-b42f-48e6-929a-19fb9e4914ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be0756c1-bdfd-4af5-b633-7604b70e92aa", "node_type": "1", "metadata": {}, "hash": "f3e2f4a8c4be66f1b0f9e5e468707d5708a915d8ff3308bcb0088911536fb61e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c1f6a99-f08a-4f82-9019-013585ab24f0", "node_type": "1", "metadata": {}, "hash": "5a6ee403f3b4a262fbc1ef2562610867fbd2561af448e6e3592e59de9cf179fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Constant Product AMM is an automated market maker (AMM) that supports multiple\nliquidity pools and direct exchanges across pools. It's called the \"Constant\nProduct\" AMM because it uses the constant product rule, which is one of a family of\nrules that enable a market maker to guarantee to be able to continue to make\ntrades, regardless of how prices change. (The constant product rule does this by\nensuring that the product of the contents of two pools of assets remains constant\nas trading takes place.)", "mimetype": "text/plain", "start_char_idx": 371, "end_char_idx": 879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c1f6a99-f08a-4f82-9019-013585ab24f0": {"__data__": {"id_": "8c1f6a99-f08a-4f82-9019-013585ab24f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94a837e1-b42f-48e6-929a-19fb9e4914ab", "node_type": "1", "metadata": {}, "hash": "1b39b8debd4e8ceeb83c04dbc0499e4d30dff8bf15755650b1baf2f4111af231", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0054035f-40dd-4543-bbfb-1a7df1fde45c", "node_type": "1", "metadata": {}, "hash": "750b1f72639932e09f1e1f73fa83e855603eb9023195257c7f250bc7f45f1b75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Each liquidity pool maintains a price for exchanges between the central token\nand a secondary token. Secondary tokens can be exchanged with each other, but\nonly through the central token. For example, if BLD and ATM are two token types\nand IST is the central currency, a swap giving ATM and wanting BLD would first\nuse the pool (ATM, IST) then the pool (BLD, IST). There are no direct liquidity\npools between two secondary tokens.", "mimetype": "text/plain", "start_char_idx": 881, "end_char_idx": 1311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0054035f-40dd-4543-bbfb-1a7df1fde45c": {"__data__": {"id_": "0054035f-40dd-4543-bbfb-1a7df1fde45c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c1f6a99-f08a-4f82-9019-013585ab24f0", "node_type": "1", "metadata": {}, "hash": "5a6ee403f3b4a262fbc1ef2562610867fbd2561af448e6e3592e59de9cf179fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32a0331e-18ff-4a7e-a515-231792da9460", "node_type": "1", "metadata": {}, "hash": "de45414b989d094ed8ba5707b5d52bea1a190ba3dc07c594f5495700292febde", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There should only need to be one instance of this contract, so liquidity can be\nshared as much as possible. Each secondary currency has a separate pool of liquidity.\n\nWhen the contract is instantiated, the terms specify the central token. Invitations\nfor adding and removing liquidity and for making trades are available by calling\nmethods on the publicFacet. Other publicFacet operations support querying prices and\nthe sizes of pools. Create new pools with `addPool()`.", "mimetype": "text/plain", "start_char_idx": 1313, "end_char_idx": 1784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "32a0331e-18ff-4a7e-a515-231792da9460": {"__data__": {"id_": "32a0331e-18ff-4a7e-a515-231792da9460", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0054035f-40dd-4543-bbfb-1a7df1fde45c", "node_type": "1", "metadata": {}, "hash": "750b1f72639932e09f1e1f73fa83e855603eb9023195257c7f250bc7f45f1b75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff36d66c-db64-4242-a7c0-6bbc83051271", "node_type": "1", "metadata": {}, "hash": "ff75fc40a2ba06382aa70984b91fac676fd3fbba622998a88b5544ca2e091732", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When making trades or requesting prices, the caller must specify that either the\ninput price (swapIn, getInputPrice) or the output price (swapOut, getOutputPrice) is\nfixed. For swaps, the required keywords are `In` for the trader's `give` amount, and\n`Out` for the trader's `want` amount. `getInputPrice()` and `getOutputPrice()` each\ntake two amounts. When `getInputPrice()` or `swapIn()` is called, the `amountOut`\nparameter indicated the desired `amountOut`; if `amountIn` is insufficient to provide", "mimetype": "text/plain", "start_char_idx": 1786, "end_char_idx": 2288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff36d66c-db64-4242-a7c0-6bbc83051271": {"__data__": {"id_": "ff36d66c-db64-4242-a7c0-6bbc83051271", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32a0331e-18ff-4a7e-a515-231792da9460", "node_type": "1", "metadata": {}, "hash": "de45414b989d094ed8ba5707b5d52bea1a190ba3dc07c594f5495700292febde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b", "node_type": "1", "metadata": {}, "hash": "8f8c1ffd28cf517d685af8d94413acc4337badea48df721f6d9fe47c4dda15d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "that much, the result indicates that no trade will take place. (The returned amountIn\nand amountOut will both be empty amounts.) Similarly, when `swapIn()` or\n`getOutputPrice()` is called, `amountIn` is treated as a maximum. If it would take a\ngreater amount to get the specified `amountOut`, the result indicates no trade.", "mimetype": "text/plain", "start_char_idx": 2289, "end_char_idx": 2612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b": {"__data__": {"id_": "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff36d66c-db64-4242-a7c0-6bbc83051271", "node_type": "1", "metadata": {}, "hash": "ff75fc40a2ba06382aa70984b91fac676fd3fbba622998a88b5544ca2e091732", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9eb1c1e-5c5b-433f-8255-c6492582a250", "node_type": "1", "metadata": {}, "hash": "361e7b7b8b68dd5cb355dc45ab3ac06204e4cdf011920e272cdae00cb6c54160", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When adding and removing liquidity, the keywords are `Central`, `Secondary`, and\n`Liquidity`. Adding liquidity uses `Central` and `Secondary` in the `give` section\nand `Liquidity` in the `want` section. Removing liquidity reverses the keywords:\n`Liquidity` in the `give` section, and `Central` and `Secondary` in the want\nsection. If the proposal specifies amounts directly taken from a recent quote, and\nany trading has intervened, the trade is unlikely to be accepted. You can either", "mimetype": "text/plain", "start_char_idx": 2614, "end_char_idx": 3099, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9eb1c1e-5c5b-433f-8255-c6492582a250": {"__data__": {"id_": "e9eb1c1e-5c5b-433f-8255-c6492582a250", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b", "node_type": "1", "metadata": {}, "hash": "8f8c1ffd28cf517d685af8d94413acc4337badea48df721f6d9fe47c4dda15d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0", "node_type": "1", "metadata": {}, "hash": "e5353f567b4d4033ae291949b1fbf973b1f38ff61952dc111575481be68f6bc2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "specify limits on how far the price may have moved, or specify limits of zero and\ntrust the contract to trade fairly.", "mimetype": "text/plain", "start_char_idx": 3100, "end_char_idx": 3217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0": {"__data__": {"id_": "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9eb1c1e-5c5b-433f-8255-c6492582a250", "node_type": "1", "metadata": {}, "hash": "361e7b7b8b68dd5cb355dc45ab3ac06204e4cdf011920e272cdae00cb6c54160", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6093a66-e2bd-4ebb-9392-d95c5b0a2804", "node_type": "1", "metadata": {}, "hash": "795f46b2f83402e898e02e8bbefa1d534a91f49dfd6ae595150caa18d425e275", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Transactions that don't require an invitation include `addPool()` and the queries\n(`getInputPrice()`, `getOutputPrice()`, `getPoolAllocation()`,\n`getLiquidityIssuer()`, and `getLiquiditySupply()`).\n\n## The ConstantProduct API\n\nThese examples use IST as the central token. BLD and ATM are secondary currencies.\n\n### Trading with the ConstantProduct AMM", "mimetype": "text/plain", "start_char_idx": 3219, "end_char_idx": 3570, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6093a66-e2bd-4ebb-9392-d95c5b0a2804": {"__data__": {"id_": "b6093a66-e2bd-4ebb-9392-d95c5b0a2804", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0", "node_type": "1", "metadata": {}, "hash": "e5353f567b4d4033ae291949b1fbf973b1f38ff61952dc111575481be68f6bc2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c77125c0-01a9-4163-bbe1-9bb314bb6090", "node_type": "1", "metadata": {}, "hash": "428c323de1d859a59b7a24c8394a8340c666d39901c0678877b64d2ff356a496", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once trading pools have been set up (see below), a new trader can interact with the\nmarket by asking for the current price, making an invitation, and making an\noffer. If Sara has ATM and needs 275 BLD for a deal she has negotiated, she can use\ngetOutputPrice() to get a quote. (An empty amount indicates no limit on the\namountOut of the result.)\n\n```js\nconst quote = E(publicFacet).getOutputPrice(\n  AmountMath.make(BLDBrand, 275n),\n  AmountMath.makeEmpty(ATMBrand)\n);\n```", "mimetype": "text/plain", "start_char_idx": 3572, "end_char_idx": 4044, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c77125c0-01a9-4163-bbe1-9bb314bb6090": {"__data__": {"id_": "c77125c0-01a9-4163-bbe1-9bb314bb6090", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6093a66-e2bd-4ebb-9392-d95c5b0a2804", "node_type": "1", "metadata": {}, "hash": "795f46b2f83402e898e02e8bbefa1d534a91f49dfd6ae595150caa18d425e275", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd7be30a-9cb0-41d7-a769-4f22e8051848", "node_type": "1", "metadata": {}, "hash": "7186c50b3e582ce6005b9e91675410cb0058e43db8ab7046e15215850e8ae367", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Let's assume the quote says she needs to provide 216 ATM. Sara believes the\nprice is somewhat volatile, and she doesn't want to make repeated calls, so she pads\nher offer. If the appropriate pools don't exist, she'll get an error (`brands were\nnot recognized`). If someone sells a lot of ATM into the pool just ahead of\nher, the price will increase, and she'll have to decide whether to deposit more\nATM or wait for the price to stabilize. If someone buys a lot of ATM just", "mimetype": "text/plain", "start_char_idx": 4046, "end_char_idx": 4519, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd7be30a-9cb0-41d7-a769-4f22e8051848": {"__data__": {"id_": "fd7be30a-9cb0-41d7-a769-4f22e8051848", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c77125c0-01a9-4163-bbe1-9bb314bb6090", "node_type": "1", "metadata": {}, "hash": "428c323de1d859a59b7a24c8394a8340c666d39901c0678877b64d2ff356a496", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb6a9c28-7688-48b1-a903-49bb1cbc0c49", "node_type": "1", "metadata": {}, "hash": "fe95b112d0cbb6d82ab74bda0c30f9ab2102f954466ced2e1ceaa1fcd9915e9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ahead of her order, she'll get the 275 BLD for less and will get some ATM\nback.", "mimetype": "text/plain", "start_char_idx": 4520, "end_char_idx": 4599, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb6a9c28-7688-48b1-a903-49bb1cbc0c49": {"__data__": {"id_": "eb6a9c28-7688-48b1-a903-49bb1cbc0c49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd7be30a-9cb0-41d7-a769-4f22e8051848", "node_type": "1", "metadata": {}, "hash": "7186c50b3e582ce6005b9e91675410cb0058e43db8ab7046e15215850e8ae367", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81749b7e-74c7-4931-92ab-76ad0f0c7a67", "node_type": "1", "metadata": {}, "hash": "d1f4348a7570cacd9242064355fe5f33b73b46d451c00227432fea70cb8d4403", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst saraProposal = harden({\n  want: { Out: AmountMath.make(BLDBrand, 275n) },\n  give: { In: AmountMath.make(atmBrand, 220n) }\n});\n\nconst swapInvitation = await E(publicFacet).makeSwapOutInvitation();\nconst atmPayment = harden({\n  In: saraAtmPurse.withdraw(AmountMath.make(atmBrand, 220n))\n});\n\nconst saraSeat = await E(zoe).offer(swapInvitation, saraProposal, atmPayment);\nconst saraResult = await saraSeat.getOfferResult();\n```", "mimetype": "text/plain", "start_char_idx": 4601, "end_char_idx": 5037, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81749b7e-74c7-4931-92ab-76ad0f0c7a67": {"__data__": {"id_": "81749b7e-74c7-4931-92ab-76ad0f0c7a67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb6a9c28-7688-48b1-a903-49bb1cbc0c49", "node_type": "1", "metadata": {}, "hash": "fe95b112d0cbb6d82ab74bda0c30f9ab2102f954466ced2e1ceaa1fcd9915e9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e65dfb64-d591-4171-8512-fac90d5c8d09", "node_type": "1", "metadata": {}, "hash": "18c1208a1455c3f755f4d9155f4cc87ff9f64746b9cbe22aa09cd5a952f5cb70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the result is `Swap successfully completed.`, she got the BLD for 220 ATM\nor less (she'll want to deposit any refund). Otherwise the market price moved against\nher, and she'll have to check the price again and make another offer.\n\n```js\nconst BLDProceeds = await E(saraSeat).getPayout('In');\nconst atmRefund = await E(saraSeat).getPayout('Out');\n\nconst BLDProceedsAmount = E(saraBLDPurse).deposit(BLDProceeds);\nE(saraAtmPurse).deposit(atmRefund);\n```\n\n### Creating a New Pool", "mimetype": "text/plain", "start_char_idx": 5039, "end_char_idx": 5517, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e65dfb64-d591-4171-8512-fac90d5c8d09": {"__data__": {"id_": "e65dfb64-d591-4171-8512-fac90d5c8d09", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81749b7e-74c7-4931-92ab-76ad0f0c7a67", "node_type": "1", "metadata": {}, "hash": "d1f4348a7570cacd9242064355fe5f33b73b46d451c00227432fea70cb8d4403", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd943579-6e25-424f-9faf-4332f4c5cbdc", "node_type": "1", "metadata": {}, "hash": "33ffeb77b30530b2785e13d6a3ef7d8a5a901cc4a6843ebff6ef4a16e2875e39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Creating a New Pool\n\nWhen the contract is first instantiated, there won't be any pools ready for\ntrading. `addPool()` adds a new currency, which can then be funded. (All\ncurrencies must be fungible.) When a pool is first funded, there's no other basis\non which to decide how much liquidity to create, so the liquidity amount equals the\namount of the central token in the offer.\n\n```js\nconst BLDLiquidityIssuer = await E(publicFacet).addPool(BLDIssuer, 'BLD');\n```", "mimetype": "text/plain", "start_char_idx": 5494, "end_char_idx": 5961, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd943579-6e25-424f-9faf-4332f4c5cbdc": {"__data__": {"id_": "fd943579-6e25-424f-9faf-4332f4c5cbdc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e65dfb64-d591-4171-8512-fac90d5c8d09", "node_type": "1", "metadata": {}, "hash": "18c1208a1455c3f755f4d9155f4cc87ff9f64746b9cbe22aa09cd5a952f5cb70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00765cbb-04ce-42fc-835e-ba98244f4ae8", "node_type": "1", "metadata": {}, "hash": "7d857263b04badc74bf1bc39b0a048841cde21cce46743bff51e496d46a58e21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Alice sees that the current rate in the external market is 2 BLD for each\nIST, so she deposits twice as many BLD as IST to fund the market.\n\n```js\nconst aliceProposal = harden({\n  want: { Liquidity: BLDLiquidity(50n) },\n  give: {\n    Secondary: AmountMath.make(BLDBrand, 100n),\n    Central: AmountMath.make(ISTBrand, 50n)\n  }\n});\nconst alicePayments = {\n  Secondary: aliceBLDPayment,\n  Central: aliceISTPayment\n};", "mimetype": "text/plain", "start_char_idx": 5963, "end_char_idx": 6376, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "00765cbb-04ce-42fc-835e-ba98244f4ae8": {"__data__": {"id_": "00765cbb-04ce-42fc-835e-ba98244f4ae8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd943579-6e25-424f-9faf-4332f4c5cbdc", "node_type": "1", "metadata": {}, "hash": "33ffeb77b30530b2785e13d6a3ef7d8a5a901cc4a6843ebff6ef4a16e2875e39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d53fc42f-cc02-4317-b85d-5e0f46fedecd", "node_type": "1", "metadata": {}, "hash": "c67ac040b749cbc033ebce065aae2d3ed37b8c7d8b9a874bb30288de2a64ccbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const aliceAddLiquidityInvitation = E(publicFacet).makeAddLiquidityInvitation();\nconst addLiquiditySeat = await E(zoe).offer(\n  aliceAddLiquidityInvitation,\n  aliceProposal,\n  alicePayments\n);\n```\n\n### Adding Liquidity to an Existing Pool", "mimetype": "text/plain", "start_char_idx": 6378, "end_char_idx": 6616, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d53fc42f-cc02-4317-b85d-5e0f46fedecd": {"__data__": {"id_": "d53fc42f-cc02-4317-b85d-5e0f46fedecd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00765cbb-04ce-42fc-835e-ba98244f4ae8", "node_type": "1", "metadata": {}, "hash": "7d857263b04badc74bf1bc39b0a048841cde21cce46743bff51e496d46a58e21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0deba041-2b98-4b07-9b3d-58078062076e", "node_type": "1", "metadata": {}, "hash": "58a63d43487a53623d472dc1143aeb82deb3e42b86acbb0fe8d0de2156d281c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When adding or removing liquidity to pools that have already been established, the\namounts deposited must be in proportion to the current balances in the pool. The\ncalculation is based on the amount of the `Central` asset. The `Secondary` assets\nmust be added in proportion. If less `Secondary` is provided than required, the\noffer is exited with no trade. If more of the secondary is provided than is required,\nthe excess is returned.", "mimetype": "text/plain", "start_char_idx": 6618, "end_char_idx": 7053, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0deba041-2b98-4b07-9b3d-58078062076e": {"__data__": {"id_": "0deba041-2b98-4b07-9b3d-58078062076e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d53fc42f-cc02-4317-b85d-5e0f46fedecd", "node_type": "1", "metadata": {}, "hash": "c67ac040b749cbc033ebce065aae2d3ed37b8c7d8b9a874bb30288de2a64ccbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2bbd63bc-1917-4d4c-be36-b18977d56015", "node_type": "1", "metadata": {}, "hash": "a041fb0df13043467fedf5f3214beb4282e89c76e47d615c2ae8e966e797fbed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob calls `getPoolAllocation()` to find the relative levels. Let's say the answer is\nthat the current ratio is 1234 BLD to 1718 IST.\n\n```js\nconst BLDPoolAlloc = E(publicFacet).getPoolAllocation(BLDBrand);\nconst ISTValue = BLDPoolAlloc.Central.value;\nconst BLDValue = BLDPoolAlloc.secondary.value;\n```", "mimetype": "text/plain", "start_char_idx": 7055, "end_char_idx": 7355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2bbd63bc-1917-4d4c-be36-b18977d56015": {"__data__": {"id_": "2bbd63bc-1917-4d4c-be36-b18977d56015", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0deba041-2b98-4b07-9b3d-58078062076e", "node_type": "1", "metadata": {}, "hash": "58a63d43487a53623d472dc1143aeb82deb3e42b86acbb0fe8d0de2156d281c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b9b630e-b5cc-49d0-9b90-8ff464210acf", "node_type": "1", "metadata": {}, "hash": "2ff1a1faaa84082b663b6fc72a8da7886d6b4f6075237e66a7c5145a10acda60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now he can add liquidity. The price ratio changes when anyone trades with the pool,\nso he should leave some flexibility in the proposal. The pool calculates the amount\nof `secondary` currency required based on the amount of `central` currency provided.\nBob bumps up the amount of BLD he'll contribute by a little. If he was concerned\nabout how much liquidity this would produce, he would calculate it and specify a rough\nfigure, but there's no need in this case.", "mimetype": "text/plain", "start_char_idx": 7357, "end_char_idx": 7819, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b9b630e-b5cc-49d0-9b90-8ff464210acf": {"__data__": {"id_": "7b9b630e-b5cc-49d0-9b90-8ff464210acf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2bbd63bc-1917-4d4c-be36-b18977d56015", "node_type": "1", "metadata": {}, "hash": "a041fb0df13043467fedf5f3214beb4282e89c76e47d615c2ae8e966e797fbed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f771985-c748-4e7f-a026-bfc79f8a8d3a", "node_type": "1", "metadata": {}, "hash": "e13061e18e1e7dd904ed5540c8cc72c654e109777fe47516c9d5c84fe26a7638", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobProposal = harden({\n  give: {\n    Central: AmountMath.make(ISTBrand, 1800n),\n    Secondary: AmountMath.make(BLDBrand, 1200n)\n  },\n  want: { Liquidity: AmountMath.make(liquidityBrand, 0n) },\n  exit: { onDemand: null }\n});\n\nconst bobPayments = {\n  Central: bobISTPayment,\n  Secondary: bobBLDPayment\n};\n\nconst seat = await E(zoe).offer(addLiquidityInvite, bobProposal, bobPayments);\n```\n\n## Governance", "mimetype": "text/plain", "start_char_idx": 7821, "end_char_idx": 8234, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f771985-c748-4e7f-a026-bfc79f8a8d3a": {"__data__": {"id_": "4f771985-c748-4e7f-a026-bfc79f8a8d3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b9b630e-b5cc-49d0-9b90-8ff464210acf", "node_type": "1", "metadata": {}, "hash": "2ff1a1faaa84082b663b6fc72a8da7886d6b4f6075237e66a7c5145a10acda60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f571ed5-e033-4175-86e8-2dcf2e121e78", "node_type": "1", "metadata": {}, "hash": "0d8f6ea274906c6f938091d2abb5c7c8c41303bd749393ec30bc82d315b8b58c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Governance\n\nThe ConstantProduct AMM uses governance to manage changes to two parameters: `PoolFee`\nand `ProtocolFee`. The current values of the parameters and the history of governance\nvoting to update their values is visible through the governance APIs.\n\nAn instance of the ConstantProduct AMM is managed by a contractGovernor, which\ncontrols the ability to change contract parameters and add new types of collateral.\nThe contractGovernor adds these four methods to the contract's publicFacet:", "mimetype": "text/plain", "start_char_idx": 8221, "end_char_idx": 8718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f571ed5-e033-4175-86e8-2dcf2e121e78": {"__data__": {"id_": "8f571ed5-e033-4175-86e8-2dcf2e121e78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_constantProductAMM.md", "node_type": "4", "metadata": {}, "hash": "5cea6cf758aedf98430f57c50d32bae4c92a0562912b92c9f6ffbb09ccb34006", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f771985-c748-4e7f-a026-bfc79f8a8d3a", "node_type": "1", "metadata": {}, "hash": "e13061e18e1e7dd904ed5540c8cc72c654e109777fe47516c9d5c84fe26a7638", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `getSubscription()`: get a [Subscription](/guides/js-programming/notifiers) that\n  updates when votes are called.\n- `getContractGovernor()`: returns the contractGovernor for verification.\n- `getGovernedParamsValues()`: returns a structure showing the current values of\n  the two parameters.\n- `getParamValue('PoolFee')`: gets a description of the current value of\n  either parameter. Note the initial capital letter.", "mimetype": "text/plain", "start_char_idx": 8720, "end_char_idx": 9138, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5528ba75-4289-4f92-be98-0eb21fb4f846": {"__data__": {"id_": "5528ba75-4289-4f92-be98-0eb21fb4f846", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bedf040-8104-4a0a-a530-56ae747f98ca", "node_type": "1", "metadata": {}, "hash": "b0759644a93647778e6a85f2ee2cac699bdbc9c56e2f496f6cdb27f7ee76ec8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Covered Call Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/f29591519809dbadf19db0a26f38704d87429b89/packages/zoe/src/contracts/coveredCall.js) (Last updated: Sep 12, 2020)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 342, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6bedf040-8104-4a0a-a530-56ae747f98ca": {"__data__": {"id_": "6bedf040-8104-4a0a-a530-56ae747f98ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5528ba75-4289-4f92-be98-0eb21fb4f846", "node_type": "1", "metadata": {}, "hash": "f37b1a320c55e38ea82e8fb7b32f189d55c20dfcbfb7a2a710f09ad215e6ed1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ab0a6a0-2829-4608-96d3-a84bf9acd77b", "node_type": "1", "metadata": {}, "hash": "fee8b4104ffe03cdf89c5c99e2ffa4ee10a2afeeea7e2c27f20fec78554b191d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The owner of an asset can use a covered call to give someone else the right\nto buy the asset at a certain price, called the strike price. That right\ncan then be treated as an asset in its own right. This contract creates\nthose derivative rights, and makes it possible for someone else to tell\nwhat they would get if they successfully exercise that right. The call\noption has an expiry date, at which point the contract is cancelled. It is\n\"covered\", meaning that the assets it describes is in the seller's", "mimetype": "text/plain", "start_char_idx": 344, "end_char_idx": 849, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ab0a6a0-2829-4608-96d3-a84bf9acd77b": {"__data__": {"id_": "4ab0a6a0-2829-4608-96d3-a84bf9acd77b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bedf040-8104-4a0a-a530-56ae747f98ca", "node_type": "1", "metadata": {}, "hash": "b0759644a93647778e6a85f2ee2cac699bdbc9c56e2f496f6cdb27f7ee76ec8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa", "node_type": "1", "metadata": {}, "hash": "f11a1215e636c6c8b59c1ce132beed3794ffb5879d4ff2701ab819817592f0be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "possession, and the actual asset will be transferred when the exchange takes\nplace.", "mimetype": "text/plain", "start_char_idx": 850, "end_char_idx": 933, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa": {"__data__": {"id_": "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ab0a6a0-2829-4608-96d3-a84bf9acd77b", "node_type": "1", "metadata": {}, "hash": "fee8b4104ffe03cdf89c5c99e2ffa4ee10a2afeeea7e2c27f20fec78554b191d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf89735f-afb2-4048-a751-593d8f82ed96", "node_type": "1", "metadata": {}, "hash": "5d547f5cfef0d719de7ef9c58f58c214baa23df4339100ee2e264daf98eb08da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In this contract, the expiry date is represented by the deadline at which\nthe owner of the digital asset's offer is cancelled. Therefore, the owner\nof the digital asset's proposal must have an `exit` of \"afterDeadline\".", "mimetype": "text/plain", "start_char_idx": 935, "end_char_idx": 1154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf89735f-afb2-4048-a751-593d8f82ed96": {"__data__": {"id_": "bf89735f-afb2-4048-a751-593d8f82ed96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa", "node_type": "1", "metadata": {}, "hash": "f11a1215e636c6c8b59c1ce132beed3794ffb5879d4ff2701ab819817592f0be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c00ef53e-31d3-47b7-b75a-5ac7ee936e51", "node_type": "1", "metadata": {}, "hash": "44a5ecec3d1b520680eeb8cf198f1adc522fe0b09f52e80d837ac4d7d489f9bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The party that calls `startInstance()` gets an invitation that they can use\nto deposit assets. When they do so, the offer result is another invitation\nthat serves as the call option. The invitation includes details of the\ntransaction for the benefit of the counter-party. Their assured presence in\nthe invitation allows the recipient of the invitation to verify what has\nbeen escrowed: `{ expirationDate, timerAuthority, underlyingAsset,\nstrikePrice }`.\n\n## The Contract's API", "mimetype": "text/plain", "start_char_idx": 1156, "end_char_idx": 1632, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c00ef53e-31d3-47b7-b75a-5ac7ee936e51": {"__data__": {"id_": "c00ef53e-31d3-47b7-b75a-5ac7ee936e51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf89735f-afb2-4048-a751-593d8f82ed96", "node_type": "1", "metadata": {}, "hash": "5d547f5cfef0d719de7ef9c58f58c214baa23df4339100ee2e264daf98eb08da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bd2a3e6-ea95-4043-877a-63292b2fc3cc", "node_type": "1", "metadata": {}, "hash": "d4af0b6f0b9787a698c866013e5c77f20d61fd8ef0407ead3c379e1a7e77e5db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Contract's API\n\nA call option is the right (but not the obligation) to buy digital assets\nat a pre-determined price, called the strike price. This call option is\n\"covered,\" meaning that the invitation to accept the offer won't be issued\nuntil the assets have been put in escrow. This guarantees that the assets\ncan be transferred without relying on the owner of the digital assets to\nkeep their promise later.", "mimetype": "text/plain", "start_char_idx": 1611, "end_char_idx": 2027, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bd2a3e6-ea95-4043-877a-63292b2fc3cc": {"__data__": {"id_": "7bd2a3e6-ea95-4043-877a-63292b2fc3cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c00ef53e-31d3-47b7-b75a-5ac7ee936e51", "node_type": "1", "metadata": {}, "hash": "44a5ecec3d1b520680eeb8cf198f1adc522fe0b09f52e80d837ac4d7d489f9bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c918542d-7260-4db5-86dc-3ecee4a5d2c3", "node_type": "1", "metadata": {}, "hash": "dbd76ce4c677611796f41ad518b2624d322261e4303a76604f168dad65d44fc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The call option has an expiration date, when the opportunity is\ncancelled. The owner of the digital assets cannot remove the assets from\nescrow before the expiration date.\n\nThe `creatorInvitation` of this contract is an invitation to escrow the\nunderlying assets. The proposal to escrow assets can have any `give` and\n`want` with any keywords. Any number of assets of different brands can be\nescrowed under different keywords. The proposal must have an exit condition\nwith the key \"afterDeadline\":", "mimetype": "text/plain", "start_char_idx": 2029, "end_char_idx": 2526, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c918542d-7260-4db5-86dc-3ecee4a5d2c3": {"__data__": {"id_": "c918542d-7260-4db5-86dc-3ecee4a5d2c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bd2a3e6-ea95-4043-877a-63292b2fc3cc", "node_type": "1", "metadata": {}, "hash": "d4af0b6f0b9787a698c866013e5c77f20d61fd8ef0407ead3c379e1a7e77e5db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1da01393-8e2f-4d88-bcdc-1b92a10aebb3", "node_type": "1", "metadata": {}, "hash": "7706e149a04de818d4109069da15577e5ffab18b9c0e43e2bf7afebc5ee7caeb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n{\n  give: { ... },\n  want: { ... },\n  exit: {\n    afterDeadline: { deadline: time, timer: chainTimer },\n  },\n}\n```\n\nThe deadline serves as the expiration date for the covered call\noption. After this deadline, if the option has not been exercised, the\nunderlying assets are automatically returned to the creator of the contract\nas a refund.", "mimetype": "text/plain", "start_char_idx": 2528, "end_char_idx": 2873, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1da01393-8e2f-4d88-bcdc-1b92a10aebb3": {"__data__": {"id_": "1da01393-8e2f-4d88-bcdc-1b92a10aebb3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c918542d-7260-4db5-86dc-3ecee4a5d2c3", "node_type": "1", "metadata": {}, "hash": "dbd76ce4c677611796f41ad518b2624d322261e4303a76604f168dad65d44fc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49c2611c-d176-4860-acb9-1df178fe68b5", "node_type": "1", "metadata": {}, "hash": "15ff29a279109016af33e1ec35f38ddcd2164b62ec2cdec523c617f55c456dad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "After the owner of the digital assets escrows the assets in the initial\noffer, they receive a seat. The payout for this seat will either be a\nrefund of the underlying assets (as mentioned above) or payments in the\namount of the strike price. Zoe's enforcement of offer safety guarantees\nthat the payout is either a refund or payments in the amount of the strike\nprice, regardless of whether the contract is buggy.", "mimetype": "text/plain", "start_char_idx": 2875, "end_char_idx": 3288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49c2611c-d176-4860-acb9-1df178fe68b5": {"__data__": {"id_": "49c2611c-d176-4860-acb9-1df178fe68b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1da01393-8e2f-4d88-bcdc-1b92a10aebb3", "node_type": "1", "metadata": {}, "hash": "7706e149a04de818d4109069da15577e5ffab18b9c0e43e2bf7afebc5ee7caeb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7896cacb-99ca-46e7-863d-ca5875908abf", "node_type": "1", "metadata": {}, "hash": "cfbf30fcac5731f392812564d293e358b1e55efa2422fbdd4580aaed33e4603f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The offerResult of the initial seat resolves to the call option itself: an\ninspectable invitation to buy the underlying assets. The call option\ninvitation has this additional information in the value: `{ expirationDate,\ntimeAuthority, underlyingAssets, strikePrice }`.\n\nThe invitation itself can be traded as a valuable digital asset: a\ncovered call option.", "mimetype": "text/plain", "start_char_idx": 3290, "end_char_idx": 3647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7896cacb-99ca-46e7-863d-ca5875908abf": {"__data__": {"id_": "7896cacb-99ca-46e7-863d-ca5875908abf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49c2611c-d176-4860-acb9-1df178fe68b5", "node_type": "1", "metadata": {}, "hash": "15ff29a279109016af33e1ec35f38ddcd2164b62ec2cdec523c617f55c456dad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b", "node_type": "1", "metadata": {}, "hash": "4d8e743b8f702e3c62ee112c448913fe25a8dbdcdc2115228a5fb7f63eb8ad4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The recipient of a covered call option (whether received as a gift, or\nbought on an exchange or through a contract) can exercise the option before\nthe deadline by using it as an invitation to this contract, paying the\nstrike price and receiving the underlying assets. The recipient of a\ncovered call option can use whatever keywords they wish, as long as they\nspecify that they `give` the strike price as specified in the invitation\nvalue, and `want` the underlying assets exactly.\n\n## Making A Call Option", "mimetype": "text/plain", "start_char_idx": 3649, "end_char_idx": 4155, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b": {"__data__": {"id_": "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7896cacb-99ca-46e7-863d-ca5875908abf", "node_type": "1", "metadata": {}, "hash": "cfbf30fcac5731f392812564d293e358b1e55efa2422fbdd4580aaed33e4603f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa978545-c42d-41e6-8148-e9ecf86205a1", "node_type": "1", "metadata": {}, "hash": "602f426f6269a0103b1b718d37996ba70e3fdde06320cb9090c51303b4393a47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Making A Call Option\n\nLet's say Alice wants to create a covered call. She creates the first proposal\njust like she would create the first proposal in the atomic swap. She creates an\nissuerKeywordRecord to specify the issuers to be used with each keyword.\n\n```js\nconst issuerKeywordRecord = harden({\n  UnderlyingAsset: moolaIssuer,\n  StrikePrice: simoleanIssuer\n});\n\nconst { creatorInvitation } = await E(zoe).startInstance(\n  coveredCallInstallation,\n  issuerKeywordRecord\n);\n```", "mimetype": "text/plain", "start_char_idx": 4132, "end_char_idx": 4614, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa978545-c42d-41e6-8148-e9ecf86205a1": {"__data__": {"id_": "aa978545-c42d-41e6-8148-e9ecf86205a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b", "node_type": "1", "metadata": {}, "hash": "4d8e743b8f702e3c62ee112c448913fe25a8dbdcdc2115228a5fb7f63eb8ad4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55c29ab7-0801-4377-a1c1-26792937ecb8", "node_type": "1", "metadata": {}, "hash": "38bf4d6c5d9479cfb39dde64e072f555bc4578c8acbe9b2e58da3c90a593ad5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Then Alice creates a proposal, and escrows the funds she is depositing.\n\n```js\nconst threeMoola = AmountMath.make(moolaBrand, 3n);\nconst aliceProposal = harden({\n  give: { UnderlyingAsset: threeMoola },\n  want: { StrikePrice: AmountMath.make(simoleanBrand, 7n) },\n  exit: { afterDeadline: { deadline: 1599856578n, timer: chainTimer } }\n});\n\nconst alicePayment = { UnderlyingAsset: aliceMoolaPurse.withdraw(threeMoola) };\n```\n\nAlice makes an offer and gets a seat.", "mimetype": "text/plain", "start_char_idx": 4616, "end_char_idx": 5079, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55c29ab7-0801-4377-a1c1-26792937ecb8": {"__data__": {"id_": "55c29ab7-0801-4377-a1c1-26792937ecb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa978545-c42d-41e6-8148-e9ecf86205a1", "node_type": "1", "metadata": {}, "hash": "602f426f6269a0103b1b718d37996ba70e3fdde06320cb9090c51303b4393a47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e32e14f-fe7f-4490-b15a-dfdc3a505af1", "node_type": "1", "metadata": {}, "hash": "97bfb1fe830a7324eeb8f6335096d39b069fdfe7533d9940ff218121d0619449", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst aliceSeat = await E(zoe).offer(\n  creatorInvitation,\n  aliceProposal,\n  alicePayment\n);\n\nconst coveredCall = aliceSeat.getOfferResult();\n```\n\nThe offerResult obtained from the seat is a zoe invitation that serves as the\ncovered call she wants. This invitation is a full ERTP payment and can be\nescrowed and used in other contracts. For instance, Alice can send it to Bob,\nwho can either exercise the call option or sell it in another contract, say, an\natomic swap:", "mimetype": "text/plain", "start_char_idx": 5081, "end_char_idx": 5557, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8e32e14f-fe7f-4490-b15a-dfdc3a505af1": {"__data__": {"id_": "8e32e14f-fe7f-4490-b15a-dfdc3a505af1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55c29ab7-0801-4377-a1c1-26792937ecb8", "node_type": "1", "metadata": {}, "hash": "38bf4d6c5d9479cfb39dde64e072f555bc4578c8acbe9b2e58da3c90a593ad5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9917bde-1fd2-475b-91b3-1b473c88651d", "node_type": "1", "metadata": {}, "hash": "265bbf92c48049a629255958087a3bf7d0234db8b6e73d3c66b9e9609089d5b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst invitationIssuer = E(zoe).getInvitationIssuer();\nconst bobExclOption = await invitationIssuer.claim(coveredCall);\n```\n\nLet's imagine that Bob wants to sell the invitation. He can start a swap\ninstance to trade this invitation for bucks.\n\n```js\nconst swapIssuerKeywordRecord = harden({\n  Asset: invitationIssuer,\n  Price: bucksR.issuer\n});\nconst bobSwapSeat = await E(zoe).startInstance(\n  swapInstallation,\n  swapIssuerKeywordRecord\n);\n```", "mimetype": "text/plain", "start_char_idx": 5559, "end_char_idx": 6010, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9917bde-1fd2-475b-91b3-1b473c88651d": {"__data__": {"id_": "e9917bde-1fd2-475b-91b3-1b473c88651d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e32e14f-fe7f-4490-b15a-dfdc3a505af1", "node_type": "1", "metadata": {}, "hash": "97bfb1fe830a7324eeb8f6335096d39b069fdfe7533d9940ff218121d0619449", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5697ba6b-aade-48ba-8168-0ff5e515c440", "node_type": "1", "metadata": {}, "hash": "58ad7e42b1f687e8f915f04c13f645e1ee9fba791372c151ce06b8ed80d43ade", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob specifies that he wants to swap the invitation for 1 buck, and escrows\nthe covered call invitation. In exchange, he gets a swap invitation he can\nshare.\n\n```js\nconst bobProposalSwap = harden({\n  give: { Asset: invitationIssuer.getAmountOf(bobExclOption) },\n  want: { Price: bucks(1) }\n});\n\nconst bobPayments = harden({ Asset: bobExclOption });\nconst bobSwapSeat = await E(zoe).offer(\n  bobSwapInvitation,\n  bobProposalSwap,\n  bobPayments\n);\n\nconst daveSwapInvitation = bobSwapSeat.getOfferResult();\n```", "mimetype": "text/plain", "start_char_idx": 6012, "end_char_idx": 6518, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5697ba6b-aade-48ba-8168-0ff5e515c440": {"__data__": {"id_": "5697ba6b-aade-48ba-8168-0ff5e515c440", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9917bde-1fd2-475b-91b3-1b473c88651d", "node_type": "1", "metadata": {}, "hash": "265bbf92c48049a629255958087a3bf7d0234db8b6e73d3c66b9e9609089d5b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6ba7017-3719-4e86-a827-6c0734ce356f", "node_type": "1", "metadata": {}, "hash": "9cd42650f25754fccf940dd94e47e66733fd53ab2a6072fe2261c4d84f303c10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Buying An Option\n\nAnother user, let's call him Dave, is looking to buy the option to trade\nhis 7 simoleans for 3 moola, and is willing to pay 1 buck for the\noption. He is interested in Bob's swap invitation so he checks that this\ninstance matches what he wants. He can check the amount of the invitation\nto see what contract it is for, and any contract-provided information about\nwhat the invitation can be used for.", "mimetype": "text/plain", "start_char_idx": 6520, "end_char_idx": 6939, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6ba7017-3719-4e86-a827-6c0734ce356f": {"__data__": {"id_": "a6ba7017-3719-4e86-a827-6c0734ce356f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5697ba6b-aade-48ba-8168-0ff5e515c440", "node_type": "1", "metadata": {}, "hash": "58ad7e42b1f687e8f915f04c13f645e1ee9fba791372c151ce06b8ed80d43ade", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cca375a-8f6c-4582-8347-e26704f51c8f", "node_type": "1", "metadata": {}, "hash": "eb504b463546af34eecdd0514380c574715ad782fe20e6675b06ddfe18eee50b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { installation: daveSwapInstall, instance } =\n  await E(zoe).getInvitationDetails(daveSwapInvitation);\nconst daveSwapIssuers = await E(zoe).getIssuers(instance);\n\n// Dave does some checks\nassert(daveSwapInstall === swapInstallation, details`wrong installation`);\nassert(daveIssuers.Asset === moolaIssuer, details`unexpected Asset issuer`);\nassert(daveIssuers.Price === simoleanIssuer, details`unexpected Price issuer`);\n```", "mimetype": "text/plain", "start_char_idx": 6941, "end_char_idx": 7376, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2cca375a-8f6c-4582-8347-e26704f51c8f": {"__data__": {"id_": "2cca375a-8f6c-4582-8347-e26704f51c8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6ba7017-3719-4e86-a827-6c0734ce356f", "node_type": "1", "metadata": {}, "hash": "9cd42650f25754fccf940dd94e47e66733fd53ab2a6072fe2261c4d84f303c10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2551d14-d9cb-47db-985d-b7593d1b43d8", "node_type": "1", "metadata": {}, "hash": "0b1885702dfbf0dd5c8cde44c9833ff463839512121693efd3e8adb269f87266", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Dave can safely proceed with the swap because he knows that if Bob has lied\nabout the swap then Dave's offer will be rejected and he will get a refund.\nDave escrows his 1 buck with Zoe and forms his proposal.\n\n```js\nconst daveSwapProposal = harden({\n  want: { Asset: optionAmount },\n  give: { Price: bucks(1) }\n});\n\nconst daveSwapPayments = harden({ Price: daveBucksPayment });\n\nconst daveSwapSeat = await E(zoe).offer(\n  daveSwapInvitation,\n  daveSwapProposal,\n  daveSwapPayments\n);\n```", "mimetype": "text/plain", "start_char_idx": 7378, "end_char_idx": 7865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2551d14-d9cb-47db-985d-b7593d1b43d8": {"__data__": {"id_": "b2551d14-d9cb-47db-985d-b7593d1b43d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cca375a-8f6c-4582-8347-e26704f51c8f", "node_type": "1", "metadata": {}, "hash": "eb504b463546af34eecdd0514380c574715ad782fe20e6675b06ddfe18eee50b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "203556ab-06a6-406f-bba4-ff870102f3b7", "node_type": "1", "metadata": {}, "hash": "fae6228e27faaeded8c2eb7fa13f6526716ecf282186ac96613135d45eec6feb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Exercising the Option\n\nNow that Dave owns the covered call he can exercise it. He exercises the\noption by submitting an offer that pays the required exercise price in\nexchange for the underlying asset:\n\n```js\nconst daveOption = await daveSwapSeat.getPayout('Asset');\n\nconst daveCoveredCallProposal = harden({\n  want: { UnderlyingAsset: AmountMath.make(moolaBrand, 3n) },\n  give: { StrikePrice: AmountMath.make(simoleanBrand, 7n) }\n});", "mimetype": "text/plain", "start_char_idx": 7867, "end_char_idx": 8304, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "203556ab-06a6-406f-bba4-ff870102f3b7": {"__data__": {"id_": "203556ab-06a6-406f-bba4-ff870102f3b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_covered-call.md", "node_type": "4", "metadata": {}, "hash": "37f7c663598cc8d8e2252a7ec259da1a34fcc255e74d291626d9be390b1c6367", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2551d14-d9cb-47db-985d-b7593d1b43d8", "node_type": "1", "metadata": {}, "hash": "0b1885702dfbf0dd5c8cde44c9833ff463839512121693efd3e8adb269f87266", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const daveCoveredCallPayments = harden({\n  StrikePrice: daveSimoleanPayment\n});\n\nconst daveCallSeat = await E(zoe).offer(\n  daveOption,\n  daveCoveredCallProposal,\n  daveCoveredCallPayments\n);\n\nconst daveMoolaPayout = await daveCallSeat.getPayout('UnderlyingAsset');\nawait daveMoolaPurse.deposit(daveMoolaPayout);\n```", "mimetype": "text/plain", "start_char_idx": 8306, "end_char_idx": 8622, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "808040a7-49bd-4ba7-b500-490d99240e49": {"__data__": {"id_": "808040a7-49bd-4ba7-b500-490d99240e49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_escrow-to-vote.md", "node_type": "4", "metadata": {}, "hash": "895a35620604ca4a320402a348f75150d54bb6669704e58bf0b86a27b76ac4f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5823a99-d9ba-4e27-b9f0-8ebf8779f804", "node_type": "1", "metadata": {}, "hash": "a2bedf62ca4fde11ba1c31f9970a43f3f86917982e930ce3d1b973d55316c333", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Escrow To Vote Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/test/unitTests/contracts/escrowToVote.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5823a99-d9ba-4e27-b9f0-8ebf8779f804": {"__data__": {"id_": "e5823a99-d9ba-4e27-b9f0-8ebf8779f804", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_escrow-to-vote.md", "node_type": "4", "metadata": {}, "hash": "895a35620604ca4a320402a348f75150d54bb6669704e58bf0b86a27b76ac4f8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "808040a7-49bd-4ba7-b500-490d99240e49", "node_type": "1", "metadata": {}, "hash": "f72e5638a970d3eedd0ddcd975effd3355ef44d5dc15218bef61cb17027bbe80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract implements coin voting. There are two roles: the\nSecretary, who can determine the question (a string), make voting\ninvitations, and close the election; and the Voters, who can vote YES or\nNO on the question. The voters can only get the capability to vote\nby using a voter invitation to make an offer and escrowing assets. The\nbrand of assets is determined on contract instantiation through an\nissuerKeywordRecord. The creator gets the only Secretary\naccess through the creatorFacet.", "mimetype": "text/plain", "start_char_idx": 358, "end_char_idx": 854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3e7ab5c-0f7d-420c-ae21-adae4500abbc": {"__data__": {"id_": "b3e7ab5c-0f7d-420c-ae21-adae4500abbc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56178aad-5c4c-4b7f-a96b-7624e1288e22", "node_type": "1", "metadata": {}, "hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Funded Call Spread Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/callSpread/fundedCallSpread.js) (Last updated: Feb 20, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56178aad-5c4c-4b7f-a96b-7624e1288e22": {"__data__": {"id_": "56178aad-5c4c-4b7f-a96b-7624e1288e22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3e7ab5c-0f7d-420c-ae21-adae4500abbc", "node_type": "1", "metadata": {}, "hash": "784eeee6058e97898071581c43e1462602183b51d175aa2fac92136754e204c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75653472-ed21-4a1c-95fb-547ed4590110", "node_type": "1", "metadata": {}, "hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract implements a fully collateralized call spread. You can use a call spread as a\n[financial building block](https://youtu.be/m5Pf2d1tHCs) to create futures, puts, calls, and event\nbinaries that would form the basis for a prediction market, insurance, and much more. A call spread\nis a combination of a call option bought at one strike price and a second call option sold at a\nhigher price. A call spread has two participating seats that pay out complementary amounts depending", "mimetype": "text/plain", "start_char_idx": 366, "end_char_idx": 853, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75653472-ed21-4a1c-95fb-547ed4590110": {"__data__": {"id_": "75653472-ed21-4a1c-95fb-547ed4590110", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56178aad-5c4c-4b7f-a96b-7624e1288e22", "node_type": "1", "metadata": {}, "hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d27f3e25-2993-41e5-bf66-9eacfeccb060", "node_type": "1", "metadata": {}, "hash": "aa2ae77f7300d5cbd691bca996b6bf5d46816a73c1dc91de27c827187a074519", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "on the value of some good at a known future time. This video gives a\n[walkthrough of the implementation](https://youtu.be/m5Pf2d1tHCs?t=3566) of the contract.", "mimetype": "text/plain", "start_char_idx": 854, "end_char_idx": 1012, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d27f3e25-2993-41e5-bf66-9eacfeccb060": {"__data__": {"id_": "d27f3e25-2993-41e5-bf66-9eacfeccb060", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75653472-ed21-4a1c-95fb-547ed4590110", "node_type": "1", "metadata": {}, "hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4", "node_type": "1", "metadata": {}, "hash": "3c3ceb04e97af42836b2ac38bc5635a7e0224f4570c8a7717a87e10bd1001374", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There are two variants of the callSpread. This one is fully funded by its creator, who can then sell\n(or transfer another way) the options to other parties. The other is called the\n[pricedCallSpread](./pricedCallSpread). It allows the creator to specify the proportion of the\ncollateral that should be provided by the two parties. Each get an invitation to contribute a stated\namount of collateral for a particular position.", "mimetype": "text/plain", "start_char_idx": 1014, "end_char_idx": 1438, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4": {"__data__": {"id_": "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d27f3e25-2993-41e5-bf66-9eacfeccb060", "node_type": "1", "metadata": {}, "hash": "aa2ae77f7300d5cbd691bca996b6bf5d46816a73c1dc91de27c827187a074519", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ed538d4-ea2c-4486-9bb6-a7795e0f5472", "node_type": "1", "metadata": {}, "hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "These options are settled financially. There is no requirement that the original purchaser have\nownership of the underlying asset at the start, and the beneficiaries shouldn't expect to take\ndelivery at closing.\n\n## Issuers\n\nThe Strike and Collateral currencies are often the same, however these contracts decouple the\ncurrencies. You can have, for example, a spread based on APPL stock (`Underlying`), with the stock\nprice in USD (`Strike`) where the contract pays out in JPY (`Collateral`).", "mimetype": "text/plain", "start_char_idx": 1440, "end_char_idx": 1932, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8ed538d4-ea2c-4486-9bb6-a7795e0f5472": {"__data__": {"id_": "8ed538d4-ea2c-4486-9bb6-a7795e0f5472", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4", "node_type": "1", "metadata": {}, "hash": "3c3ceb04e97af42836b2ac38bc5635a7e0224f4570c8a7717a87e10bd1001374", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2905762-b558-4951-b33d-a9d65b9f8756", "node_type": "1", "metadata": {}, "hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The issuerKeywordRecord specifies issuers for three keywords: Underlying, Strike, and Collateral.", "mimetype": "text/plain", "start_char_idx": 1934, "end_char_idx": 2031, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2905762-b558-4951-b33d-a9d65b9f8756": {"__data__": {"id_": "b2905762-b558-4951-b33d-a9d65b9f8756", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ed538d4-ea2c-4486-9bb6-a7795e0f5472", "node_type": "1", "metadata": {}, "hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f", "node_type": "1", "metadata": {}, "hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The asset whose eventual value determines the payouts uses `Underlying`. This is often a fungible\n  currency, but doesn't have to be. It would be perfectly valid to have a call spread contract on\n  the value of a \"Superior Magic Sword\", as long as there was a price oracle to determine its price\n  at the expiration time.\n- The original deposit and the payout use the `Collateral` issuer.\n- `Strike` amounts are used for the price oracle's quote as to the value of the Underlying, as", "mimetype": "text/plain", "start_char_idx": 2033, "end_char_idx": 2518, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f": {"__data__": {"id_": "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2905762-b558-4951-b33d-a9d65b9f8756", "node_type": "1", "metadata": {}, "hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e9d9586-9336-4f14-b259-1bbf838814dd", "node_type": "1", "metadata": {}, "hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "well as the strike prices in the terms.", "mimetype": "text/plain", "start_char_idx": 2521, "end_char_idx": 2560, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e9d9586-9336-4f14-b259-1bbf838814dd": {"__data__": {"id_": "7e9d9586-9336-4f14-b259-1bbf838814dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f", "node_type": "1", "metadata": {}, "hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22eef47b-59bb-4a7f-ba88-90731f72a5cf", "node_type": "1", "metadata": {}, "hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Terms\n\nThe terms include `{ timer, underlyingAmount, expiration, priceAuthority, strikePrice1,\nstrikePrice2, settlementAmount }`.", "mimetype": "text/plain", "start_char_idx": 2562, "end_char_idx": 2694, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22eef47b-59bb-4a7f-ba88-90731f72a5cf": {"__data__": {"id_": "22eef47b-59bb-4a7f-ba88-90731f72a5cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e9d9586-9336-4f14-b259-1bbf838814dd", "node_type": "1", "metadata": {}, "hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a3bc5a7-c869-49c4-8ffb-e573c923e297", "node_type": "1", "metadata": {}, "hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `timer` is a [timer](/reference/repl/timerServices), and must be recognized by `priceAuthority`.\n- `expiration` is a time recognized by the `timer`.\n- `underlyingAmount` is passed to `priceAuthority`. It could be an NFT or a fungible amount.\n- `strikePrice2` must be greater than `strikePrice1`.\n- `settlementAmount` is the amount deposited by the creator and split between the holders of the\n  options. It uses Collateral.", "mimetype": "text/plain", "start_char_idx": 2696, "end_char_idx": 3121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a3bc5a7-c869-49c4-8ffb-e573c923e297": {"__data__": {"id_": "7a3bc5a7-c869-49c4-8ffb-e573c923e297", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22eef47b-59bb-4a7f-ba88-90731f72a5cf", "node_type": "1", "metadata": {}, "hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3078f058-81c8-4ce7-a448-055ff161b282", "node_type": "1", "metadata": {}, "hash": "777fa25a179f2272bc19cc8c18cc16e1d25dc14d82a4b22f6c17e6087d9690e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "options. It uses Collateral.\n- `priceAuthority` is an oracle that has a timer so it can respond to requests for prices as of a\n  stated time. After the deadline, it will issue a PriceQuote giving the value of the underlying\n  asset in the strike currency.", "mimetype": "text/plain", "start_char_idx": 3093, "end_char_idx": 3348, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3078f058-81c8-4ce7-a448-055ff161b282": {"__data__": {"id_": "3078f058-81c8-4ce7-a448-055ff161b282", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a3bc5a7-c869-49c4-8ffb-e573c923e297", "node_type": "1", "metadata": {}, "hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f56f8130-999f-460a-b021-f4efa789e3bc", "node_type": "1", "metadata": {}, "hash": "517fa6e5044b1de9f364c633dbd5ec8586d335dcc475e67e3907b653ccf9ad26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/contracts/test-callSpread.js#startInstance\n\n## Creating the Options\n\nThe terms specify all the details of the options. However, the options are not handed out until the\ncreator provides the collateral that will make them valuable. The creatorInvitation has\ncustomProperties including the amounts of the two options: `longAmount` and `shortAmount`.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#invitationDetails", "mimetype": "text/plain", "start_char_idx": 3350, "end_char_idx": 3789, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f56f8130-999f-460a-b021-f4efa789e3bc": {"__data__": {"id_": "f56f8130-999f-460a-b021-f4efa789e3bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3078f058-81c8-4ce7-a448-055ff161b282", "node_type": "1", "metadata": {}, "hash": "777fa25a179f2272bc19cc8c18cc16e1d25dc14d82a4b22f6c17e6087d9690e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "195c9ee9-c6b2-4786-b7a2-b7698136842b", "node_type": "1", "metadata": {}, "hash": "abd090f49c90f191bd26d698e71b943300080fb4178b75916ea3bfb69c322dae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The creator uses these option amounts to create an offer that ensures that they will get the two\noptions in exchange for the funds. The proposal describes the desired options and provided\ncollateral. When the offer is made, a payout is returned containing the two option positions. The\npositions are invitations which can be exercised for free, and provide the option payouts under the\nkeyword `Collateral`.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#creatorInvitation\n\n## Validating the Options", "mimetype": "text/plain", "start_char_idx": 3791, "end_char_idx": 4295, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "195c9ee9-c6b2-4786-b7a2-b7698136842b": {"__data__": {"id_": "195c9ee9-c6b2-4786-b7a2-b7698136842b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f56f8130-999f-460a-b021-f4efa789e3bc", "node_type": "1", "metadata": {}, "hash": "517fa6e5044b1de9f364c633dbd5ec8586d335dcc475e67e3907b653ccf9ad26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21b79135-8141-41d4-ba9d-7e4792adf897", "node_type": "1", "metadata": {}, "hash": "d5c3457aa951f33c1baff35c48268ce4f87e5942f2ae1e8d9ecc35d776617f84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The options returned by the contract are Zoe invitations, so their values and terms can be verified\nby asking for the contract terms. This makes it possible to sell the options because a prospective\npurchaser will be able to inspect the value. The prospective purchaser can see that the\npriceAuthority is one they are willing to rely on and can verify the underlying amount. They can\ncheck that the expiration matches their expectations (here `3n` is a small integer suitable for a", "mimetype": "text/plain", "start_char_idx": 4297, "end_char_idx": 4778, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "21b79135-8141-41d4-ba9d-7e4792adf897": {"__data__": {"id_": "21b79135-8141-41d4-ba9d-7e4792adf897", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "195c9ee9-c6b2-4786-b7a2-b7698136842b", "node_type": "1", "metadata": {}, "hash": "abd090f49c90f191bd26d698e71b943300080fb4178b75916ea3bfb69c322dae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d79f6f3d-d55c-4d07-8ddb-d7db38d902da", "node_type": "1", "metadata": {}, "hash": "2ed54c80fafee4bc523dd354970345a9aceb96c9f2fc61b6d1883129fdd6112f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "manual timer in a test; in actual use, it might represent block height or wall clock time.) The\nstrike prices and settlement amount are likewise visible.", "mimetype": "text/plain", "start_char_idx": 4779, "end_char_idx": 4932, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d79f6f3d-d55c-4d07-8ddb-d7db38d902da": {"__data__": {"id_": "d79f6f3d-d55c-4d07-8ddb-d7db38d902da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21b79135-8141-41d4-ba9d-7e4792adf897", "node_type": "1", "metadata": {}, "hash": "d5c3457aa951f33c1baff35c48268ce4f87e5942f2ae1e8d9ecc35d776617f84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cb27a14-39a6-462d-b60a-c271226e6cd6", "node_type": "1", "metadata": {}, "hash": "b3f9176064a429ab4c44306e49f91948440b6d706bdd5c04f1b3ccaf0151f1c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/contracts/test-callSpread.js#verifyTerms\n\n## Options can be Exercised Independently\n\nThe contract doesn't rely on the options being exercised before the specified close. If either\noption is exercised after the closing price is determined, the payouts will still be available. The\ntwo options make their payment available as soon after exercise as the price is available, and\nneither waits for the other to exercise.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#bobExercise", "mimetype": "text/plain", "start_char_idx": 4934, "end_char_idx": 5435, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2cb27a14-39a6-462d-b60a-c271226e6cd6": {"__data__": {"id_": "2cb27a14-39a6-462d-b60a-c271226e6cd6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_fundedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "ac775a2c5d62951df774b6d0a67f5295e00fefcf0d7980915a191eaeb56f205a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d79f6f3d-d55c-4d07-8ddb-d7db38d902da", "node_type": "1", "metadata": {}, "hash": "2ed54c80fafee4bc523dd354970345a9aceb96c9f2fc61b6d1883129fdd6112f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There is a\n[unit test](https://github.com/Agoric/agoric-sdk/blob/0b44d486390768fbf828e64ce52c99192f67ada0/packages/zoe/test/unitTests/contracts/test-callSpread.js#L440)\nshowing how you could offer these options for sale using the SimpleExchange contract.", "mimetype": "text/plain", "start_char_idx": 5437, "end_char_idx": 5691, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff46ed0a-6a2d-484b-aa34-3dd3f54865c2": {"__data__": {"id_": "ff46ed0a-6a2d-484b-aa34-3dd3f54865c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce1cbec8-2232-4bc8-b845-84e891a136c0", "node_type": "1", "metadata": {}, "hash": "93f56a31093002cbcd9546c911c29fd5e7d09895d54e0cdf00105d38158a1a9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Example Zoe Contracts\n\n<Zoe-Version/>\n\nWhile Zoe provides the means to build custom smart contracts, there is a good chance you will\nwant to use one that follows a commonly-used structure. Therefore, we currently provide several\npre-built example contracts that can be imported and run on Zoe. Note that none of the contracts described below are automatically deployed on-chain.\n\n## Oracle Contracts", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce1cbec8-2232-4bc8-b845-84e891a136c0": {"__data__": {"id_": "ce1cbec8-2232-4bc8-b845-84e891a136c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff46ed0a-6a2d-484b-aa34-3dd3f54865c2", "node_type": "1", "metadata": {}, "hash": "bf34ef75645ebcb2f787cc15433e2929c4616f1398fd81cf571f9fa39dd72fb6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0faea553-65eb-4f30-a7f2-cc2f161bf21e", "node_type": "1", "metadata": {}, "hash": "4b5c2cda61223a7ee628e6d28b11654b89ba6ccba4c9f66673cb901b869b4273", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                                      | Description                                                                                                                          |\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------ |", "mimetype": "text/plain", "start_char_idx": 403, "end_char_idx": 772, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0faea553-65eb-4f30-a7f2-cc2f161bf21e": {"__data__": {"id_": "0faea553-65eb-4f30-a7f2-cc2f161bf21e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce1cbec8-2232-4bc8-b845-84e891a136c0", "node_type": "1", "metadata": {}, "hash": "93f56a31093002cbcd9546c911c29fd5e7d09895d54e0cdf00105d38158a1a9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9612500-f561-47c1-8d07-18ab4264e307", "node_type": "1", "metadata": {}, "hash": "dcdac75e507b7c96f8dd81ead03ce07b379f02f9e4a30d1b56ab507e984fb4a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Oracle Query](./oracle)                      | A low-level oracle contract for querying [Chainlink](https://docs.chain.link/docs/request-and-receive-data#config) or other oracles. |\n| [PriceAuthority](/guides/zoe/price-authority) | To use an price oracle in your own contract, we recommend using the `priceAuthority` higher-level abstraction.                       |", "mimetype": "text/plain", "start_char_idx": 773, "end_char_idx": 1142, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9612500-f561-47c1-8d07-18ab4264e307": {"__data__": {"id_": "c9612500-f561-47c1-8d07-18ab4264e307", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0faea553-65eb-4f30-a7f2-cc2f161bf21e", "node_type": "1", "metadata": {}, "hash": "4b5c2cda61223a7ee628e6d28b11654b89ba6ccba4c9f66673cb901b869b4273", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c63f985-24cd-49e0-985d-6640e5a099e5", "node_type": "1", "metadata": {}, "hash": "8fbe98e73717ee8b2ef766fe8357ac96e80dde364badfae483cb7ab0df26c2a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## DeFi Contracts\n\nThese contracts create various sorts of financial instruments.", "mimetype": "text/plain", "start_char_idx": 1144, "end_char_idx": 1225, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c63f985-24cd-49e0-985d-6640e5a099e5": {"__data__": {"id_": "2c63f985-24cd-49e0-985d-6640e5a099e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9612500-f561-47c1-8d07-18ab4264e307", "node_type": "1", "metadata": {}, "hash": "dcdac75e507b7c96f8dd81ead03ce07b379f02f9e4a30d1b56ab507e984fb4a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68cb18b2-4326-4988-94c9-46da3fdd16b4", "node_type": "1", "metadata": {}, "hash": "76d20da658c81ad6dbd9c9653356f56a9a089d1f0c2b792502f7a8a5c23ad7af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                                 | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |", "mimetype": "text/plain", "start_char_idx": 1227, "end_char_idx": 1735, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68cb18b2-4326-4988-94c9-46da3fdd16b4": {"__data__": {"id_": "68cb18b2-4326-4988-94c9-46da3fdd16b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c63f985-24cd-49e0-985d-6640e5a099e5", "node_type": "1", "metadata": {}, "hash": "8fbe98e73717ee8b2ef766fe8357ac96e80dde364badfae483cb7ab0df26c2a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "311edd6e-cf97-455b-b4c7-903cf38014d4", "node_type": "1", "metadata": {}, "hash": "6ee51bf016a5c7bf6cbc10126aa9c22e58577f60d900caf6c0e57f1016d50d03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| ---------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 1736, "end_char_idx": 2244, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "311edd6e-cf97-455b-b4c7-903cf38014d4": {"__data__": {"id_": "311edd6e-cf97-455b-b4c7-903cf38014d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68cb18b2-4326-4988-94c9-46da3fdd16b4", "node_type": "1", "metadata": {}, "hash": "76d20da658c81ad6dbd9c9653356f56a9a089d1f0c2b792502f7a8a5c23ad7af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc8a1475-248f-4ae3-9b89-733f3efe34c1", "node_type": "1", "metadata": {}, "hash": "f51eb3514c00e9f6c1be8dfccda38245066b8dbee1ae5e924b99e20fda91e07a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Vault](./vault)                         | The Vault is the primary mechanism for making IST (the Agoric stable-value currency) available to participants in the economy. It does this by issuing loans against supported types of collateral. The creator of the contract can add new types of collateral. (This is expected to be under the control of on-chain governance after the initial currencies are defined when the contract starts up.)                                                                      |", "mimetype": "text/plain", "start_char_idx": 2245, "end_char_idx": 2753, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc8a1475-248f-4ae3-9b89-733f3efe34c1": {"__data__": {"id_": "fc8a1475-248f-4ae3-9b89-733f3efe34c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "311edd6e-cf97-455b-b4c7-903cf38014d4", "node_type": "1", "metadata": {}, "hash": "6ee51bf016a5c7bf6cbc10126aa9c22e58577f60d900caf6c0e57f1016d50d03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01b9eb8f-5150-46bc-8001-ae2d7e0fa132", "node_type": "1", "metadata": {}, "hash": "a3dee7f2adf056e90aa20fca4d6c327aa9a89ce8dcfa804073cfd461db6e6049", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Loan](./loan)                           | A basic collateralized loan contract.                                                                                                                                                                                                                                                                                                                                                                                                                                         |", "mimetype": "text/plain", "start_char_idx": 2754, "end_char_idx": 3262, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01b9eb8f-5150-46bc-8001-ae2d7e0fa132": {"__data__": {"id_": "01b9eb8f-5150-46bc-8001-ae2d7e0fa132", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc8a1475-248f-4ae3-9b89-733f3efe34c1", "node_type": "1", "metadata": {}, "hash": "f51eb3514c00e9f6c1be8dfccda38245066b8dbee1ae5e924b99e20fda91e07a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d172f9b-d05f-495d-a2ce-5e145c97eaba", "node_type": "1", "metadata": {}, "hash": "bac95cbd5748dfd3bf0f994bd85d54463aeb496368c87b834d2f98c441cfe87a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Funded Call Spread](./fundedCallSpread) | Creates a pair of fully collateralized call spread options. They are ERTP assets and can be used as such in other contracts. This contract has two variants, which affect how invitations are created. This version is fully funded by the creator, who receives a matching pair of call spread options. They can be traded or sold separately.                                                                                                                               |", "mimetype": "text/plain", "start_char_idx": 3263, "end_char_idx": 3771, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d172f9b-d05f-495d-a2ce-5e145c97eaba": {"__data__": {"id_": "2d172f9b-d05f-495d-a2ce-5e145c97eaba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01b9eb8f-5150-46bc-8001-ae2d7e0fa132", "node_type": "1", "metadata": {}, "hash": "a3dee7f2adf056e90aa20fca4d6c327aa9a89ce8dcfa804073cfd461db6e6049", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "044bd892-0028-4881-a951-7a5e3ad321c8", "node_type": "1", "metadata": {}, "hash": "0a2532828762dc874403c8caffd38eef06e3c286dfa29c50c12fa6ddc8479ca3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Priced Call Spread](./pricedCallSpread) | Creates a pair of fully collateralized call spread options. They are ERTP assets and can be used as such in other contracts. This contract has two variants, which affect how invitations are created. In this version, the creator requests a pair of invitations. Each one lets the holder obtain one of the positions by providing a started portion of the collateral. This version is useful for a market maker who finds pairs of participants with matching interests. |", "mimetype": "text/plain", "start_char_idx": 3772, "end_char_idx": 4280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "044bd892-0028-4881-a951-7a5e3ad321c8": {"__data__": {"id_": "044bd892-0028-4881-a951-7a5e3ad321c8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d172f9b-d05f-495d-a2ce-5e145c97eaba", "node_type": "1", "metadata": {}, "hash": "bac95cbd5748dfd3bf0f994bd85d54463aeb496368c87b834d2f98c441cfe87a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb5ecee-134b-4493-ab05-9b5c1fe476ae", "node_type": "1", "metadata": {}, "hash": "a5b935c491646bee40a46d7856a701ab84c3124bcb725e2cc41daa8ddc5fffac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Covered Call](./covered-call)           | Creates a call option, which is the right to buy an underlying asset.                                                                                                                                                                                                                                                                                                                                                                                                         |", "mimetype": "text/plain", "start_char_idx": 4281, "end_char_idx": 4789, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dcb5ecee-134b-4493-ab05-9b5c1fe476ae": {"__data__": {"id_": "dcb5ecee-134b-4493-ab05-9b5c1fe476ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "044bd892-0028-4881-a951-7a5e3ad321c8", "node_type": "1", "metadata": {}, "hash": "0a2532828762dc874403c8caffd38eef06e3c286dfa29c50c12fa6ddc8479ca3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76e48a48-c6f8-4943-bf3a-ecd803a5e835", "node_type": "1", "metadata": {}, "hash": "9aea42471a203c7383e372d8918957fc03838683f7cf245c13b4143ff3e2f8a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [OTC Desk](./otc-desk)                   | A contract for giving quotes that can be exercised. The quotes are guaranteed to be exercisable because they are actually options with escrowed underlying assets.                                                                                                                                                                                                                                                                                                            |", "mimetype": "text/plain", "start_char_idx": 4790, "end_char_idx": 5298, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76e48a48-c6f8-4943-bf3a-ecd803a5e835": {"__data__": {"id_": "76e48a48-c6f8-4943-bf3a-ecd803a5e835", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb5ecee-134b-4493-ab05-9b5c1fe476ae", "node_type": "1", "metadata": {}, "hash": "a5b935c491646bee40a46d7856a701ab84c3124bcb725e2cc41daa8ddc5fffac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c", "node_type": "1", "metadata": {}, "hash": "014a2bbb3ba6bff86ff75fbbd56e73f7305fb7b2fdb0422ecf5aad17a8c96ada", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AMM (Automatic Market Maker) Contract", "mimetype": "text/plain", "start_char_idx": 5300, "end_char_idx": 5340, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c": {"__data__": {"id_": "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76e48a48-c6f8-4943-bf3a-ecd803a5e835", "node_type": "1", "metadata": {}, "hash": "9aea42471a203c7383e372d8918957fc03838683f7cf245c13b4143ff3e2f8a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e49a7b40-1d1e-4adc-b42f-96b41b156160", "node_type": "1", "metadata": {}, "hash": "b15f5386c5cd4b8c9849219bd5a20b0c07cc0d5781b02f2f555887da39ab6701", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                                    | Description                                                                                                                                                                                                                                                                                                                               |", "mimetype": "text/plain", "start_char_idx": 5342, "end_char_idx": 5721, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e49a7b40-1d1e-4adc-b42f-96b41b156160": {"__data__": {"id_": "e49a7b40-1d1e-4adc-b42f-96b41b156160", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c", "node_type": "1", "metadata": {}, "hash": "014a2bbb3ba6bff86ff75fbbd56e73f7305fb7b2fdb0422ecf5aad17a8c96ada", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdb12170-732d-421e-aca6-2349db6900e7", "node_type": "1", "metadata": {}, "hash": "2d05803819fb465c2a90f2d3dcc59a3e3cd46ef83fdb0dfc19e1ddc3d6e8aa47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| ------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 5722, "end_char_idx": 6101, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdb12170-732d-421e-aca6-2349db6900e7": {"__data__": {"id_": "fdb12170-732d-421e-aca6-2349db6900e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e49a7b40-1d1e-4adc-b42f-96b41b156160", "node_type": "1", "metadata": {}, "hash": "b15f5386c5cd4b8c9849219bd5a20b0c07cc0d5781b02f2f555887da39ab6701", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b", "node_type": "1", "metadata": {}, "hash": "8566be034701f636c32a94eb21e1cbb33037a882df6163427d6e502033883829", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [ConstantProduct AMM](./constantProductAMM) | An automated market maker with multiple liquidity pools that can trade between any pair of funded currencies. It charges a poolFee (added to the liquidity pools) and a protocolFee (set aside for the benefit of the Agoric economy). These fees are subject to change by votes controlled by and made visible by the governance system. |", "mimetype": "text/plain", "start_char_idx": 6102, "end_char_idx": 6481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b": {"__data__": {"id_": "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdb12170-732d-421e-aca6-2349db6900e7", "node_type": "1", "metadata": {}, "hash": "2d05803819fb465c2a90f2d3dcc59a3e3cd46ef83fdb0dfc19e1ddc3d6e8aa47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a74232e7-5df6-42e0-94db-184db249dd4f", "node_type": "1", "metadata": {}, "hash": "92a00b6f3cd625a35403dbbd27d1ef00d681f450a7fbfbdab2e1d1b3a5dc64ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Generic Sales/Trading Contracts\n\nThese contracts involve trading or selling ERTP digital assets.", "mimetype": "text/plain", "start_char_idx": 6483, "end_char_idx": 6582, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a74232e7-5df6-42e0-94db-184db249dd4f": {"__data__": {"id_": "a74232e7-5df6-42e0-94db-184db249dd4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b", "node_type": "1", "metadata": {}, "hash": "8566be034701f636c32a94eb21e1cbb33037a882df6163427d6e502033883829", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "098c978a-3c61-4951-86a6-79b0d58b75a5", "node_type": "1", "metadata": {}, "hash": "a5fdc744726c1cf52f9dca82decbd80e03f25fa940989402dc7b58c31edfbcc8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                                       | Description                                                                                                                                                                                                            |", "mimetype": "text/plain", "start_char_idx": 6584, "end_char_idx": 6851, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "098c978a-3c61-4951-86a6-79b0d58b75a5": {"__data__": {"id_": "098c978a-3c61-4951-86a6-79b0d58b75a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a74232e7-5df6-42e0-94db-184db249dd4f", "node_type": "1", "metadata": {}, "hash": "92a00b6f3cd625a35403dbbd27d1ef00d681f450a7fbfbdab2e1d1b3a5dc64ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b65b881e-6752-4d94-a964-c750e73fdcaa", "node_type": "1", "metadata": {}, "hash": "93ad9d26862f77dd8bf8acafc4bfde7cc2397e103df22f340db3d7251339dc8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| ---------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 6852, "end_char_idx": 7119, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b65b881e-6752-4d94-a964-c750e73fdcaa": {"__data__": {"id_": "b65b881e-6752-4d94-a964-c750e73fdcaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "098c978a-3c61-4951-86a6-79b0d58b75a5", "node_type": "1", "metadata": {}, "hash": "a5fdc744726c1cf52f9dca82decbd80e03f25fa940989402dc7b58c31edfbcc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8cff053-c01a-4754-99b1-359faafc4f6e", "node_type": "1", "metadata": {}, "hash": "2626d3f4ff8f57705c57121869839734f48875924d65133104f46e12105b0ecb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Sell Items](./sell-items)                     | A generic sales contract, mostly used for selling NFTs for money.                                                                                                                                                      |", "mimetype": "text/plain", "start_char_idx": 7120, "end_char_idx": 7387, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8cff053-c01a-4754-99b1-359faafc4f6e": {"__data__": {"id_": "c8cff053-c01a-4754-99b1-359faafc4f6e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b65b881e-6752-4d94-a964-c750e73fdcaa", "node_type": "1", "metadata": {}, "hash": "93ad9d26862f77dd8bf8acafc4bfde7cc2397e103df22f340db3d7251339dc8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d027edc2-734d-45fa-b79b-9460cba74748", "node_type": "1", "metadata": {}, "hash": "1bb2a35165d4f72a69da5525950b37a247afba2864cc1bc7708a64f21df539a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Atomic Swap](./atomic-swap)                   | A basic trade of digital assets between two parties.                                                                                                                                                                   |", "mimetype": "text/plain", "start_char_idx": 7388, "end_char_idx": 7655, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d027edc2-734d-45fa-b79b-9460cba74748": {"__data__": {"id_": "d027edc2-734d-45fa-b79b-9460cba74748", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8cff053-c01a-4754-99b1-359faafc4f6e", "node_type": "1", "metadata": {}, "hash": "2626d3f4ff8f57705c57121869839734f48875924d65133104f46e12105b0ecb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c7c05ee-721a-407d-82ba-cf2ab84c3841", "node_type": "1", "metadata": {}, "hash": "f76bdb191f041b1c050c66591cde550da28846e6f4be65cfcb2ebb4e28421c65", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Barter Exchange](./barter-exchange)           | An exchange with an order book letting all kinds of goods to be offered for explicit barter swaps.                                                                                                                     |", "mimetype": "text/plain", "start_char_idx": 7656, "end_char_idx": 7923, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7c7c05ee-721a-407d-82ba-cf2ab84c3841": {"__data__": {"id_": "7c7c05ee-721a-407d-82ba-cf2ab84c3841", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d027edc2-734d-45fa-b79b-9460cba74748", "node_type": "1", "metadata": {}, "hash": "1bb2a35165d4f72a69da5525950b37a247afba2864cc1bc7708a64f21df539a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44b2f995-f555-494e-afe2-113038e152d6", "node_type": "1", "metadata": {}, "hash": "ba69dde2738a4bf744a2cacd785057cefa7fb84506bcf69e104d658bc9e421f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Second-Price Auction](./second-price-auction) | An auction in which the highest bidder wins and pays the second-highest bid. This version doesn't conceal the bids (an essential aspect of second price auctions). Therefore, **it should not be used in production**. |", "mimetype": "text/plain", "start_char_idx": 7924, "end_char_idx": 8191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44b2f995-f555-494e-afe2-113038e152d6": {"__data__": {"id_": "44b2f995-f555-494e-afe2-113038e152d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c7c05ee-721a-407d-82ba-cf2ab84c3841", "node_type": "1", "metadata": {}, "hash": "f76bdb191f041b1c050c66591cde550da28846e6f4be65cfcb2ebb4e28421c65", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71651906-5549-42ec-bc2a-57ecbf05ae19", "node_type": "1", "metadata": {}, "hash": "fe301e9ad0e4c07fc0175515b2cf7ccc8636796cec9c85525a25457910c17a4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Simple Exchange](./simple-exchange)           | A basic exchange with an order book for one asset, priced in a second asset.                                                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 8192, "end_char_idx": 8459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71651906-5549-42ec-bc2a-57ecbf05ae19": {"__data__": {"id_": "71651906-5549-42ec-bc2a-57ecbf05ae19", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44b2f995-f555-494e-afe2-113038e152d6", "node_type": "1", "metadata": {}, "hash": "ba69dde2738a4bf744a2cacd785057cefa7fb84506bcf69e104d658bc9e421f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba2cd297-2833-435b-a560-0a609f583cf1", "node_type": "1", "metadata": {}, "hash": "85412a218ed3f87ef0fa90d3e4e970a5c61d327686c0aca9dd830b6b9968dced", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Governance Contract\n\n| Contract                           | Description                                                                           |\n| ---------------------------------- | ------------------------------------------------------------------------------------- |\n| [Escrow To Vote](./escrow-to-vote) | A coin voting contract in which votes are weighted by the escrowed governance tokens. |\n\n## Minting Contracts", "mimetype": "text/plain", "start_char_idx": 8461, "end_char_idx": 8887, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba2cd297-2833-435b-a560-0a609f583cf1": {"__data__": {"id_": "ba2cd297-2833-435b-a560-0a609f583cf1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71651906-5549-42ec-bc2a-57ecbf05ae19", "node_type": "1", "metadata": {}, "hash": "fe301e9ad0e4c07fc0175515b2cf7ccc8636796cec9c85525a25457910c17a4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80e7c181-e67e-4ef6-be38-c865f737a055", "node_type": "1", "metadata": {}, "hash": "4ca31d4d7a73a7a92f61c96f6d37789474eaf79312b1d93cee2aca9590c531c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                                   | Description                                                                  |\n| ------------------------------------------ | ---------------------------------------------------------------------------- |\n| [Mint Payments](./mint-payments)           | An example of minting fungible tokens.                                       |\n| [Mint and Sell NFTs](./mint-and-sell-nfts) | A contract that mints NFTs and sells them through a separate sales contract. |", "mimetype": "text/plain", "start_char_idx": 8889, "end_char_idx": 9392, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80e7c181-e67e-4ef6-be38-c865f737a055": {"__data__": {"id_": "80e7c181-e67e-4ef6-be38-c865f737a055", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba2cd297-2833-435b-a560-0a609f583cf1", "node_type": "1", "metadata": {}, "hash": "85412a218ed3f87ef0fa90d3e4e970a5c61d327686c0aca9dd830b6b9968dced", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70e92f09-dfaf-42d6-a466-2c3830b5b56e", "node_type": "1", "metadata": {}, "hash": "a5b7243659b92c1e5c0f50f7c3c0940566672cb316e8a9b7523dad16e2583831", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Miscellaneous Contracts", "mimetype": "text/plain", "start_char_idx": 9394, "end_char_idx": 9420, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70e92f09-dfaf-42d6-a466-2c3830b5b56e": {"__data__": {"id_": "70e92f09-dfaf-42d6-a466-2c3830b5b56e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80e7c181-e67e-4ef6-be38-c865f737a055", "node_type": "1", "metadata": {}, "hash": "4ca31d4d7a73a7a92f61c96f6d37789474eaf79312b1d93cee2aca9590c531c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7bc2531-fe41-4370-adee-a225c180c443", "node_type": "1", "metadata": {}, "hash": "77e4b6269a38541cc9f083eb5b966dbdca282c0fc8d687b78a8a5f12c55a51c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Contract                               | Description                                                                                                                                                                             |\n| -------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 9422, "end_char_idx": 9879, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7bc2531-fe41-4370-adee-a225c180c443": {"__data__": {"id_": "d7bc2531-fe41-4370-adee-a225c180c443", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_index.md", "node_type": "4", "metadata": {}, "hash": "53ababf5d3c849e736dd963c3db4b07a1d1011c33f726f1e032ee8e405444460", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70e92f09-dfaf-42d6-a466-2c3830b5b56e", "node_type": "1", "metadata": {}, "hash": "a5b7243659b92c1e5c0f50f7c3c0940566672cb316e8a9b7523dad16e2583831", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Use Object](./use-obj-example)        | An example of how you might associate the ability to take an action with ownership of a particular digital asset. In this case, you can color a pixel if you own the NFT for the pixel. |\n| [Automatic Refund](./automatic-refund) | A trivial contract that gives the user back what they put in.                                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 9880, "end_char_idx": 10337, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50c252e9-b13d-43d7-8004-79688394c142": {"__data__": {"id_": "50c252e9-b13d-43d7-8004-79688394c142", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51b26995-073f-4e51-b6ab-b3bc0450b44b", "node_type": "1", "metadata": {}, "hash": "efa71768f66d34563375ef6b18ffadbb676f58e3bb2f7ea0f59ee7a5d30a7cb4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Loan Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/loan/index.js) (Last updated: Nov 23, 2021)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 333, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51b26995-073f-4e51-b6ab-b3bc0450b44b": {"__data__": {"id_": "51b26995-073f-4e51-b6ab-b3bc0450b44b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50c252e9-b13d-43d7-8004-79688394c142", "node_type": "1", "metadata": {}, "hash": "a84cd682dc53cfbfb34843d47a3e8d9b58512d95a7237abcefa868fe77ceb390", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5", "node_type": "1", "metadata": {}, "hash": "4d000a93e0cd1151ff95d56cacda774ce069659b15fa49ba0b5be06340c29510", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The basic loan contract has two parties, a _lender_ and a _borrower_.\nIt lets the borrower add collateral of a particular brand and get a\nloan of another brand. The collateral (also known as margin) must be a\ncertain percentage of the loan value (the default is 150%). The exact\npercentage required is defined by the Maintenance Margin Requirement\n(`mmr`) in the terms of the contract.", "mimetype": "text/plain", "start_char_idx": 335, "end_char_idx": 720, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5": {"__data__": {"id_": "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51b26995-073f-4e51-b6ab-b3bc0450b44b", "node_type": "1", "metadata": {}, "hash": "efa71768f66d34563375ef6b18ffadbb676f58e3bb2f7ea0f59ee7a5d30a7cb4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e1c54cd-089d-44ed-9270-25f1b4b9fc29", "node_type": "1", "metadata": {}, "hash": "e5000b6d219099ea59c77ca8ff1a141c1f3db9f18c3dd1f8c08be5872033c5f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The loan does not have a distinct end time. Rather, if the\nvalue of the collateral changes such that insufficient margin is\nprovided, the collateral is liquidated, and the loan is closed. At any\ntime, the borrower can add collateral or repay the loan with interest,\nclosing the loan.\n\nNote that all collateral must be of the same brand and all of the\nloaned amount and interest must be of the same (separate) brand.\n\n## Terms", "mimetype": "text/plain", "start_char_idx": 722, "end_char_idx": 1147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e1c54cd-089d-44ed-9270-25f1b4b9fc29": {"__data__": {"id_": "4e1c54cd-089d-44ed-9270-25f1b4b9fc29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5", "node_type": "1", "metadata": {}, "hash": "4d000a93e0cd1151ff95d56cacda774ce069659b15fa49ba0b5be06340c29510", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6819f3a0-2afc-4d2b-b995-a70719cf7a60", "node_type": "1", "metadata": {}, "hash": "698b382643462fb84d4675f49e3136cfb45ede1f407f394f75d26660efde6335", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `mmr` (default = 150) - the Maintenance Margin Requirement, in\n  percent. The default is 150, meaning that collateral should be\n  worth at least 150% of the loan. If the value of the collateral\n  drops below `mmr`, liquidation can occur.\n- [`priceAuthority`](/guides/zoe/price-authority) - used for getting the current value of\n  collateral and setting liquidation triggers.\n- `autoswapInstance` - The running contract instance for\n  [AMM](./constantProductAMM) installation. The `publicFacet`", "mimetype": "text/plain", "start_char_idx": 1149, "end_char_idx": 1644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6819f3a0-2afc-4d2b-b995-a70719cf7a60": {"__data__": {"id_": "6819f3a0-2afc-4d2b-b995-a70719cf7a60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e1c54cd-089d-44ed-9270-25f1b4b9fc29", "node_type": "1", "metadata": {}, "hash": "e5000b6d219099ea59c77ca8ff1a141c1f3db9f18c3dd1f8c08be5872033c5f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4b96ec6-8966-479c-a828-1b57660e5caf", "node_type": "1", "metadata": {}, "hash": "61d1e8785e3ca4039d20841fe07fae21f42fb068b882b28b3f20b9dc1d69ef90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "of the instance is used to make an invitation to sell the\n  collateral on liquidation.\n- `periodNotifier` - the [notifier](/guides/js-programming/notifiers) used for notifications\n  that a period has passed, on which compound interest will be\n  calculated using the `interestRate`.\n- `interestRate` - the rate in [basis points](https://www.investopedia.com/terms/b/basispoint.asp) that will be multiplied\n  with the debt on every period to compound interest.", "mimetype": "text/plain", "start_char_idx": 1647, "end_char_idx": 2105, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4b96ec6-8966-479c-a828-1b57660e5caf": {"__data__": {"id_": "f4b96ec6-8966-479c-a828-1b57660e5caf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6819f3a0-2afc-4d2b-b995-a70719cf7a60", "node_type": "1", "metadata": {}, "hash": "698b382643462fb84d4675f49e3136cfb45ede1f407f394f75d26660efde6335", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22dff48d-07f8-4bba-a71b-290e191e2646", "node_type": "1", "metadata": {}, "hash": "d8a158cb4a691c5c38473c1d27d0e14bedf504194ed4f24baaeb3f22a6e1f739", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `interestPeriod` - the period at which interest will be compounded.", "mimetype": "text/plain", "start_char_idx": 2106, "end_char_idx": 2175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22dff48d-07f8-4bba-a71b-290e191e2646": {"__data__": {"id_": "22dff48d-07f8-4bba-a71b-290e191e2646", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4b96ec6-8966-479c-a828-1b57660e5caf", "node_type": "1", "metadata": {}, "hash": "61d1e8785e3ca4039d20841fe07fae21f42fb068b882b28b3f20b9dc1d69ef90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e0f8b8e1-03bb-479f-afa2-fccb135f56a2", "node_type": "1", "metadata": {}, "hash": "d6a38a711d3d7ceaefa1da102a1df10799a94b4b2d794615fa428bea7613a5db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## IssuerKeywordRecord\n\nAll keyword records use the following, regardless of their role in\nthe contract:\n\n- Keyword: `Collateral` - The issuer/payment for the digital assets to be\n  escrowed as collateral.\n- Keyword: `Loan` - The issuer/payment for the digital assets to be loaned\n  out.\n\n## The Lender", "mimetype": "text/plain", "start_char_idx": 2177, "end_char_idx": 2479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0f8b8e1-03bb-479f-afa2-fccb135f56a2": {"__data__": {"id_": "e0f8b8e1-03bb-479f-afa2-fccb135f56a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22dff48d-07f8-4bba-a71b-290e191e2646", "node_type": "1", "metadata": {}, "hash": "d8a158cb4a691c5c38473c1d27d0e14bedf504194ed4f24baaeb3f22a6e1f739", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43530b1e-31b9-4855-9c82-51c3e2e49271", "node_type": "1", "metadata": {}, "hash": "84ec942da17739b999685a60e2ecf7b394c29a1aecbe05c453b82210a598824b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The lender puts up the amount to be loaned to the borrower, but has no\nfurther actions. The loan is ongoing until it is paid back entirely or\nliquidated, at which point the lender receives a payout. This means\nthe lender's payout will be in Loan-branded digital assets,\nnot Collateral-brand. (The only exception is if the scheduling\nof liquidation triggers with the `priceAuthority` results in a error. In\nthat case, we must give the collateral to the lender.\nThe borrower has already exited with their loan.)", "mimetype": "text/plain", "start_char_idx": 2481, "end_char_idx": 2990, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43530b1e-31b9-4855-9c82-51c3e2e49271": {"__data__": {"id_": "43530b1e-31b9-4855-9c82-51c3e2e49271", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0f8b8e1-03bb-479f-afa2-fccb135f56a2", "node_type": "1", "metadata": {}, "hash": "d6a38a711d3d7ceaefa1da102a1df10799a94b4b2d794615fa428bea7613a5db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18822bea-53e7-46e4-b27d-6719fd2b6b1c", "node_type": "1", "metadata": {}, "hash": "67b0926636c2d98238be548c44dab8ff2677eca02b71530aba52d307e242afa5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The lender will want the loan interest in addition to either their refund\nor the liquidation results. If the collateral price drops\nbefore liquidation, the total payout could be zero.\nTherefore, the lender cannot `want` anything in their proposal.\n\nThe lender must be able to exit on demand until borrowing occurs. If\nthe exit rule was `waived`, a borrower could hold on to their\ninvitation and effectively lock up the lender's escrowed loan amount\nforever.\n\n<<< @/../snippets/zoe/contracts/test-loan.js#lend", "mimetype": "text/plain", "start_char_idx": 2992, "end_char_idx": 3500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "18822bea-53e7-46e4-b27d-6719fd2b6b1c": {"__data__": {"id_": "18822bea-53e7-46e4-b27d-6719fd2b6b1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43530b1e-31b9-4855-9c82-51c3e2e49271", "node_type": "1", "metadata": {}, "hash": "84ec942da17739b999685a60e2ecf7b394c29a1aecbe05c453b82210a598824b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c2ccf9e-a37c-40f4-80c4-889ab77e90db", "node_type": "1", "metadata": {}, "hash": "6f594cb3f65f184f3033c33e2e08a86827778d831677a7d591bc7928f5e3d9c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Borrower\n\nThe borrower receives an invitation to join, makes an offer with Zoe\nescrowing their collateral, and receives their loan. The collateral is\nmoved to an internal seat called the `collateralSeat`, and the borrower seat\nis exited at this point so the borrower gets the payout of their loan.\nThe borrower also gets an object (`borrowFacet`) as their `offerResult` that\nlets them continue interacting with the contract.\n\n<<< @/../snippets/zoe/contracts/test-loan.js#borrow", "mimetype": "text/plain", "start_char_idx": 3502, "end_char_idx": 3986, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c2ccf9e-a37c-40f4-80c4-889ab77e90db": {"__data__": {"id_": "3c2ccf9e-a37c-40f4-80c4-889ab77e90db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18822bea-53e7-46e4-b27d-6719fd2b6b1c", "node_type": "1", "metadata": {}, "hash": "67b0926636c2d98238be548c44dab8ff2677eca02b71530aba52d307e242afa5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df15afd5-a501-4e7d-9300-7d95e4f8b23b", "node_type": "1", "metadata": {}, "hash": "8add0b58db05f9978e03c21ae082eb8fb419a8f05a59f1bcdb9f6087bfbee18c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once the loan starts, the borrower can repay the loan in its\nentirety at any time (at which point the lender receives the loan amount back plus\ninterest, and the contract closes), or add more collateral to prevent\nliquidation.\n\n<<< @/../snippets/zoe/contracts/test-loan.js#closeLoanInvitation\n\n<<< @/../snippets/zoe/contracts/test-loan.js#addCollateralInvitation\n\n## Contract Shutdown\n\nThe contract shuts down under any one of 3 conditions:", "mimetype": "text/plain", "start_char_idx": 3988, "end_char_idx": 4428, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df15afd5-a501-4e7d-9300-7d95e4f8b23b": {"__data__": {"id_": "df15afd5-a501-4e7d-9300-7d95e4f8b23b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c2ccf9e-a37c-40f4-80c4-889ab77e90db", "node_type": "1", "metadata": {}, "hash": "6f594cb3f65f184f3033c33e2e08a86827778d831677a7d591bc7928f5e3d9c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99780e45-f5a3-41a8-ad39-35fd5345eb93", "node_type": "1", "metadata": {}, "hash": "26783482abdbd5ba09b7361bee37c2deed9cf42801f5673abb09d4fae226af1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. The loan (plus interest) is repaid.\n   - The lender gets the repayment and the borrower gets\n     their collateral back.\n2. The value of the collateral drops and the collateral must be\n   liquidated.\n   - The lender gets the outcome of the collateral sale, and the borrower keeps their loan.\n3. An error occurs when trying to use the priceAuthority.\n   - The lender gets the collateral, and the borrower keeps their loan.\n\n## Debt and Interest Calculation", "mimetype": "text/plain", "start_char_idx": 4430, "end_char_idx": 4888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99780e45-f5a3-41a8-ad39-35fd5345eb93": {"__data__": {"id_": "99780e45-f5a3-41a8-ad39-35fd5345eb93", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df15afd5-a501-4e7d-9300-7d95e4f8b23b", "node_type": "1", "metadata": {}, "hash": "8add0b58db05f9978e03c21ae082eb8fb419a8f05a59f1bcdb9f6087bfbee18c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1", "node_type": "1", "metadata": {}, "hash": "47b8c36091a83ed1e6afca39ceb29c8989a2778be6526a3cb3df92f2fbf1fd0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Debt and Interest Calculation\n\nInterest is calculated and compounded when the\n`periodNotifier` pushes a new value. The interest rate per period\nis defined by the `interestRate` parameter.", "mimetype": "text/plain", "start_char_idx": 4856, "end_char_idx": 5046, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1": {"__data__": {"id_": "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99780e45-f5a3-41a8-ad39-35fd5345eb93", "node_type": "1", "metadata": {}, "hash": "26783482abdbd5ba09b7361bee37c2deed9cf42801f5673abb09d4fae226af1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb33402e-a041-4748-9dff-098de29ce753", "node_type": "1", "metadata": {}, "hash": "5769a1947d6f3eb8afc84bb264b7c6359a754d3365d04b7686c655b0c447d59e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `borrowFacet` has methods to get the current amount owed\n(`E(borrowFacet).getRecentCollateralAmount()`), or get a\n[notifier](/guides/js-programming/notifiers) that will be updated when the debt\nis recalculated. The contract also reveals the last timestamp at which debt was\nrecalculated: (`E(borrowFacet).getLastCalculationTimestamp()`).\n\n## Scheduling Liquidation", "mimetype": "text/plain", "start_char_idx": 5048, "end_char_idx": 5416, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb33402e-a041-4748-9dff-098de29ce753": {"__data__": {"id_": "fb33402e-a041-4748-9dff-098de29ce753", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1", "node_type": "1", "metadata": {}, "hash": "47b8c36091a83ed1e6afca39ceb29c8989a2778be6526a3cb3df92f2fbf1fd0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ea39821-ded0-4464-a798-a7abaaafe784", "node_type": "1", "metadata": {}, "hash": "ce2b4a5d11cde5da1601bfe2cd6c33dfc20df9b5aa693a9d7a2b25eebeb8f275", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Scheduling Liquidation\n\nLiquidation is scheduled using the `priceAuthority` parameter.\nSpecifically, the contract gets a promise resolved when the value of the\ncollateral falls below a trigger value defined by the `mmr` parameter:\n\n<<< @/../snippets/zoe/contracts/test-loan.js#liquidate\n\nThe borrower can self-forewarn about a potential liquidation by setting up their own margin calls.\nThey do this by getting the [`priceAuthority`](/guides/zoe/price-authority) from the terms and calling:", "mimetype": "text/plain", "start_char_idx": 5391, "end_char_idx": 5884, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ea39821-ded0-4464-a798-a7abaaafe784": {"__data__": {"id_": "2ea39821-ded0-4464-a798-a7abaaafe784", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_loan.md", "node_type": "4", "metadata": {}, "hash": "7889fb4d6c5afc3136a187fd34bcf53c9aaafd5e43c472295399c1ae68d1d53b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb33402e-a041-4748-9dff-098de29ce753", "node_type": "1", "metadata": {}, "hash": "5769a1947d6f3eb8afc84bb264b7c6359a754d3365d04b7686c655b0c447d59e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/contracts/test-loan.js#customMarginCall\n\nwhere `myWarningLevel` is the value of the collateral in the Loan brand at which they\nwant a reminder to add collateral.\n\n## Liquidating\n\nActual liquidation is done through an AMM\nregardless of its current price.\nEven if the price is worse or better than what our `priceAuthority`\nquoted, we still liquidate.", "mimetype": "text/plain", "start_char_idx": 5886, "end_char_idx": 6257, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "204b6927-2f91-40bd-b70b-6f953b89135a": {"__data__": {"id_": "204b6927-2f91-40bd-b70b-6f953b89135a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md", "node_type": "4", "metadata": {}, "hash": "a76902457ef821ca201d2959ff09af0a18a72dff694b9d22b78786de26a6372c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0213c790-69a8-45bf-95af-29ada6b1d4e3", "node_type": "1", "metadata": {}, "hash": "fdf4263fbc22f2696ce57a3d2a8e551eb29b1671520cd448e435ce67db400d81", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Mint and Sell NFTs Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/mintAndSellNFT.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\nThis contract mints non-fungible tokens and creates a selling contract\ninstance to sell the tokens in exchange for some sort of money.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0213c790-69a8-45bf-95af-29ada6b1d4e3": {"__data__": {"id_": "0213c790-69a8-45bf-95af-29ada6b1d4e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md", "node_type": "4", "metadata": {}, "hash": "a76902457ef821ca201d2959ff09af0a18a72dff694b9d22b78786de26a6372c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "204b6927-2f91-40bd-b70b-6f953b89135a", "node_type": "1", "metadata": {}, "hash": "440482b6654ea49f1abbdf097ff464da5bca6745a2f76de1a95654fbd113c900", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9057436-354a-4829-97dc-3048c1f28b7d", "node_type": "1", "metadata": {}, "hash": "0cac6605214db5bdef1852044746491f838f9a2983ce0466f5648a43f57819cb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "startInstance() returns a creatorFacet with a `.sellTokens()` method. `.sellTokens()` takes a\nspecification of what is being sold, such as:\n\n```\n{\n  customValueProperties: { ...arbitrary },\n  count: 3,\n  moneyIssuer: moolaIssuer,\n  sellItemsInstallationHandle,\n  pricePerItem: AmountMath.make(moolaBrand, 20n),\n}\n```", "mimetype": "text/plain", "start_char_idx": 489, "end_char_idx": 805, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9057436-354a-4829-97dc-3048c1f28b7d": {"__data__": {"id_": "d9057436-354a-4829-97dc-3048c1f28b7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md", "node_type": "4", "metadata": {}, "hash": "a76902457ef821ca201d2959ff09af0a18a72dff694b9d22b78786de26a6372c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0213c790-69a8-45bf-95af-29ada6b1d4e3", "node_type": "1", "metadata": {}, "hash": "fdf4263fbc22f2696ce57a3d2a8e551eb29b1671520cd448e435ce67db400d81", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `offerResult` is a record with useful properties such as the\n`creatorFacet` for the sales contract. You can reuse the\n`creatorFacet` of this contract to mint more batches of NFTs (e.g.\nmore tickets for a separate show.)", "mimetype": "text/plain", "start_char_idx": 807, "end_char_idx": 1030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "65d809ed-344c-463e-b4c3-1e277f904a03": {"__data__": {"id_": "65d809ed-344c-463e-b4c3-1e277f904a03", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_mint-payments.md", "node_type": "4", "metadata": {}, "hash": "0382b776776e22dc1612bbdb27c0183afaf4062d2c23435f0763f8eb0762ac43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a5016fa-c2af-426d-a3ed-12aa27677363", "node_type": "1", "metadata": {}, "hash": "10e0002166c4d87acd2a0d581764cb0276f8cb8c50f0615d914f98386e4c480c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Mint Payments Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/mintPayments.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\nThis very simple contract shows how to create a new issuer kit and\nmint payments from it. The contract pays out new tokens to anyone who\nhas an invitation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a5016fa-c2af-426d-a3ed-12aa27677363": {"__data__": {"id_": "9a5016fa-c2af-426d-a3ed-12aa27677363", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_mint-payments.md", "node_type": "4", "metadata": {}, "hash": "0382b776776e22dc1612bbdb27c0183afaf4062d2c23435f0763f8eb0762ac43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65d809ed-344c-463e-b4c3-1e277f904a03", "node_type": "1", "metadata": {}, "hash": "bb776ce7c09711de956181bd89131a5bb5d224648fbfea7379186844bffdc809", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The expectation is that most contracts that want to manage a new issuer\nwould use the ability to mint new payments internally rather than sharing\nthat ability widely as this one does.\n\nTo pay others in tokens, the instance creator first makes\ninvitations for them. They use them to make an offer, which pay out\nthe specified token amount.", "mimetype": "text/plain", "start_char_idx": 503, "end_char_idx": 841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03eac781-8fed-4de9-b74f-169b60ba76e8": {"__data__": {"id_": "03eac781-8fed-4de9-b74f-169b60ba76e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a", "node_type": "1", "metadata": {}, "hash": "fbedd5c3f8ae6f557dc41932dbda5abe80bc953830c645907f7b36f3f4faaac2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Oracle Query Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4c4da6a7ae76aebbff2af48613008978eb04462b/packages/zoe/src/contracts/oracle.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\n**NOTE: You almost certainly do not want to use this contract directly.\nInstead, please read the [Chainlink integration\ndocumentation](/guides/chainlink-integration)**", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 506, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a": {"__data__": {"id_": "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03eac781-8fed-4de9-b74f-169b60ba76e8", "node_type": "1", "metadata": {}, "hash": "a0d1085b535b2b26775b9cb0fa89ec07710e93d314fe21aa1fca0e0ba9236e5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "960949a9-59e0-4ca3-a09e-c05d7ce54a25", "node_type": "1", "metadata": {}, "hash": "a5d207b91b9f85a38633ecd581b50eaaa0ddb8d88c7ac5e7fb071060f2c08ff5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract lets other contracts or users make single free or fee-based\nqueries to a generic oracle node (a single instance). This provides a very\nlow-level API to issue single queries that an individual off-chain oracle node\nanswers.\n\n**CAUTION: The security of oracle networks (such as Chainlink) depends upon\nhaving higher-level contracts to aggregate the results of the individual nodes\n(this low-level contract). This protects against misbehaviour from an\nindividual node.**", "mimetype": "text/plain", "start_char_idx": 508, "end_char_idx": 989, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "960949a9-59e0-4ca3-a09e-c05d7ce54a25": {"__data__": {"id_": "960949a9-59e0-4ca3-a09e-c05d7ce54a25", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a", "node_type": "1", "metadata": {}, "hash": "fbedd5c3f8ae6f557dc41932dbda5abe80bc953830c645907f7b36f3f4faaac2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41da9c62-7c68-4f73-9b69-1e07ac76e78a", "node_type": "1", "metadata": {}, "hash": "9edd2f396e7dd9dde8b1417490f719082539a33cf70062c25cfc3d94e6347574", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Relying on just a single node can be both expensive and risky. Instead, use the\nhigher-level APIs described in the [Chainlink integration\ndocumentation](/guides/chainlink-integration).\n\n## Making a Free Query\n\nTo make a free query, obtain the `publicFacet` for the oracle contract\ninstance.\n\n<<< @/../snippets/zoe/contracts/test-oracle.js#freeQuery\n\nThe `query` that is passed in could be in any format that the\noracle accepts. The response can be in any format, as the oracle determines.", "mimetype": "text/plain", "start_char_idx": 991, "end_char_idx": 1479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41da9c62-7c68-4f73-9b69-1e07ac76e78a": {"__data__": {"id_": "41da9c62-7c68-4f73-9b69-1e07ac76e78a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "960949a9-59e0-4ca3-a09e-c05d7ce54a25", "node_type": "1", "metadata": {}, "hash": "a5d207b91b9f85a38633ecd581b50eaaa0ddb8d88c7ac5e7fb071060f2c08ff5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc4e481b-7f68-4b42-85d4-7e50e512444d", "node_type": "1", "metadata": {}, "hash": "615ca16d7992ba7ff91aa88735b57e8202bb4c32e2a7fcb19ed069890ba7af97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Making a Paid Query\n\nTo make a query that requires payment, obtain the `publicFacet` as\nbefore, but this time, make a `queryInvitation`. Use the\n`queryInvitation` to make an offer and escrow the required payments in\nthe `Fee` brand. The response will be the result of your offer.\n\n<<< @/../snippets/zoe/contracts/test-oracle.js#paidQuery\n\n## Instantiating a New Oracle Contract\n\nIf you want to create your own oracle contract instance, first bundle\nand install the code if it is not already installed.", "mimetype": "text/plain", "start_char_idx": 1481, "end_char_idx": 1985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc4e481b-7f68-4b42-85d4-7e50e512444d": {"__data__": {"id_": "cc4e481b-7f68-4b42-85d4-7e50e512444d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41da9c62-7c68-4f73-9b69-1e07ac76e78a", "node_type": "1", "metadata": {}, "hash": "9edd2f396e7dd9dde8b1417490f719082539a33cf70062c25cfc3d94e6347574", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c11728fa-d09d-44d1-9a12-26b33663a2ea", "node_type": "1", "metadata": {}, "hash": "845417640bf5afa567bab2eb39a156d0fad72043e6589cdb174b35cfbb516014", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/contracts/test-oracle.js#bundle\n\nThen start the contract instance. You will receive a `publicFacet` and\na `creatorFacet`.\n\n<<< @/../snippets/zoe/contracts/test-oracle.js#startInstance\n\nYou will need to use the creatorFacet to initialize an\n`oracleHandler`. The `oracleHandler` is what will actually be queried,\nso we do not want to put it in the contract terms, which are publicly\naccessible.\n\n<<< @/../snippets/zoe/contracts/test-oracle.js#initialize\n\n## The Oracle Handler API", "mimetype": "text/plain", "start_char_idx": 1987, "end_char_idx": 2487, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c11728fa-d09d-44d1-9a12-26b33663a2ea": {"__data__": {"id_": "c11728fa-d09d-44d1-9a12-26b33663a2ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_oracle.md", "node_type": "4", "metadata": {}, "hash": "bd6ceee38cdb8d699a8cec4fd30df78dcf3ce7185f664d0ba34f1a7e5df9f456", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc4e481b-7f68-4b42-85d4-7e50e512444d", "node_type": "1", "metadata": {}, "hash": "615ca16d7992ba7ff91aa88735b57e8202bb4c32e2a7fcb19ed069890ba7af97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Oracle Handler API\n\nThe contract expects all `oracleHandlers` to offer the following API:\n\n<<< @/../snippets/zoe/contracts/test-oracle.js#API", "mimetype": "text/plain", "start_char_idx": 2462, "end_char_idx": 2610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3415eb27-e730-4561-9338-a65def74c750": {"__data__": {"id_": "3415eb27-e730-4561-9338-a65def74c750", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_otc-desk.md", "node_type": "4", "metadata": {}, "hash": "3a9c905358dfa44636530e174d7388616b08e24e4e3308ef3c509bbf47b2ebd7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbd3ec65-1600-4050-bfb7-55c306caf390", "node_type": "1", "metadata": {}, "hash": "9bc08f2e28df3c827d3e62453f93bcaa958195f6bef53ffe87877ce1141df81d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# OTC Desk Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/otcDesk.js) (Last updated: Mar 1, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\n![Building a Composable DeFi Contract](./assets/title.jpg)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbd3ec65-1600-4050-bfb7-55c306caf390": {"__data__": {"id_": "cbd3ec65-1600-4050-bfb7-55c306caf390", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_otc-desk.md", "node_type": "4", "metadata": {}, "hash": "3a9c905358dfa44636530e174d7388616b08e24e4e3308ef3c509bbf47b2ebd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3415eb27-e730-4561-9338-a65def74c750", "node_type": "1", "metadata": {}, "hash": "862bf3354549f0973bb891acfe5ac595879a0b682fe73aa55e554fc8e997603f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfeaea52-7c8f-4005-b932-6a47a6e1016c", "node_type": "1", "metadata": {}, "hash": "688a04af569fa4b3a62a84b9f62863dd7d1d97e375901e16a3963f35c31ed5e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is the OTC Desk contract from the \"Building a\nComposable DeFi Contract\" episode of [Cosmos Code With\nUs workshop](https://www.youtube.com/watch?v=e9dMkC2oFh8).\n\n[Watch the replay of the\nworkshop](https://www.youtube.com/watch?v=faxrecQgEio):\n[![Building a Composable DeFi Contract](./assets/play.png)](https://www.youtube.com/watch?v=faxrecQgEio)\n\n## Functionality", "mimetype": "text/plain", "start_char_idx": 395, "end_char_idx": 764, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dfeaea52-7c8f-4005-b932-6a47a6e1016c": {"__data__": {"id_": "dfeaea52-7c8f-4005-b932-6a47a6e1016c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_otc-desk.md", "node_type": "4", "metadata": {}, "hash": "3a9c905358dfa44636530e174d7388616b08e24e4e3308ef3c509bbf47b2ebd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbd3ec65-1600-4050-bfb7-55c306caf390", "node_type": "1", "metadata": {}, "hash": "9bc08f2e28df3c827d3e62453f93bcaa958195f6bef53ffe87877ce1141df81d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "341d50f2-f3c4-4b9e-ad19-fe072eeba605", "node_type": "1", "metadata": {}, "hash": "33a1c70a831aedce33b9bbbaa94f6b9b72df1359ad524a38a1e55067102a9740", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Functionality\n\nThe OTC Desk contract is based on an idea by Haseeb Qureshi in\n[\"Unbundling Uniswap: The Future of On-Chain Market Making\"](https://medium.com/dragonfly-research/unbundling-uniswap-the-future-of-on-chain-market-making-1c7d6948d570)\n\n![OTC Desk](./assets/contract.svg)\n\nIn this OTC Desk Contract:", "mimetype": "text/plain", "start_char_idx": 748, "end_char_idx": 1061, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "341d50f2-f3c4-4b9e-ad19-fe072eeba605": {"__data__": {"id_": "341d50f2-f3c4-4b9e-ad19-fe072eeba605", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_otc-desk.md", "node_type": "4", "metadata": {}, "hash": "3a9c905358dfa44636530e174d7388616b08e24e4e3308ef3c509bbf47b2ebd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfeaea52-7c8f-4005-b932-6a47a6e1016c", "node_type": "1", "metadata": {}, "hash": "688a04af569fa4b3a62a84b9f62863dd7d1d97e375901e16a3963f35c31ed5e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec389590-e450-4066-b625-d852574ec304", "node_type": "1", "metadata": {}, "hash": "6e03e8f71798b3e570781c3cf2949da7a0dccae1b59be2344baa651161d59aaf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In this OTC Desk Contract:\n\n- Trades are atomic and \u201ctrustless\u201d\n- Creator keeps all profits\n- Can use any pricing mechanism\n- Can stop quoting when the market is crazy\n- Can trade fungible and non-fungible digital assets\n- Uses another contract (the [covered call option contract](https://github.com/Agoric/agoric-sdk/blob/HEAD/packages/zoe/src/contracts/coveredCall.js)) as a reusable component\n\n## The Dapp", "mimetype": "text/plain", "start_char_idx": 1035, "end_char_idx": 1443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec389590-e450-4066-b625-d852574ec304": {"__data__": {"id_": "ec389590-e450-4066-b625-d852574ec304", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_otc-desk.md", "node_type": "4", "metadata": {}, "hash": "3a9c905358dfa44636530e174d7388616b08e24e4e3308ef3c509bbf47b2ebd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "341d50f2-f3c4-4b9e-ad19-fe072eeba605", "node_type": "1", "metadata": {}, "hash": "33a1c70a831aedce33b9bbbaa94f6b9b72df1359ad524a38a1e55067102a9740", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The Dapp\n\nThis contract is also available as a [dapp with deploy scripts](https://github.com/Agoric/dapp-otc).", "mimetype": "text/plain", "start_char_idx": 1432, "end_char_idx": 1545, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f9c38cf-e2b1-40cb-9590-9ced2bad9134": {"__data__": {"id_": "0f9c38cf-e2b1-40cb-9590-9ced2bad9134", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7a26abc-89c9-468e-9e26-a1b6eefb615c", "node_type": "1", "metadata": {}, "hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Priced Call Spread Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/callSpread/pricedCallSpread.js) (Last updated: Feb 20, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7a26abc-89c9-468e-9e26-a1b6eefb615c": {"__data__": {"id_": "a7a26abc-89c9-468e-9e26-a1b6eefb615c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f9c38cf-e2b1-40cb-9590-9ced2bad9134", "node_type": "1", "metadata": {}, "hash": "57a34fd63a0cc2d7f4cab7ed04322f44bcf651a9c5cd97e39493f98ff09698f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96f2a5ae-918f-4a7f-92e2-f1231793f5b0", "node_type": "1", "metadata": {}, "hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract implements a fully collateralized call spread. You can use a call spread as a\n[financial building block](https://youtu.be/m5Pf2d1tHCs) to create futures, puts, calls, and event\nbinaries that would form the basis for a prediction market, insurance, and much more. A call spread\nis a combination of a call option bought at one strike price and a second call option sold at a\nhigher price. A call spread has two participating seats that pay out complementary amounts depending", "mimetype": "text/plain", "start_char_idx": 366, "end_char_idx": 853, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96f2a5ae-918f-4a7f-92e2-f1231793f5b0": {"__data__": {"id_": "96f2a5ae-918f-4a7f-92e2-f1231793f5b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7a26abc-89c9-468e-9e26-a1b6eefb615c", "node_type": "1", "metadata": {}, "hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63cfa5a0-5495-4b8f-928d-d6acf060ece4", "node_type": "1", "metadata": {}, "hash": "baf397337423e5ea1d687dd7583068d70932db9c611bb55c0641ab01a348adc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "on the value of some good at a known future time. This video gives a\n[walkthrough of the implementation](https://youtu.be/m5Pf2d1tHCs?t=3566) of the contract.", "mimetype": "text/plain", "start_char_idx": 854, "end_char_idx": 1012, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63cfa5a0-5495-4b8f-928d-d6acf060ece4": {"__data__": {"id_": "63cfa5a0-5495-4b8f-928d-d6acf060ece4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96f2a5ae-918f-4a7f-92e2-f1231793f5b0", "node_type": "1", "metadata": {}, "hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d", "node_type": "1", "metadata": {}, "hash": "677e2fdfee4c74be2678648476eb359c36df267bd32f5c6de5bc48d99becc26d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There are two variants of the callSpread. In this version, the creator requests a pair of\ninvitations, each of which enables the holder to obtain one of the positions by providing a started\nportion of the collateral. The other is called the [fundedCallSpread](./fundedCallSpread). It is\nfully funded by its creator, who can then sell (or otherwise transfer) the options to other parties.\nThe Zoe invitations representing options are produced in pairs. The individual options are Zoe", "mimetype": "text/plain", "start_char_idx": 1014, "end_char_idx": 1496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d": {"__data__": {"id_": "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63cfa5a0-5495-4b8f-928d-d6acf060ece4", "node_type": "1", "metadata": {}, "hash": "baf397337423e5ea1d687dd7583068d70932db9c611bb55c0641ab01a348adc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c293e91-f608-489f-a548-a58c8f2421d2", "node_type": "1", "metadata": {}, "hash": "d4f31b2b39278da6f41bc3211ee55d2fa64cc845cdcc0f8d2a25ee8da57b05a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "invitations whose details are inspectable by prospective purchasers.", "mimetype": "text/plain", "start_char_idx": 1497, "end_char_idx": 1565, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c293e91-f608-489f-a548-a58c8f2421d2": {"__data__": {"id_": "2c293e91-f608-489f-a548-a58c8f2421d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d", "node_type": "1", "metadata": {}, "hash": "677e2fdfee4c74be2678648476eb359c36df267bd32f5c6de5bc48d99becc26d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "841aa9de-4adc-43ec-b290-d02086312745", "node_type": "1", "metadata": {}, "hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "These options are settled financially. There is no requirement that the original purchaser have\nownership of the underlying asset at the start, and the beneficiaries shouldn't expect to take\ndelivery at closing.\n\n## Issuers\n\nThe Strike and Collateral currencies are often the same, however these contracts decouple the\ncurrencies. You can have, for example, a spread based on APPL stock (`Underlying`), with the stock\nprice in USD (`Strike`) and contract paying out in JPY (`Collateral`).", "mimetype": "text/plain", "start_char_idx": 1567, "end_char_idx": 2055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "841aa9de-4adc-43ec-b290-d02086312745": {"__data__": {"id_": "841aa9de-4adc-43ec-b290-d02086312745", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c293e91-f608-489f-a548-a58c8f2421d2", "node_type": "1", "metadata": {}, "hash": "d4f31b2b39278da6f41bc3211ee55d2fa64cc845cdcc0f8d2a25ee8da57b05a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99d843f7-6578-42dd-bfcd-986db746a59f", "node_type": "1", "metadata": {}, "hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The issuerKeywordRecord specifies issuers for three keywords: Underlying, Strike, and Collateral.", "mimetype": "text/plain", "start_char_idx": 2057, "end_char_idx": 2154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99d843f7-6578-42dd-bfcd-986db746a59f": {"__data__": {"id_": "99d843f7-6578-42dd-bfcd-986db746a59f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "841aa9de-4adc-43ec-b290-d02086312745", "node_type": "1", "metadata": {}, "hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26b26366-72db-4be2-a9bf-47736de57990", "node_type": "1", "metadata": {}, "hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The asset whose eventual value determines the payouts uses `Underlying`. This is often a fungible\n  currency, but doesn't have to be. It would be perfectly valid to have a call spread contract on\n  the value of a \"Superior Magic Sword\", as long as there was a price oracle to determine its price\n  at the expiration time.\n- The original deposit and the payout use the `Collateral` issuer.\n- `Strike` amounts are used for the price oracle's quote as to the value of the Underlying, as", "mimetype": "text/plain", "start_char_idx": 2156, "end_char_idx": 2641, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26b26366-72db-4be2-a9bf-47736de57990": {"__data__": {"id_": "26b26366-72db-4be2-a9bf-47736de57990", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99d843f7-6578-42dd-bfcd-986db746a59f", "node_type": "1", "metadata": {}, "hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "276de356-d3a9-458c-ad47-e7ba2ae7a4dc", "node_type": "1", "metadata": {}, "hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "well as the strike prices in the terms.", "mimetype": "text/plain", "start_char_idx": 2644, "end_char_idx": 2683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "276de356-d3a9-458c-ad47-e7ba2ae7a4dc": {"__data__": {"id_": "276de356-d3a9-458c-ad47-e7ba2ae7a4dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26b26366-72db-4be2-a9bf-47736de57990", "node_type": "1", "metadata": {}, "hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e343d824-9c51-43e3-9aff-05982c7e99d6", "node_type": "1", "metadata": {}, "hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Terms\n\nThe terms include `{ timer, underlyingAmount, expiration, priceAuthority, strikePrice1,\nstrikePrice2, settlementAmount }`.", "mimetype": "text/plain", "start_char_idx": 2685, "end_char_idx": 2817, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e343d824-9c51-43e3-9aff-05982c7e99d6": {"__data__": {"id_": "e343d824-9c51-43e3-9aff-05982c7e99d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "276de356-d3a9-458c-ad47-e7ba2ae7a4dc", "node_type": "1", "metadata": {}, "hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0", "node_type": "1", "metadata": {}, "hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `timer` is a [timer](/reference/repl/timerServices), and must be recognized by `priceAuthority`.\n- `expiration` is a time recognized by the `timer`.\n- `underlyingAmount` is passed to `priceAuthority`. It could be an NFT or a fungible amount.\n- `strikePrice2` must be greater than `strikePrice1`.\n- `settlementAmount` is the amount deposited by the creator and split between the holders of the\n  options. It uses Collateral.", "mimetype": "text/plain", "start_char_idx": 2819, "end_char_idx": 3244, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0": {"__data__": {"id_": "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e343d824-9c51-43e3-9aff-05982c7e99d6", "node_type": "1", "metadata": {}, "hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17cf157b-6b1c-4430-ae26-a3046296ca11", "node_type": "1", "metadata": {}, "hash": "76b14addf120e409bf9425c6cd813d5b00442f9c69b93f35b591cf1de61306dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "options. It uses Collateral.\n- `priceAuthority` is an oracle that has a timer so it can respond to requests for prices as of a\n  stated time. After the deadline, it will issue a PriceQuote giving the value of the underlying\n  asset in the strike currency.", "mimetype": "text/plain", "start_char_idx": 3216, "end_char_idx": 3471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "17cf157b-6b1c-4430-ae26-a3046296ca11": {"__data__": {"id_": "17cf157b-6b1c-4430-ae26-a3046296ca11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0", "node_type": "1", "metadata": {}, "hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "319ebe45-cf47-47f4-a665-3d16a97ab6d8", "node_type": "1", "metadata": {}, "hash": "c69d5c7add4a37fc0bd9c7873ff7a44b0df563c34accb23c04ab8c4c6ba810e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<<< @/../snippets/zoe/contracts/test-callSpread.js#startInstancePriced\n\n## Creating the Option Invitations\n\nThe terms specify all the details of the options. A call to `creatorFacet.makeInvitationPair()` is\nrequired to specify the share (as a whole number percentage in BigInt form) that will be contributed for the long\nposition. It returns a pair of invitations.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#makeInvitationPriced", "mimetype": "text/plain", "start_char_idx": 3473, "end_char_idx": 3910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "319ebe45-cf47-47f4-a665-3d16a97ab6d8": {"__data__": {"id_": "319ebe45-cf47-47f4-a665-3d16a97ab6d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17cf157b-6b1c-4430-ae26-a3046296ca11", "node_type": "1", "metadata": {}, "hash": "76b14addf120e409bf9425c6cd813d5b00442f9c69b93f35b591cf1de61306dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f267970-849a-4790-afd9-2c57e224c53d", "node_type": "1", "metadata": {}, "hash": "7d09f9526b1a9881faf99a6488091b46029c3a94709af7acb4684e57cca8a988", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The creator gives these invitations to the two parties (or might retain one for their own use.) When\nBob receives an invitation, he can extract the value of the call spread option that he wants, and\ncreate a proposal. The collateral required is also in the option's details. The holders of the\ninvitations can exercise with the required collateral to receive the actual call spread option\npositions.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#exercisePricedInvitation\n\n## Validating the Options", "mimetype": "text/plain", "start_char_idx": 3912, "end_char_idx": 4415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f267970-849a-4790-afd9-2c57e224c53d": {"__data__": {"id_": "7f267970-849a-4790-afd9-2c57e224c53d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "319ebe45-cf47-47f4-a665-3d16a97ab6d8", "node_type": "1", "metadata": {}, "hash": "c69d5c7add4a37fc0bd9c7873ff7a44b0df563c34accb23c04ab8c4c6ba810e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e6b557d-3420-44d4-ab2b-8ce3607ba49e", "node_type": "1", "metadata": {}, "hash": "a5225a0d6b6a49686f2b07405228f5cf682e294e24fef977749235940d754714", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Validating the Options\n\nThe options are packaged as invitations so they are fully self-describing, and can be verified with\nZoe, so their value is apparent to anyone who might be interested in them.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#validatePricedInvitation\n\nThe details of the underlying call spread option are accessible from the terms associated with this\ninstance of the contract.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#checkTerms-priced", "mimetype": "text/plain", "start_char_idx": 4390, "end_char_idx": 4865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e6b557d-3420-44d4-ab2b-8ce3607ba49e": {"__data__": {"id_": "6e6b557d-3420-44d4-ab2b-8ce3607ba49e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f267970-849a-4790-afd9-2c57e224c53d", "node_type": "1", "metadata": {}, "hash": "7d09f9526b1a9881faf99a6488091b46029c3a94709af7acb4684e57cca8a988", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bf2de8d-6c1b-4565-b1fb-4070a401b0f6", "node_type": "1", "metadata": {}, "hash": "cf1ec30066f27ca86617b8ef31234e1c69ff23fb30ccfeb76b6b0a9a4fea6eb5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Options can be Exercised Independently\n\nThe option position invitations can be exercised for free, and provide their payouts under the\nkeyword `Collateral`.\n\n<<< @/../snippets/zoe/contracts/test-callSpread.js#bobExercise", "mimetype": "text/plain", "start_char_idx": 4867, "end_char_idx": 5090, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0bf2de8d-6c1b-4565-b1fb-4070a401b0f6": {"__data__": {"id_": "0bf2de8d-6c1b-4565-b1fb-4070a401b0f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_pricedCallSpread.md", "node_type": "4", "metadata": {}, "hash": "8d571b83b709af1c30dca49e03c1a4deb866d7d3d4e627786d57843acfd52ae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e6b557d-3420-44d4-ab2b-8ce3607ba49e", "node_type": "1", "metadata": {}, "hash": "a5225a0d6b6a49686f2b07405228f5cf682e294e24fef977749235940d754714", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The contract doesn't rely on the options being exercised before the specified close. If either\noption is exercised after the closing price is determined, the payouts will still be available. The\ntwo options make their payment available as soon after exercise as the price is available, and\nneither waits for the other to exercise.", "mimetype": "text/plain", "start_char_idx": 5092, "end_char_idx": 5422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e1c61780-5f10-4816-ba82-49d29ac0f1cf": {"__data__": {"id_": "e1c61780-5f10-4816-ba82-49d29ac0f1cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9", "node_type": "1", "metadata": {}, "hash": "1ce21f7ea28011e0482aa09c29b869ed5540655176dd12d61e64c612fef7575a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Second-Price Auction Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/a564c6081976d7b66b3cdf54e0ba8903c8f1ee6d/packages/zoe/src/contracts/auction/secondPriceAuction.js) (Last updated: Sep 14, 2020)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 365, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9": {"__data__": {"id_": "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1c61780-5f10-4816-ba82-49d29ac0f1cf", "node_type": "1", "metadata": {}, "hash": "f78ef0d09d1e0ec5c8942f7b524fd1a75f673d3d8a9d1b654b559bf631d71336", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf39aabe-07bf-4490-8fba-9b4608817860", "node_type": "1", "metadata": {}, "hash": "fe407519847458809679bc89a064a838b492b80bb7af3d66039fcdbc71d30e2f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "In a second-price auction, the winner is the participant with the highest bid, but\nthe winner only pays the price corresponding to the second highest\nbid. <b>Second-price auctions must have sealed (i.e. private) bids to have the\ntouted economic incentives, so this version, which is entirely public, should not be\nused in production for real valuables.</b> It's a demonstration that auctions under\nZoe can enforce different rules about how prices are calculated, or how winners are\nselected.", "mimetype": "text/plain", "start_char_idx": 367, "end_char_idx": 858, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf39aabe-07bf-4490-8fba-9b4608817860": {"__data__": {"id_": "bf39aabe-07bf-4490-8fba-9b4608817860", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9", "node_type": "1", "metadata": {}, "hash": "1ce21f7ea28011e0482aa09c29b869ed5540655176dd12d61e64c612fef7575a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a06641d-0815-42a8-8745-64244e6fd65e", "node_type": "1", "metadata": {}, "hash": "975ad471d19e117b7ae7f139e66c0aedaa1f067b7f1b963be3a323184691fcf1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An auction contract is which the seller offers an Asset for sale, and states a\nminimum price. The auction closes at the deadline specified by the timeAuthority and\nclosesAfter parameters in the terms provided by the creator of the contract\ninstance. The second price rule is followed, so the highest bidder pays the amount\nbid by the second highest bidder.", "mimetype": "text/plain", "start_char_idx": 860, "end_char_idx": 1216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a06641d-0815-42a8-8745-64244e6fd65e": {"__data__": {"id_": "6a06641d-0815-42a8-8745-64244e6fd65e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf39aabe-07bf-4490-8fba-9b4608817860", "node_type": "1", "metadata": {}, "hash": "fe407519847458809679bc89a064a838b492b80bb7af3d66039fcdbc71d30e2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2e91a25-ff1d-49c1-af89-790452ed7339", "node_type": "1", "metadata": {}, "hash": "b0f4757290cdf1f56709c0a2f1c4c660649e93d47d0904acd13d40c10b6c14e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`startInstance()` specifies the issuers and the terms. An invitation for the seller is\nreturned as the creatorInvitation. The seller's offer should look like\n\n```js\n{ give: { Asset: asset }, want: { Ask: minimumBidAmount}}\n```\n\nThe asset can be non-fungible, but the Ask amount should be of a\nfungible brand. Make the bidder invitations by calling\n`makeBidInvitation()` on the object returned from the seller's\noffer. Each bidder can submit an offer: `js { give: { Bid: null }\nwant: { Asset: null } }.  `", "mimetype": "text/plain", "start_char_idx": 1218, "end_char_idx": 1722, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2e91a25-ff1d-49c1-af89-790452ed7339": {"__data__": {"id_": "d2e91a25-ff1d-49c1-af89-790452ed7339", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a06641d-0815-42a8-8745-64244e6fd65e", "node_type": "1", "metadata": {}, "hash": "975ad471d19e117b7ae7f139e66c0aedaa1f067b7f1b963be3a323184691fcf1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36d1dd8d-4582-4bae-9f6d-d004f44cae12", "node_type": "1", "metadata": {}, "hash": "d161955b12bb05cf38061756263a66688fe1cdaa7d73c20e8e71f33febcabddc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Public Second-Price Auction\n\nIn this particular \"public\" second-price auction, anyone who has access to the\nauction instance can make a bid by submitting a proposal.\n\nAlice can create an auction from an existing second-price auction\ninstallation. (`installation` is the unique, unforgeable identifier for the\ninstallation.)\n\n```js\nconst issuerKeywordRecord = harden({\n  Asset: moolaIssuer,\n  Bid: simoleanIssuer\n});", "mimetype": "text/plain", "start_char_idx": 1724, "end_char_idx": 2142, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36d1dd8d-4582-4bae-9f6d-d004f44cae12": {"__data__": {"id_": "36d1dd8d-4582-4bae-9f6d-d004f44cae12", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2e91a25-ff1d-49c1-af89-790452ed7339", "node_type": "1", "metadata": {}, "hash": "b0f4757290cdf1f56709c0a2f1c4c660649e93d47d0904acd13d40c10b6c14e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "983f76cc-4b88-4120-9f6a-e3923e6687c4", "node_type": "1", "metadata": {}, "hash": "c3780c6e4cf07d89e0c9b8ac8e58ff7cdab9d6059b1f9657f4b5c5aba92cdffb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const terms = harden({ numBidsAllowed: 3 });\nconst { creatorInvitation } = await E(zoe).startInstance(\n  installation,\n  issuerKeywordRecord,\n  terms\n);\n```", "mimetype": "text/plain", "start_char_idx": 2144, "end_char_idx": 2300, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "983f76cc-4b88-4120-9f6a-e3923e6687c4": {"__data__": {"id_": "983f76cc-4b88-4120-9f6a-e3923e6687c4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36d1dd8d-4582-4bae-9f6d-d004f44cae12", "node_type": "1", "metadata": {}, "hash": "d161955b12bb05cf38061756263a66688fe1cdaa7d73c20e8e71f33febcabddc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9", "node_type": "1", "metadata": {}, "hash": "e343c449a45bbfd3f913fcd32ce4c68b4c1e60d5afd1c40412cf523d22672c5f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "She can put something up for auction by escrowing it with Zoe, so she provides a\npayment for what she wants to sell, and makes a `proposal`. The proposal's terms will\nbe enforced by Zoe and will protect Alice from misbehavior by the smart contract and\nother participants. If no `exit` rule is given, as in this example, the default (`{\nonDemand: null }`) is used.", "mimetype": "text/plain", "start_char_idx": 2302, "end_char_idx": 2665, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9": {"__data__": {"id_": "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "983f76cc-4b88-4120-9f6a-e3923e6687c4", "node_type": "1", "metadata": {}, "hash": "c3780c6e4cf07d89e0c9b8ac8e58ff7cdab9d6059b1f9657f4b5c5aba92cdffb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2719ab7-5550-45d5-abab-617ca93a5373", "node_type": "1", "metadata": {}, "hash": "3b608edf896ee4a1447e6def98df8b5ff686a0b7f91f31ec187570ea21796641", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst aliceProposal = harden({\n  give: { Asset: AmountMath.make(moolaBrand, 1n) },\n  want: { Bid: AmountMath.make(simoleanBrand, 3n) },\n  exit: { waived: null }\n});\n\nconst alicePayments = { Asset: aliceMoolaPayment };\n\nconst aliceSeat = await E(zoe).offer(\n  creatorInvitation,\n  aliceProposal,\n  alicePayments\n);\nconst invitationMaker = await E(aliceSeat).getOfferResult();\nconst bobInvitation = E(invitationMaker).makeBidInvitation();\n```", "mimetype": "text/plain", "start_char_idx": 2667, "end_char_idx": 3113, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2719ab7-5550-45d5-abab-617ca93a5373": {"__data__": {"id_": "c2719ab7-5550-45d5-abab-617ca93a5373", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9", "node_type": "1", "metadata": {}, "hash": "e343c449a45bbfd3f913fcd32ce4c68b4c1e60d5afd1c40412cf523d22672c5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37218f79-4af1-4e5e-b459-c825071aa3b8", "node_type": "1", "metadata": {}, "hash": "c10f9f923fb40858b3f0c7b9f2f3c50ff14029e6bf65b7b465ade63840e16109", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Now Alice can share the counterparty invitation with her friends and see if there are\nany bidders. Let's say that Bob gets an invitation and wants to verify that it is an\noffer he's interested in. He can check that the installation is the standard auction\nhe expects. He can also check that the item up for sale is what he wants by comparing\nthe issuers.\n\n```js\nconst invitationIssuer = await E(zoe).getInvitationIssuer();\nconst bobExclusiveInvitation = await invitationIssuer.claim(bobInvitation);", "mimetype": "text/plain", "start_char_idx": 3115, "end_char_idx": 3613, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37218f79-4af1-4e5e-b459-c825071aa3b8": {"__data__": {"id_": "37218f79-4af1-4e5e-b459-c825071aa3b8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2719ab7-5550-45d5-abab-617ca93a5373", "node_type": "1", "metadata": {}, "hash": "3b608edf896ee4a1447e6def98df8b5ff686a0b7f91f31ec187570ea21796641", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb974237-f848-48c4-acec-9ed963d8274c", "node_type": "1", "metadata": {}, "hash": "9351d325030ceed6beb13a5097c794f2fa660cf2470566c7c24b9ff6b80fe5db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const { installation: bobInstallation, instance } = await E(\n  zoe\n).getInvitationDetails(bobExclusiveInvitation);\nconst bobIssuers = await E(zoe).getIssuers(instance);\n\nassert(\n  bobInstallation === secondPriceAuctionInstallation,\n  details`wrong installation`\n);\nassert(bobIssuers.Asset === moolaIssuer, details`wrong issuer`);\n```\n\nBob decides to join the contract and makes an offer:", "mimetype": "text/plain", "start_char_idx": 3615, "end_char_idx": 4002, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb974237-f848-48c4-acec-9ed963d8274c": {"__data__": {"id_": "bb974237-f848-48c4-acec-9ed963d8274c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37218f79-4af1-4e5e-b459-c825071aa3b8", "node_type": "1", "metadata": {}, "hash": "c10f9f923fb40858b3f0c7b9f2f3c50ff14029e6bf65b7b465ade63840e16109", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3644e8ba-4f81-4168-8d64-962f67930335", "node_type": "1", "metadata": {}, "hash": "19c40729deb08cb372922eea5f958114ec5480f37a9a25303d7efd4aaecfd7ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobProposal = harden({\n  give: { Bid: AmountMath.make(simoleanBrand, 11n) },\n  want: { Asset: AmountMath.make(moolaBrand, 1n) }\n});\n\nconst bobPayments = { Bid: bobSimoleanPayment };\n\nconst bobSeat = await E(zoe).offer(\n  bobExclusiveInvitation,\n  bobProposal,\n  bobPayments\n);\n```\n\nSince multiple parties may want to participate in the auction, let's say that Carol and Dave also decide to bid in the same way\nas Bob&mdash;Carol bidding 7 simoleans, and Dave bidding 5 simoleans.", "mimetype": "text/plain", "start_char_idx": 4004, "end_char_idx": 4495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3644e8ba-4f81-4168-8d64-962f67930335": {"__data__": {"id_": "3644e8ba-4f81-4168-8d64-962f67930335", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb974237-f848-48c4-acec-9ed963d8274c", "node_type": "1", "metadata": {}, "hash": "9351d325030ceed6beb13a5097c794f2fa660cf2470566c7c24b9ff6b80fe5db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "906c49db-7499-49db-826d-cec593e0117f", "node_type": "1", "metadata": {}, "hash": "5bbb37ee23cd6a8ec3ecc39961206b9bde3b318075b98dcb4581062c420f9cd1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob wins since he bid 11 simoleans, but pays the second-highest price, which is Carol's bid of 7\nsimoleans. Thus, when Alice claims her winnings, she gets 7 simoleans.\nBob gets the 1 moola that was up for auction as well as a refund of 4\nsimoleans (11-7), and Carol and Dave get a full refund.\n\n```js\nconst aliceAssetPayout = await aliceSeat.getPayout('Asset');\nconst moolaRefundAmount = aliceMoolaPurse.deposit(aliceAssetPayout);", "mimetype": "text/plain", "start_char_idx": 4497, "end_char_idx": 4927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "906c49db-7499-49db-826d-cec593e0117f": {"__data__": {"id_": "906c49db-7499-49db-826d-cec593e0117f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_second-price-auction.md", "node_type": "4", "metadata": {}, "hash": "5a7e512e6cdd0eb77cb2221b9beed32e49eb7a55e232cb9817457a0ceb285ce5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3644e8ba-4f81-4168-8d64-962f67930335", "node_type": "1", "metadata": {}, "hash": "19c40729deb08cb372922eea5f958114ec5480f37a9a25303d7efd4aaecfd7ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const alicePricePayout = await aliceSeat.getPayout('Price');\nconst simoleanGainAmount = aliceSimPurse.deposit(alicePricePayout);\n```\n\nBob's payouts are also available.\n\n```js\nconst bobAssetPayout = await bobSeat.getPayout('Asset');\nconst bobMoolaGainAmount = bobMoolaPurse.deposit(bobAssetPayout);\n\nconst bobPricePayout = await bobSeat.getPayout('Price');\nconst bobSimoleanRefundAmount = bobSimoleanPurse.deposit(bobPricePayout);\n```", "mimetype": "text/plain", "start_char_idx": 4929, "end_char_idx": 5362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23447c2b-c10d-49f5-9461-be753e45f9db": {"__data__": {"id_": "23447c2b-c10d-49f5-9461-be753e45f9db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_sell-items.md", "node_type": "4", "metadata": {}, "hash": "645020250d70590e0c2da9584e14b08798cdfef7159dcf7004baf26d739c9244", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d89ed29-a668-4300-9bc1-0ccc33282a16", "node_type": "1", "metadata": {}, "hash": "5150310a381eaf151edb540d7685f73b8495be57c166da76d28b7921a7a8beb1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Sell Items Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/src/contracts/sellItems.js) (Last updated: Feb 4, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)\n\nSell items in exchange for money. Items may be fungible or\nnon-fungible and multiple items may be bought at once. Money must be\nfungible.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d89ed29-a668-4300-9bc1-0ccc33282a16": {"__data__": {"id_": "1d89ed29-a668-4300-9bc1-0ccc33282a16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_sell-items.md", "node_type": "4", "metadata": {}, "hash": "645020250d70590e0c2da9584e14b08798cdfef7159dcf7004baf26d739c9244", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23447c2b-c10d-49f5-9461-be753e45f9db", "node_type": "1", "metadata": {}, "hash": "bf6f37908903baf103e3f07b3616fdef4acf8500efd6fd802cda5775ca02251d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e17584d6-1e30-421c-a75b-d7dc30fab19e", "node_type": "1", "metadata": {}, "hash": "25562c4c6219bc25e27c703ecd083421058fc53e96b878ba6918d3ca5cb540ac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `pricePerItem` is set in the terms. It is expected that all\nitems sell for the same uniform price.\n\nThe initial offer should be `{ give: { Items: items } }`, accompanied by\nterms as described above. Buyers use offers that match `{ want: {\nItems: items } give: { Money: m } }`. The items provided should match\nparticular items that the seller still has available to sell, and the\nmoney should be pricePerItem times the number of items requested.", "mimetype": "text/plain", "start_char_idx": 478, "end_char_idx": 926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e17584d6-1e30-421c-a75b-d7dc30fab19e": {"__data__": {"id_": "e17584d6-1e30-421c-a75b-d7dc30fab19e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_sell-items.md", "node_type": "4", "metadata": {}, "hash": "645020250d70590e0c2da9584e14b08798cdfef7159dcf7004baf26d739c9244", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d89ed29-a668-4300-9bc1-0ccc33282a16", "node_type": "1", "metadata": {}, "hash": "5150310a381eaf151edb540d7685f73b8495be57c166da76d28b7921a7a8beb1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When all the items have been sold, the contract will terminate,\ntriggering the creator's payout. If the creator has an onDemand exit\nclause, they can exit early to collect their earnings. The remaining\nitems will still be available for sale, but the creator won't be able\nto collect later earnings.", "mimetype": "text/plain", "start_char_idx": 928, "end_char_idx": 1226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6bea975-6494-46d1-a6dd-ad77149bbea2": {"__data__": {"id_": "d6bea975-6494-46d1-a6dd-ad77149bbea2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a9a06bf-95c0-4349-be2e-888130dc1a2d", "node_type": "1", "metadata": {}, "hash": "10a62cae2e0f96269ece171fb3de1a9038cb958dd45a3bee63428da2bb8e4ab1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Simple Exchange Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/f29591519809dbadf19db0a26f38704d87429b89/packages/zoe/src/contracts/simpleExchange.js) (Last updated: Sep 12, 2020)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 348, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a9a06bf-95c0-4349-be2e-888130dc1a2d": {"__data__": {"id_": "8a9a06bf-95c0-4349-be2e-888130dc1a2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6bea975-6494-46d1-a6dd-ad77149bbea2", "node_type": "1", "metadata": {}, "hash": "96583d470fd8789e0ce839f0e80103c7ab6a63307d115e3de7ecc7c7be3ceefe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ddd38a1-890a-4392-b82f-e894d27cd180", "node_type": "1", "metadata": {}, "hash": "e77ea9a1244bc43e4106d7e30b85bed3386afa78d7a5d101a11a1fec9bdd3de2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The \"simple exchange\" is a very basic, un-optimized exchange. It\nhas an order book for one asset, priced in a second asset. The order\nbook is naively kept as an array that the contract iterates over for matches\nwhen a new order arrives.\n\n## Contract API\n\nSimpleExchange is an exchange with a simple matching algorithm. This lets\nan unlimited number of parties create new orders or accept existing\norders. A notifier lets callers find the current list of orders.", "mimetype": "text/plain", "start_char_idx": 350, "end_char_idx": 811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ddd38a1-890a-4392-b82f-e894d27cd180": {"__data__": {"id_": "4ddd38a1-890a-4392-b82f-e894d27cd180", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a9a06bf-95c0-4349-be2e-888130dc1a2d", "node_type": "1", "metadata": {}, "hash": "10a62cae2e0f96269ece171fb3de1a9038cb958dd45a3bee63428da2bb8e4ab1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9780231e-4d63-4e0b-beac-49fedb952501", "node_type": "1", "metadata": {}, "hash": "bc8611912065f39c0afaed08c58a79513b0d61df056523956e951bb9e8e95616", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The SimpleExchange keywords are `Asset` and `Price`. The contract treats\nthe two keywords symmetrically. New offers are created and existing offers\naccepted in either direction.\n\n```js\n{ give: { Asset: simoleans(5) }, want: { Price: quatloos(3) } }\n{ give: { Price: quatloos(8) }, want: { Asset: simoleans(3) } }\n```", "mimetype": "text/plain", "start_char_idx": 813, "end_char_idx": 1129, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9780231e-4d63-4e0b-beac-49fedb952501": {"__data__": {"id_": "9780231e-4d63-4e0b-beac-49fedb952501", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ddd38a1-890a-4392-b82f-e894d27cd180", "node_type": "1", "metadata": {}, "hash": "e77ea9a1244bc43e4106d7e30b85bed3386afa78d7a5d101a11a1fec9bdd3de2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ba47921-f294-4961-b1ae-1c9a14f23885", "node_type": "1", "metadata": {}, "hash": "c3da1c750be26dad7d7fcc91c9bafba9b6ec8414668460b72957baf823dd0bb1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note: Here we used a shorthand for assets whose values are 5 simoleons, 3\nquatloos, 8 quatloos, and 3 simoleons. Elsewhere this might have been done\nby creating `amounts` inline (i.e. `AmountMath.make(quatloosBrand, 8n)`). Or by\ncreating `amounts` outside the proposal and assigning them to variables.\nFor example, `const quatloos8 = AmountMath.make(quatloosBrand, 8n);` and then using\n`quatloos8` as the value for `Price` in the second clause above.", "mimetype": "text/plain", "start_char_idx": 1131, "end_char_idx": 1581, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3ba47921-f294-4961-b1ae-1c9a14f23885": {"__data__": {"id_": "3ba47921-f294-4961-b1ae-1c9a14f23885", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9780231e-4d63-4e0b-beac-49fedb952501", "node_type": "1", "metadata": {}, "hash": "bc8611912065f39c0afaed08c58a79513b0d61df056523956e951bb9e8e95616", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74dcf7d1-8da7-4ff5-8189-f4fea9801171", "node_type": "1", "metadata": {}, "hash": "cff96e198319e949e072043c093a927523b2e0e8f6abbc7e7ca78aa1661bdf5f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `want` term is an exact amount to exchange, while the\n`give` term is a limit that may be improved on. This simple exchange does not\npartially fill orders.\n\nThe `publicFacet` is returned when the contract is started.\n\n## Instantiating SimpleExchange", "mimetype": "text/plain", "start_char_idx": 1583, "end_char_idx": 1835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74dcf7d1-8da7-4ff5-8189-f4fea9801171": {"__data__": {"id_": "74dcf7d1-8da7-4ff5-8189-f4fea9801171", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ba47921-f294-4961-b1ae-1c9a14f23885", "node_type": "1", "metadata": {}, "hash": "c3da1c750be26dad7d7fcc91c9bafba9b6ec8414668460b72957baf823dd0bb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40", "node_type": "1", "metadata": {}, "hash": "2b4b957da3b6c32c44dd374a0ca34178f49db163e1ca869de12179d3a1ccebe8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Instantiating SimpleExchange\n\n```js\nconst { publicFacet } = await E(zoe).startInstance(installation, {\n  Asset: moolaIssuer,\n  Price: simoleanIssuer\n});\nconst simpleExchangeInvitation = await E(publicFacet).makeInvitation();\nconst { instance } = await E(zoe).getInvitationDetails(\n  simpleExchangeInvitation\n);\nconst aliceInvitation = await E(publicFacet).makeInvitation();\n```\n\n## Adding an Order", "mimetype": "text/plain", "start_char_idx": 1804, "end_char_idx": 2204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40": {"__data__": {"id_": "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74dcf7d1-8da7-4ff5-8189-f4fea9801171", "node_type": "1", "metadata": {}, "hash": "cff96e198319e949e072043c093a927523b2e0e8f6abbc7e7ca78aa1661bdf5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "745547d4-01da-4117-aa6d-ee0c10dee422", "node_type": "1", "metadata": {}, "hash": "6368cb67570af59749e797a819251bcfa15749be2265750bd8dd3ca5a51f7a1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Adding an Order\n\nA user, Alice, escrows with Zoe to create a sell order. She wants to sell 3\nmoola and receive at least 4 simoleans in return:\n\n```js\nconst aliceSellOrderProposal = harden({\n  give: { Asset: AmountMath.make(moolaBrand, 3n) },\n  want: { Price: AmountMath.make(simoleanBrand, 4n) },\n  exit: { onDemand: null }\n});\n\nconst alicePayment = { Asset: aliceMoolaPayment };\n```\n\nAlice escrows her payment with Zoe to add her sell order to the exchange.", "mimetype": "text/plain", "start_char_idx": 2186, "end_char_idx": 2647, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "745547d4-01da-4117-aa6d-ee0c10dee422": {"__data__": {"id_": "745547d4-01da-4117-aa6d-ee0c10dee422", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40", "node_type": "1", "metadata": {}, "hash": "2b4b957da3b6c32c44dd374a0ca34178f49db163e1ca869de12179d3a1ccebe8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97", "node_type": "1", "metadata": {}, "hash": "14499b11b3e73e82bd9d70396d47f49cc2e2a945921fa8a74416c157e11b94a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst aliceSeat = await E(zoe).offer(\n  aliceInvitation,\n  aliceSellOrderProposal,\n  alicePayment\n);\n```\n\n## Buying an Order\n\nBob knows about the simple exchange, and hears about Alice's\noffer. It sounds like a good deal to him, so he checks the installation\nwith Zoe and sees the exchange is trading what he expects:", "mimetype": "text/plain", "start_char_idx": 2649, "end_char_idx": 2972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97": {"__data__": {"id_": "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "745547d4-01da-4117-aa6d-ee0c10dee422", "node_type": "1", "metadata": {}, "hash": "6368cb67570af59749e797a819251bcfa15749be2265750bd8dd3ca5a51f7a1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162", "node_type": "1", "metadata": {}, "hash": "57bad8d014de2726c89582142f72d51340a73bd14d1ecc6eb2666b2004a1ece7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobInvitation = E(publicFacet).makeInvitation();\nconst invitationIssuer = E(zoe).getInvitationIssuer();\nconst bobExclusiveInvitation = E(invitationIssuer).claim(bobInvitation);\nconst { instance, installation } = await E(zoe).getInvitationDetails(\n  bobExclusiveInvitation\n);\nconst bobIssuers = await E(zoe).getIssuers(instance);\n```", "mimetype": "text/plain", "start_char_idx": 2974, "end_char_idx": 3318, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162": {"__data__": {"id_": "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97", "node_type": "1", "metadata": {}, "hash": "14499b11b3e73e82bd9d70396d47f49cc2e2a945921fa8a74416c157e11b94a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c6e1f2d-6e49-4fde-a275-77a71c4563e8", "node_type": "1", "metadata": {}, "hash": "239d0625814083580d762dcdee28e6c0048e9c199c96edaa5bb27160dfae0ce8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Bob verifies the information is what he expects. He compares the\ninstallation he gets from the invitation with a canonical link he found in a\npublic directory he trusts.\n\n```js\nassert(\n  installation === simpleExchangeInstallation,\n  details`wrong installation`\n);\nassert(bobIssuers.Asset === moolaIssuer, details`wrong Asset issuer`);\nassert(bobIssuers.Price === simoleanIssuer, details`wrong Price issuer`);\n```\n\nBob has checked that everything is in order, so he fulfills the buy order:", "mimetype": "text/plain", "start_char_idx": 3320, "end_char_idx": 3809, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c6e1f2d-6e49-4fde-a275-77a71c4563e8": {"__data__": {"id_": "8c6e1f2d-6e49-4fde-a275-77a71c4563e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162", "node_type": "1", "metadata": {}, "hash": "57bad8d014de2726c89582142f72d51340a73bd14d1ecc6eb2666b2004a1ece7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf5de0dd-511e-4280-8f8d-cc0786afb2c0", "node_type": "1", "metadata": {}, "hash": "bc40d9956b0e560a4085bf7280ca1095955f3e377cf12420f5020fc1ce7d3fde", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst bobBuyOrderProposal = harden({\n  give: { Price: AmountMath.make(simoleanBrand, 7n) },\n  want: { Asset: AmountMath.make(moolaBrand, 3n) },\n  exit: { onDemand: null }\n});\n\nconst bobSimPayment = await E(bobSimoleanPurse).withdraw(\n  AmountMath(simoleanBrand, 7n)\n);\nconst bobPayments = { Price: bobSimPayment };\n\nconst bobSeat = await E(zoe).offer(\n  bobExclusiveInvitation,\n  bobBuyOrderProposal,\n  bobPayments\n);\n```\n\n## Payout", "mimetype": "text/plain", "start_char_idx": 3811, "end_char_idx": 4249, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf5de0dd-511e-4280-8f8d-cc0786afb2c0": {"__data__": {"id_": "bf5de0dd-511e-4280-8f8d-cc0786afb2c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c6e1f2d-6e49-4fde-a275-77a71c4563e8", "node_type": "1", "metadata": {}, "hash": "239d0625814083580d762dcdee28e6c0048e9c199c96edaa5bb27160dfae0ce8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4cc30a8-3253-412e-b35d-24d8d64e55e7", "node_type": "1", "metadata": {}, "hash": "f800c67be8ecdb2ceafbe4e8f0e53c46b0eb3901be03c8feb32d251e0bf6d42e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Payout\n\nWhen a match is made, the payout promise from a user's seat\nresolves to a promise for payment. For Bob:\n\n```js\nconst { Asset: bobAssetPayoutP, Price: bobPricePayoutP } =\n  await bobSeat.getPayouts();\nconst bobAssetPayout = await bobAssetPayoutP;\nconst bobMoolaGainAmount = await E(bobMoolaPurse).deposit(bobAssetPayout);\nconst bobPricePayout = await bobPricePayoutP;\nconst bobSimGainAmount = await E(bobSimPurse).deposit(bobPricePayout);\n```", "mimetype": "text/plain", "start_char_idx": 4240, "end_char_idx": 4692, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4cc30a8-3253-412e-b35d-24d8d64e55e7": {"__data__": {"id_": "a4cc30a8-3253-412e-b35d-24d8d64e55e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_simple-exchange.md", "node_type": "4", "metadata": {}, "hash": "f0bc9ce186eca5e6a3c6f65fa2b7bf9fc5ee393a1c17e25b64c883bba5577233", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf5de0dd-511e-4280-8f8d-cc0786afb2c0", "node_type": "1", "metadata": {}, "hash": "bc40d9956b0e560a4085bf7280ca1095955f3e377cf12420f5020fc1ce7d3fde", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Alice gets her payouts the same way. (The choice between `getPayouts()` and\n`getPayout(keyword)` is based on which is more convenient in each circumstance).\n\n```js\nconst aliceAssetPayout = await aliceSeat.getPayout('Asset');\nconst aliceMoolaGainAmount = aliceMoolaPurse.deposit(aliceAssetPayout);\nconst alicePricePayout = await aliceSeat.getPayout('Price');\nconst aliceSimGainAmount = aliceSimPurse.deposit(alicePricePayout);\n```", "mimetype": "text/plain", "start_char_idx": 4694, "end_char_idx": 5123, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "113bd1cd-1979-4781-a25b-a9a91f25f95e": {"__data__": {"id_": "113bd1cd-1979-4781-a25b-a9a91f25f95e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_use-obj-example.md", "node_type": "4", "metadata": {}, "hash": "b4bff4d4b06e9b55214fe2978b228850d027e89d4922a01c728158036b424fa5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d28314a6-5ed9-49c6-bac9-96cb927e22e6", "node_type": "1", "metadata": {}, "hash": "ff608bb9273e03d5af1a8dfae4926a027c23ac27a32b83a0b81a1003af5cf329", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Use Object Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/4e0aece631d8310c7ab8ef3f46fad8981f64d208/packages/zoe/test/unitTests/contracts/useObjExample.js) (Last updated: Jan 31, 2022)\n\n##### [View all contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 353, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d28314a6-5ed9-49c6-bac9-96cb927e22e6": {"__data__": {"id_": "d28314a6-5ed9-49c6-bac9-96cb927e22e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_use-obj-example.md", "node_type": "4", "metadata": {}, "hash": "b4bff4d4b06e9b55214fe2978b228850d027e89d4922a01c728158036b424fa5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "113bd1cd-1979-4781-a25b-a9a91f25f95e", "node_type": "1", "metadata": {}, "hash": "fd6017eccc350bf86c23dec441e1001a60ba4db3ba289475322c857ccfd16f1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This contract is an example of associating a particular ability\nwith ownership of a non-fungible token (NFT). In this case, ownership\nof a particular pixel NFT gives the user the ability to color that\npixel. Note that the NFT must be escrowed at the time for the coloring\nto succeed.", "mimetype": "text/plain", "start_char_idx": 355, "end_char_idx": 638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4db25c5a-9164-47e4-a2e0-09ead616c49e": {"__data__": {"id_": "4db25c5a-9164-47e4-a2e0-09ead616c49e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6fb5626-f8f1-469e-8a7b-ba59567c3933", "node_type": "1", "metadata": {}, "hash": "ea73eca0f76c4b9e2775e1221f2fa3b6ea075b1a221dd5bcaea9fc071534c479", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Vault Contract\n\n<Zoe-Version/>\n\n##### [View the code on Github](https://github.com/Agoric/agoric-sdk/blob/7d141a47b311363f099f496d4ed9b4d0f28c8fff/packages/inter-protocol/src/vaultFactory/vaultFactory.js) (Last updated: Aug 15, 2022)\n\n##### [View contracts on Github](https://github.com/Agoric/agoric-sdk/tree/master/packages/zoe/src/contracts)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6fb5626-f8f1-469e-8a7b-ba59567c3933": {"__data__": {"id_": "c6fb5626-f8f1-469e-8a7b-ba59567c3933", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4db25c5a-9164-47e4-a2e0-09ead616c49e", "node_type": "1", "metadata": {}, "hash": "889deea33790a584a7d7a21a58e3674a823ee0cd3ea23a97bfadac7d021036b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f621117f-c372-4634-9274-61659f7fda6d", "node_type": "1", "metadata": {}, "hash": "340d7480ff72a2d8b691e410ad794011e7e8099cb2b9da1bdceb6e8aec1fb526", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Vault is the primary mechanism for making `IST` (the Agoric stable-value\ncurrency) available to participants in the economy. It does this by issuing\nloans against supported types of collateral. The creator of the contract can\nadd new types of collateral. (This is expected to be under the control of\non-chain governance after the initial currencies are defined when the contract\nstarts up.)\n\n## Borrowers", "mimetype": "text/plain", "start_char_idx": 348, "end_char_idx": 756, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f621117f-c372-4634-9274-61659f7fda6d": {"__data__": {"id_": "f621117f-c372-4634-9274-61659f7fda6d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6fb5626-f8f1-469e-8a7b-ba59567c3933", "node_type": "1", "metadata": {}, "hash": "ea73eca0f76c4b9e2775e1221f2fa3b6ea075b1a221dd5bcaea9fc071534c479", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2960a8b5-b4f4-44d1-87a3-905c0d929256", "node_type": "1", "metadata": {}, "hash": "69100fb48ab9e5ca71c4c4207605ec7c1f9bf18f0f22b5f22d1af42114b002e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Borrowers open a **vault** by calling `makeVaultInvitation()`in the publicAPI to\nget an invitation. Their proposal specifies that they're giving a recognized\ncollateral type, and how much `IST` they want in return. The contract is\nparameterized with a collateralization rate per currency and borrowers can\nwithdraw up to that ratio. Other parameters control the interest rate. (Interest\nwill be automatically added to the vault's debt.) The contract also has", "mimetype": "text/plain", "start_char_idx": 758, "end_char_idx": 1216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2960a8b5-b4f4-44d1-87a3-905c0d929256": {"__data__": {"id_": "2960a8b5-b4f4-44d1-87a3-905c0d929256", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f621117f-c372-4634-9274-61659f7fda6d", "node_type": "1", "metadata": {}, "hash": "340d7480ff72a2d8b691e410ad794011e7e8099cb2b9da1bdceb6e8aec1fb526", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf43aa35-c360-4292-85f1-4e56c58db502", "node_type": "1", "metadata": {}, "hash": "05213520c86a243e491def3f84165618c6db8f4c6aa1cb1e90d7d89d4d15c994", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "access to a priceAuthority, which is an oracle monitoring the exchange value of\nthe collateral. If the value of a borrower's collateral ever falls below the\nminimum ratio, the vault will be liquidated. The liquidation approach is\npluggable and will be modifiable under the control of governance.", "mimetype": "text/plain", "start_char_idx": 1217, "end_char_idx": 1512, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf43aa35-c360-4292-85f1-4e56c58db502": {"__data__": {"id_": "cf43aa35-c360-4292-85f1-4e56c58db502", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2960a8b5-b4f4-44d1-87a3-905c0d929256", "node_type": "1", "metadata": {}, "hash": "69100fb48ab9e5ca71c4c4207605ec7c1f9bf18f0f22b5f22d1af42114b002e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a17e04b9-7a58-4b35-9e76-fccc8c945ef9", "node_type": "1", "metadata": {}, "hash": "36cf4dd4a995000e43672867223a0a907cffcbfaf39a4ee0a784dc85a94cd668", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When borrowers exercise an invitation and deposit collateral, they receive a\n`Vault` object and some tools useful to the wallet from the offerResults. The\n`Vault` has these methods: `{ makeAdjustBalancesInvitation, makeCloseInvitation,\ngetCollateralAmount, getDebtAmount, getLiquidationSeat, getLiquidationPromise\n}`.", "mimetype": "text/plain", "start_char_idx": 1514, "end_char_idx": 1831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a17e04b9-7a58-4b35-9e76-fccc8c945ef9": {"__data__": {"id_": "a17e04b9-7a58-4b35-9e76-fccc8c945ef9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf43aa35-c360-4292-85f1-4e56c58db502", "node_type": "1", "metadata": {}, "hash": "05213520c86a243e491def3f84165618c6db8f4c6aa1cb1e90d7d89d4d15c994", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0204222b-e741-48a5-843a-0b7f01352943", "node_type": "1", "metadata": {}, "hash": "b20d3664abd6ccb023c4cd17981fac6ba2e822ce12594a8f5958341d3e018040", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An `AdjustBalancesInvitation` allows the borrower to add or remove collateral\nor increase or decrease the loan balance. `CloseInvitation` allows the\nborrower to close their loan and withdraw any remaining collateral. The\n`liquidationPromise` allows the borrower to find out if/when the loan gets\nliquidated. The `liquidationSeat`'s `getPayoff()` or `getPayoffs()` allow the\nborrower to retrieve any proceeds above what's needed to repay the debt.", "mimetype": "text/plain", "start_char_idx": 1833, "end_char_idx": 2279, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0204222b-e741-48a5-843a-0b7f01352943": {"__data__": {"id_": "0204222b-e741-48a5-843a-0b7f01352943", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a17e04b9-7a58-4b35-9e76-fccc8c945ef9", "node_type": "1", "metadata": {}, "hash": "36cf4dd4a995000e43672867223a0a907cffcbfaf39a4ee0a784dc85a94cd668", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb", "node_type": "1", "metadata": {}, "hash": "8ae8798f17faf756d0f91bb791aeea6f1a0951cd43688642c4aaff553d7ff23a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`getCollateralAmount()` and `getDebtAmount()` reveal the named balances.", "mimetype": "text/plain", "start_char_idx": 2280, "end_char_idx": 2352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb": {"__data__": {"id_": "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0204222b-e741-48a5-843a-0b7f01352943", "node_type": "1", "metadata": {}, "hash": "b20d3664abd6ccb023c4cd17981fac6ba2e822ce12594a8f5958341d3e018040", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "735d0d24-7772-4f60-9cbb-76b8ffeb3676", "node_type": "1", "metadata": {}, "hash": "96a976d389a1a4135fb0815f386a6a7d3807e8a1f154a2ded70ec314f987bfbf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### adjustBalances", "mimetype": "text/plain", "start_char_idx": 2354, "end_char_idx": 2372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "735d0d24-7772-4f60-9cbb-76b8ffeb3676": {"__data__": {"id_": "735d0d24-7772-4f60-9cbb-76b8ffeb3676", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb", "node_type": "1", "metadata": {}, "hash": "8ae8798f17faf756d0f91bb791aeea6f1a0951cd43688642c4aaff553d7ff23a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52fe2b3e-7b58-4d9d-8327-95d36672bcf4", "node_type": "1", "metadata": {}, "hash": "ccb8f891a75c3f8dcc33ff7236bf4528d255a3080896c30e6afeb27fe3b01f08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The borrower can adjust their collateral and debt levels by exercising an\n`AdjustBalancesInvitation` with a proposal that specifies the amount of\n`Collateral` and `IST` that they will give and that they want (either keyword\ncan be in either position.) As long as the resulting balances would not violate\nthe required ratios and the withdrawals are within the loan's current balance,\nthe adjustments will be made. If the debt balance increases, `loanFee`", "mimetype": "text/plain", "start_char_idx": 2374, "end_char_idx": 2827, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52fe2b3e-7b58-4d9d-8327-95d36672bcf4": {"__data__": {"id_": "52fe2b3e-7b58-4d9d-8327-95d36672bcf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "735d0d24-7772-4f60-9cbb-76b8ffeb3676", "node_type": "1", "metadata": {}, "hash": "96a976d389a1a4135fb0815f386a6a7d3807e8a1f154a2ded70ec314f987bfbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a0f3428-0c06-494a-b559-5e9a8b902589", "node_type": "1", "metadata": {}, "hash": "ba5b57fdfa7a3677aa5fcf0a5d30a35db1f054ed88d83ad8282c1fd20681aa61", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "multiplied by the incremental debt will be added to the debt balance.", "mimetype": "text/plain", "start_char_idx": 2828, "end_char_idx": 2897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a0f3428-0c06-494a-b559-5e9a8b902589": {"__data__": {"id_": "5a0f3428-0c06-494a-b559-5e9a8b902589", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52fe2b3e-7b58-4d9d-8327-95d36672bcf4", "node_type": "1", "metadata": {}, "hash": "ccb8f891a75c3f8dcc33ff7236bf4528d255a3080896c30e6afeb27fe3b01f08", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd8c165a-2c55-49d0-99e6-66f304eb7c46", "node_type": "1", "metadata": {}, "hash": "c5b449cee0b9a7bbd359c55dfa176d3668f6a01b616251a756743243e26b9cd9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### closeInvitation\n\nThe borrower can close their loan by exercising a `closeInvitation`. The\nborrower must give at least the current `debtAmount` in order to close out the\nloan and retrieve their collateral. Since any excess will be returned, it is\nsafe to overpay to cover variations in pricing.\n\n### Interest and Liquidation\n\nParameters (subject to governance) specific to each collateral type set the\ninterest rate and required collateralization ratio.", "mimetype": "text/plain", "start_char_idx": 2899, "end_char_idx": 3355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd8c165a-2c55-49d0-99e6-66f304eb7c46": {"__data__": {"id_": "dd8c165a-2c55-49d0-99e6-66f304eb7c46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a0f3428-0c06-494a-b559-5e9a8b902589", "node_type": "1", "metadata": {}, "hash": "ba5b57fdfa7a3677aa5fcf0a5d30a35db1f054ed88d83ad8282c1fd20681aa61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc51c628-35c0-4e77-ab0c-927c64e8b003", "node_type": "1", "metadata": {}, "hash": "3941d1ed3eee3f8b469f26e6df005d09ddbe283ae7e1972e5b54a90927f6c8db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `liquidationMargin` is the `collateralizationRatio` required to open a vault\nand keep it open. If the ratio of current value of collateral (according to the\n`priceAuthority`, currently driven by the AMM) to the outstanding debt falls\nbelow `liquidationMargin`, the collateral will be sold off, the debt repaid, and\nany remainder returned to the borrower. So it's prudent for borrowers to\nover-collateralize so that price volatility and interest charges don't quickly\ndrive their loans into default.", "mimetype": "text/plain", "start_char_idx": 3357, "end_char_idx": 3859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc51c628-35c0-4e77-ab0c-927c64e8b003": {"__data__": {"id_": "fc51c628-35c0-4e77-ab0c-927c64e8b003", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd8c165a-2c55-49d0-99e6-66f304eb7c46", "node_type": "1", "metadata": {}, "hash": "c5b449cee0b9a7bbd359c55dfa176d3668f6a01b616251a756743243e26b9cd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d9a9209-01f0-439d-bd7d-41b5e40e4933", "node_type": "1", "metadata": {}, "hash": "78232ed7d6c0dbbec8a721e6ec2d29ce39d1bd235733431fefaa6cfc9726fb6a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `loanFee` (in basis points) is charged on the amount of `IST` issued when\nopening a loan or increasing the amount of a loan. The `interestRate` is an\nannual rate.\n\n`ChargingPeriod` and `recordingPeriod` are parameters of the Vault that apply\nto all loans. They can be adjusted (by governance) to change how frequently\ninterest is accrued, and how frequently interest is compounded.\n\n#### UI Support", "mimetype": "text/plain", "start_char_idx": 3861, "end_char_idx": 4263, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d9a9209-01f0-439d-bd7d-41b5e40e4933": {"__data__": {"id_": "6d9a9209-01f0-439d-bd7d-41b5e40e4933", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc51c628-35c0-4e77-ab0c-927c64e8b003", "node_type": "1", "metadata": {}, "hash": "3941d1ed3eee3f8b469f26e6df005d09ddbe283ae7e1972e5b54a90927f6c8db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e650292-7468-425e-832d-07a6b530fce6", "node_type": "1", "metadata": {}, "hash": "2d8cc6f5ccc726348f9e8946ccdb86f0f384da632a402562c6bdb05ef60dc253", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### UI Support\n\nThe following are returned in `offerResults` when calling `openLoan` for the\nbenefit of the user's [wallet](/guides/wallet/).\n\n     uiNotifier,\n     invitationMakers: { AdjustBalances, CloseVault }\n\n## Adding Collateral Types\n\nThe creatorFacet has a method `addVaultType()` that allows someone to add new\ncollateral types and specify the parameters for its loans.\n\n## Implementation Detail\n\n### Vats", "mimetype": "text/plain", "start_char_idx": 4248, "end_char_idx": 4664, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e650292-7468-425e-832d-07a6b530fce6": {"__data__": {"id_": "7e650292-7468-425e-832d-07a6b530fce6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d9a9209-01f0-439d-bd7d-41b5e40e4933", "node_type": "1", "metadata": {}, "hash": "78232ed7d6c0dbbec8a721e6ec2d29ce39d1bd235733431fefaa6cfc9726fb6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e442158-2cdf-4126-9538-782d478967c5", "node_type": "1", "metadata": {}, "hash": "035750f9cfbccf07503e40da50adbb04683f94a85e894eee3cd5c382eb61c42d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Implementation Detail\n\n### Vats\n\nCurrently the VaultFactory runs all the `vaults` in a single vat. We intend to split\nthe `vaults` into separate vats for better isolation. In order to allow the\nliquidation approach to be pluggable and to be visible to and changeable by\ngovernance, liquidation takes place in a separate vat.\n\n### Invitations\n\n#### makeLoan", "mimetype": "text/plain", "start_char_idx": 4630, "end_char_idx": 4989, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e442158-2cdf-4126-9538-782d478967c5": {"__data__": {"id_": "4e442158-2cdf-4126-9538-782d478967c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_guides_zoe_contracts_vault.md", "node_type": "4", "metadata": {}, "hash": "284d3485c69f92a129c52835a9d49d29fcbf1d534dfb44425ac2de279789df50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e650292-7468-425e-832d-07a6b530fce6", "node_type": "1", "metadata": {}, "hash": "2d8cc6f5ccc726348f9e8946ccdb86f0f384da632a402562c6bdb05ef60dc253", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Invitations\n\n#### makeLoan\n\nThe Vault's public API includes `makeVaultInvitation()` and\n`getCollaterals()`, as well as `getAMM()` and `getRunIssuer()`.\n`getCollaterals()` returns a list of the collateral types that are accepted.\n`getAmm()` returns the public facet of the AMM. `getRunIssuer()` provides access\nto the issuer of `IST` so anyone can hold, spend and recognize IST.\n`makeVaultInvitation()` is described above under [Borrowers](#borrowers)", "mimetype": "text/plain", "start_char_idx": 4959, "end_char_idx": 5413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b40e6e96-737c-4b56-8563-fbebdba057d8": {"__data__": {"id_": "b40e6e96-737c-4b56-8563-fbebdba057d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37856f6d-1b49-4e53-b763-8be318b6e4b9", "node_type": "1", "metadata": {}, "hash": "e388fbc65dbcdd5b9a867a7122821a1644e9341af5a9c4af1f6efcb835311b30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# VStorage Reference\n\nSee also:\n\n- [Querying VStorage](/guides/getting-started/contract-rpc#querying-vstorage)\n- [Publishing to chainStorage](/guides/zoe/pub-to-storage)\n- [x/vstorage module](https://github.com/Agoric/agoric-sdk/tree/003f0c2232815a8d64a3f9a5b05521a10160ce34/golang/cosmos/x/vstorage#readme)\n\n## vstorage: top level keys\n\nThe `published` and `bundles` keys are the most relevant to dapp development.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 415, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37856f6d-1b49-4e53-b763-8be318b6e4b9": {"__data__": {"id_": "37856f6d-1b49-4e53-b763-8be318b6e4b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b40e6e96-737c-4b56-8563-fbebdba057d8", "node_type": "1", "metadata": {}, "hash": "8d351d00db99fe8cd4dac280c248cc511539e6bd9e48985c7f52c2956f268309", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161", "node_type": "1", "metadata": {}, "hash": "9d1474da3f1237783ea7e3df7195ae0367010ee14779c9787c729ffe8a38e216", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      activityhash: 'historical',\n      beansOwing: 'swingset execution fee accounting',\n      bundles: 'MsgInstallBundle outcome',\n      egress: 'reserved for future use',\n      highPrioritySenders: 'a priority mechanism',\n      mailbox: 'reserved for future use',\n      published: 'for the chainStorage API; see below',\n    }\n```\n\n## vstorage: published.\\* keys", "mimetype": "text/plain", "start_char_idx": 417, "end_char_idx": 792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161": {"__data__": {"id_": "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37856f6d-1b49-4e53-b763-8be318b6e4b9", "node_type": "1", "metadata": {}, "hash": "e388fbc65dbcdd5b9a867a7122821a1644e9341af5a9c4af1f6efcb835311b30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e354ce0-6022-4526-bc43-b1c0925e1660", "node_type": "1", "metadata": {}, "hash": "92ea4657717f2e123a29bd65856fbc6a8e5b00bb8212b316f17b36006b6a2014", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: published.\\* keys\n\nThe following keys appear under `published`.\nsee also [Inter Protocol data](https://github.com/Agoric/agoric-sdk/tree/agoric-upgrade-13/packages/inter-protocol#reading-data-off-chain).", "mimetype": "text/plain", "start_char_idx": 762, "end_char_idx": 978, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2e354ce0-6022-4526-bc43-b1c0925e1660": {"__data__": {"id_": "2e354ce0-6022-4526-bc43-b1c0925e1660", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161", "node_type": "1", "metadata": {}, "hash": "9d1474da3f1237783ea7e3df7195ae0367010ee14779c9787c729ffe8a38e216", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4fd2456-c57e-4119-b8c0-03db9a14bd69", "node_type": "1", "metadata": {}, "hash": "a9d9e4bd7126a9c7c901ae2c4d9b8c16f6d45a46408e0ae3c05e9eb9131b1d72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      agoricNames: 'name service controlled by chain governance',\n      auction: 'see Inter Protocol',\n      boardAux: 'auxiliary data for brands etc. keyed by boardId (since #49 2023-09-21)',\n      committees: 'see Inter Protocol',\n      crabble: 'reserved by chain governance proposal #64 decided 2023-12-18',\n      kread: 'reserved by chain governance proposal #53 decided 2023-10-01',\n      priceFeed: 'see Inter Protocol',", "mimetype": "text/plain", "start_char_idx": 980, "end_char_idx": 1419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d4fd2456-c57e-4119-b8c0-03db9a14bd69": {"__data__": {"id_": "d4fd2456-c57e-4119-b8c0-03db9a14bd69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e354ce0-6022-4526-bc43-b1c0925e1660", "node_type": "1", "metadata": {}, "hash": "92ea4657717f2e123a29bd65856fbc6a8e5b00bb8212b316f17b36006b6a2014", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad7d17c7-d09f-40e1-8e3b-092618dce637", "node_type": "1", "metadata": {}, "hash": "ec46c207b7e5517931138d70d8f95db753346dc0e8d1448ed0cee4031513f16a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "provisionPool: 'provideds initial IST during smart wallet provisioning',\n      psm: 'see Inter Protocol',\n      reserve: 'see Inter Protocol',\n      vaultFactory: 'see Inter Protocol',\n      wallet: 'smart wallet status',\n    }\n```", "mimetype": "text/plain", "start_char_idx": 1426, "end_char_idx": 1657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad7d17c7-d09f-40e1-8e3b-092618dce637": {"__data__": {"id_": "ad7d17c7-d09f-40e1-8e3b-092618dce637", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4fd2456-c57e-4119-b8c0-03db9a14bd69", "node_type": "1", "metadata": {}, "hash": "a9d9e4bd7126a9c7c901ae2c4d9b8c16f6d45a46408e0ae3c05e9eb9131b1d72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de4b319b-389a-4db2-82c9-37b44c7b69ae", "node_type": "1", "metadata": {}, "hash": "34913fe2ea880e1bbc1b444261c979bbc6b4f555cdf0c4ac439569e9c940f958", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: agoricNames hubs\n\nagoricNames contains several other NameHubs.\nSee also [agoricNames](/guides/integration/name-services.html#agoricnames-agoricnamesadmin-well-known-names).\n\n```js\n['brand', 'installation', 'instance', 'issuer', 'oracleBrand', 'vbankAsset'];\n```\n\n## vstorage: well known contracts", "mimetype": "text/plain", "start_char_idx": 1659, "end_char_idx": 1968, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de4b319b-389a-4db2-82c9-37b44c7b69ae": {"__data__": {"id_": "de4b319b-389a-4db2-82c9-37b44c7b69ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad7d17c7-d09f-40e1-8e3b-092618dce637", "node_type": "1", "metadata": {}, "hash": "ec46c207b7e5517931138d70d8f95db753346dc0e8d1448ed0cee4031513f16a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cc8f9c9-df41-4baa-9b2f-15ba46551e50", "node_type": "1", "metadata": {}, "hash": "a44d033ec97b8cb101cdddd9e290d30b6f93818fe964f7d0714d19d301f7c96a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: well known contracts\n\n`published.agoricNames.installation` contains _Installations_ representing code of important contracts. The data at this key are the entries of the NameHub. Here we show the object comprised\nof those entries.\nSee also [agoricNames in vstorage](/guides/integration/name-services.html#agoricnames-in-vstorage)\nregarding un-marshalling the data using board IDs.", "mimetype": "text/plain", "start_char_idx": 1935, "end_char_idx": 2328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4cc8f9c9-df41-4baa-9b2f-15ba46551e50": {"__data__": {"id_": "4cc8f9c9-df41-4baa-9b2f-15ba46551e50", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de4b319b-389a-4db2-82c9-37b44c7b69ae", "node_type": "1", "metadata": {}, "hash": "34913fe2ea880e1bbc1b444261c979bbc6b4f555cdf0c4ac439569e9c940f958", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a36d5b9-46f0-4fa7-b118-4090c7c6202d", "node_type": "1", "metadata": {}, "hash": "dc98cf3f76943be652bda65e63f7bcadfd2cca680c4024b5858dbdf2e984b941", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      VaultFactory: Object @Alleged: BundleIDInstallation#board05815 {},\n      auctioneer: Object @Alleged: BundleIDInstallation#board04016 {},\n      binaryVoteCounter: Object @Alleged: BundleIDInstallation#board02314 {},\n      centralSupply: Object @Alleged: BundleIDInstallation#board0188 {},\n      committee: Object @Alleged: BundleIDInstallation#board00613 {},\n      contractGovernor: Object @Alleged: BundleIDInstallation#board02810 {},", "mimetype": "text/plain", "start_char_idx": 2330, "end_char_idx": 2783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1a36d5b9-46f0-4fa7-b118-4090c7c6202d": {"__data__": {"id_": "1a36d5b9-46f0-4fa7-b118-4090c7c6202d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cc8f9c9-df41-4baa-9b2f-15ba46551e50", "node_type": "1", "metadata": {}, "hash": "a44d033ec97b8cb101cdddd9e290d30b6f93818fe964f7d0714d19d301f7c96a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ad83664-60e9-49d7-95f2-88f2684405de", "node_type": "1", "metadata": {}, "hash": "477dcf2c864ddf4da61dfe817e061c4506641c2433c95fff46798ce0b0b7b54c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "econCommitteeCharter: Object @Alleged: BundleIDInstallation#board01422 {},\n      feeDistributor: Object @Alleged: BundleIDInstallation#board00917 {},\n      kreadCommitteeCharter: Object @Alleged: BundleIDInstallation#board01679 {},\n      kreadKit: Object @Alleged: BundleIDInstallation#board04980 {},\n      mintHolder: Object @Alleged: BundleIDInstallation#board02733 {},\n      priceAggregator: Object @Alleged: BundleIDInstallation#board02021 {},", "mimetype": "text/plain", "start_char_idx": 2790, "end_char_idx": 3237, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ad83664-60e9-49d7-95f2-88f2684405de": {"__data__": {"id_": "6ad83664-60e9-49d7-95f2-88f2684405de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a36d5b9-46f0-4fa7-b118-4090c7c6202d", "node_type": "1", "metadata": {}, "hash": "dc98cf3f76943be652bda65e63f7bcadfd2cca680c4024b5858dbdf2e984b941", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f56de17-39dc-4ad3-a0f1-c942d26e5616", "node_type": "1", "metadata": {}, "hash": "2d62599b6f55282b17a6ac5b99e0d33937b9f1599737056ad4e29e6ea2d5a2d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "provisionPool: Object @Alleged: BundleIDInstallation#board05311 {},\n      psm: Object @Alleged: BundleIDInstallation#board05432 {},\n      reserve: Object @Alleged: BundleIDInstallation#board00218 {},\n      scaledPriceAuthority: Object @Alleged: BundleIDInstallation#board04719 {},\n      walletFactory: Object @Alleged: BundleIDInstallation#board04312 {},\n    }\n```", "mimetype": "text/plain", "start_char_idx": 3244, "end_char_idx": 3608, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f56de17-39dc-4ad3-a0f1-c942d26e5616": {"__data__": {"id_": "4f56de17-39dc-4ad3-a0f1-c942d26e5616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ad83664-60e9-49d7-95f2-88f2684405de", "node_type": "1", "metadata": {}, "hash": "477dcf2c864ddf4da61dfe817e061c4506641c2433c95fff46798ce0b0b7b54c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245", "node_type": "1", "metadata": {}, "hash": "267a04d4980386b3817d657fcfffeb052e4a2854da79fe3613af85ca09b1baa7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`published.agoricNames.instance` contains _instances_ of important contracts.\nThe data at this key are the entries of the NameHub. Here we show the object comprised of those entries.", "mimetype": "text/plain", "start_char_idx": 3610, "end_char_idx": 3792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245": {"__data__": {"id_": "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f56de17-39dc-4ad3-a0f1-c942d26e5616", "node_type": "1", "metadata": {}, "hash": "2d62599b6f55282b17a6ac5b99e0d33937b9f1599737056ad4e29e6ea2d5a2d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e3b2933-8d4b-4bda-addc-97b8b76a1ced", "node_type": "1", "metadata": {}, "hash": "abee28c90bc2211fe332e2355c580d3c0ed772d7b58fd543ec813b5fd045257e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      'ATOM-USD price feed': Object @Alleged: InstanceHandle#board02963 {},\n      Crabble: Object @Alleged: InstanceHandle#board04395 {},\n      CrabbleCommittee: Object @Alleged: InstanceHandle#board02393 {},\n      CrabbleGovernor: Object @Alleged: InstanceHandle#board05396 {},\n      VaultFactory: Object @Alleged: InstanceHandle#board00360 {},\n      VaultFactoryGovernor: Object @Alleged: InstanceHandle#board03773 {},\n      auctioneer: Object @Alleged: InstanceHandle#board01759 {},", "mimetype": "text/plain", "start_char_idx": 3794, "end_char_idx": 4291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e3b2933-8d4b-4bda-addc-97b8b76a1ced": {"__data__": {"id_": "3e3b2933-8d4b-4bda-addc-97b8b76a1ced", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245", "node_type": "1", "metadata": {}, "hash": "267a04d4980386b3817d657fcfffeb052e4a2854da79fe3613af85ca09b1baa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c1c1db4-dcf8-4273-afb8-f227cb59a772", "node_type": "1", "metadata": {}, "hash": "fc67b27b0e1bf91945cc45ef6ce967214a9c733e1a4317784a0d2667c1123474", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "econCommitteeCharter: Object @Alleged: InstanceHandle#board04661 {},\n      economicCommittee: Object @Alleged: InstanceHandle#board04149 {},\n      feeDistributor: Object @Alleged: InstanceHandle#board05262 {},\n      kread: Object @Alleged: InstanceHandle#board04783 {},\n      kreadCommittee: Object @Alleged: InstanceHandle#board01985 {},\n      kreadCommitteeCharter: Object @Alleged: InstanceHandle#board06284 {},\n      provisionPool: Object @Alleged: InstanceHandle#board01664 {},", "mimetype": "text/plain", "start_char_idx": 4298, "end_char_idx": 4780, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c1c1db4-dcf8-4273-afb8-f227cb59a772": {"__data__": {"id_": "5c1c1db4-dcf8-4273-afb8-f227cb59a772", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e3b2933-8d4b-4bda-addc-97b8b76a1ced", "node_type": "1", "metadata": {}, "hash": "abee28c90bc2211fe332e2355c580d3c0ed772d7b58fd543ec813b5fd045257e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0984af3-8757-489a-98ab-4f06d49ff980", "node_type": "1", "metadata": {}, "hash": "789576833b8c26b511b1558902ec60a33d6875b7124870e6015c88d594d183da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "'psm-IST-DAI_axl': Object @Alleged: InstanceHandle#board01867 {},\n      'psm-IST-DAI_grv': Object @Alleged: InstanceHandle#board02568 {},\n      'psm-IST-USDC_axl': Object @Alleged: InstanceHandle#board05669 {},\n      'psm-IST-USDC_grv': Object @Alleged: InstanceHandle#board05970 {},\n      'psm-IST-USDT_axl': Object @Alleged: InstanceHandle#board02271 {},\n      'psm-IST-USDT_grv': Object @Alleged: InstanceHandle#board01272 {},\n      reserve: Object @Alleged: InstanceHandle#board06458 {},", "mimetype": "text/plain", "start_char_idx": 4787, "end_char_idx": 5278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0984af3-8757-489a-98ab-4f06d49ff980": {"__data__": {"id_": "f0984af3-8757-489a-98ab-4f06d49ff980", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c1c1db4-dcf8-4273-afb8-f227cb59a772", "node_type": "1", "metadata": {}, "hash": "fc67b27b0e1bf91945cc45ef6ce967214a9c733e1a4317784a0d2667c1123474", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0aa53712-717d-4550-a30c-346505fe1eaf", "node_type": "1", "metadata": {}, "hash": "cc332a5dfe54521c6767f2dccf28f4122becd4b9a85a140f89f0b9a5ae528606", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "reserveGovernor: Object @Alleged: InstanceHandle#board03365 {},\n      'scaledPriceAuthority-stATOM': Object @Alleged: InstanceHandle#board05892 {},\n      'stATOM-USD price feed': Object @Alleged: InstanceHandle#board04091 {},\n      walletFactory: Object @Alleged: InstanceHandle#board06366 {},\n    }\n```", "mimetype": "text/plain", "start_char_idx": 5285, "end_char_idx": 5588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0aa53712-717d-4550-a30c-346505fe1eaf": {"__data__": {"id_": "0aa53712-717d-4550-a30c-346505fe1eaf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0984af3-8757-489a-98ab-4f06d49ff980", "node_type": "1", "metadata": {}, "hash": "789576833b8c26b511b1558902ec60a33d6875b7124870e6015c88d594d183da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9277695-27eb-44f6-bca0-c535752b5295", "node_type": "1", "metadata": {}, "hash": "de61079065f8452710c50df5dc9a3252c175dd0ab7a93cb14263524fa65260c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: well-known assets\n\n`published.agoricNames.issuer` has Issuers of well-known assets.", "mimetype": "text/plain", "start_char_idx": 5590, "end_char_idx": 5686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9277695-27eb-44f6-bca0-c535752b5295": {"__data__": {"id_": "c9277695-27eb-44f6-bca0-c535752b5295", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0aa53712-717d-4550-a30c-346505fe1eaf", "node_type": "1", "metadata": {}, "hash": "cc332a5dfe54521c6767f2dccf28f4122becd4b9a85a140f89f0b9a5ae528606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a607224d-e269-46bb-b5fb-9616a34d9a20", "node_type": "1", "metadata": {}, "hash": "25f2d98efcccae7a8656f1e9d9cfe916adaf9d7c3cbb0a685c0f42ff8110f28c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      ATOM: Object @Alleged: ATOM issuer#board02656 {},\n      BLD: Object @Alleged: BLD issuer#board0592 {},\n      DAI_axl: Object @Alleged: DAI_axl issuer#board02437 {},\n      DAI_grv: Object @Alleged: DAI_grv issuer#board05039 {},\n      IST: Object @Alleged: IST issuer#board0223 {},\n      Invitation: Object @Alleged: Zoe Invitation issuer#board0371 {},\n      KREAdCHARACTER: Object @Alleged: KREAdCHARACTER issuer#board01386 {},\n      KREAdITEM: Object @Alleged: KREAdITEM issuer#board03687 {},", "mimetype": "text/plain", "start_char_idx": 5688, "end_char_idx": 6198, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a607224d-e269-46bb-b5fb-9616a34d9a20": {"__data__": {"id_": "a607224d-e269-46bb-b5fb-9616a34d9a20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9277695-27eb-44f6-bca0-c535752b5295", "node_type": "1", "metadata": {}, "hash": "de61079065f8452710c50df5dc9a3252c175dd0ab7a93cb14263524fa65260c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd2f6658-de00-4277-b6a3-3700c2b57252", "node_type": "1", "metadata": {}, "hash": "92ad44770f146498374d6a25d37e453b088a2fc979720a5a85ea8a5328b3be71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "USDC_axl: Object @Alleged: USDC_axl issuer#board05141 {},\n      USDC_grv: Object @Alleged: USDC_grv issuer#board00443 {},\n      USDT_axl: Object @Alleged: USDT_axl issuer#board06445 {},\n      USDT_grv: Object @Alleged: USDT_grv issuer#board01547 {},\n      stATOM: Object @Alleged: stATOM issuer#board00689 {},\n    }\n```", "mimetype": "text/plain", "start_char_idx": 6205, "end_char_idx": 6524, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd2f6658-de00-4277-b6a3-3700c2b57252": {"__data__": {"id_": "bd2f6658-de00-4277-b6a3-3700c2b57252", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a607224d-e269-46bb-b5fb-9616a34d9a20", "node_type": "1", "metadata": {}, "hash": "25f2d98efcccae7a8656f1e9d9cfe916adaf9d7c3cbb0a685c0f42ff8110f28c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "342bc2d6-9ff8-4d97-a404-ad3bf0581fef", "node_type": "1", "metadata": {}, "hash": "0ad5a7716604abbe41f74f211d4670dbcec9a50bdd360cb1ffac67d9f15b3488", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`published.agoricNames.brand` has the well-known Brands.", "mimetype": "text/plain", "start_char_idx": 6526, "end_char_idx": 6582, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "342bc2d6-9ff8-4d97-a404-ad3bf0581fef": {"__data__": {"id_": "342bc2d6-9ff8-4d97-a404-ad3bf0581fef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd2f6658-de00-4277-b6a3-3700c2b57252", "node_type": "1", "metadata": {}, "hash": "92ad44770f146498374d6a25d37e453b088a2fc979720a5a85ea8a5328b3be71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "528d860f-7245-40cb-9dc8-65f7c7d18f5b", "node_type": "1", "metadata": {}, "hash": "d6569b1e502038c51fed44b731df08243d8454507a569612907286b49e358fc3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      ATOM: Object @Alleged: ATOM brand#board05557 {},\n      BLD: Object @Alleged: BLD brand#board0566 {},\n      DAI_axl: Object @Alleged: DAI_axl brand#board05736 {},\n      DAI_grv: Object @Alleged: DAI_grv brand#board03138 {},\n      IST: Object @Alleged: IST brand#board0257 {},\n      Invitation: Object @Alleged: Zoe Invitation brand#board0074 {},\n      KREAdCHARACTER: Object @Alleged: KREAdCHARACTER brand#board03281 {},\n      KREAdITEM: Object @Alleged: KREAdITEM brand#board00282 {},", "mimetype": "text/plain", "start_char_idx": 6584, "end_char_idx": 7086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "528d860f-7245-40cb-9dc8-65f7c7d18f5b": {"__data__": {"id_": "528d860f-7245-40cb-9dc8-65f7c7d18f5b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "342bc2d6-9ff8-4d97-a404-ad3bf0581fef", "node_type": "1", "metadata": {}, "hash": "0ad5a7716604abbe41f74f211d4670dbcec9a50bdd360cb1ffac67d9f15b3488", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6c21f70-0bf6-4f5e-a944-b2a701a881f3", "node_type": "1", "metadata": {}, "hash": "ffd463d09b874ad7c401244b2ef4b84442aca671e6c5b81dc7aae691ab3e0a75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "USDC_axl: Object @Alleged: USDC_axl brand#board03040 {},\n      USDC_grv: Object @Alleged: USDC_grv brand#board04542 {},\n      USDT_axl: Object @Alleged: USDT_axl brand#board01744 {},\n      USDT_grv: Object @Alleged: USDT_grv brand#board03446 {},\n      stATOM: Object @Alleged: stATOM brand#board00990 {},\n      timer: Object @Alleged: timerBrand#board0425 {},\n    }\n```", "mimetype": "text/plain", "start_char_idx": 7093, "end_char_idx": 7462, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6c21f70-0bf6-4f5e-a944-b2a701a881f3": {"__data__": {"id_": "f6c21f70-0bf6-4f5e-a944-b2a701a881f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "528d860f-7245-40cb-9dc8-65f7c7d18f5b", "node_type": "1", "metadata": {}, "hash": "d6569b1e502038c51fed44b731df08243d8454507a569612907286b49e358fc3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7886f90-d51e-4895-81a6-b14efb24b450", "node_type": "1", "metadata": {}, "hash": "92e2d402e849024863147b4a314b07170ef3dd5a03f9c9819fa9e37565b577c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`published.agoricNames.oracleBrand` has the well-known oracle brands.\n\n```js\n    {\n      ATOM: Object @Alleged: Brand#board03935 {},\n      USD: Object @Alleged: Brand#board01034 {},\n      stATOM: Object @Alleged: Brand#board04388 {},\n    }\n```\n\n`published.agoricNames.vbankAsset` shows denoms registered with the vbank.", "mimetype": "text/plain", "start_char_idx": 7464, "end_char_idx": 7783, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7886f90-d51e-4895-81a6-b14efb24b450": {"__data__": {"id_": "c7886f90-d51e-4895-81a6-b14efb24b450", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6c21f70-0bf6-4f5e-a944-b2a701a881f3", "node_type": "1", "metadata": {}, "hash": "ffd463d09b874ad7c401244b2ef4b84442aca671e6c5b81dc7aae691ab3e0a75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb125fed-89c0-4ffa-8d8a-f9eb2082938e", "node_type": "1", "metadata": {}, "hash": "d2b5debc3376fef04ddc2bf797215c885d201cae25eba5cf2c2864c84e8da9ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n// ...\n      'ibc/42225F147137DDEB5FEF0F1D0A92F2AD57557AFA2C4D6F30B21E0D983001C002': {\n        brand: Object @Alleged: stATOM brand#board00990 {},\n        denom: 'ibc/42225F147137DDEB5FEF0F1D0A92F2AD57557AFA2C4D6F30B21E0D983001C002',\n        displayInfo: {\n          assetKind: 'nat',\n          decimalPlaces: 6,\n        },\n        issuer: Object @Alleged: stATOM issuer#board00689 {},\n        issuerName: 'stATOM',\n        proposedName: 'stATOM',\n      },\n// ...", "mimetype": "text/plain", "start_char_idx": 7785, "end_char_idx": 8260, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb125fed-89c0-4ffa-8d8a-f9eb2082938e": {"__data__": {"id_": "bb125fed-89c0-4ffa-8d8a-f9eb2082938e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7886f90-d51e-4895-81a6-b14efb24b450", "node_type": "1", "metadata": {}, "hash": "92e2d402e849024863147b4a314b07170ef3dd5a03f9c9819fa9e37565b577c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69e09aff-a76f-496a-a69e-175a5f24c2b6", "node_type": "1", "metadata": {}, "hash": "6359564ba15da32d94e29cc626a794992994ae0144937b6250907eec8970ce4d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n// ...\n      'ibc/BA313C4A19DFBF943586C0387E6B11286F9E416B4DD27574E6909CABE0E342FA': {\n        brand: Object @Alleged: ATOM brand#board05557 {},\n        denom: 'ibc/BA313C4A19DFBF943586C0387E6B11286F9E416B4DD27574E6909CABE0E342FA',\n        displayInfo: {\n          assetKind: 'nat',\n          decimalPlaces: 6,\n        },\n        issuer: Object @Alleged: ATOM issuer#board02656 {},\n        issuerName: 'ATOM',\n        proposedName: 'ATOM',\n      },\n// ...\n      ubld: {", "mimetype": "text/plain", "start_char_idx": 8251, "end_char_idx": 8723, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "69e09aff-a76f-496a-a69e-175a5f24c2b6": {"__data__": {"id_": "69e09aff-a76f-496a-a69e-175a5f24c2b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb125fed-89c0-4ffa-8d8a-f9eb2082938e", "node_type": "1", "metadata": {}, "hash": "d2b5debc3376fef04ddc2bf797215c885d201cae25eba5cf2c2864c84e8da9ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c", "node_type": "1", "metadata": {}, "hash": "f314ada26c3349aceacd22ce005a72b7fdac774ae150525393b9a2226f50dca0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n// ...\n      ubld: {\n        brand: Object @Alleged: BLD brand#board0566 {},\n        denom: 'ubld',\n        displayInfo: {\n          assetKind: 'nat',\n          decimalPlaces: 6,\n        },\n        issuer: Object @Alleged: BLD issuer#board0592 {},\n        issuerName: 'BLD',\n        proposedName: 'Agoric staking token',\n      },\n      uist: {\n        brand: Object @Alleged: IST brand#board0257 {},\n        denom: 'uist',\n        displayInfo: {\n          assetKind: 'nat',\n          decimalPlaces: 6,", "mimetype": "text/plain", "start_char_idx": 8700, "end_char_idx": 9204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c": {"__data__": {"id_": "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69e09aff-a76f-496a-a69e-175a5f24c2b6", "node_type": "1", "metadata": {}, "hash": "6359564ba15da32d94e29cc626a794992994ae0144937b6250907eec8970ce4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "107e2baf-7a3d-4ed5-803d-513fe7a9a681", "node_type": "1", "metadata": {}, "hash": "a8340678b0157216915b92c948872992a8e8719112d060b394297050bf17ea00", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "decimalPlaces: 6,\n        },\n        issuer: Object @Alleged: IST issuer#board0223 {},\n        issuerName: 'IST',\n        proposedName: 'Agoric stable token',\n      },\n    }\n```", "mimetype": "text/plain", "start_char_idx": 9187, "end_char_idx": 9364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "107e2baf-7a3d-4ed5-803d-513fe7a9a681": {"__data__": {"id_": "107e2baf-7a3d-4ed5-803d-513fe7a9a681", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c", "node_type": "1", "metadata": {}, "hash": "f314ada26c3349aceacd22ce005a72b7fdac774ae150525393b9a2226f50dca0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "620ce043-a20f-4ffe-bc62-cb3f2ebb496f", "node_type": "1", "metadata": {}, "hash": "fb0b9490a8a60aec55505979ded1c227f77b71c01f7cc334310d1f90f5073743", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## boardAux\n\nThe keys under `published.boardAux` are board IDs.\nHere we show a handful.\n\n```js\n['board00282', 'board0074', 'board01744'];\n```\n\nThe data are auxiliary info about objects in the board;\nfor example, displayInfo of brands, including assetKind.", "mimetype": "text/plain", "start_char_idx": 9366, "end_char_idx": 9621, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "620ce043-a20f-4ffe-bc62-cb3f2ebb496f": {"__data__": {"id_": "620ce043-a20f-4ffe-bc62-cb3f2ebb496f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "107e2baf-7a3d-4ed5-803d-513fe7a9a681", "node_type": "1", "metadata": {}, "hash": "a8340678b0157216915b92c948872992a8e8719112d060b394297050bf17ea00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50", "node_type": "1", "metadata": {}, "hash": "44ceaf91b7fdae63fbc2d46bb8cae8ef97eda2a75d8ec0cbcf550f5243181dd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      board0074: {\n        allegedName: 'Zoe Invitation',\n        displayInfo: {\n          assetKind: 'set',\n        },\n      },\n      board01744: {\n        allegedName: 'USDT_axl',\n        displayInfo: {\n          assetKind: 'nat',\n          decimalPlaces: 6,\n        },\n      },\n    }\n```\n\n## vstorage: provisionPool", "mimetype": "text/plain", "start_char_idx": 9623, "end_char_idx": 9953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50": {"__data__": {"id_": "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "620ce043-a20f-4ffe-bc62-cb3f2ebb496f", "node_type": "1", "metadata": {}, "hash": "fb0b9490a8a60aec55505979ded1c227f77b71c01f7cc334310d1f90f5073743", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1757b5de-0b13-43f7-aa81-c0616f742dc3", "node_type": "1", "metadata": {}, "hash": "9ae79c483644d5347ee836b8f1c705cae47f23ebde2dfe1e42a445dc996583e2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: provisionPool\n\n`published.provisionPool.governance` gives current values of governed params.\nSee similar data in [Inter Protocol data](https://github.com/Agoric/agoric-sdk/tree/agoric-upgrade-13/packages/inter-protocol#reading-data-off-chain).", "mimetype": "text/plain", "start_char_idx": 9927, "end_char_idx": 10183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1757b5de-0b13-43f7-aa81-c0616f742dc3": {"__data__": {"id_": "1757b5de-0b13-43f7-aa81-c0616f742dc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50", "node_type": "1", "metadata": {}, "hash": "44ceaf91b7fdae63fbc2d46bb8cae8ef97eda2a75d8ec0cbcf550f5243181dd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7153725-b2b1-4016-8634-d24c9915b0f5", "node_type": "1", "metadata": {}, "hash": "07cac66d2a94ce54eca62d70fb6d44ff3f618b150fb5c2ed87c4b8dd34ee9313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      current: {\n        Electorate: {\n          type: 'invitation',\n          value: {\n            brand: Object @Alleged: Zoe Invitation brand#board0074 {},\n            value: [\n              {\n                description: 'questionPoser',\n                handle: Object @Alleged: InvitationHandle#board00848 {},\n                installation: Object @Alleged: BundleIDInstallation#board00613 {},\n                instance: Object @Alleged: InstanceHandle#board04149 {},\n              },", "mimetype": "text/plain", "start_char_idx": 10185, "end_char_idx": 10684, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7153725-b2b1-4016-8634-d24c9915b0f5": {"__data__": {"id_": "f7153725-b2b1-4016-8634-d24c9915b0f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1757b5de-0b13-43f7-aa81-c0616f742dc3", "node_type": "1", "metadata": {}, "hash": "9ae79c483644d5347ee836b8f1c705cae47f23ebde2dfe1e42a445dc996583e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcf65c94-cc9d-451a-931f-283f6c8819cc", "node_type": "1", "metadata": {}, "hash": "1fb6db0e24b4a29481bdfb47fbc3d42738bd15d1d37ef20a5c70a98ded4646ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n            ],\n          },\n        },\n        PerAccountInitialAmount: {\n          type: 'amount',\n          value: {\n            brand: Object @Alleged: IST brand#board0257 {},\n            value: 250000n,\n          },\n        },\n      },\n    }\n```", "mimetype": "text/plain", "start_char_idx": 10682, "end_char_idx": 10934, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bcf65c94-cc9d-451a-931f-283f6c8819cc": {"__data__": {"id_": "bcf65c94-cc9d-451a-931f-283f6c8819cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7153725-b2b1-4016-8634-d24c9915b0f5", "node_type": "1", "metadata": {}, "hash": "07cac66d2a94ce54eca62d70fb6d44ff3f618b150fb5c2ed87c4b8dd34ee9313", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffad30d3-bae1-44ba-ae3f-f327ce03acee", "node_type": "1", "metadata": {}, "hash": "8310e189d1ade7b3bda9ba0cf123d42b6491d96250ca24dce9ba6b735ebd68b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`published.provisionPool.metrics`\n\n```js\n    {\n      totalMintedConverted: {\n        brand: Object @Alleged: IST brand#board0257 {},\n        value: 20000000n,\n      },\n      totalMintedProvided: {\n        brand: Object @Alleged: IST brand#board0257 {},\n        value: 2750000n,\n      },\n      walletsProvisioned: 11n,\n    }\n```\n\n## vstorage: wallet", "mimetype": "text/plain", "start_char_idx": 10936, "end_char_idx": 11284, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ffad30d3-bae1-44ba-ae3f-f327ce03acee": {"__data__": {"id_": "ffad30d3-bae1-44ba-ae3f-f327ce03acee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcf65c94-cc9d-451a-931f-283f6c8819cc", "node_type": "1", "metadata": {}, "hash": "1fb6db0e24b4a29481bdfb47fbc3d42738bd15d1d37ef20a5c70a98ded4646ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d201e2a-e171-44a4-8afc-c17a68f95f0f", "node_type": "1", "metadata": {}, "hash": "a4465fc770f602a55f5b8098b9d50d105fc76bb8d9fad1435857a400a9766265", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## vstorage: wallet\n\nThe address of each provisioned smart wallet is a key under `published.wallet`.\nHere we show a handful.\nSee also: [Smart Wallet VStorage Topics](/guides/getting-started/contract-rpc#smart-wallet-vstorage-topics)\n\n```js\n[\n  'agoric1890064p6j3xhzzdf8daknd6kpvhw766ds8flgw',\n  'agoric1ee9hr0jyrxhy999y755mp862ljgycmwyp4pl7q',\n  'agoric1enwuyn2hzyyvt39x87tk9rhlkpqtyv9haj7mgs'\n];\n```\n\nThe `.current` child has current wallet status. For example:", "mimetype": "text/plain", "start_char_idx": 11265, "end_char_idx": 11727, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d201e2a-e171-44a4-8afc-c17a68f95f0f": {"__data__": {"id_": "9d201e2a-e171-44a4-8afc-c17a68f95f0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffad30d3-bae1-44ba-ae3f-f327ce03acee", "node_type": "1", "metadata": {}, "hash": "8310e189d1ade7b3bda9ba0cf123d42b6491d96250ca24dce9ba6b735ebd68b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa254422-7345-4984-b4e9-97bbadc641cf", "node_type": "1", "metadata": {}, "hash": "5bb9ba97d6fe3b7c55fa1ce64b8b2e59f0db8ecd3a7832fadd2b4ca7d57a6b9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      liveOffers: [],\n      offerToPublicSubscriberPaths: [],\n      offerToUsedInvitation: [],\n      purses: [\n        {\n          balance: {\n            brand: Object @Alleged: Zoe Invitation brand#board0074 {},\n            value: [\n              {\n                description: 'Voter0',\n                handle: Object @Alleged: InvitationHandle#null {},\n                installation: Object @Alleged: BundleIDInstallation#board00613 {},", "mimetype": "text/plain", "start_char_idx": 11729, "end_char_idx": 12179, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa254422-7345-4984-b4e9-97bbadc641cf": {"__data__": {"id_": "aa254422-7345-4984-b4e9-97bbadc641cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d201e2a-e171-44a4-8afc-c17a68f95f0f", "node_type": "1", "metadata": {}, "hash": "a4465fc770f602a55f5b8098b9d50d105fc76bb8d9fad1435857a400a9766265", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53e44bfb-2668-42d3-b418-f657f22a8a87", "node_type": "1", "metadata": {}, "hash": "314f2104859493e2cdb8dc8fbccca4659b8d6a943ca52181a7f75d80b099692c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "instance: Object @Alleged: InstanceHandle#null {},\n              },\n              {\n                description: 'charter member invitation',\n                handle: Object @Alleged: InvitationHandle#null {},\n                installation: Object @Alleged: BundleIDInstallation#board01679 {},\n                instance: Object @Alleged: InstanceHandle#null {},\n              },\n            ],\n          },\n          brand: Object @Alleged: Zoe Invitation brand#board0074 {},\n        },\n      ],", "mimetype": "text/plain", "start_char_idx": 12196, "end_char_idx": 12688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53e44bfb-2668-42d3-b418-f657f22a8a87": {"__data__": {"id_": "53e44bfb-2668-42d3-b418-f657f22a8a87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa254422-7345-4984-b4e9-97bbadc641cf", "node_type": "1", "metadata": {}, "hash": "5bb9ba97d6fe3b7c55fa1ce64b8b2e59f0db8ecd3a7832fadd2b4ca7d57a6b9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300", "node_type": "1", "metadata": {}, "hash": "547053d4689d753a08c6ac1a9593bf3c29ff82f0b1b5111fc92730b6f6ff6ba4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "},\n      ],\n    }\n```", "mimetype": "text/plain", "start_char_idx": 12677, "end_char_idx": 12698, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300": {"__data__": {"id_": "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53e44bfb-2668-42d3-b418-f657f22a8a87", "node_type": "1", "metadata": {}, "hash": "314f2104859493e2cdb8dc8fbccca4659b8d6a943ca52181a7f75d80b099692c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84dc6385-6428-4cca-9248-5e32abcd4de2", "node_type": "1", "metadata": {}, "hash": "d2b8f9c93e9b23dda3dea4fe75a0819cf0ab24b0b5d03dca126b97ec486775a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The `published.wallet.${address}` key has wallet's last update. For example:", "mimetype": "text/plain", "start_char_idx": 12700, "end_char_idx": 12776, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84dc6385-6428-4cca-9248-5e32abcd4de2": {"__data__": {"id_": "84dc6385-6428-4cca-9248-5e32abcd4de2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300", "node_type": "1", "metadata": {}, "hash": "547053d4689d753a08c6ac1a9593bf3c29ff82f0b1b5111fc92730b6f6ff6ba4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5498d3e8-7809-4ffe-9f81-e47f34ef8c47", "node_type": "1", "metadata": {}, "hash": "e90b76ee9113836986bf41665b11af50fad7317c4a0d2471a9fcf8455ac0cdde", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n    {\n      currentAmount: {\n        brand: Object @Alleged: Zoe Invitation brand#board0074 {},\n        value: [\n          {\n            description: 'Voter0',\n            handle: Object @Alleged: InvitationHandle#null {},\n            installation: Object @Alleged: BundleIDInstallation#board00613 {},\n            instance: Object @Alleged: InstanceHandle#null {},\n          },\n          {\n            description: 'charter member invitation',", "mimetype": "text/plain", "start_char_idx": 12778, "end_char_idx": 13227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5498d3e8-7809-4ffe-9f81-e47f34ef8c47": {"__data__": {"id_": "5498d3e8-7809-4ffe-9f81-e47f34ef8c47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_vstorage-ref.md", "node_type": "4", "metadata": {}, "hash": "25d3e93fc526d2a53bf911d402e2cae1823c0acdc7598ef9310406f88d640e81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84dc6385-6428-4cca-9248-5e32abcd4de2", "node_type": "1", "metadata": {}, "hash": "d2b8f9c93e9b23dda3dea4fe75a0819cf0ab24b0b5d03dca126b97ec486775a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "handle: Object @Alleged: InvitationHandle#null {},\n            installation: Object @Alleged: BundleIDInstallation#board01679 {},\n            instance: Object @Alleged: InstanceHandle#null {},\n          },\n        ],\n      },\n      updated: 'balance',\n    }\n```", "mimetype": "text/plain", "start_char_idx": 13240, "end_char_idx": 13501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "109b4b15-37f3-492d-81c6-745cf8a7b4be": {"__data__": {"id_": "109b4b15-37f3-492d-81c6-745cf8a7b4be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_assets_index.md", "node_type": "4", "metadata": {}, "hash": "26623cf71122927eb0dbf1153ae5e7a5609d3bacbba30d5b2ef81dbc8476a3c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Used to store image files for documents in Main.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 48, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4e5b88a-86ea-44e0-ba0f-3e72e1af992b": {"__data__": {"id_": "a4e5b88a-86ea-44e0-ba0f-3e72e1af992b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5d10ba3-4126-491c-9fa9-b54c46cc1827", "node_type": "1", "metadata": {}, "hash": "8282a8f81b9829a6f3e73870d884dd9e94466bd5dbb09a7935aefe3aae055ae0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# AmountMath Object\n\nLibrary for manipulating and analyzing **[Amounts](./ertp-data-types#amount)**.\n\n## Importing and Using AmountMath\n\nTo use **AmountMath**, import it from ERTP:\n\n- `import { AmountMath } from '@agoric/ertp';`\n\n## Brand Parameters", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 249, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5d10ba3-4126-491c-9fa9-b54c46cc1827": {"__data__": {"id_": "c5d10ba3-4126-491c-9fa9-b54c46cc1827", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4e5b88a-86ea-44e0-ba0f-3e72e1af992b", "node_type": "1", "metadata": {}, "hash": "a97059ba4c95b0105d10495f5df9487d970ce3e77580df4ce590db2271fa81cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43e9dfd4-b906-4ddc-83ab-e019463375b7", "node_type": "1", "metadata": {}, "hash": "f5ce5714657ae573da7a46fa7f11705428d89913ec7f4f60bf3e5568fa47e0db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that many **AmountMath** methods have an optional **[Brand](./brand)** parameter.\nFor these methods, you should pass in a **Brand** argument you got from when\nyou need to do an \"absolute\" check on the **Brand** within an **[Amount](./ertp-data-types#amount)** parameter.\nIn this case, you want to use the **Brand** you got from the **Issuer** (or from Zoe)\nas the optional parameter to compare the **Amount** **Brand**(s) to. If they are\nnot equal, an error is thrown and no changes are made.", "mimetype": "text/plain", "start_char_idx": 251, "end_char_idx": 748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "43e9dfd4-b906-4ddc-83ab-e019463375b7": {"__data__": {"id_": "43e9dfd4-b906-4ddc-83ab-e019463375b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5d10ba3-4126-491c-9fa9-b54c46cc1827", "node_type": "1", "metadata": {}, "hash": "8282a8f81b9829a6f3e73870d884dd9e94466bd5dbb09a7935aefe3aae055ae0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3d53e8f-f0ff-468d-8750-2fad35125b52", "node_type": "1", "metadata": {}, "hash": "56ff70909851efd826c035441d586ae35d36de0388e237a5c8f30596329aeddb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AmountMath.make(brand, allegedValue)\n\n- **brand**: **[Brand](./brand)**\n- **allegedValue**: **[AmountValue](./ertp-data-types#amountvalue)**\n- Returns: **[Amount](./ertp-data-types#amount)**\n\nCreates an **Amount** from a given **Brand** and **AmountValue**.\n\n```js\nconst bid = AmountMath.make(quatloosBrand, 300n);\n```\n\n## AmountMath.coerce(brand, allegedAmount)\n\n- **brand**: **[Brand](./brand)**\n- **allegedAmount**: **[Amount](./ertp-data-types#amount)**\n- Returns: **Amount**", "mimetype": "text/plain", "start_char_idx": 750, "end_char_idx": 1232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3d53e8f-f0ff-468d-8750-2fad35125b52": {"__data__": {"id_": "b3d53e8f-f0ff-468d-8750-2fad35125b52", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43e9dfd4-b906-4ddc-83ab-e019463375b7", "node_type": "1", "metadata": {}, "hash": "f5ce5714657ae573da7a46fa7f11705428d89913ec7f4f60bf3e5568fa47e0db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f", "node_type": "1", "metadata": {}, "hash": "db5fbd95b313422888b4aff528f7f16af0699729e5529031729f407658e455d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Verifies that an **Amount** is for the specified _brand_ and returns an equivalent **Amount**.\nIf the **Amount** is not for the specified **Brand**, an error is thrown.\n\n```js\nconst verifiedAmount = AmountMath.coerce(quatloosBrand, bid);\n```\n\n## AmountMath.getValue(brand, amount)\n\n- **brand**: **[Brand](./brand)**\n- **amount**: **[Amount](./ertp-data-types#amount)**\n- Returns: **[AmountValue](./ertp-data-types#amountvalue)**\n\nReturns the **AmountValue** from the given **Amount**.", "mimetype": "text/plain", "start_char_idx": 1234, "end_char_idx": 1718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f": {"__data__": {"id_": "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3d53e8f-f0ff-468d-8750-2fad35125b52", "node_type": "1", "metadata": {}, "hash": "56ff70909851efd826c035441d586ae35d36de0388e237a5c8f30596329aeddb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f957095d-915f-4265-aef3-c012b6b70976", "node_type": "1", "metadata": {}, "hash": "29e4eafe9375881fb4cb96b8a04a61a1444950c6e1f78d5e5c869c5ea173eee8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quatloos123 = AmountMath.make(quatloosBrand, 123n);\n\n// Returns 123n\nAmountMath.getValue(quatloosBrand, quatloos123);\n```\n\n## AmountMath.makeEmpty(brand, assetKind)\n\n- **brand**: **[Brand](./brand)**\n- **assetKind**: **[AssetKind](./ertp-data-types#assetkind)**\n- Returns: **[Amount](./ertp-data-types#amount)**", "mimetype": "text/plain", "start_char_idx": 1720, "end_char_idx": 2043, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f957095d-915f-4265-aef3-c012b6b70976": {"__data__": {"id_": "f957095d-915f-4265-aef3-c012b6b70976", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f", "node_type": "1", "metadata": {}, "hash": "db5fbd95b313422888b4aff528f7f16af0699729e5529031729f407658e455d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1995ad-9381-4687-8bc0-32e8353fc47f", "node_type": "1", "metadata": {}, "hash": "4a5820caff2058e9e7f6809b5e0ca896457ab14d788c5ff894f049b40f45ff44", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns the **Amount** representing an empty **Amount** for the _brand_ parameter's\n**Brand**. This is the identity element for **AmountMath.add()**\nand **AmountMath.subtract()**. The empty **AmountValue** depends\non whether the _assetKind_ is **AssetKind.NAT** (`0n`), **AssetKind.COPY_SET** (`[]`), or **AssetKind.COPY_BAG** (`[]`).\n\n```js\n// Returns an amount with 0n as its value\nconst empty = AmountMath.makeEmpty(quatloosBrand, AssetKind.NAT);\n```\n\n## AmountMath.makeEmptyFromAmount(amount)", "mimetype": "text/plain", "start_char_idx": 2045, "end_char_idx": 2541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc1995ad-9381-4687-8bc0-32e8353fc47f": {"__data__": {"id_": "fc1995ad-9381-4687-8bc0-32e8353fc47f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f957095d-915f-4265-aef3-c012b6b70976", "node_type": "1", "metadata": {}, "hash": "29e4eafe9375881fb4cb96b8a04a61a1444950c6e1f78d5e5c869c5ea173eee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca07d778-0566-48df-806f-63497a410ce9", "node_type": "1", "metadata": {}, "hash": "7ae0ccee6de798eaa6ec094b00266bd81993394211b2775dac18284ca8c393ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **amount**: **[Amount](./ertp-data-types#amount)**\n- Returns: **Amount**\n\nReturns an empty **Amount** for the **Brand** of the _amount_ parameter.\n\n```js\n// bid = { brand: quatloosBrand, value: 300n }\nconst bid = AmountMath.make(quatloosBrand, 300n);\n// Returns { brand: quatloosBrand, value: 0n }\nconst zeroQuatloos = AmountMath.makeEmptyFromAmount(bid);\n```\n\n## AmountMath.isEmpty(amount, brand?)", "mimetype": "text/plain", "start_char_idx": 2543, "end_char_idx": 2943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca07d778-0566-48df-806f-63497a410ce9": {"__data__": {"id_": "ca07d778-0566-48df-806f-63497a410ce9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1995ad-9381-4687-8bc0-32e8353fc47f", "node_type": "1", "metadata": {}, "hash": "4a5820caff2058e9e7f6809b5e0ca896457ab14d788c5ff894f049b40f45ff44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2", "node_type": "1", "metadata": {}, "hash": "7310b2a7a4ab9f70ac48c58ca9ca9b76736cca0f117b1a08f1e66df32579bd0e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **amount**: **[Amount](./ertp-data-types#amount)**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Boolean**\n\nReturns **true** if the **Amount** is empty. Otherwise returns **false**.\n\nIf the optional _brand_ argument doesn't match the **Amount**'s **Brand**, an error is thrown.\n\n```js\nconst empty = AmountMath.makeEmpty(quatloosBrand, AssetKind.NAT);\nconst quatloos1 = AmountMath.make(quatloosBrand, 1n);\n\n// Returns true\nconst result = AmountMath.isEmpty(empty);", "mimetype": "text/plain", "start_char_idx": 2945, "end_char_idx": 3450, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2": {"__data__": {"id_": "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca07d778-0566-48df-806f-63497a410ce9", "node_type": "1", "metadata": {}, "hash": "7ae0ccee6de798eaa6ec094b00266bd81993394211b2775dac18284ca8c393ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c53a33d-e144-4d5a-ad37-55165a82439a", "node_type": "1", "metadata": {}, "hash": "a39762b4078e28bc63e17161ee478919cf70a247130eed70a4f29902325a937c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Returns false\nconst result = AmountMath.isEmpty(quatloos1);\n```\n\n## AmountMath.isGTE(leftAmount, rightAmount, brand?)\n\n- **leftAmount**: **[Amount](./ertp-data-types#amount)**\n- **rightAmount**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 3452, "end_char_idx": 3756, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c53a33d-e144-4d5a-ad37-55165a82439a": {"__data__": {"id_": "8c53a33d-e144-4d5a-ad37-55165a82439a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2", "node_type": "1", "metadata": {}, "hash": "7310b2a7a4ab9f70ac48c58ca9ca9b76736cca0f117b1a08f1e66df32579bd0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02f50183-c9d1-4c68-bfe1-2dcacae83cd1", "node_type": "1", "metadata": {}, "hash": "c506f6b35033a5daf306541f6a5648ead48c62a93eabe1d7369f70d6cb7fdf7c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns **true** if the **[AmountValue](./ertp-data-types#amountvalue)** of _leftAmount_ is greater than or equal to\nthe **AmountValue** of _rightAmount_.\nBoth **Amount** arguments must have the same **Brand**.\n\nIf the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.", "mimetype": "text/plain", "start_char_idx": 3758, "end_char_idx": 4064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02f50183-c9d1-4c68-bfe1-2dcacae83cd1": {"__data__": {"id_": "02f50183-c9d1-4c68-bfe1-2dcacae83cd1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c53a33d-e144-4d5a-ad37-55165a82439a", "node_type": "1", "metadata": {}, "hash": "a39762b4078e28bc63e17161ee478919cf70a247130eed70a4f29902325a937c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d86002d-9b6a-41f0-9882-a3806128ec1c", "node_type": "1", "metadata": {}, "hash": "46be2dbd8fe5fa43b8471352cb307c7199ee2f89e99b2e6ccad09641efad7282", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For non-fungible **AmountValues**, what \"greater than or equal to\" is depends on the\nkind of **AmountMath**. For example, { 'seat 1', 'seat 2' } is considered\ngreater than { 'seat 2' } because the former is a strict superset of the latter.\n\n```js\nconst empty = AmountMath.makeEmpty(quatloosBrand, AssetKind.NAT);\nconst quatloos5 = AmountMath.make(quatloosBrand, 5n);\nconst quatloos10 = AmountMath.make(quatloosBrand, 10n);", "mimetype": "text/plain", "start_char_idx": 4066, "end_char_idx": 4488, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d86002d-9b6a-41f0-9882-a3806128ec1c": {"__data__": {"id_": "4d86002d-9b6a-41f0-9882-a3806128ec1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02f50183-c9d1-4c68-bfe1-2dcacae83cd1", "node_type": "1", "metadata": {}, "hash": "c506f6b35033a5daf306541f6a5648ead48c62a93eabe1d7369f70d6cb7fdf7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eb65053-c5a9-450c-bc03-df2bbfa052fc", "node_type": "1", "metadata": {}, "hash": "ab1c2af7bdc7951aa15a52182bb4540161c288d0c36cb2e8b1c7cf46c8037e28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Returns true\nAmountMath.isGTE(quatloos5, empty);\n// Returns false\nAmountMath.isGTE(empty, quatloos5, quatloosBrand);\n// Returns true\nAmountMath.isGTE(quatloos10, quatloos5);\n// Returns false\nAmountMath.isGTE(quatloos5, quatloos10);\n// Returns true\nAmountMath.isGTE(quatloos5, quatloos5);\n```\n\n## AmountMath.isEqual(leftAmount, rightAmount, brand?)", "mimetype": "text/plain", "start_char_idx": 4490, "end_char_idx": 4840, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9eb65053-c5a9-450c-bc03-df2bbfa052fc": {"__data__": {"id_": "9eb65053-c5a9-450c-bc03-df2bbfa052fc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d86002d-9b6a-41f0-9882-a3806128ec1c", "node_type": "1", "metadata": {}, "hash": "46be2dbd8fe5fa43b8471352cb307c7199ee2f89e99b2e6ccad09641efad7282", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "803a240f-1876-4f8a-a7ee-29e6b71c9bcf", "node_type": "1", "metadata": {}, "hash": "d96eac6d016f330a01d54462c9424f7f969cb43846bbcb1ce605c66c21102f4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **leftAmount**: **[Amount](./ertp-data-types#amount)**\n- **rightAmount**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Boolean**\n\nReturns **true** if the **[AmountValue](./ertp-data-types#amountvalue)** of _leftAmount_ is equal to\nthe **AmountValue** of _rightAmount_.\nBoth **Amount** arguments must have the same **Brand**.\n\nIf the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.", "mimetype": "text/plain", "start_char_idx": 4842, "end_char_idx": 5316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "803a240f-1876-4f8a-a7ee-29e6b71c9bcf": {"__data__": {"id_": "803a240f-1876-4f8a-a7ee-29e6b71c9bcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9eb65053-c5a9-450c-bc03-df2bbfa052fc", "node_type": "1", "metadata": {}, "hash": "ab1c2af7bdc7951aa15a52182bb4540161c288d0c36cb2e8b1c7cf46c8037e28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9fb420f-334b-4407-a95c-019676de92d5", "node_type": "1", "metadata": {}, "hash": "37c1f8faa60b9c0d8eb64ea14380969250b2e0c8ca6e3e9edebe2114a6a66f51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For non-fungible **AmountValues**, \"equal to\" depends on the value of the\n**Brand's** **[AssetKind](./ertp-data-types#assetkind)**.\n\nFor example, { 'seat 1', 'seat 2' } is considered\nunequal to { 'seat 2' } because the number of elements differ.\n{ 'seat 1' } is considered unequal to { 'seat 2' } because the elements do not match.", "mimetype": "text/plain", "start_char_idx": 5318, "end_char_idx": 5649, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9fb420f-334b-4407-a95c-019676de92d5": {"__data__": {"id_": "e9fb420f-334b-4407-a95c-019676de92d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "803a240f-1876-4f8a-a7ee-29e6b71c9bcf", "node_type": "1", "metadata": {}, "hash": "d96eac6d016f330a01d54462c9424f7f969cb43846bbcb1ce605c66c21102f4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ab5be3a-0481-46a3-872c-f021a681c354", "node_type": "1", "metadata": {}, "hash": "854defe291924cc4f330382b52ee24c2dce160be8385b5686cfb13bd40896be4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst empty = AmountMath.makeEmpty(quatloosBrand, AssetKind.NAT);\nconst quatloos5 = AmountMath.make(quatloosBrand, 5n);\nconst quatloos5b = AmountMath.make(quatloosBrand, 5n);\nconst quatloos10 = AmountMath.make(quatloosBrand, 10n);\n\n// Returns true\nAmountMath.isEqual(quatloos10, quatloos10);\n// Returns true\nAmountMath.isEqual(quatloos5, quatloos5b);\n// Returns false\nAmountMath.isEqual(quatloos10, quatloos5);\n// Returns false\nAmountMath.isEqual(empty, quatloos10);\n```", "mimetype": "text/plain", "start_char_idx": 5651, "end_char_idx": 6127, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ab5be3a-0481-46a3-872c-f021a681c354": {"__data__": {"id_": "2ab5be3a-0481-46a3-872c-f021a681c354", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9fb420f-334b-4407-a95c-019676de92d5", "node_type": "1", "metadata": {}, "hash": "37c1f8faa60b9c0d8eb64ea14380969250b2e0c8ca6e3e9edebe2114a6a66f51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1bddeb9-c27d-454d-a31d-4c1f3be85763", "node_type": "1", "metadata": {}, "hash": "892e63d3dccc0d2ec33711228ce9a4e2482852bb0100c23f1362cd5210faaf52", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AmountMath.add(leftAmount, rightAmount, brand?)\n\n- **leftAmount**: **[Amount](./ertp-data-types#amount)**\n- **rightAmount**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Amount**\n\nReturns a new **Amount** that is the combination of _leftAmount_ and _rightAmount_.\nBoth **Amount** arguments must have the same **Brand**.\n\nIf the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.", "mimetype": "text/plain", "start_char_idx": 6129, "end_char_idx": 6599, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1bddeb9-c27d-454d-a31d-4c1f3be85763": {"__data__": {"id_": "c1bddeb9-c27d-454d-a31d-4c1f3be85763", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ab5be3a-0481-46a3-872c-f021a681c354", "node_type": "1", "metadata": {}, "hash": "854defe291924cc4f330382b52ee24c2dce160be8385b5686cfb13bd40896be4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb5e2455-2c61-41a3-b603-692537a9b9f7", "node_type": "1", "metadata": {}, "hash": "46a8c87c0854870a7c5913f65520765fc9c392e22ff59eb78f50b863bea586ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For fungible **Amounts** this means adding their **[AmountValues](./ertp-data-types#amountvalue)**. For non-fungible\n**Amounts**, it usually means including all of the elements from _leftAmount_\nand _rightAmount_.\n\nIf one of _leftAmount_ or _rightAmount_ is empty, this method returns an **Amount** equivalent to the other.\nIf both are empty, this method returns an empty **Amount**.", "mimetype": "text/plain", "start_char_idx": 6601, "end_char_idx": 6984, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb5e2455-2c61-41a3-b603-692537a9b9f7": {"__data__": {"id_": "fb5e2455-2c61-41a3-b603-692537a9b9f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1bddeb9-c27d-454d-a31d-4c1f3be85763", "node_type": "1", "metadata": {}, "hash": "892e63d3dccc0d2ec33711228ce9a4e2482852bb0100c23f1362cd5210faaf52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83f91f8b-ab0e-4f92-8156-756dc3ae02f7", "node_type": "1", "metadata": {}, "hash": "5d18b8d3fb3298d9896c1df598ef0488d9e8d8f91ab7883e884e9fb9fc671f70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { AssetKind, makeIssuerKit, AmountMath } from '@agoric/ertp';\nconst { brand: myItemsBrand } = makeIssuerKit('myItems', AssetKind.COPY_SET);\nconst listAmountA = AmountMath.make(myItemsBrand, ['1', '2', '4']);\nconst listAmountB = AmountMath.make(myItemsBrand, ['3']);\n\n// Returns an amount whose value is ['1', '2', '4', '3']\nconst combinedList = AmountMath.add(listAmountA, listAmountB);\n```\n\n## AmountMath.subtract(leftAmount, rightAmount, brand?)", "mimetype": "text/plain", "start_char_idx": 6986, "end_char_idx": 7446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83f91f8b-ab0e-4f92-8156-756dc3ae02f7": {"__data__": {"id_": "83f91f8b-ab0e-4f92-8156-756dc3ae02f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb5e2455-2c61-41a3-b603-692537a9b9f7", "node_type": "1", "metadata": {}, "hash": "46a8c87c0854870a7c5913f65520765fc9c392e22ff59eb78f50b863bea586ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b", "node_type": "1", "metadata": {}, "hash": "be1626b0c0252c774a1e3d51e8f840a1eb00879e40a30b2d8db3b1adcc7aae71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **leftAmount**: **[Amount](./ertp-data-types#amount)**\n- **rightAmount**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Amount**", "mimetype": "text/plain", "start_char_idx": 6181, "end_char_idx": 6362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b": {"__data__": {"id_": "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83f91f8b-ab0e-4f92-8156-756dc3ae02f7", "node_type": "1", "metadata": {}, "hash": "5d18b8d3fb3298d9896c1df598ef0488d9e8d8f91ab7883e884e9fb9fc671f70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d80d1400-4cf3-45e1-b97f-326c1ad85cb8", "node_type": "1", "metadata": {}, "hash": "4d0f7e40fbb3d7ae4f09090881b332bdb2be6ce65fab2e5711a90ca264300a62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a new **Amount** that is the _leftAmount_ minus the _rightAmount_ (i.e.,\neverything in the _leftAmount_ that is not in the _rightAmount_). If _leftAmount_\ndoesn't include _rightAmount_ (e.g., subtraction results in a negative), an error is thrown.\nBecause _leftAmount_ must include _rightAmount_, this is **not**\nequivalent to set subtraction.\n\nBoth **Amount** arguments must have the same **Brand**.\n\nIf the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.", "mimetype": "text/plain", "start_char_idx": 7631, "end_char_idx": 8135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d80d1400-4cf3-45e1-b97f-326c1ad85cb8": {"__data__": {"id_": "d80d1400-4cf3-45e1-b97f-326c1ad85cb8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b", "node_type": "1", "metadata": {}, "hash": "be1626b0c0252c774a1e3d51e8f840a1eb00879e40a30b2d8db3b1adcc7aae71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11fea41a-db4d-44c5-a4ef-952a777d97c1", "node_type": "1", "metadata": {}, "hash": "5b9f2dac168aa5bc8c56b2401ec7e8d5febb75aee2e684ffae52aba9e5b6bd38", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If _rightAmount_ is empty, this method returns _leftAmount_. If both arguments are\nempty, this method returns an empty **Amount**.\n\n```js\nimport { AssetKind, makeIssuerKit, AmountMath } from '@agoric/ertp';\nconst { brand: myItemsBrand } = makeIssuerKit('myItems', AssetKind.COPY_SET);\nconst listAmountA = AmountMath.make(myItemsBrand, ['1', '2', '4']);\nconst listAmountB = AmountMath.make(myItemsBrand, ['3']);\nconst listAmountC = AmountMath.make(myItemsBrand, ['2']);", "mimetype": "text/plain", "start_char_idx": 8137, "end_char_idx": 8605, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11fea41a-db4d-44c5-a4ef-952a777d97c1": {"__data__": {"id_": "11fea41a-db4d-44c5-a4ef-952a777d97c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d80d1400-4cf3-45e1-b97f-326c1ad85cb8", "node_type": "1", "metadata": {}, "hash": "4d0f7e40fbb3d7ae4f09090881b332bdb2be6ce65fab2e5711a90ca264300a62", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "feb18aa4-325c-47ac-add0-fd1faad0ebab", "node_type": "1", "metadata": {}, "hash": "d34cfe66508c3b8b15f58b1e3d6a04449513077e438df9f93651565ed2be94c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Returns ['1', '4']\nconst subtractedList = AmountMath.subtract(listAmountA, listAmountC);\n\n// Throws an error\nconst badList = AmountMath.subtract(listAmountA, listAmountB);\n```\n\n## AmountMath.min(x, y, brand?)\n\n- **x**: **[Amount](./ertp-data-types#amount)**\n- **y**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Amount**\n\nReturns the minimum value between _x_ and _y_.\n\nBoth **Amount** arguments must have the same **Brand**.", "mimetype": "text/plain", "start_char_idx": 8607, "end_char_idx": 9087, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "feb18aa4-325c-47ac-add0-fd1faad0ebab": {"__data__": {"id_": "feb18aa4-325c-47ac-add0-fd1faad0ebab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11fea41a-db4d-44c5-a4ef-952a777d97c1", "node_type": "1", "metadata": {}, "hash": "5b9f2dac168aa5bc8c56b2401ec7e8d5febb75aee2e684ffae52aba9e5b6bd38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46df1488-dff0-4f9a-aafd-e401d6d95645", "node_type": "1", "metadata": {}, "hash": "af3d89899c484594856bb784f1bf7f013a69c1ff9b37a5c99a7f8ddf3ad67886", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.\n\n```js\nconst smallerAmount = AmountMath.make(quatloosBrand, 5n);\nconst largerAmount = AmountMath.make(quatloosBrand, 10n);\n\n// Returns an amount equivalent to smallerAmount\nconst comparisonResult = AmountMath.min(smallerAmount, largerAmount);\n```\n\n## AmountMath.max(x, y, brand?)", "mimetype": "text/plain", "start_char_idx": 9089, "end_char_idx": 9463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46df1488-dff0-4f9a-aafd-e401d6d95645": {"__data__": {"id_": "46df1488-dff0-4f9a-aafd-e401d6d95645", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "feb18aa4-325c-47ac-add0-fd1faad0ebab", "node_type": "1", "metadata": {}, "hash": "d34cfe66508c3b8b15f58b1e3d6a04449513077e438df9f93651565ed2be94c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "046f09b7-938c-4e60-8cde-fbfd5e167b2e", "node_type": "1", "metadata": {}, "hash": "8659729012e3ab15a6325e6771d4fe9fe9c1aaea951cbedd5c0d875b5027d417", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AmountMath.max(x, y, brand?)\n\n- **x**: **[Amount](./ertp-data-types#amount)**\n- **y**: **Amount**\n- **brand**: **[Brand](./brand)** - Optional, defaults to **undefined**.\n- Returns: **Amount**\n\nReturns the maximum value between _x_ and _y_.\n\nBoth **Amount** arguments must have the same **Brand**.\n\nIf the optional _brand_ argument doesn't match the **Amount**s' **Brand**, an error is thrown.", "mimetype": "text/plain", "start_char_idx": 9432, "end_char_idx": 9828, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "046f09b7-938c-4e60-8cde-fbfd5e167b2e": {"__data__": {"id_": "046f09b7-938c-4e60-8cde-fbfd5e167b2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46df1488-dff0-4f9a-aafd-e401d6d95645", "node_type": "1", "metadata": {}, "hash": "af3d89899c484594856bb784f1bf7f013a69c1ff9b37a5c99a7f8ddf3ad67886", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "395f97ae-6dc8-4dcb-88b8-fac39641706c", "node_type": "1", "metadata": {}, "hash": "49b05fab73d1921f18c8b612156842bd6345e052af47d7adc01ab18d330af1a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst smallerAmount = AmountMath.make(quatloosBrand, 5n);\nconst largerAmount = AmountMath.make(quatloosBrand, 10n);\n\n// Returns an amount equivalent to largerAmount\nconst comparisonResult = AmountMath.max(smallerAmount, largerAmount);\n```\n\n## Related Methods\n\nThe following methods on other ERTP components and objects also either operate\non or return an **Amount** or **AssetKind**.", "mimetype": "text/plain", "start_char_idx": 9830, "end_char_idx": 10219, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "395f97ae-6dc8-4dcb-88b8-fac39641706c": {"__data__": {"id_": "395f97ae-6dc8-4dcb-88b8-fac39641706c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_amount-math.md", "node_type": "4", "metadata": {}, "hash": "ef9f5f2aa16a68978c3989bd18db778ae589f9d473626d43ba530d4b86840285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "046f09b7-938c-4e60-8cde-fbfd5e167b2e", "node_type": "1", "metadata": {}, "hash": "8659729012e3ab15a6325e6771d4fe9fe9c1aaea951cbedd5c0d875b5027d417", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**anIssuer.getAmountOf()**](./issuer#anissuer-getamountof-payment)\n  - Returns the **Amount** of a **Payment**.\n- [**anIssuer.getAssetKind()**](./issuer#anissuer-getassetkind)\n  - Returns the **AssetKind** of the **Issuer**'s associated math helpers.\n- [**zcf.getAssetKind()**](/reference/zoe-api/zoe-contract-facet#zcf-getassetkind-brand)\n  - Returns the **AssetKind** associated with a **Brand**.", "mimetype": "text/plain", "start_char_idx": 10221, "end_char_idx": 10622, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e936563-9b29-48d0-ae08-77c763c0f231": {"__data__": {"id_": "4e936563-9b29-48d0-ae08-77c763c0f231", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "812db3ae-cc41-48e1-9ddb-d5314d10d1f7", "node_type": "1", "metadata": {}, "hash": "2e4f6beccde16448dd2015fd0b7aed978dc5a7b90e7b2935b42827154df15960", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Brand Object\n\nA **Brand** identifies the asset type of the **[Issuer](./issuer)** and **[Mint](./mint)**\nassociated with the **Brand**. A given **Brand** has a one-to-one relationship\nwith an **Issuer** and a **Mint**, and a one-to-many relationship with **[Purses](./purse)**\nand **[Payments](./payment)**.\n\nFor example, if you were to create a **Brand** that uses _Quatloos_:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 379, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "812db3ae-cc41-48e1-9ddb-d5314d10d1f7": {"__data__": {"id_": "812db3ae-cc41-48e1-9ddb-d5314d10d1f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e936563-9b29-48d0-ae08-77c763c0f231", "node_type": "1", "metadata": {}, "hash": "ee842ef7d6c11eb9be2f9a56cd8b0459545b40111eaf2da9789c9fbe8b20bd15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bd8a8f7-9b91-42cb-8a4c-befa22db6888", "node_type": "1", "metadata": {}, "hash": "f9d4fd0dae423f37107926e6fb28990c49bd753440132c266a849047578e7763", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- There would be exactly one _Quatloos_ **Issuer**.\n- There would be exactly one _Quatloos_ **Mint**.\n- There could be any number of **Purses** that could hold _Quatloos_.\n- There could be any number of **Payments** that could hold _Quatloos_.", "mimetype": "text/plain", "start_char_idx": 381, "end_char_idx": 624, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bd8a8f7-9b91-42cb-8a4c-befa22db6888": {"__data__": {"id_": "7bd8a8f7-9b91-42cb-8a4c-befa22db6888", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "812db3ae-cc41-48e1-9ddb-d5314d10d1f7", "node_type": "1", "metadata": {}, "hash": "2e4f6beccde16448dd2015fd0b7aed978dc5a7b90e7b2935b42827154df15960", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff", "node_type": "1", "metadata": {}, "hash": "21998ad2d5de9c68e2171c5d9565956e7bb7d7c5eef1f257e4154e1a654aae3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All of these relationships are unchangeable. For example, if a **Mint** is created that makes\nnew _Quatloos_, it can never create non-_Quatloos_ assets. Similarly, the _Quatloos_ **Brand**\nwill always be associated with\nthe _Quatloos_ **Mint** and _Quatloos_ **Issuer**.\n\n## aBrand.isMyIssuer(allegedIssuer)\n\n- **allegedIssuer**: **[Issuer](./issuer)**\n- Returns: **Boolean**\n\nReturns **true** if _allegedIssuer_ is the **Brand**'s **Issuer**. Returns **false** if it's not.", "mimetype": "text/plain", "start_char_idx": 626, "end_char_idx": 1100, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff": {"__data__": {"id_": "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bd8a8f7-9b91-42cb-8a4c-befa22db6888", "node_type": "1", "metadata": {}, "hash": "f9d4fd0dae423f37107926e6fb28990c49bd753440132c266a849047578e7763", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2234eedc-5c91-4e7d-914a-8a2b82957c88", "node_type": "1", "metadata": {}, "hash": "9d423abc4dc0ee653ce3ab1377b40789d2843086c92a266e674778346cc4d9f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that a **Brand** from an untrusted source can misrepresent its association with\nan **Issuer**. The claim should be cross-checked using the **Issuer's**\n[**anIssuer.getBrand()**](./issuer#anissuer-getbrand) method for mutual agreement.\n\n```js\nconst isIssuer = brand.isMyIssuer(issuer);\n```\n\n## aBrand.getAllegedName()\n\n- Returns: **String**\n\nReturns the alleged name of the **Brand**.", "mimetype": "text/plain", "start_char_idx": 1102, "end_char_idx": 1490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2234eedc-5c91-4e7d-914a-8a2b82957c88": {"__data__": {"id_": "2234eedc-5c91-4e7d-914a-8a2b82957c88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff", "node_type": "1", "metadata": {}, "hash": "21998ad2d5de9c68e2171c5d9565956e7bb7d7c5eef1f257e4154e1a654aae3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d54176e4-4f78-4ca0-8197-1c0e78881a7b", "node_type": "1", "metadata": {}, "hash": "b18f4b0e0e9b0cf0232abd50be46e80aa47f9011279b15d51c10d367e332f4cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An alleged name is a human-readable string name of a type of digital asset.\nIt should not be trusted as accurate since there is no public registry or\nexpectation of uniqueness. This means there can be multiple **[Issuers](./issuer)**, **[Mints](./mint)**, or **Brands**\nwith the same alleged name, and thus the name by itself does not uniquely\nidentify an **Issuer**. Rather, the **Brand** object does that.", "mimetype": "text/plain", "start_char_idx": 1492, "end_char_idx": 1899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d54176e4-4f78-4ca0-8197-1c0e78881a7b": {"__data__": {"id_": "d54176e4-4f78-4ca0-8197-1c0e78881a7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2234eedc-5c91-4e7d-914a-8a2b82957c88", "node_type": "1", "metadata": {}, "hash": "9d423abc4dc0ee653ce3ab1377b40789d2843086c92a266e674778346cc4d9f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47ce5ed9-4a45-44fa-bd90-715db6233862", "node_type": "1", "metadata": {}, "hash": "998568d15716355156c056e5c9093853f48c3219ee7bacc061ca5e5b4a0c040f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To put it another way, nothing stops different people from creating multiple\n**Issuers** with the alleged name _Quatloos_, but that doesn't make any of them the\n_Quatloos_ **Issuer**. The alleged name is just a human readable string which is\nhelpful for debugging.\n\n```js\nconst name = brand.getAllegedName();\n```\n\n## aBrand.getDisplayInfo()\n\n- Returns: **[DisplayInfo](./ertp-data-types#displayinfo)**\n\nReturns the **DisplayInfo** associated with the **Brand**.", "mimetype": "text/plain", "start_char_idx": 1901, "end_char_idx": 2362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47ce5ed9-4a45-44fa-bd90-715db6233862": {"__data__": {"id_": "47ce5ed9-4a45-44fa-bd90-715db6233862", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d54176e4-4f78-4ca0-8197-1c0e78881a7b", "node_type": "1", "metadata": {}, "hash": "b18f4b0e0e9b0cf0232abd50be46e80aa47f9011279b15d51c10d367e332f4cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48d2d1ff-2c05-4b2f-be0a-5538c88e7b19", "node_type": "1", "metadata": {}, "hash": "071c4fdc2401ba1570f0d65dc5e3ab5699fdb04ed53a73f2315d3911199d6a0a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You use a **DisplayInfo** object at the dapp and UI levels to correctly\ndisplay **[Amounts](./ertp-data-types#amount)**. For fungible tokens, use the **decimalPlaces** property\nto display their value in the commonly used denomination, rather than\nthe smallest denomination used for financial accounting (e.g.,\ndisplaying in dollars rather than cents).\n\n```js\nconst quatloosDisplay = quatloosBrand.getDisplayInfo();\n```\n\n## aBrand.getAmountShape()\n\n- Returns: **[AmountShape](./ertp-data-types#amountshape)**", "mimetype": "text/plain", "start_char_idx": 2364, "end_char_idx": 2871, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48d2d1ff-2c05-4b2f-be0a-5538c88e7b19": {"__data__": {"id_": "48d2d1ff-2c05-4b2f-be0a-5538c88e7b19", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_brand.md", "node_type": "4", "metadata": {}, "hash": "ecf101b8d966d389bbd7bfe3f0c97219ac1756430ce26fa5b92e45e701ad5aa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47ce5ed9-4a45-44fa-bd90-715db6233862", "node_type": "1", "metadata": {}, "hash": "998568d15716355156c056e5c9093853f48c3219ee7bacc061ca5e5b4a0c040f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns the **AmountShape** for a **Brand** associated with a non-fungible asset.\n\n## Related Methods\n\nThe following methods on other ERTP components are also related to the **Brand** object.\n\n- [**anIssuer.getBrand()**](./issuer#anissuer-getbrand): Returns\n  the **Brand** for the **Issuer**.\n- [**aPayment.getAllegedBrand()**](./payment#apayment-getallegedbrand): Returns\n  the **Payment**'s alleged **Brand**.", "mimetype": "text/plain", "start_char_idx": 2873, "end_char_idx": 3285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47fb7ae9-680e-4711-bd6e-9203be6b137f": {"__data__": {"id_": "47fb7ae9-680e-4711-bd6e-9203be6b137f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cbe8eec-f5af-461b-b07b-4e6f2edb267c", "node_type": "1", "metadata": {}, "hash": "4762d6efaecb0762bd1de2baef511ad742f9aef07a4f92dd8dbccbc2563d0050", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ERTP Data Types\n\nERTP introduces and uses several data types.\n\n## Amount\n\nAn **Amount** is a description of digital assets, answering the\nquestions \"how much?\" (its **[AmountValue](#amountvalue)**) and \"of what kind?\" (its **[Brand](./brand)**).\nThe **[AmountMath](./amount-math)** object\nintroduces a library of methods that can be used to manipulate and analyze **Amounts**.\n\nNote that **Amounts** can describe either fungible or non-fungible assets.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 454, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cbe8eec-f5af-461b-b07b-4e6f2edb267c": {"__data__": {"id_": "0cbe8eec-f5af-461b-b07b-4e6f2edb267c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47fb7ae9-680e-4711-bd6e-9203be6b137f", "node_type": "1", "metadata": {}, "hash": "7e1e4b5b93dbad5a50dc10ceab6d32bb871cc97e911a50edd4e95d551b663ccf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "105d11f6-833a-4b52-84c7-77b03d963ea1", "node_type": "1", "metadata": {}, "hash": "7844e3c4d80e1e843bc38b5c59666f26bcbf6855e84f3f3896fece3d5c1fcc33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nsomeAmount: {\n  brand: someBrand,\n  value: someValue\n}\n```\n\n## AmountShape", "mimetype": "text/plain", "start_char_idx": 456, "end_char_idx": 536, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "105d11f6-833a-4b52-84c7-77b03d963ea1": {"__data__": {"id_": "105d11f6-833a-4b52-84c7-77b03d963ea1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cbe8eec-f5af-461b-b07b-4e6f2edb267c", "node_type": "1", "metadata": {}, "hash": "4762d6efaecb0762bd1de2baef511ad742f9aef07a4f92dd8dbccbc2563d0050", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "779e2fa6-cd48-464b-abce-0af09bef6aae", "node_type": "1", "metadata": {}, "hash": "227bd0c4e1480f5aa6144614890b348d8fd7843193ceaa242f9622de4242f953", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An **AmountShape** is a description of non-fungible digital assets. Similar to **[Amount](#amount)**,\n**AmountShape** has 2 properties: a **[Brand](./brand)**, which states what kind of asset this is,\nand a **ValueShape**, which is an object containing however many properties are required to describe\nthis non-fungible asset. Note that an asset's **ValueShape** is defined by the _elementShape_ parameter\nwhen the asset's **[Issuer](./issuer)** is created via the", "mimetype": "text/plain", "start_char_idx": 538, "end_char_idx": 1002, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "779e2fa6-cd48-464b-abce-0af09bef6aae": {"__data__": {"id_": "779e2fa6-cd48-464b-abce-0af09bef6aae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "105d11f6-833a-4b52-84c7-77b03d963ea1", "node_type": "1", "metadata": {}, "hash": "7844e3c4d80e1e843bc38b5c59666f26bcbf6855e84f3f3896fece3d5c1fcc33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29bdcd5b-9f0e-4689-8864-d12420fbd724", "node_type": "1", "metadata": {}, "hash": "3bb48e91b9ac520e90659f1d0fe00575d3317eb7558aa4aad69666434f8c724e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**[makeIssuerKit()](./issuer#makeissuerkit-allegedname-assetkind-displayinfo-optshutdownwithfailure-elementshape)** function.", "mimetype": "text/plain", "start_char_idx": 1003, "end_char_idx": 1128, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "29bdcd5b-9f0e-4689-8864-d12420fbd724": {"__data__": {"id_": "29bdcd5b-9f0e-4689-8864-d12420fbd724", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "779e2fa6-cd48-464b-abce-0af09bef6aae", "node_type": "1", "metadata": {}, "hash": "227bd0c4e1480f5aa6144614890b348d8fd7843193ceaa242f9622de4242f953", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f", "node_type": "1", "metadata": {}, "hash": "879d20388fe63da43f968cff645e29686bd8b820bac972513900e850cb6347c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nsomeAmountShape: {\n  brand: someBrand,\n  valueShape: someValueShape\n}\n```\n\n<a id=\"value\"></a>\n\n## AmountValue", "mimetype": "text/plain", "start_char_idx": 1130, "end_char_idx": 1245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f": {"__data__": {"id_": "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29bdcd5b-9f0e-4689-8864-d12420fbd724", "node_type": "1", "metadata": {}, "hash": "3bb48e91b9ac520e90659f1d0fe00575d3317eb7558aa4aad69666434f8c724e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528", "node_type": "1", "metadata": {}, "hash": "2e8ca50801c74aa9cfcb6b9d94b5e800875f4cde7f7a82a7e3cd24236125aa66", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An **AmountValue** is the part of an [Amount](#amount) that describes the value of something\nthat can be owned or shared: how much, how many, or a description of a unique asset, such as\n$3, Pixel(3,2), or \u201cSeat J12 for the show September 27th at 9:00pm\u201d.\nFor a fungible **Amount**, the **AmountValue** is usually a non-negative **BigInt** such as `10n` or `137n`.", "mimetype": "text/plain", "start_char_idx": 1247, "end_char_idx": 1610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528": {"__data__": {"id_": "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f", "node_type": "1", "metadata": {}, "hash": "879d20388fe63da43f968cff645e29686bd8b820bac972513900e850cb6347c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ce73118-f7a8-49df-8430-4967b1190a37", "node_type": "1", "metadata": {}, "hash": "71f9f475f66eea6c006367d5bcd4ddd93daed4003ef236a91bc0a6ffa9e1670e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For a non-fungible **Amount**, the **AmountValue** might be a [CopySet](/guides/js-programming/far#pass-styles-and-harden) containing strings naming particular rights or objects representing the rights directly.\nAmountValues must be [Keys](/glossary/#key).", "mimetype": "text/plain", "start_char_idx": 1611, "end_char_idx": 1867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ce73118-f7a8-49df-8430-4967b1190a37": {"__data__": {"id_": "6ce73118-f7a8-49df-8430-4967b1190a37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528", "node_type": "1", "metadata": {}, "hash": "2e8ca50801c74aa9cfcb6b9d94b5e800875f4cde7f7a82a7e3cd24236125aa66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d876c074-40d1-4fba-994d-14328281696c", "node_type": "1", "metadata": {}, "hash": "ae902e28e1f7947ed7581b0094328efb850eb8720e96726d40fdf7901c61fe7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## AssetKind\n\nThere are several kinds of Assets.", "mimetype": "text/plain", "start_char_idx": 1869, "end_char_idx": 1917, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d876c074-40d1-4fba-994d-14328281696c": {"__data__": {"id_": "d876c074-40d1-4fba-994d-14328281696c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ce73118-f7a8-49df-8430-4967b1190a37", "node_type": "1", "metadata": {}, "hash": "71f9f475f66eea6c006367d5bcd4ddd93daed4003ef236a91bc0a6ffa9e1670e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5129c471-0e47-472a-ba00-374e9d7e3369", "node_type": "1", "metadata": {}, "hash": "699771093fc83d66a434c39b413227ac252f73dfc63e45790bbc3a1538876794", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **AssetKind.NAT** : Used with fungible assets. **AmountValues** are natural numbers using the JavaScript [BigInt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) type to avoid overflow risks from using the usual JavaScript **Number** type.\n- **AssetKind.SET** : Deprecated.", "mimetype": "text/plain", "start_char_idx": 1919, "end_char_idx": 2235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5129c471-0e47-472a-ba00-374e9d7e3369": {"__data__": {"id_": "5129c471-0e47-472a-ba00-374e9d7e3369", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d876c074-40d1-4fba-994d-14328281696c", "node_type": "1", "metadata": {}, "hash": "ae902e28e1f7947ed7581b0094328efb850eb8720e96726d40fdf7901c61fe7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "401e8de0-d6af-49bc-bcf2-0a1d793e599a", "node_type": "1", "metadata": {}, "hash": "791b25bb745f8494f3f8cb9c9cc77abf6930175faf9796d569443f0865fa5fe3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **AssetKind.SET** : Deprecated.\n- **AssetKind.COPY_SET** : Used with non-fungible assets where there can't be duplicates (e.g., assigned seats in a stadium). See [@endo/patterns CopySet](https://endojs.github.io/endo/types/_endo_patterns.CopySet.html).", "mimetype": "text/plain", "start_char_idx": 2202, "end_char_idx": 2456, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "401e8de0-d6af-49bc-bcf2-0a1d793e599a": {"__data__": {"id_": "401e8de0-d6af-49bc-bcf2-0a1d793e599a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5129c471-0e47-472a-ba00-374e9d7e3369", "node_type": "1", "metadata": {}, "hash": "699771093fc83d66a434c39b413227ac252f73dfc63e45790bbc3a1538876794", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0649127c-7b38-4630-8171-ec3746ddc357", "node_type": "1", "metadata": {}, "hash": "b947a2f47bfbe8690bd7cac716700c2016b6e34293aa0cf4c55839a1286fe6f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **AssetKind.COPY_BAG** : Used with semi-fungible assets where there can be duplicates. The duplicates of the same asset are fungible with each other (e.g., weapons in a computer game). See [@endo/patterns CopyBag](https://endojs.github.io/endo/types/_endo_patterns.CopyBag.html).", "mimetype": "text/plain", "start_char_idx": 2457, "end_char_idx": 2738, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0649127c-7b38-4630-8171-ec3746ddc357": {"__data__": {"id_": "0649127c-7b38-4630-8171-ec3746ddc357", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "401e8de0-d6af-49bc-bcf2-0a1d793e599a", "node_type": "1", "metadata": {}, "hash": "791b25bb745f8494f3f8cb9c9cc77abf6930175faf9796d569443f0865fa5fe3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9894338e-ca2d-4b42-9766-dbbd92f78748", "node_type": "1", "metadata": {}, "hash": "005f2018719c28f9290f4dd04b1848297f2ac1d4d03b9c8fdfdb1cd3f1a047f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Even though very different mathematical processes are performed,\n**[AmountMath](./amount-math)** methods work for all kinds of assets.\n\nUse **[makeIssuerKit()](./issuer#makeissuerkit-allegedname-assetkind-displayinfo-optshutdownwithfailure-elementshape)** to specify which **AssetKind**\nyour contract uses. See the **[Issuer](./issuer)** documentation for details on how to use this method.", "mimetype": "text/plain", "start_char_idx": 2740, "end_char_idx": 3130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9894338e-ca2d-4b42-9766-dbbd92f78748": {"__data__": {"id_": "9894338e-ca2d-4b42-9766-dbbd92f78748", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0649127c-7b38-4630-8171-ec3746ddc357", "node_type": "1", "metadata": {}, "hash": "b947a2f47bfbe8690bd7cac716700c2016b6e34293aa0cf4c55839a1286fe6f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec5543a7-7626-49f2-9100-1779300f2d48", "node_type": "1", "metadata": {}, "hash": "b92475268190f71f4bc8b6f6dafa6d26df97e762d1b03e001a808ee1b3bffb4a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { AssetKind, makeIssuerKit } from '@agoric/ertp';\nmakeIssuerKit('quatloos'); // Defaults to AssetKind.NAT and undefined DisplayInfo\nmakeIssuerKit('kitties', AssetKind.COPY_SET); // Defaults to undefined DisplayInfo\n```\n\n## DisplayInfo\n\nA **DisplayInfo** data type is associated with a **[Brand](./brand)** and gives information about how\nto display that **Brand**'s **[Amounts](#amount)**. **DisplayInfo** has one optional property,\n**decimalPlaces**, which takes a non-negative integer value.", "mimetype": "text/plain", "start_char_idx": 3132, "end_char_idx": 3638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec5543a7-7626-49f2-9100-1779300f2d48": {"__data__": {"id_": "ec5543a7-7626-49f2-9100-1779300f2d48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9894338e-ca2d-4b42-9766-dbbd92f78748", "node_type": "1", "metadata": {}, "hash": "005f2018719c28f9290f4dd04b1848297f2ac1d4d03b9c8fdfdb1cd3f1a047f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e5c7702-941b-46a1-ac08-e52f4b6fea4d", "node_type": "1", "metadata": {}, "hash": "0b2a47fbe41d86ad7642108d2688be39179ecee440c101419c551e84f7afd442", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **decimalPlaces** property tells the [display software](https://github.com/Agoric/ui-kit)\nhow many places to move the decimal point over to the left so as to display the value\nin the commonly used denomination (e.g., display \"10.00 dollars\" rather than \"1000 cents\").", "mimetype": "text/plain", "start_char_idx": 3640, "end_char_idx": 3911, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e5c7702-941b-46a1-ac08-e52f4b6fea4d": {"__data__": {"id_": "4e5c7702-941b-46a1-ac08-e52f4b6fea4d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec5543a7-7626-49f2-9100-1779300f2d48", "node_type": "1", "metadata": {}, "hash": "b92475268190f71f4bc8b6f6dafa6d26df97e762d1b03e001a808ee1b3bffb4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76cabb2b-78b7-4977-8023-4af2f3dd4b63", "node_type": "1", "metadata": {}, "hash": "b1504e5d119a24fe282c071384f6204277f601e3cdc3f60ebc6a3836de27d2ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Fungible digital assets are represented in integers, in their smallest unit.\nFor example, the smallest unit for a US dollar might be either _dollar_ or _cent_.\nIf it's _dollar_, **decimalPlaces** would be **0**. If it's _cent_, **decimalPlaces**\nwould be **2**. Similarly, if you want the smallest unit of ether (the cryptocurrency coin used on the Ethereum network) to be _wei_ (one ether = 10<sup>18</sup> wei), then **decimalPlaces** would be **18**.", "mimetype": "text/plain", "start_char_idx": 3913, "end_char_idx": 4366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76cabb2b-78b7-4977-8023-4af2f3dd4b63": {"__data__": {"id_": "76cabb2b-78b7-4977-8023-4af2f3dd4b63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_ertp-data-types.md", "node_type": "4", "metadata": {}, "hash": "e91b77c7e0f6acfe68373f1af7138915cc49a17d6b0076c768608f3ddceac6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e5c7702-941b-46a1-ac08-e52f4b6fea4d", "node_type": "1", "metadata": {}, "hash": "0b2a47fbe41d86ad7642108d2688be39179ecee440c101419c551e84f7afd442", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Non-fungible assets have values that are arrays, so you shouldn't specify a **decimalPlaces** value\nfor them.\n\n**decimalPlaces** should be used for display purposes only. Any\nother use is an anti-pattern.\n\n**DisplayInfo** also has an **[AssetKind](#assetkind)** property. Its value specifies the kind of the associated asset.", "mimetype": "text/plain", "start_char_idx": 4368, "end_char_idx": 4693, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33fd3d6a-35ad-48ff-9993-9b848960ec42": {"__data__": {"id_": "33fd3d6a-35ad-48ff-9993-9b848960ec42", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "270a3f18-55e2-4d8e-961c-989a6f8f9651", "node_type": "1", "metadata": {}, "hash": "6de1b3505479f3d2b4e000e3702c847ca41a7abc9365f912fd1b7c58f13f74e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ERTP API\n\nThe ERTP API supports the following objects:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 56, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "270a3f18-55e2-4d8e-961c-989a6f8f9651": {"__data__": {"id_": "270a3f18-55e2-4d8e-961c-989a6f8f9651", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33fd3d6a-35ad-48ff-9993-9b848960ec42", "node_type": "1", "metadata": {}, "hash": "460625fcb28eccfb9e02b70a40a97b644407d6879aa5af13e18c04a957cc1a6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa94c686-b4c4-4688-a278-1b66344090cb", "node_type": "1", "metadata": {}, "hash": "59ef708ffc73e9ba47fca5a9c0978f384192586479575a22695ba68c5668a833", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Object               | Description                                                          |\n| -------------------- | -------------------------------------------------------------------- |\n| [Issuer](./issuer)   | The authority on what holds digital assets of its kind.              |\n| [Mint](./mint)       | Can issue new digital assets.                                        |\n| [Brand](./brand)     | Identifies the asset type of the associated **Issuer** and **Mint**. |", "mimetype": "text/plain", "start_char_idx": 58, "end_char_idx": 537, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fa94c686-b4c4-4688-a278-1b66344090cb": {"__data__": {"id_": "fa94c686-b4c4-4688-a278-1b66344090cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "270a3f18-55e2-4d8e-961c-989a6f8f9651", "node_type": "1", "metadata": {}, "hash": "6de1b3505479f3d2b4e000e3702c847ca41a7abc9365f912fd1b7c58f13f74e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1d45dbd-0526-4572-82ea-e330a08393da", "node_type": "1", "metadata": {}, "hash": "95481879e25163b19bd48b9c2c1fbce10b519c9de3e756eb2bf4b4c570418d8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Purse](./purse)     | Holds digital assets.                                                |\n| [Payment](./payment) | Holds digital assets that are in transit.                            |", "mimetype": "text/plain", "start_char_idx": 538, "end_char_idx": 729, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1d45dbd-0526-4572-82ea-e330a08393da": {"__data__": {"id_": "f1d45dbd-0526-4572-82ea-e330a08393da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa94c686-b4c4-4688-a278-1b66344090cb", "node_type": "1", "metadata": {}, "hash": "59ef708ffc73e9ba47fca5a9c0978f384192586479575a22695ba68c5668a833", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9518db0-fe0e-436e-a74e-53752052cc86", "node_type": "1", "metadata": {}, "hash": "f87c598354f07939d8f743b4050536c242be8752a075c8198df3b7a904f3073d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The ETRP API uses the following library:", "mimetype": "text/plain", "start_char_idx": 731, "end_char_idx": 771, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9518db0-fe0e-436e-a74e-53752052cc86": {"__data__": {"id_": "e9518db0-fe0e-436e-a74e-53752052cc86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1d45dbd-0526-4572-82ea-e330a08393da", "node_type": "1", "metadata": {}, "hash": "95481879e25163b19bd48b9c2c1fbce10b519c9de3e756eb2bf4b4c570418d8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7", "node_type": "1", "metadata": {}, "hash": "9e1ae42e99c7f267ce711b0e5708a3f0b33041d26808f0bfe031c11cea7cf0e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Object                      | Description                                                                                                                        |\n| --------------------------- | ---------------------------------------------------------------------------------------------------------------------------------- |\n| [AmountMath](./amount-math) | The **AmountMath** object has several methods which can be used to manipulate and analyze **[Amounts](./ertp-data-types#amount)**. |", "mimetype": "text/plain", "start_char_idx": 773, "end_char_idx": 1267, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7": {"__data__": {"id_": "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9518db0-fe0e-436e-a74e-53752052cc86", "node_type": "1", "metadata": {}, "hash": "f87c598354f07939d8f743b4050536c242be8752a075c8198df3b7a904f3073d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8671286-7e76-456a-89dc-ea84941bd8ec", "node_type": "1", "metadata": {}, "hash": "5eaa300f9cd196464a3fb039a627fb55e74ea057d10241951304272a3a7430b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The ERTP API introduces and uses the following data types:", "mimetype": "text/plain", "start_char_idx": 1269, "end_char_idx": 1327, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8671286-7e76-456a-89dc-ea84941bd8ec": {"__data__": {"id_": "b8671286-7e76-456a-89dc-ea84941bd8ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7", "node_type": "1", "metadata": {}, "hash": "9e1ae42e99c7f267ce711b0e5708a3f0b33041d26808f0bfe031c11cea7cf0e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd7311a9-d8df-4338-925a-7ba2c340fb00", "node_type": "1", "metadata": {}, "hash": "7d8bea336fa5f2482153bd208a4626c180783761f3b065994e2310d715909061", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Data Type                                    | Description                                                                                                                                                    |\n| -------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 1329, "end_char_idx": 1748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dd7311a9-d8df-4338-925a-7ba2c340fb00": {"__data__": {"id_": "dd7311a9-d8df-4338-925a-7ba2c340fb00", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8671286-7e76-456a-89dc-ea84941bd8ec", "node_type": "1", "metadata": {}, "hash": "5eaa300f9cd196464a3fb039a627fb55e74ea057d10241951304272a3a7430b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f0b96d8-dcdf-4042-9e0a-451c01569a4e", "node_type": "1", "metadata": {}, "hash": "b745fe538aad08ac15c41d9422c9c8fb299982e38f659f11b70319cc4bc67eb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Amount](./ertp-data-types#amount)           | Describes digital assets, specifying the number and **[Brand](./brand)** of assets. Note that **Amounts** can describe either fungible or non-fungible assets. |\n| [AmountShape](./ertp-data-types#amountshape) | Describes digital assets, specifying the properties and **[Brand](./brand)** of assets.                                                                        |", "mimetype": "text/plain", "start_char_idx": 1749, "end_char_idx": 2168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f0b96d8-dcdf-4042-9e0a-451c01569a4e": {"__data__": {"id_": "3f0b96d8-dcdf-4042-9e0a-451c01569a4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd7311a9-d8df-4338-925a-7ba2c340fb00", "node_type": "1", "metadata": {}, "hash": "7d8bea336fa5f2482153bd208a4626c180783761f3b065994e2310d715909061", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5583c32a-218b-4f1d-9773-23b2641e8cc8", "node_type": "1", "metadata": {}, "hash": "62a42061e0adfa101e236d4cc0a11e8906b8b4933d4deffb04e9554a3cb957e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [AmountValue](./ertp-data-types#amountvalue) | Describes how much of something there is.                                                                                                                      |\n| [AssetKind](./ertp-data-types#assetkind)     | Specifies whether an **Amount** is fungible or non-fungible.                                                                                                   |", "mimetype": "text/plain", "start_char_idx": 2169, "end_char_idx": 2588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5583c32a-218b-4f1d-9773-23b2641e8cc8": {"__data__": {"id_": "5583c32a-218b-4f1d-9773-23b2641e8cc8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_index.md", "node_type": "4", "metadata": {}, "hash": "8ad57d0ad674713202b847393053613ee30805bf9c36c5ef3514fb0e24187383", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f0b96d8-dcdf-4042-9e0a-451c01569a4e", "node_type": "1", "metadata": {}, "hash": "b745fe538aad08ac15c41d9422c9c8fb299982e38f659f11b70319cc4bc67eb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [DisplayInfo](./ertp-data-types#displayinfo) | Specifies how to display a **Brand**'s **Amounts**.                                                                                                            |", "mimetype": "text/plain", "start_char_idx": 2589, "end_char_idx": 2798, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad40a0b5-6d4c-47f8-95c1-efdb7bb00ebc": {"__data__": {"id_": "ad40a0b5-6d4c-47f8-95c1-efdb7bb00ebc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e322281c-f338-4706-b3f9-22dbfbb94c1d", "node_type": "1", "metadata": {}, "hash": "99f12db843c91f2d70f69318cc23f9d2966d2d0ea35439cfb5e5e60ad3a46d83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Issuer Object\n\nAn **Issuer** is the authority on what holds digital assets of its kind.\nWhile it cannot create new value by creating digital assets like a **[Mint](./mint)** can,\nit recognizes and identifies **[Purses](./purse)** and **[Payments](./payment)** that carry actual value.\nIt can create empty **Purses** and transform **Payments** (by splitting,\ncombining, burning, or exclusively claiming them).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 410, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e322281c-f338-4706-b3f9-22dbfbb94c1d": {"__data__": {"id_": "e322281c-f338-4706-b3f9-22dbfbb94c1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad40a0b5-6d4c-47f8-95c1-efdb7bb00ebc", "node_type": "1", "metadata": {}, "hash": "de2026e9c3edee9e165c3baa8369542ae45b74e951b35f3d4e2c9777d98ac63b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579", "node_type": "1", "metadata": {}, "hash": "e91a1c88ca2ac984802e58de36d666b908a564c554ab0d0f7f2308b658ccc677", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An **Issuer** has an unchangeable one-to-one relationship with the **Mint** and\n**[Brand](./brand)** that were created with it. For any **Brands** for which you will accept\n**Payments** in, you should obtain its **Issuer** from a trusted source.\nYou can then rely on that **Issuer** as the authority to\nvalidate an untrusted **Payment** of that **Brand**.", "mimetype": "text/plain", "start_char_idx": 412, "end_char_idx": 767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579": {"__data__": {"id_": "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e322281c-f338-4706-b3f9-22dbfbb94c1d", "node_type": "1", "metadata": {}, "hash": "99f12db843c91f2d70f69318cc23f9d2966d2d0ea35439cfb5e5e60ad3a46d83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7040993-e512-4580-81c5-43f7e5c531ff", "node_type": "1", "metadata": {}, "hash": "8b41ee46fc1ca259e217f56c4eb93afb8111c4c6d1918fc2c190fb21b6750a03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note**: You should not create an **Issuer** in a deploy script. Deploy scripts\nare ephemeral, so any object created there dies as soon as the script ends.\n\n## makeIssuerKit(allegedName, assetKind?, displayInfo?, optShutdownWithFailure?, elementShape?)", "mimetype": "text/plain", "start_char_idx": 769, "end_char_idx": 1022, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7040993-e512-4580-81c5-43f7e5c531ff": {"__data__": {"id_": "b7040993-e512-4580-81c5-43f7e5c531ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579", "node_type": "1", "metadata": {}, "hash": "e91a1c88ca2ac984802e58de36d666b908a564c554ab0d0f7f2308b658ccc677", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ae03bed-6bc6-484a-9230-7c0b0306648b", "node_type": "1", "metadata": {}, "hash": "e0dabbed2aefa9b13df8eeddffc4d57bb9dd48632f62aaba63226b1f78178aa2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **allegedName**: **String**\n- **assetKind**: **[AssetKind](./ertp-data-types#assetkind)** - Optional, defaults to **AssetKind.NAT**.\n- **displayInfo**: **[DisplayInfo](./ertp-data-types#displayinfo)** - Optional, defaults to **undefined**.\n- **optShutdownWithFailure** - Optional, defaults to **undefined**.\n- **elementShape** - Optional, defaults to **undefined**.\n- Returns **IssuerKit**. This is an object with three properties:\n  - **issuer**: **Issuer**\n  - **mint**: **[Mint](./mint)**", "mimetype": "text/plain", "start_char_idx": 1024, "end_char_idx": 1517, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ae03bed-6bc6-484a-9230-7c0b0306648b": {"__data__": {"id_": "9ae03bed-6bc6-484a-9230-7c0b0306648b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7040993-e512-4580-81c5-43f7e5c531ff", "node_type": "1", "metadata": {}, "hash": "8b41ee46fc1ca259e217f56c4eb93afb8111c4c6d1918fc2c190fb21b6750a03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79998596-8353-4db2-9cb3-242b10bc1d10", "node_type": "1", "metadata": {}, "hash": "383082a547ba92a1e08d45d7cf94e2d2842657be9211b64e621596b4a5264555", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **mint**: **[Mint](./mint)**\n  - **brand**: **[Brand](./brand)**", "mimetype": "text/plain", "start_char_idx": 1487, "end_char_idx": 1553, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79998596-8353-4db2-9cb3-242b10bc1d10": {"__data__": {"id_": "79998596-8353-4db2-9cb3-242b10bc1d10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ae03bed-6bc6-484a-9230-7c0b0306648b", "node_type": "1", "metadata": {}, "hash": "e0dabbed2aefa9b13df8eeddffc4d57bb9dd48632f62aaba63226b1f78178aa2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9", "node_type": "1", "metadata": {}, "hash": "b470c9ab51064cd64d6a01b34a1113f6eda70e6b3cd6ccddd5201de9b7353859", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates and returns a new **Issuer** and its associated **Mint** and **Brand**.\nAll three are in unchangeable one-to-one relationships with each other.\n\nThe _allegedName_ becomes part of the **Brand** in asset descriptions. It\ndoesn't have to be a **String**, but it will only be used for its value. It\nis useful for debugging and double-checking assumptions, but should not be trusted.", "mimetype": "text/plain", "start_char_idx": 1555, "end_char_idx": 1941, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9": {"__data__": {"id_": "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79998596-8353-4db2-9cb3-242b10bc1d10", "node_type": "1", "metadata": {}, "hash": "383082a547ba92a1e08d45d7cf94e2d2842657be9211b64e621596b4a5264555", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f881670-a56e-4373-b342-7fb3dcae1162", "node_type": "1", "metadata": {}, "hash": "8dd810966bac6b9560629aaf5efdfdd04c7f5cfebe1b08658ea4590b088b7f39", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The optional _assetKind_ parameter specifies the kind of asset associated with the **Issuer** about\nto be created. If no **AssetKind** argument is passed into the method, then the **Issuer**'s asset\nkind defaults to **AssetKind.NAT**. **[AmountMath](./amount-math)**'s methods work with all the\nkinds of assets, but exactly what math or manipulation is performed varies depending on\nthe **AssetKind**.", "mimetype": "text/plain", "start_char_idx": 1943, "end_char_idx": 2344, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f881670-a56e-4373-b342-7fb3dcae1162": {"__data__": {"id_": "1f881670-a56e-4373-b342-7fb3dcae1162", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9", "node_type": "1", "metadata": {}, "hash": "b470c9ab51064cd64d6a01b34a1113f6eda70e6b3cd6ccddd5201de9b7353859", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d48c27db-da33-40ba-8ea7-cbdbfbb53df4", "node_type": "1", "metadata": {}, "hash": "7828cf0d5eb60a49c70f0c8c86698546534a5a3da1052cc6aee855cc8418e357", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The optional _displayInfo_ parameter tells the UI how to\ndisplay **[Amounts](./ertp-data-types#amount)** of this **Brand**.\n\nThe optional _optShutdownWithFailure_ parameter should be used for mission-critical\n**Issuers**. This parameter is a function that will stop the vat hosting the\n**Issuer** if **Issuer** invariants are violated.", "mimetype": "text/plain", "start_char_idx": 2346, "end_char_idx": 2681, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d48c27db-da33-40ba-8ea7-cbdbfbb53df4": {"__data__": {"id_": "d48c27db-da33-40ba-8ea7-cbdbfbb53df4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f881670-a56e-4373-b342-7fb3dcae1162", "node_type": "1", "metadata": {}, "hash": "8dd810966bac6b9560629aaf5efdfdd04c7f5cfebe1b08658ea4590b088b7f39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a55e34e-db15-482e-b5ab-2c9496ef314f", "node_type": "1", "metadata": {}, "hash": "8a64dd31492adb529b6abf78dae3b90bd7314aceccdee8a851d9f3dea648ab10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The optional _elementShape_ parameter is only used when creating an **Issuer** that\nhas a non-fungible asset associated with it. When used, the _elementShape_ parameter is an object\nwith however many properties are required to describe the asset. This object sets the\n_valueShape's_ properties of the asset's **[AmountShape](./ertp-data-types#amountshape)**.", "mimetype": "text/plain", "start_char_idx": 2683, "end_char_idx": 3041, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a55e34e-db15-482e-b5ab-2c9496ef314f": {"__data__": {"id_": "7a55e34e-db15-482e-b5ab-2c9496ef314f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d48c27db-da33-40ba-8ea7-cbdbfbb53df4", "node_type": "1", "metadata": {}, "hash": "7828cf0d5eb60a49c70f0c8c86698546534a5a3da1052cc6aee855cc8418e357", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "879cd568-b96a-4b27-b0f9-179f60afc54e", "node_type": "1", "metadata": {}, "hash": "aed90e158b8f83621101d54f5580584e018b479f72f2b7004f951aac46d87a18", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { AssetKind, makeIssuerKit } from '@agoric/ertp';\nmakeIssuerKit('quatloos'); // Defaults to AssetKind.NAT\nmakeIssuerKit('title', AssetKind.COPY_SET);\n```\n\n```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\n// This is merely an amount, describing assets, not minting assets\nconst quatloos2 = AmountMath.make(quatloosBrand, 2n);", "mimetype": "text/plain", "start_char_idx": 3043, "end_char_idx": 3447, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "879cd568-b96a-4b27-b0f9-179f60afc54e": {"__data__": {"id_": "879cd568-b96a-4b27-b0f9-179f60afc54e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a55e34e-db15-482e-b5ab-2c9496ef314f", "node_type": "1", "metadata": {}, "hash": "8a64dd31492adb529b6abf78dae3b90bd7314aceccdee8a851d9f3dea648ab10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7920d228-89b3-4482-b0d9-8222e801efcf", "node_type": "1", "metadata": {}, "hash": "12b88691a5bdea51206d4d68f07dbe98c372b6cd2d1e1cc19ebe84e93cb60655", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const {\n  issuer: titleIssuer,\n  mint: titleMint,\n  brand: titleBrand\n} = makeIssuerKit('propertyTitle');\n// These are merely amounts describing digital assets, not minting assets.\nconst cornerProperty = AmountMath.make(propertyTitleBrand, ['1292826']);\nconst adjacentProperty = AmountMath.make(propertyTitleBrand, ['1028393']);\nconst combinedProperty = AmountMath.make(propertyTitleBrand, [\n  '1292826',\n  '1028393'\n]);\n```\n\n## anIssuer.getAllegedName()\n\n- Returns: **allegedName**", "mimetype": "text/plain", "start_char_idx": 3449, "end_char_idx": 3931, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7920d228-89b3-4482-b0d9-8222e801efcf": {"__data__": {"id_": "7920d228-89b3-4482-b0d9-8222e801efcf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "879cd568-b96a-4b27-b0f9-179f60afc54e", "node_type": "1", "metadata": {}, "hash": "aed90e158b8f83621101d54f5580584e018b479f72f2b7004f951aac46d87a18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833", "node_type": "1", "metadata": {}, "hash": "a60958e2bb21a76a8b2175b159c1dd8ae7541c9a127a2759e56b6d33228fb4ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **allegedName**\n\nReturns the **allegedName** for the **Issuer**.\n\nAn alleged name is a human-readable string name\nof a kind of digital asset. An alleged name\nshould not be trusted as accurate because there is\nno public registry or expectation of uniqueness. This\nmeans there can be multiple **Issuers**, **[Mints](./mint)**, or **[Brands](./brand)** with the\nsame alleged name, and thus the name by itself does not\nuniquely identify an **Issuer**. Rather, the **Brand** does that.", "mimetype": "text/plain", "start_char_idx": 3905, "end_char_idx": 4396, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833": {"__data__": {"id_": "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7920d228-89b3-4482-b0d9-8222e801efcf", "node_type": "1", "metadata": {}, "hash": "12b88691a5bdea51206d4d68f07dbe98c372b6cd2d1e1cc19ebe84e93cb60655", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49b9d9a9-550b-4364-8d78-eebe3d074d6f", "node_type": "1", "metadata": {}, "hash": "8ac21701ed60a44c3c4359979270e78f196446125350e34f2b54aee2cb2831d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To put it another way, nothing stops anyone from creating an **Issuer**\nwith the alleged name _Quatloos_ (or _BTC_, or whatever), regardless of whether\nor not such a name is already in use. The alleged name is just a\nhuman readable string which is helpful for debugging.\n\n```js\nconst { issuer: quatloosIssuer } = makeIssuerKit('quatloos');\nconst quatloosIssuerAllegedName = quatloosIssuer.getAllegedName();\n// quatloosIssuerAllegedName === 'quatloos'\n```\n\n## anIssuer.getAssetKind()", "mimetype": "text/plain", "start_char_idx": 4398, "end_char_idx": 4880, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49b9d9a9-550b-4364-8d78-eebe3d074d6f": {"__data__": {"id_": "49b9d9a9-550b-4364-8d78-eebe3d074d6f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833", "node_type": "1", "metadata": {}, "hash": "a60958e2bb21a76a8b2175b159c1dd8ae7541c9a127a2759e56b6d33228fb4ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c068195c-ec72-4a97-a8ca-0911b33422bb", "node_type": "1", "metadata": {}, "hash": "d01deacadc57fc4ff64982106039fc047619f6366b61a7827922afee54384c1d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## anIssuer.getAssetKind()\n\n- Returns: **[AssetKind](./ertp-data-types#assetkind)**\n\nReturns the kind of the **Issuer**'s asset.\n\nThe **AssetKind** specifies what kind of values are used in **[Amounts](./ertp-data-types#amount)** for this **Issuer**.", "mimetype": "text/plain", "start_char_idx": 4854, "end_char_idx": 5104, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c068195c-ec72-4a97-a8ca-0911b33422bb": {"__data__": {"id_": "c068195c-ec72-4a97-a8ca-0911b33422bb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49b9d9a9-550b-4364-8d78-eebe3d074d6f", "node_type": "1", "metadata": {}, "hash": "8ac21701ed60a44c3c4359979270e78f196446125350e34f2b54aee2cb2831d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa2fb6f4-644f-4104-aed9-8110e132bcfc", "node_type": "1", "metadata": {}, "hash": "ee3123442f11dcd60d27010343abfa374654bf40ce6b3affeef35600fe7ef51e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { issuer: quatloosIssuer } = makeIssuerKit('quatloos');\nquatloosIssuer.getAssetKind(); // Returns 'nat', also known as AssetKind.NAT, the default value.\nconst { issuer: moolaIssuer } = makeIssuerKit('moola', AssetKind.COPY_SET);\nmoolaIssuer.getAssetKind(); // Returns 'copy_set', also known as 'AssetKind.COPY_SET'\n```\n\n## anIssuer.getAmountOf(payment)\n\n- **payment**: **[Payment](./payment)**\n- Returns: **[Amount](./ertp-data-types#amount)**", "mimetype": "text/plain", "start_char_idx": 5106, "end_char_idx": 5561, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa2fb6f4-644f-4104-aed9-8110e132bcfc": {"__data__": {"id_": "aa2fb6f4-644f-4104-aed9-8110e132bcfc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c068195c-ec72-4a97-a8ca-0911b33422bb", "node_type": "1", "metadata": {}, "hash": "d01deacadc57fc4ff64982106039fc047619f6366b61a7827922afee54384c1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a06188f-9a72-4a51-9467-a185ef0cdf95", "node_type": "1", "metadata": {}, "hash": "ed8e973f3b01e95246984f6687e355a049ade0807171daf78b115d11ecdadeb1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Describes the **Payment**'s balance as an **Amount**. Because a **Payment** from an untrusted\nsource cannot be trusted to provide its own true value, the **Issuer** must be used to\nvalidate its **[Brand](./brand)** and report how much the returned **Amount** contains.", "mimetype": "text/plain", "start_char_idx": 5563, "end_char_idx": 5831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7a06188f-9a72-4a51-9467-a185ef0cdf95": {"__data__": {"id_": "7a06188f-9a72-4a51-9467-a185ef0cdf95", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa2fb6f4-644f-4104-aed9-8110e132bcfc", "node_type": "1", "metadata": {}, "hash": "ee3123442f11dcd60d27010343abfa374654bf40ce6b3affeef35600fe7ef51e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f830a3c5-5023-43ee-9302-7652d8f33c67", "node_type": "1", "metadata": {}, "hash": "c776813c5ac68c26a7c60370f61ed4f6f384fafbbc2d5ffbd3ee322d7298beac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst quatloosPayment = quatloosMint.mintPayment(\n  AmountMath.make(quatloosBrand, 100n)\n);\nquatloosIssuer.getAmountOf(quatloosPayment); // returns an amount of 100 Quatloos\n```\n\n## anIssuer.getBrand()\n\n- Returns: **[Brand](./brand)**", "mimetype": "text/plain", "start_char_idx": 5833, "end_char_idx": 6183, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f830a3c5-5023-43ee-9302-7652d8f33c67": {"__data__": {"id_": "f830a3c5-5023-43ee-9302-7652d8f33c67", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a06188f-9a72-4a51-9467-a185ef0cdf95", "node_type": "1", "metadata": {}, "hash": "ed8e973f3b01e95246984f6687e355a049ade0807171daf78b115d11ecdadeb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a10654b6-5001-4f35-92d7-b8d163e6d4a6", "node_type": "1", "metadata": {}, "hash": "9fc89d0757b01d1db3bdd137f4d7590c66d0ad63dad4ef2173d19665c2131b35", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **[Brand](./brand)**\n\nReturns the **Brand** for the **Issuer**. The **Brand** indicates the kind of digital asset\nand is the same for the **Issuer**'s associated **[Mint](./mint)**, and any **[Purses](./purse)** and **[Payments](./payment)** of this particular\nkind. The **Brand** is not closely held, so this method should not be trusted to identify\nan **Issuer** alone. Fake digital assets and amounts can use another **Issuer's** **Brand**.", "mimetype": "text/plain", "start_char_idx": 6152, "end_char_idx": 6606, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a10654b6-5001-4f35-92d7-b8d163e6d4a6": {"__data__": {"id_": "a10654b6-5001-4f35-92d7-b8d163e6d4a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f830a3c5-5023-43ee-9302-7652d8f33c67", "node_type": "1", "metadata": {}, "hash": "c776813c5ac68c26a7c60370f61ed4f6f384fafbbc2d5ffbd3ee322d7298beac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "956768b8-37f1-4246-b3e4-2827d0796feb", "node_type": "1", "metadata": {}, "hash": "b42bbc554a6dbd9746f0ad1396fb8962cac397a4835420653e58622874fde92f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { issuer: quatloosIssuer, brand: quatloosBrand } =\n  makeIssuerKit('quatloos');\nconst quatloosBrand = quatloosIssuer.getBrand();\n// brand === quatloosBrand\n```\n\n## anIssuer.makeEmptyPurse()\n\n- Returns: **[Purse](./purse)**\n\nMakes and returns an empty **Purse** that holds assets of the **[Brand](./brand)** associated with the **Issuer**.\n\n```js\nconst { issuer: quatloosIssuer } = makeIssuerKit('quatloos');\nconst quatloosPurse = quatloosIssuer.makeEmptyPurse();\n```", "mimetype": "text/plain", "start_char_idx": 6608, "end_char_idx": 7086, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "956768b8-37f1-4246-b3e4-2827d0796feb": {"__data__": {"id_": "956768b8-37f1-4246-b3e4-2827d0796feb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a10654b6-5001-4f35-92d7-b8d163e6d4a6", "node_type": "1", "metadata": {}, "hash": "9fc89d0757b01d1db3bdd137f4d7590c66d0ad63dad4ef2173d19665c2131b35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0730f64-7f92-4d52-a44b-22ebf892501f", "node_type": "1", "metadata": {}, "hash": "13e3c2116476d5342307ccf64008e273a72c2b364b1714155ef9fbaa32d1a26b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## **anIssuer.burn(payment, optAmount?)**\n\n- **payment**: **[Payment](./payment)**\n- **optAmount**: **[Amount](./ertp-data-types#amount)** - Optional.\n\n- Returns: **Amount**\n\nDestroys all of the digital assets in the **Payment**,\nmaking it unavailable for later use,\nand returns an **Amount** of what was burned.", "mimetype": "text/plain", "start_char_idx": 7088, "end_char_idx": 7400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0730f64-7f92-4d52-a44b-22ebf892501f": {"__data__": {"id_": "f0730f64-7f92-4d52-a44b-22ebf892501f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "956768b8-37f1-4246-b3e4-2827d0796feb", "node_type": "1", "metadata": {}, "hash": "b42bbc554a6dbd9746f0ad1396fb8962cac397a4835420653e58622874fde92f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58ac20fe-382e-4d66-bb47-0d20d065cbf5", "node_type": "1", "metadata": {}, "hash": "3fb2e81ff513d7fb45cff400d03fc198dd29fd80026be0f5ebf5d7ca543a9f12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If an _optAmount_ argument is passed into the method,\n_payment_'s balance must be equal to _optAmount_ in order to prevent claiming the wrong **Payment**.\nIf _optAmount_ does not equal the balance in the original **Payment** an error is thrown,\nand the original **Payment** is unmodified.\n\nIf _payment_ is a promise, the operation proceeds after it resolves to a **Payment**.", "mimetype": "text/plain", "start_char_idx": 7402, "end_char_idx": 7777, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58ac20fe-382e-4d66-bb47-0d20d065cbf5": {"__data__": {"id_": "58ac20fe-382e-4d66-bb47-0d20d065cbf5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0730f64-7f92-4d52-a44b-22ebf892501f", "node_type": "1", "metadata": {}, "hash": "13e3c2116476d5342307ccf64008e273a72c2b364b1714155ef9fbaa32d1a26b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2071abe-87c2-4c8d-a568-b9d41434cd7f", "node_type": "1", "metadata": {}, "hash": "63b734dda7a6de44787ed6ffbd8f7f8f59f0af6af4011a7cbe21707d75553baf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst amountToBurn = AmountMath.make(quatloosBrand, 10n);\nconst paymentToBurn = quatloosMint.mintPayment(amountToBurn);\n\n// burntAmount should equal 10 Quatloos\nconst burntAmount = quatloosIssuer.burn(paymentToBurn, amountToBurn);\n```\n\n## anIssuer.isLive(payment)\n\n- **payment**: **[Payment](./payment)**\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 7779, "end_char_idx": 8222, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2071abe-87c2-4c8d-a568-b9d41434cd7f": {"__data__": {"id_": "d2071abe-87c2-4c8d-a568-b9d41434cd7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58ac20fe-382e-4d66-bb47-0d20d065cbf5", "node_type": "1", "metadata": {}, "hash": "3fb2e81ff513d7fb45cff400d03fc198dd29fd80026be0f5ebf5d7ca543a9f12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b713518-b26d-4d10-8423-74893ffc47a5", "node_type": "1", "metadata": {}, "hash": "af4a6bdccbaa76966c835db5f0b2a8bd68db83bec5ef392c36f42fa5a4b4e92c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns **true** if the _payment_ was created by the **Issuer** and is available for use\n(i.e., it hasn't been consumed).\n\nIf _payment_ is a promise, the method proceeds after it resolves to a **Payment**.\n\n::: warning DEPRECATED\n\n## anIssuer.claim(payment, optAmount?)\n\n- **payment**: **[Payment](./payment)**\n- **optAmount**: **[Amount](./ertp-data-types#amount)** - Optional.\n- Returns: **Payment**", "mimetype": "text/plain", "start_char_idx": 8224, "end_char_idx": 8625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b713518-b26d-4d10-8423-74893ffc47a5": {"__data__": {"id_": "7b713518-b26d-4d10-8423-74893ffc47a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2071abe-87c2-4c8d-a568-b9d41434cd7f", "node_type": "1", "metadata": {}, "hash": "63b734dda7a6de44787ed6ffbd8f7f8f59f0af6af4011a7cbe21707d75553baf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73ce437e-4ffe-43b7-b7b0-a250ba573a1a", "node_type": "1", "metadata": {}, "hash": "85872b5b94c2f21c4b28d0db5e8d36a30bca32052d8ec17a898151dbde932ba1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Transfers all digital assets from _payment_ to a new **Payment** and consumes the\noriginal **Payment**, making it unavailable for later use.\n\nIf the _optAmount_ argument is passed into the method, _payment_'s balance must be\nequal to _optAmount_, to prevent claiming the wrong **Payment**.\nIf _optAmount_ does not equal the balance in the original **Payment** an error is thrown,\nand the original **Payment** is unmodified.\n\nIf _payment_ is a promise, the operation proceeds after it resolves to a **Payment**.", "mimetype": "text/plain", "start_char_idx": 8627, "end_char_idx": 9137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73ce437e-4ffe-43b7-b7b0-a250ba573a1a": {"__data__": {"id_": "73ce437e-4ffe-43b7-b7b0-a250ba573a1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b713518-b26d-4d10-8423-74893ffc47a5", "node_type": "1", "metadata": {}, "hash": "af4a6bdccbaa76966c835db5f0b2a8bd68db83bec5ef392c36f42fa5a4b4e92c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b84edc4-a40d-442c-87d8-30af09ce32d8", "node_type": "1", "metadata": {}, "hash": "a8a9c4a3105e66fa1145939245eacdec23462cc14728dc093ba6c30896822f54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst amountExpectedToTransfer = AmountMath.make(quatloosBrand, 2n);\nconst originalPayment = quatloosMint.mintPayment(amountExpectedToTransfer);\n\nconst newPayment = quatloosIssuer.claim(originalPayment, amountToTransfer);\n```\n\n## anIssuer.combine(paymentsArray, optTotalAmount?)", "mimetype": "text/plain", "start_char_idx": 9139, "end_char_idx": 9533, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b84edc4-a40d-442c-87d8-30af09ce32d8": {"__data__": {"id_": "6b84edc4-a40d-442c-87d8-30af09ce32d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73ce437e-4ffe-43b7-b7b0-a250ba573a1a", "node_type": "1", "metadata": {}, "hash": "85872b5b94c2f21c4b28d0db5e8d36a30bca32052d8ec17a898151dbde932ba1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa1659d9-beca-48a8-a4e2-94bf297d79f2", "node_type": "1", "metadata": {}, "hash": "5ede99f07a05e26a669cd695e6fbd9467640736fbf812cc7b9c1941aa281bf23", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **paymentsArray**: **Array&lt;[Payment](./payment)>**\n- **optTotalAmount**: **[Amount](./ertp-data-types#amount)** - Optional.\n- Returns: **Payment**\n\nCombines multiple **Payments** into one new **Payment**. If any item in _paymentsArray_ is\na promise, the operation proceeds after each such promise resolves to a **Payment**.\nAll **Payments** in _paymentsArray_ are consumed and made unavailable for later use.", "mimetype": "text/plain", "start_char_idx": 9535, "end_char_idx": 9948, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa1659d9-beca-48a8-a4e2-94bf297d79f2": {"__data__": {"id_": "aa1659d9-beca-48a8-a4e2-94bf297d79f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b84edc4-a40d-442c-87d8-30af09ce32d8", "node_type": "1", "metadata": {}, "hash": "a8a9c4a3105e66fa1145939245eacdec23462cc14728dc093ba6c30896822f54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2caa9c7f-e941-414d-bc17-36b6e7f32c62", "node_type": "1", "metadata": {}, "hash": "a9cff91a74f9f300aabcbf5af0e35570b3156e85433bb685836cd2a418bca97e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the _optTotalAmount_ argument is passed into the method,\nthe total value of all **Payments** in _paymentsArray_\nmust equal _optTotalAmount_. If they don't, the method throws an error,\nand the original **Payment** is unmodified.\n\nEach **Payment** in _paymentsArray_ must be associated with the same **[Brand](./brand)** as the **Issuer**.", "mimetype": "text/plain", "start_char_idx": 9950, "end_char_idx": 10290, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2caa9c7f-e941-414d-bc17-36b6e7f32c62": {"__data__": {"id_": "2caa9c7f-e941-414d-bc17-36b6e7f32c62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa1659d9-beca-48a8-a4e2-94bf297d79f2", "node_type": "1", "metadata": {}, "hash": "5ede99f07a05e26a669cd695e6fbd9467640736fbf812cc7b9c1941aa281bf23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f9b945f-9c86-4f9d-881b-4f8e80231d37", "node_type": "1", "metadata": {}, "hash": "79d3c9783a775eb34c408a394aef07fb7d77d695739c77f375732b39bd805a75", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\n// Create an array of 100 payments of 1 quatloo each\nconst payments = [];\nfor (let i = 0; i < 100; i += 1) {\n  payments.push(quatloosMint.mintPayment(AmountMath.make(quatloosBrand, 1n)));\n}\n\n// combinedPayment equals 100\nconst combinedPayment = quatloosIssuer.combine(payments);\n```\n\n## anIssuer.split(payment, paymentAmountA)", "mimetype": "text/plain", "start_char_idx": 10292, "end_char_idx": 10734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f9b945f-9c86-4f9d-881b-4f8e80231d37": {"__data__": {"id_": "9f9b945f-9c86-4f9d-881b-4f8e80231d37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2caa9c7f-e941-414d-bc17-36b6e7f32c62", "node_type": "1", "metadata": {}, "hash": "a9cff91a74f9f300aabcbf5af0e35570b3156e85433bb685836cd2a418bca97e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63ac4489-ceb2-4bbd-99b9-97dade405046", "node_type": "1", "metadata": {}, "hash": "367bdfa5dd25a1ead00635a15db24fc71d7c869546c404582e083195faf1dd2c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **payment**: **[Payment](./payment)**\n- **paymentAmountA**: **[Amount](./ertp-data-types#amount)**\n- Returns: **Array&lt;Payment>**\n\nSplits a single **Payment** into two new **Payments**, A and B, according to _paymentAmountA_.\nFor example, if the **Payment** is for 10 _Quatloos_, and _paymentAmountA_ is 3 _Quatloos_,\nthe method returns an array of two **Payments** with balances of 3 _Quatloos_ and 7 _Quatloos_.\n\nThe original **Payment** is consumed and made unavailable for later use.", "mimetype": "text/plain", "start_char_idx": 10736, "end_char_idx": 11227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63ac4489-ceb2-4bbd-99b9-97dade405046": {"__data__": {"id_": "63ac4489-ceb2-4bbd-99b9-97dade405046", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f9b945f-9c86-4f9d-881b-4f8e80231d37", "node_type": "1", "metadata": {}, "hash": "79d3c9783a775eb34c408a394aef07fb7d77d695739c77f375732b39bd805a75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6", "node_type": "1", "metadata": {}, "hash": "e036bdc58129b30d8d745c733d1111fe49cc7517a60d616cc8ecbf38b54df62a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If _payment_ is a promise, the operation proceeds after it resolves to a **Payment**.\n\n_payment_ and _paymentAmountA_ must both be associated with the same **[Brand](./brand)** as the **Issuer**.", "mimetype": "text/plain", "start_char_idx": 11229, "end_char_idx": 11424, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6": {"__data__": {"id_": "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63ac4489-ceb2-4bbd-99b9-97dade405046", "node_type": "1", "metadata": {}, "hash": "367bdfa5dd25a1ead00635a15db24fc71d7c869546c404582e083195faf1dd2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26a5d5a8-61c8-4754-9f9f-516f10acc000", "node_type": "1", "metadata": {}, "hash": "5387ef5eedd1268fab234c61747fec6c9e14601c5b45b784b0cf960b293e13a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst oldPayment = quatloosMint.mintPayment(\n  AmountMath.make(quatloosBrand, 20n)\n);\n// After the split, paymentA has 5 quatloos and paymentB has 15.\nconst [paymentA, paymentB] = quatloosIssuer.split(\n  oldPayment,\n  AmountMath.make(quatloosBrand, 5n)\n);\n```\n\n## anIssuer.splitMany(payment, amountArray)", "mimetype": "text/plain", "start_char_idx": 11426, "end_char_idx": 11846, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26a5d5a8-61c8-4754-9f9f-516f10acc000": {"__data__": {"id_": "26a5d5a8-61c8-4754-9f9f-516f10acc000", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6", "node_type": "1", "metadata": {}, "hash": "e036bdc58129b30d8d745c733d1111fe49cc7517a60d616cc8ecbf38b54df62a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58663666-1ff0-4ba6-951f-5829fe3f929d", "node_type": "1", "metadata": {}, "hash": "97a189300aea3fc35042ca03fcb3af6e513f19f6a66e242c54917383e97fe438", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **payment**: **[Payment](./payment)**\n- **amountArray**: **Array&lt;[Amount](./ertp-data-types#amount)>**\n- Returns: **Array&lt;Payment>**\n\nSplits a single **Payment** into multiple **Payments**.\nThe returned array includes a **Payment** item corresponding to each **Amount** in the _amountArray_ parameter, in order.\n\nThe original **Payment** is consumed and made unavailable for later use.\n\nIf _payment_ is a promise, the operation proceeds after it resolves to a **Payment**.", "mimetype": "text/plain", "start_char_idx": 11848, "end_char_idx": 12328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58663666-1ff0-4ba6-951f-5829fe3f929d": {"__data__": {"id_": "58663666-1ff0-4ba6-951f-5829fe3f929d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26a5d5a8-61c8-4754-9f9f-516f10acc000", "node_type": "1", "metadata": {}, "hash": "5387ef5eedd1268fab234c61747fec6c9e14601c5b45b784b0cf960b293e13a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54f9dfdb-bd38-4531-8fd5-693087813e1f", "node_type": "1", "metadata": {}, "hash": "2b0822f765874a7e69c44c1b87d752a62009a177cfbe64c642da1921cec3d045", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the **Amounts** in _amountArray_ don't add up to the value of _payment_, the operation fails.\n_payment_ and each **Amount** in _amountArray_ must be associated with the same **[Brand](./brand)** as **Issuer**.\n\n```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst oldPayment = quatloosMint.mintPayment(\n  AmountMath.make(quatloosBrand, 100n)\n);\nconst goodAmounts = Array(10).fill(AmountMath.make(quatloosBrand, 10n));", "mimetype": "text/plain", "start_char_idx": 12330, "end_char_idx": 12819, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54f9dfdb-bd38-4531-8fd5-693087813e1f": {"__data__": {"id_": "54f9dfdb-bd38-4531-8fd5-693087813e1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58663666-1ff0-4ba6-951f-5829fe3f929d", "node_type": "1", "metadata": {}, "hash": "97a189300aea3fc35042ca03fcb3af6e513f19f6a66e242c54917383e97fe438", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "044f77d1-a435-433f-ae03-193f1b167365", "node_type": "1", "metadata": {}, "hash": "3fad23bf51dd35f308e5dbfe6037a34b732c0181f4d614bd91b6ef0e4fb9770e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const arrayOfNewPayments = quatloosIssuer.splitMany(oldPayment, goodAmounts);\n\n// The total amount in the amountArray must equal the original payment amount\n// Set original amount to 1000n\nconst payment = quatloosMint.mintPayment(AmountMath.make(quatloosBrand, 1000n));\n\n// Total amounts in badAmounts equal 20n, when it should equal 1000n\nconst badAmounts = Array(2).fill(AmountMath.make(quatloosBrand, 10n));\n\n// 20n does not equal 1000n, so throws error\nquatloosIssuer.splitMany(payment, badAmounts);\n```", "mimetype": "text/plain", "start_char_idx": 12821, "end_char_idx": 13328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "044f77d1-a435-433f-ae03-193f1b167365": {"__data__": {"id_": "044f77d1-a435-433f-ae03-193f1b167365", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_issuer.md", "node_type": "4", "metadata": {}, "hash": "2a74a558293ccfd410f138386e068dc88c00455afbf16a86dc5506f3658e10e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54f9dfdb-bd38-4531-8fd5-693087813e1f", "node_type": "1", "metadata": {}, "hash": "2b0822f765874a7e69c44c1b87d752a62009a177cfbe64c642da1921cec3d045", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::", "mimetype": "text/plain", "start_char_idx": 8431, "end_char_idx": 8434, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed6d66f4-4606-4b0d-bb13-33d783479928": {"__data__": {"id_": "ed6d66f4-4606-4b0d-bb13-33d783479928", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_mint.md", "node_type": "4", "metadata": {}, "hash": "1fb457b421af660fa29383f272783c9112547bbbfef587d5db4b696288729288", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2873dfcf-f4fa-4441-b94d-4f9e8366a71e", "node_type": "1", "metadata": {}, "hash": "060db1b09b9bf79ce577f0b106cbb520e4301c2fe95f1a1f7224da1d1a86bedb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Mint Object\n\nOnly a **Mint** can issue new digital assets.\n\nA **Mint** has a one-to-one relationship with both an **[Issuer](./issuer)** and a **[Brand](./brand)**.\nSo it can only mint new assets of that **Brand** and is the only **Mint** that can mint\nnew assets of that **Brand**.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 284, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2873dfcf-f4fa-4441-b94d-4f9e8366a71e": {"__data__": {"id_": "2873dfcf-f4fa-4441-b94d-4f9e8366a71e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_mint.md", "node_type": "4", "metadata": {}, "hash": "1fb457b421af660fa29383f272783c9112547bbbfef587d5db4b696288729288", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed6d66f4-4606-4b0d-bb13-33d783479928", "node_type": "1", "metadata": {}, "hash": "bea0c3fc11612630496b6f9bce28292b39e0d6f9e2793f7c31cf9fa5665f2d82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e89fa3a-4d79-4678-8218-30fa5adbee49", "node_type": "1", "metadata": {}, "hash": "58dc6500cdc997ca64a48eab8e81969c9e6bd22d61bb02eb82d565d25f645f58", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Mints** are created by calling the **[makeIssuerKit()](./issuer#makeissuerkit-allegedname-assetkind-displayinfo-optshutdownwithfailure-elementshape)** function. See the **[Issuer](./issuer)** documentation for detailed information about how to use this function.\n\n## aMint.getIssuer()\n\n- Returns: **[Issuer](./issuer)**\n\nReturns the **Issuer** uniquely associated with this **Mint**. From its creation, a **Mint** is always\nin an unchangeable one-to-one relationship with a particular **Issuer**.", "mimetype": "text/plain", "start_char_idx": 286, "end_char_idx": 784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e89fa3a-4d79-4678-8218-30fa5adbee49": {"__data__": {"id_": "0e89fa3a-4d79-4678-8218-30fa5adbee49", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_mint.md", "node_type": "4", "metadata": {}, "hash": "1fb457b421af660fa29383f272783c9112547bbbfef587d5db4b696288729288", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2873dfcf-f4fa-4441-b94d-4f9e8366a71e", "node_type": "1", "metadata": {}, "hash": "060db1b09b9bf79ce577f0b106cbb520e4301c2fe95f1a1f7224da1d1a86bedb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8ee34e8-b07c-4555-9d86-0c7d832ead85", "node_type": "1", "metadata": {}, "hash": "e0c8264332f4f0446fd59723de139782f158a9512d856cce7fe23850e61d33dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { issuer: quatloosIssuer, mint: quatloosMint } =\n  makeIssuerKit('quatloos');\nconst quatloosMintIssuer = quatloosMint.getIssuer();\n\n// Returns true\nissuer === quatloosMintIssuer;\n```\n\n## aMint.mintPayment(newAmount)\n\n- **newAmount**: **[Amount](./ertp-data-types#amount)**\n- Returns: **[Payment](./payment)**", "mimetype": "text/plain", "start_char_idx": 786, "end_char_idx": 1106, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b8ee34e8-b07c-4555-9d86-0c7d832ead85": {"__data__": {"id_": "b8ee34e8-b07c-4555-9d86-0c7d832ead85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_mint.md", "node_type": "4", "metadata": {}, "hash": "1fb457b421af660fa29383f272783c9112547bbbfef587d5db4b696288729288", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e89fa3a-4d79-4678-8218-30fa5adbee49", "node_type": "1", "metadata": {}, "hash": "58dc6500cdc997ca64a48eab8e81969c9e6bd22d61bb02eb82d565d25f645f58", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2302b80-82cf-49b4-b011-ddc709324c0d", "node_type": "1", "metadata": {}, "hash": "e47bf7b33fb542a0c99d4ea762501e6e37dcf3b3fdad290d95bc016726545865", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates and returns new digital assets of the **Mint**'s associated **[Brand](./brand)**.\nFrom its creation, a **Mint** is always in an unchangeable\none-to-one relationship with a **Brand**.\n\n```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\n\nconst quatloos1000 = amountMath.make(quatloosBrand, 1000n);\n// newPayment will have a balance of 1000 Quatloos\nconst newPayment = quatloosMint.mintPayment(quatloos1000);\n```", "mimetype": "text/plain", "start_char_idx": 1108, "end_char_idx": 1590, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f2302b80-82cf-49b4-b011-ddc709324c0d": {"__data__": {"id_": "f2302b80-82cf-49b4-b011-ddc709324c0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_mint.md", "node_type": "4", "metadata": {}, "hash": "1fb457b421af660fa29383f272783c9112547bbbfef587d5db4b696288729288", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8ee34e8-b07c-4555-9d86-0c7d832ead85", "node_type": "1", "metadata": {}, "hash": "e0c8264332f4f0446fd59723de139782f158a9512d856cce7fe23850e61d33dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Important\n**aMint.mintPayment()** is the <ins>only</ins> way\nto create new digital assets. There is no other way.\n:::", "mimetype": "text/plain", "start_char_idx": 1592, "end_char_idx": 1717, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71e82b88-67eb-42b7-92c2-9c15ee4187b1": {"__data__": {"id_": "71e82b88-67eb-42b7-92c2-9c15ee4187b1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5146a2c3-8fd3-45be-bcf3-00114b6a50be", "node_type": "1", "metadata": {}, "hash": "ab5bbf19781a70f7254542f00a24830dd2240573f8342ba9345cfd31da979169", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Payment Object\n\nA **Payment** holds digital assets that are in transit or\nexpected to soon be in transit. It can be deposited in **[Purses](./purse)**,\nsplit into or combined with multiple **Payments**, or claimed (i.e., getting\nan exclusive **Payment** and revoking access from anyone else).\n\nDigital assets in **Payments** can be any of:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5146a2c3-8fd3-45be-bcf3-00114b6a50be": {"__data__": {"id_": "5146a2c3-8fd3-45be-bcf3-00114b6a50be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71e82b88-67eb-42b7-92c2-9c15ee4187b1", "node_type": "1", "metadata": {}, "hash": "a7158eae694a004276573996219b2db2c70479e6000dee7e85f2d0f89618e0e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ba55439-2bc1-4a26-b054-dc15a9cc99ca", "node_type": "1", "metadata": {}, "hash": "69e9cbe25e8384a74fccc00f4c3694046dca1a4531c8215e4aee5ce3a0fbafe8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Currency-like, such as our imaginary _Quatloos_ currency.\n- Goods-like digital assets, such as theater tickets or magic weapons used in a game.\n- Other kinds of rights, such as the right to participate in a particular contract.\n\nA **Payment** is linear, meaning either a **Payment** has its full\noriginal balance, or it is used up entirely. You cannot partially use a\n**Payment**. In other words, if a **Payment** is 10 _Quatloos_, you can't\ntake out, say, only 3 _Quatloos_ from it.", "mimetype": "text/plain", "start_char_idx": 343, "end_char_idx": 828, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4ba55439-2bc1-4a26-b054-dc15a9cc99ca": {"__data__": {"id_": "4ba55439-2bc1-4a26-b054-dc15a9cc99ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5146a2c3-8fd3-45be-bcf3-00114b6a50be", "node_type": "1", "metadata": {}, "hash": "ab5bbf19781a70f7254542f00a24830dd2240573f8342ba9345cfd31da979169", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf", "node_type": "1", "metadata": {}, "hash": "973a01c79c210333d8f65ed951c9fe795f7f824a73050cf2ca4c3148bf3b64ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "However, you can split a **Payment** into multiple **Payments**. For example, you could split a\n10 _Quatloos_ **Payment** into two new **Payments** of 3 _Quatloos_ and 7 _Quatloos_ by calling the\n**[anIssuer.split()](./issuer#anissuer-split-payment-paymentamounta)** method which consumes the\noriginal 10 _Quatloos_ **Payment** and creates two new smaller **Payments**.", "mimetype": "text/plain", "start_char_idx": 830, "end_char_idx": 1199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf": {"__data__": {"id_": "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ba55439-2bc1-4a26-b054-dc15a9cc99ca", "node_type": "1", "metadata": {}, "hash": "69e9cbe25e8384a74fccc00f4c3694046dca1a4531c8215e4aee5ce3a0fbafe8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a28e369-586b-4ba7-81fb-8c40f678a30a", "node_type": "1", "metadata": {}, "hash": "e9f98ff4255378706d396123905b1a7b01170a3d2a2387fb4cf99b42cd5e65b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Payments** are often received from other actors. Since they are not self-verifying,\nyou cannot trust **Payments**. To get the verified balance of a **Payment**, call the **[anIssuer.getAmountOf()](./issuer#anissuer-getamountof-payment)** method.\n\nTo convert a **Payment** into a new **Purse**:\n\n1. Get the **Payment**'s trusted **[Issuer](./issuer)**.\n2. Use the **Issuer** to create an empty **Purse**.\n3. Deposit the **Payment** into the new **Purse**.", "mimetype": "text/plain", "start_char_idx": 1201, "end_char_idx": 1657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a28e369-586b-4ba7-81fb-8c40f678a30a": {"__data__": {"id_": "3a28e369-586b-4ba7-81fb-8c40f678a30a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf", "node_type": "1", "metadata": {}, "hash": "973a01c79c210333d8f65ed951c9fe795f7f824a73050cf2ca4c3148bf3b64ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66ce1dd5-0286-49dc-a424-ff5671eadf10", "node_type": "1", "metadata": {}, "hash": "8d643187b0c75c066baca2006162cc8508dbd263e3ceac6f8842177702261ccb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**[aPurse.deposit()](./purse#apurse-deposit-payment-optamount)** consumes the **Payment**,\nmaking it unavailable for later use.\n\n## aPayment.getAllegedBrand()\n\n- Returns: **[Brand](./brand)**\n\nReturns the **Brand** indicating the kind of digital asset this **Payment** purports to be.\nBecause **Payments** are not trusted, any method calls on them\nshould be treated with suspicion and verified elsewhere.\nAny successful operation by an **Issuer** on a **Payment** verifies it.", "mimetype": "text/plain", "start_char_idx": 1659, "end_char_idx": 2135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66ce1dd5-0286-49dc-a424-ff5671eadf10": {"__data__": {"id_": "66ce1dd5-0286-49dc-a424-ff5671eadf10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a28e369-586b-4ba7-81fb-8c40f678a30a", "node_type": "1", "metadata": {}, "hash": "e9f98ff4255378706d396123905b1a7b01170a3d2a2387fb4cf99b42cd5e65b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86be667e-6394-4631-9168-f60298d16334", "node_type": "1", "metadata": {}, "hash": "8fa1607c77d5767be6c670980a1eb4a972681185017182af7fafe216b2f3a515", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst payment = quatloosMint.mintPayment(AmountMath.make(quatloosBrand, 10n));\n// Should return 'quatloos'\nconst allegedBrand = payment.getAllegedBrand();\n```\n\n## Related Methods\n\nThe following methods on other ERTP components either operate\non or return a **Payment**.", "mimetype": "text/plain", "start_char_idx": 2137, "end_char_idx": 2412, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86be667e-6394-4631-9168-f60298d16334": {"__data__": {"id_": "86be667e-6394-4631-9168-f60298d16334", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66ce1dd5-0286-49dc-a424-ff5671eadf10", "node_type": "1", "metadata": {}, "hash": "8d643187b0c75c066baca2006162cc8508dbd263e3ceac6f8842177702261ccb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cb86112-0a6b-4fae-8bc6-2d01baad6232", "node_type": "1", "metadata": {}, "hash": "0b9598b3eb797457093e5ab24f1a28d2dbc25cb321873298f3fb6ffa7a0561f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**anIssuer.burn()**](./issuer#anissuer-burn-payment-optamount)\n  - Destroys all of the digital assets in the **Payment**.\n- [**anIssuer.getAmountOf()**](./issuer#anissuer-getamountof-payment)\n  - Describes the **Payment**'s balance as an **Amount**.\n- [**anIssuer.isLive()**](./issuer#anissuer-islive-payment)\n  - Returns **true** if the **Payment** was created by the **Issuer** and is available for use (i.e., has not been consumed or burned).", "mimetype": "text/plain", "start_char_idx": 2414, "end_char_idx": 2862, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cb86112-0a6b-4fae-8bc6-2d01baad6232": {"__data__": {"id_": "1cb86112-0a6b-4fae-8bc6-2d01baad6232", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86be667e-6394-4631-9168-f60298d16334", "node_type": "1", "metadata": {}, "hash": "8fa1607c77d5767be6c670980a1eb4a972681185017182af7fafe216b2f3a515", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0896aa7d-6174-4886-b4ca-331f7d7d8433", "node_type": "1", "metadata": {}, "hash": "82afac15c275728a6f2983efd1eb153adab0c99f96d1420e89203bb9fbd63af1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**aMint.mintPayment()**](./mint#amint-mintpayment-newamount)\n  - Create new digital assets of the **Mint**'s associated **Brand**.\n- [**aPurse.deposit()**](./purse#apurse-deposit-payment-optamount)\n  - Deposits all the contents of _payment_ into the **Purse**.\n- [**aPurse.getDepositFacet()**](./purse#apurse-getdepositfacet)\n  - Creates and returns a new deposit-only facet of the **Purse** that allows arbitrary other parties to deposit **Payments** into the **Purse**.", "mimetype": "text/plain", "start_char_idx": 2863, "end_char_idx": 3337, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0896aa7d-6174-4886-b4ca-331f7d7d8433": {"__data__": {"id_": "0896aa7d-6174-4886-b4ca-331f7d7d8433", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cb86112-0a6b-4fae-8bc6-2d01baad6232", "node_type": "1", "metadata": {}, "hash": "0b9598b3eb797457093e5ab24f1a28d2dbc25cb321873298f3fb6ffa7a0561f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a672c776-69fc-4be7-94f2-d1ff0200fe0d", "node_type": "1", "metadata": {}, "hash": "cf73ee10a69edf2dc9b92cdb69c34c9715eb4c294b5c9a9fa1b808e66daec277", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**aPurse.withdraw()**](./purse#apurse-withdraw-amount)\n  - Withdraws the _amount_ of specified digital assets from **Purse** into a new **Payment**.\n    ::: warning DEPRECATED\n- [**anIssuer.split()**](./issuer#anissuer-split-payment-paymentamounta)\n  - Splits a single **Payment** into two new **Payments**.\n- [**anIssuer.splitMany()**](./issuer#anissuer-splitmany-payment-amountarray)\n  - Split a single **Payment** into multiple **Payments**.", "mimetype": "text/plain", "start_char_idx": 3338, "end_char_idx": 3785, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a672c776-69fc-4be7-94f2-d1ff0200fe0d": {"__data__": {"id_": "a672c776-69fc-4be7-94f2-d1ff0200fe0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_payment.md", "node_type": "4", "metadata": {}, "hash": "230dc6e531a3785e3d32d0fec88a7e7551dccbbba1ff493d51ec6e026512aa2c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0896aa7d-6174-4886-b4ca-331f7d7d8433", "node_type": "1", "metadata": {}, "hash": "82afac15c275728a6f2983efd1eb153adab0c99f96d1420e89203bb9fbd63af1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- [**anIssuer.claim()**](./issuer#anissuer-claim-payment-optamount)\n  - Transfers all digital assets from _payment_ to a new **Payment**.\n- [**anIssuer.combine()**](./issuer#anissuer-combine-paymentsarray-opttotalamount)\n  - Combines multiple **Payments** into one new **Payment**.\n    :::", "mimetype": "text/plain", "start_char_idx": 3786, "end_char_idx": 4075, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d480d50-678f-484a-83c4-2af8fc7201a0": {"__data__": {"id_": "5d480d50-678f-484a-83c4-2af8fc7201a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2216a443-8d9f-4d55-81ec-2832f81b9f3e", "node_type": "1", "metadata": {}, "hash": "6881aaddc55e646d186613360b4b12c9792e62551e98ccdbda9166b5ff6b2c82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Purse Object\n\n**Purses** hold digital assets. They are created to hold assets of a single **[Brand](./brand)**,\nand the **Brand** that the **Purse** holds cannot be changed. For example, if you were to create a **Purse** that holds _Quatloos_, that **Purse** wouldn't ever be able to hold _Moola_, theater\ntickets, or any other non-_Quatloo_ asset type.\n\nDigital assets in **Purses** can be any of:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2216a443-8d9f-4d55-81ec-2832f81b9f3e": {"__data__": {"id_": "2216a443-8d9f-4d55-81ec-2832f81b9f3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d480d50-678f-484a-83c4-2af8fc7201a0", "node_type": "1", "metadata": {}, "hash": "5856065c2604f9b134628711735d4fa9570dfe78c740d77a60bd5cd5c2166297", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7ef2996-807f-40c4-b89c-5de9f9f456f0", "node_type": "1", "metadata": {}, "hash": "3769d37b4390091f1e472bf6f1d7594af8cb7fa655c056a0040839ed90d44781", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Currency-like, such as our imaginary _Quatloos_ currency.\n- Goods-like digital assets, such as theater tickets or magic weapons used in a game.\n- Other kinds of rights, such as the right to participate in a particular contract.\n\nWhile each **Purse** can only hold assets of one **Brand**, any number of **Purses** can be\ncreated that hold that **Brand**. So you could have, say, three _Quatloos_ **Purses**, your\nfriend Alice could have eight _Quatloos_ **Purses**, and so on.", "mimetype": "text/plain", "start_char_idx": 402, "end_char_idx": 880, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7ef2996-807f-40c4-b89c-5de9f9f456f0": {"__data__": {"id_": "b7ef2996-807f-40c4-b89c-5de9f9f456f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2216a443-8d9f-4d55-81ec-2832f81b9f3e", "node_type": "1", "metadata": {}, "hash": "6881aaddc55e646d186613360b4b12c9792e62551e98ccdbda9166b5ff6b2c82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ffb4bed-434b-4eaf-a303-6b96b7e78039", "node_type": "1", "metadata": {}, "hash": "76862ea15bc4e867295edb450390fc2dee69e0f4cffa2ca630036df842402324", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Purses** are created by calling the **[anIssuer.makeEmptyPurse()](./issuer#anissuer-makeemptypurse)**\nmethod on the **[Issuer](./issuer)** associated with the **Brand** of assets you want the\nnew **Purse** to hold.\n\n```js\nconst { issuer: quatloosIssuer } = makeIssuerKit('quatloos');\nconst quatloosPurse = quatloosIssuer.makeEmptyPurse();\n```", "mimetype": "text/plain", "start_char_idx": 882, "end_char_idx": 1226, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ffb4bed-434b-4eaf-a303-6b96b7e78039": {"__data__": {"id_": "9ffb4bed-434b-4eaf-a303-6b96b7e78039", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7ef2996-807f-40c4-b89c-5de9f9f456f0", "node_type": "1", "metadata": {}, "hash": "3769d37b4390091f1e472bf6f1d7594af8cb7fa655c056a0040839ed90d44781", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1615f4ed-fc45-42fb-ac64-cafae346192d", "node_type": "1", "metadata": {}, "hash": "5fcca957305a50372fa0e59819316da5983011be40ac600e78ba92d6537be7d9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You change a **Purse**'s balance by calling either\n**[aPurse.deposit()](#apurse-deposit-payment-optamount)** or\n**[aPurse.withdraw()](#apurse-withdraw-amount)** on it. A **Purse** can be empty, which if it holds\na fungible currency means it has a value of 0. If it holds a non-fungible asset (e.g., theater tickets),\nthen the **Purse** simply doesn't contain any assets if it's empty.", "mimetype": "text/plain", "start_char_idx": 1228, "end_char_idx": 1612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1615f4ed-fc45-42fb-ac64-cafae346192d": {"__data__": {"id_": "1615f4ed-fc45-42fb-ac64-cafae346192d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ffb4bed-434b-4eaf-a303-6b96b7e78039", "node_type": "1", "metadata": {}, "hash": "76862ea15bc4e867295edb450390fc2dee69e0f4cffa2ca630036df842402324", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f7a1382-a339-4a29-bcd6-be96354f641e", "node_type": "1", "metadata": {}, "hash": "3167c0caae060086314a03bf421374aafe5b6071235cbbb20f5ad56c00a6987e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unlike **[Payments](./payment)**, **Purses** are not meant to be sent to others.\nTo transfer digital assets, you should withdraw a **Payment** from a **Purse** and\nsend the **Payment** to another party.\n\n## aPurse.getCurrentAmount()\n\n- Returns: **[Amount](./ertp-data-types#amount)**", "mimetype": "text/plain", "start_char_idx": 1614, "end_char_idx": 1897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f7a1382-a339-4a29-bcd6-be96354f641e": {"__data__": {"id_": "1f7a1382-a339-4a29-bcd6-be96354f641e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1615f4ed-fc45-42fb-ac64-cafae346192d", "node_type": "1", "metadata": {}, "hash": "5fcca957305a50372fa0e59819316da5983011be40ac600e78ba92d6537be7d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36151848-d1fb-4d4c-a0fa-724a90fd8254", "node_type": "1", "metadata": {}, "hash": "d837ed124ecbdb00f823d9479f27d7a51ef20a754d39b3bcaf688d6e05985f26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns the **Purse**'s current balance as an **Amount**.\nThe returned **Amount** **[AmountValue](./ertp-data-types#amountvalue)** might be empty, and might be different the next time you\ncall **aPurse.getCurrentAmount()** on the same **Purse** if assets have been deposited or\nwithdrawn in the interim.", "mimetype": "text/plain", "start_char_idx": 1899, "end_char_idx": 2202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36151848-d1fb-4d4c-a0fa-724a90fd8254": {"__data__": {"id_": "36151848-d1fb-4d4c-a0fa-724a90fd8254", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f7a1382-a339-4a29-bcd6-be96354f641e", "node_type": "1", "metadata": {}, "hash": "3167c0caae060086314a03bf421374aafe5b6071235cbbb20f5ad56c00a6987e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8", "node_type": "1", "metadata": {}, "hash": "85083bf51d6b2bb44dcfa76d7151ec0e26ddd84041c14620899363574515e410", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { issuer: quatloosIssuer } = makeIssuerKit('quatloos');\nconst quatloosPurse = quatloosIssuer.makeEmptyPurse();\n// quatloos5 is a payment with balance of 5 quatloos\nconst quatloosPurse.deposit(quatloos5);\n// Returns an amount with value = 5 and brand = quatloos\nconst currentBalance = quatloosPurse.getCurrentAmount();\n```\n\n## aPurse.getCurrentAmountNotifier()\n\n- Returns: **Notifier&lt;[Amount](./ertp-data-types#amount)>**", "mimetype": "text/plain", "start_char_idx": 2204, "end_char_idx": 2639, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8": {"__data__": {"id_": "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36151848-d1fb-4d4c-a0fa-724a90fd8254", "node_type": "1", "metadata": {}, "hash": "d837ed124ecbdb00f823d9479f27d7a51ef20a754d39b3bcaf688d6e05985f26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f", "node_type": "1", "metadata": {}, "hash": "51012ffc5a271a33d80e3f2e52ecebde0e0f4338c7685885694e652c8661a6cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a lossy notifier for changes to this **Purse**'s balance. For more details,\nsee [Notifiers](/guides/js-programming/notifiers).\n\n```js\nconst notifier = purse.getCurrentAmountNotifier();\nlet nextUpdate = notifier.getUpdateSince();\n\nconst checkNotifier = async () => {\n  const { value: balance, updateCount } = await nextUpdate;\n  nextUpdate = notifier.getUpdateSince(updateCount);\n};\n```\n\n## aPurse.deposit(payment, optAmount?)", "mimetype": "text/plain", "start_char_idx": 2641, "end_char_idx": 3074, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f": {"__data__": {"id_": "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8", "node_type": "1", "metadata": {}, "hash": "85083bf51d6b2bb44dcfa76d7151ec0e26ddd84041c14620899363574515e410", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9", "node_type": "1", "metadata": {}, "hash": "2ac251821a268299387859dc1edcf73785172ff51488d6d4ac4dda2d1bb6683d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **payment**: **[Payment](./payment)**\n- **optAmount**: **[Amount](./ertp-data-types#amount)** - Optional.\n- Returns: **Amount**\n\nDeposit all the contents of _payment_ into the **Purse**, returning an **Amount** describing the\n**Payment**'s digital assets (i.e. the deposited amount). If the optional argument _optAmount_ does not equal the balance of\n_payment_, or if _payment_ is a promise, this method throws an error.", "mimetype": "text/plain", "start_char_idx": 3076, "end_char_idx": 3498, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9": {"__data__": {"id_": "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f", "node_type": "1", "metadata": {}, "hash": "51012ffc5a271a33d80e3f2e52ecebde0e0f4338c7685885694e652c8661a6cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8917bc5d-118a-43ed-b4ff-69f13654b5a4", "node_type": "1", "metadata": {}, "hash": "e624b8462988f2cf8de7fb315f7549de76a0bccc3c21fb80aa703a1650531f06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "While the above applies to local and remote **Purses**, for remote **Purses** there may be effects on\nthis operation due to the use of promises and asynchronicity. You\nhave to have a non-promise **Payment** before calling **aPurse.deposit()**.\nWhen you call **aPurse.deposit()** you get a response back (after waiting for the round trip)\ntelling you if it succeeded. All later arriving calls see the value has been transferred\ninto the **Purse**, and the **Payment** is no longer valid.", "mimetype": "text/plain", "start_char_idx": 3500, "end_char_idx": 3986, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8917bc5d-118a-43ed-b4ff-69f13654b5a4": {"__data__": {"id_": "8917bc5d-118a-43ed-b4ff-69f13654b5a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9", "node_type": "1", "metadata": {}, "hash": "2ac251821a268299387859dc1edcf73785172ff51488d6d4ac4dda2d1bb6683d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a105609-25d8-418c-b339-5b39e82510a9", "node_type": "1", "metadata": {}, "hash": "922e2ccd7ad698c43a04cb4fe5d18158bb645f328d654a69e009c9f349496e3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If any withdrawals are waiting for promises to resolve, a deposit operation\nmay pass them by. This is safe, as even if all the assets are withdrawn, the\ndeposit still works on an empty **Purse**.\n\n```js\nconst {\n  issuer: quatloosIssuer,\n  mint: quatloosMint,\n  brand: quatloosBrand\n} = makeIssuerKit('quatloos');\nconst quatloosPurse = quatloosIssuer.makeEmptyPurse();\nconst payment = quatloosMint.mintPayment(AmountMath.make(quatloosBrand, 123n));\nconst quatloos123 = AmountMath.make(quatloosBrand, 123n);", "mimetype": "text/plain", "start_char_idx": 3988, "end_char_idx": 4493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a105609-25d8-418c-b339-5b39e82510a9": {"__data__": {"id_": "6a105609-25d8-418c-b339-5b39e82510a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8917bc5d-118a-43ed-b4ff-69f13654b5a4", "node_type": "1", "metadata": {}, "hash": "e624b8462988f2cf8de7fb315f7549de76a0bccc3c21fb80aa703a1650531f06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "268be0f3-0d9c-4fec-b928-01e41478f1f6", "node_type": "1", "metadata": {}, "hash": "ff4c0cb9d583bcb7456f24bcac05baf6c8cc5b5246dad102d444ef304daa7661", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Deposit a payment for 123 Quatloos into the Purse.\nconst depositAmountA = quatloosPurse.deposit(payment, quatloos123);\n\nconst secondPayment = quatloosMint.mintPayment(\n  AmountMath.make(quatloosBrand, 100n)\n);\n// Throws error\nconst depositAmountB = quatloosPurse.deposit(secondPayment, quatloos123);\n```\n\n## aPurse.withdraw(amount)\n\n- **amount**: **[Amount](./ertp-data-types#amount)**\n- Returns: **[Payment](./payment)**", "mimetype": "text/plain", "start_char_idx": 4495, "end_char_idx": 4919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "268be0f3-0d9c-4fec-b928-01e41478f1f6": {"__data__": {"id_": "268be0f3-0d9c-4fec-b928-01e41478f1f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a105609-25d8-418c-b339-5b39e82510a9", "node_type": "1", "metadata": {}, "hash": "922e2ccd7ad698c43a04cb4fe5d18158bb645f328d654a69e009c9f349496e3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e77753a8-8741-4f08-87a8-79b73c4d5869", "node_type": "1", "metadata": {}, "hash": "bbd14c51349ff65056fa3d5a9b5305716541c5d94cccffadcd2d3534b3f8ff5d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Withdraws the specified **Amount** of digital assets from the **Purse** into a new **Payment** object.\n\nIf the call succeeds, it immediately extracts the value into a new **Payment**.\nThe caller won't get the new **Payment** until a later turn, since the call is (nearly always) remote.\nBut as soon as the message is processed, the value is gone from the **Purse**.", "mimetype": "text/plain", "start_char_idx": 4921, "end_char_idx": 5286, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e77753a8-8741-4f08-87a8-79b73c4d5869": {"__data__": {"id_": "e77753a8-8741-4f08-87a8-79b73c4d5869", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "268be0f3-0d9c-4fec-b928-01e41478f1f6", "node_type": "1", "metadata": {}, "hash": "ff4c0cb9d583bcb7456f24bcac05baf6c8cc5b5246dad102d444ef304daa7661", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5", "node_type": "1", "metadata": {}, "hash": "6359890254283b9e27ef8a461104a7d801af2dd8173b9411ff811cc517b093d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Create a Purse and give it a balance of 10 Quatloos\nconst { issuer, mint, brand } = makeIssuerKit('quatloos');\nconst purse = issuer.makeEmptyPurse();\nconst payment = mint.mintPayment(AmountMath.make(brand, 10n));\nconst quatloos10 = AmountMath.make(brand, 10n);\npurse.deposit(payment, quatloos10);\n\n// Withdraw an amount of 3 from the Purse\nconst quatloos3 = AmountMath.make(brand, 3n);\nconst withdrawalPayment = purse.withdraw(quatloos3);", "mimetype": "text/plain", "start_char_idx": 5288, "end_char_idx": 5735, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5": {"__data__": {"id_": "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e77753a8-8741-4f08-87a8-79b73c4d5869", "node_type": "1", "metadata": {}, "hash": "bbd14c51349ff65056fa3d5a9b5305716541c5d94cccffadcd2d3534b3f8ff5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816", "node_type": "1", "metadata": {}, "hash": "b51689ba9bd13289692fd1a5f5df91e5044aa35e6fbf616304df7742fe396a3d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// The balance of the withdrawal payment is 3 Quatloos\nissuer.getAmountOf(withdrawalPayment);\n\n// The new balance of the Purse is 7 Quatloos\npurse.getCurrentAmount();\n```\n\n## aPurse.getAllegedBrand()\n\n- Returns: **[Brand](./brand)**", "mimetype": "text/plain", "start_char_idx": 5737, "end_char_idx": 5969, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816": {"__data__": {"id_": "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5", "node_type": "1", "metadata": {}, "hash": "6359890254283b9e27ef8a461104a7d801af2dd8173b9411ff811cc517b093d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2822b78d-c957-4809-b9cd-35d9a4007db4", "node_type": "1", "metadata": {}, "hash": "fe41ee1e09cae81a9c86008b25d76a4f1d729c5ecc8400ec9d235d7c27a32564", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **[Brand](./brand)**\n\nReturns an alleged brand (Note: a **Brand**, not a **String** as **allegedName()** methods do),\nindicating what kind of digital asset the **Purse** purports to hold. This can identify the\n**Purse**'s **Brand** if the **Purse** was made by a trusted **[Issuer](./issuer)** using **[anIssuer.makeEmptyPurse()](./issuer#anissuer-makeemptypurse)**.\n\n```js\nconst purseBrand = quatloosPurse.getAllegedBrand();\n```\n\n## aPurse.getDepositFacet()\n\n- Returns: **DepositFacet**", "mimetype": "text/plain", "start_char_idx": 5938, "end_char_idx": 6436, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2822b78d-c957-4809-b9cd-35d9a4007db4": {"__data__": {"id_": "2822b78d-c957-4809-b9cd-35d9a4007db4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816", "node_type": "1", "metadata": {}, "hash": "b51689ba9bd13289692fd1a5f5df91e5044aa35e6fbf616304df7742fe396a3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03a4cd58-dba7-45bd-afcc-b6d55673e4e7", "node_type": "1", "metadata": {}, "hash": "c5752e5e19a0a44c30e5d74425137ab5550d95f248972006175ce06d89aa6cdf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **DepositFacet**\n\nCreates and returns a **DepositFacet**, a new deposit-only facet of the **Purse** that allows\nother parties to deposit **[Payments](./payment)** into the **Purse** without the ability\nto check the **Purse's** balance or withdraw from it.\nThis makes it a safe way to let other people send you **Payments**.\n\nYou can only deposit a **Payment** into a **DepositFacet** that's the same **[Brand](./brand)** as the original **Purse**.", "mimetype": "text/plain", "start_char_idx": 6409, "end_char_idx": 6867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03a4cd58-dba7-45bd-afcc-b6d55673e4e7": {"__data__": {"id_": "03a4cd58-dba7-45bd-afcc-b6d55673e4e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2822b78d-c957-4809-b9cd-35d9a4007db4", "node_type": "1", "metadata": {}, "hash": "fe41ee1e09cae81a9c86008b25d76a4f1d729c5ecc8400ec9d235d7c27a32564", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55d9fc5a-77e9-4160-bd88-4bae4425dafb", "node_type": "1", "metadata": {}, "hash": "cc4ef37355bd5de4130e1cb8c0b05d55fb280aac542466c69e29153d44461420", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst depositOnlyFacet = purse.getDepositFacet();\n\n// Give depositOnlyFacet to someone else. Anyone with a deposit facet reference can tell it to receive\n// a payment, thus depositing the payment assets in the Purse associated with the deposit facet.\ndepositOnlyFacet.receive(payment);\n```", "mimetype": "text/plain", "start_char_idx": 6869, "end_char_idx": 7164, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "55d9fc5a-77e9-4160-bd88-4bae4425dafb": {"__data__": {"id_": "55d9fc5a-77e9-4160-bd88-4bae4425dafb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03a4cd58-dba7-45bd-afcc-b6d55673e4e7", "node_type": "1", "metadata": {}, "hash": "c5752e5e19a0a44c30e5d74425137ab5550d95f248972006175ce06d89aa6cdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059", "node_type": "1", "metadata": {}, "hash": "e47a526ec359e9b90a8efb113d5fbf7f73cbe65b26950f8a7db7b50d4cd0f3a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once you have created a **DepositFacet**, there is one method you can call\non it, **[aDepositFacet.receive()](#adepositfacet-receive-payment-optamount)**. The **DepositFacet** takes a **Payment**\nand adds it to the balance of the **DepositFacet**'s associated **Purse**. The **Payment**\nmust be of the same **Brand** as what the **Purse** holds.", "mimetype": "text/plain", "start_char_idx": 7166, "end_char_idx": 7511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059": {"__data__": {"id_": "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55d9fc5a-77e9-4160-bd88-4bae4425dafb", "node_type": "1", "metadata": {}, "hash": "cc4ef37355bd5de4130e1cb8c0b05d55fb280aac542466c69e29153d44461420", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e9ebb64-61a9-4c45-ac59-496c6715e839", "node_type": "1", "metadata": {}, "hash": "c4522c4559cf2edb6e50c3bd90400878f572190ee381ccbfc010301797efe31a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note the difference in method names for adding assets between a **Purse** and its **DepositFacet**.\nTo add assets to a **Purse** directly, you use **aPurse.deposit()**. To add assets\nto a **Purse** via its **DepositFacet**, you use **aDepositFacet.receive()**.\n\n## aDepositFacet.receive(payment, optAmount?)\n\n- **payment**: **[Payment](./payment)**\n- **optAmount**: **[Amount](./ertp-data-types#amount)** - Optional.\n- Returns **Amount**", "mimetype": "text/plain", "start_char_idx": 7513, "end_char_idx": 7950, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e9ebb64-61a9-4c45-ac59-496c6715e839": {"__data__": {"id_": "5e9ebb64-61a9-4c45-ac59-496c6715e839", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059", "node_type": "1", "metadata": {}, "hash": "e47a526ec359e9b90a8efb113d5fbf7f73cbe65b26950f8a7db7b50d4cd0f3a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85addacd-b4ce-4770-92cc-7831705b3030", "node_type": "1", "metadata": {}, "hash": "161e0cf04d7bc5a12a638b4736235ed20dfd274fc947e799d2d3e7a547c15551", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **DepositFacet** takes the **Payment** and adds it to the balance of the **DepositFacet**'s associated **Purse**.\n\nIf the optional argument _optAmount_ does not equal the balance of\n_payment_, or if _payment_ is an unresolved promise, this method throws an error.\n\n```js\nconst depositOnlyFacet = purse.getDepositFacet();", "mimetype": "text/plain", "start_char_idx": 7952, "end_char_idx": 8276, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85addacd-b4ce-4770-92cc-7831705b3030": {"__data__": {"id_": "85addacd-b4ce-4770-92cc-7831705b3030", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_ertp-api_purse.md", "node_type": "4", "metadata": {}, "hash": "d3b7e420205d0b3bd95471ad2f784bf8e7400dbcf458ed5a5de9a507083360c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e9ebb64-61a9-4c45-ac59-496c6715e839", "node_type": "1", "metadata": {}, "hash": "c4522c4559cf2edb6e50c3bd90400878f572190ee381ccbfc010301797efe31a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Give depositOnlyFacet to someone else. Anyone with a deposit facet reference can tell it to receive\n// a payment, thus depositing the payment assets in the Purse associated with the deposit facet.\ndepositOnlyFacet.receive(payment);\n```", "mimetype": "text/plain", "start_char_idx": 6926, "end_char_idx": 7164, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad438393-5411-4aec-9d7c-bdeafa99d500": {"__data__": {"id_": "ad438393-5411-4aec-9d7c-bdeafa99d500", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_board.md", "node_type": "4", "metadata": {}, "hash": "2838872a666afa005023aaf5e1394712385d6b43890d41c28294159cb6c445d7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "see [Board Name Service](/guides/integration/name-services#the-board-publishing-under-arbitrary-names)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "359c0fed-619c-4ec3-875a-a87788c72fdd": {"__data__": {"id_": "359c0fed-619c-4ec3-875a-a87788c72fdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87809273-97c8-4b30-be11-5d9440e257a6", "node_type": "1", "metadata": {}, "hash": "2fdbf6a336d14db0908ce15091255d60e889a283e6ba4de7d196268735217db3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Agoric REPL\n\n**Note**: This page describes the Agoric REPL.\nIf you are instead looking for information about `node` or the Node.js REPL, see\n[Node.js documentation](https://nodejs.org/api/repl.html).\n\n## Introduction\n\nWhen you run `agoric start --reset`, you start a local _ag-solo_.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87809273-97c8-4b30-be11-5d9440e257a6": {"__data__": {"id_": "87809273-97c8-4b30-be11-5d9440e257a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "359c0fed-619c-4ec3-875a-a87788c72fdd", "node_type": "1", "metadata": {}, "hash": "651096eabcef574bfb08b14c3d718d24c0bf0f70bf02cde2d50a65c7b51488fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63800a1b-e425-4b0c-94e0-5385f740c188", "node_type": "1", "metadata": {}, "hash": "6a86f64d04f373892ee6fc53846c3d0aeccf7f10d59d3bd173f0c5f2263e0973", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You use `agoric start` to start what we call an _ag-solo_, which is a\nsingle personal local Agoric node. You need an ag-solo running on your\nmachine to interact with Agoric network services, whether a built-in\nsimulated chain (also started by `agoric start`), or a fully-decentralized public Agoric\nblockchain.", "mimetype": "text/plain", "start_char_idx": 287, "end_char_idx": 597, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63800a1b-e425-4b0c-94e0-5385f740c188": {"__data__": {"id_": "63800a1b-e425-4b0c-94e0-5385f740c188", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87809273-97c8-4b30-be11-5d9440e257a6", "node_type": "1", "metadata": {}, "hash": "2fdbf6a336d14db0908ce15091255d60e889a283e6ba4de7d196268735217db3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a", "node_type": "1", "metadata": {}, "hash": "80e553010e8cb968f4a10248a54b7942619800df4ef6a933a36a4fba501eca89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All deployment happens via the local running Agoric process. This is usually the\nag-solo process, and frequently referred to as that or just as ag-solo. It is also\nsometimes described as/called an Agoric VM or a local server.", "mimetype": "text/plain", "start_char_idx": 599, "end_char_idx": 824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a": {"__data__": {"id_": "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63800a1b-e425-4b0c-94e0-5385f740c188", "node_type": "1", "metadata": {}, "hash": "6a86f64d04f373892ee6fc53846c3d0aeccf7f10d59d3bd173f0c5f2263e0973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed69e001-e126-4b6b-9ca1-c76e953bab3d", "node_type": "1", "metadata": {}, "hash": "8df991112fbdb7ce2357712446945c7d7fd0df7956db9bce3d08a9e57800c2fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An ag-solo communicates with either a locally running or remote chain. This local process (the ag-solo)\nhas a home object, which contains references to services on-chain, including Zoe, the\nBoard for sharing objects, and an application user's Wallet, among others. Developers can\nuse these service references to call the service's associated API commands.", "mimetype": "text/plain", "start_char_idx": 826, "end_char_idx": 1181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed69e001-e126-4b6b-9ca1-c76e953bab3d": {"__data__": {"id_": "ed69e001-e126-4b6b-9ca1-c76e953bab3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a", "node_type": "1", "metadata": {}, "hash": "80e553010e8cb968f4a10248a54b7942619800df4ef6a933a36a4fba501eca89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "253f97e6-dc1f-4024-8d92-b312a850763f", "node_type": "1", "metadata": {}, "hash": "a2ba795826d60a2de85d7fcff811a9c8ecd0d69f9dc2e3c68ee861ff4c789b47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Contract code starts in a file on a user's computer, either written by them or\nimported from `agoric/zoe`. The code is _bundled_; turned into a particularly formatted\nblob of code that exists in memory while a deploy script is running. When `E(zoe).install()` is\ncalled, the blob is sent to and stored on-chain so that Zoe can access it.", "mimetype": "text/plain", "start_char_idx": 1183, "end_char_idx": 1520, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "253f97e6-dc1f-4024-8d92-b312a850763f": {"__data__": {"id_": "253f97e6-dc1f-4024-8d92-b312a850763f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed69e001-e126-4b6b-9ca1-c76e953bab3d", "node_type": "1", "metadata": {}, "hash": "8df991112fbdb7ce2357712446945c7d7fd0df7956db9bce3d08a9e57800c2fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd59ecb8-0f55-4d01-9550-db2c72669c93", "node_type": "1", "metadata": {}, "hash": "6f23f17325a7bae12a11aeaa4b2258dde3c2c87b23c085ff2471fbb01dd31c4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An ag-solo has an associated REPL (_Read-Eval-Print Loop_). From the REPL and the `home`\nobject, developers can use all the on-chain commands that deployment scripts use to\ndeploy contracts and Dapps. In addition to the on-chain commands, they can also run\nany other JavaScript commands from the REPL.\n\n## Accessing the REPL\n\nOnce an ag-solo is running and on-chain, you can access its associated REPL\nin two ways.", "mimetype": "text/plain", "start_char_idx": 1522, "end_char_idx": 1936, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd59ecb8-0f55-4d01-9550-db2c72669c93": {"__data__": {"id_": "cd59ecb8-0f55-4d01-9550-db2c72669c93", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "253f97e6-dc1f-4024-8d92-b312a850763f", "node_type": "1", "metadata": {}, "hash": "a2ba795826d60a2de85d7fcff811a9c8ecd0d69f9dc2e3c68ee861ff4c789b47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01a3e93a-5e34-44bd-84f2-29d97212ef59", "node_type": "1", "metadata": {}, "hash": "346c5129db28f9e4bc587df92e5c429235b3f326cc7a0e6ab5bece72ae5fcb7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- In a browser tab, go to `localhost:8000`. Depending on the browser's width, you\n  will see the Wallet UI and REPL either in separate columns or separate rows.\n\n![Wallet and REPL](./assets/walletAndREPLColumns.png)\n\n![Wallet and REPL](./assets/walletAndREPLRows.png)\n\n- From a shell, run `agoric open --repl` This opens the user's Wallet UI and its\n  associated REPL. To open only the REPL, run `agoric open --repl only`\n\n![REPL](./assets/repl.png)\n\n## Using the REPL", "mimetype": "text/plain", "start_char_idx": 1938, "end_char_idx": 2406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01a3e93a-5e34-44bd-84f2-29d97212ef59": {"__data__": {"id_": "01a3e93a-5e34-44bd-84f2-29d97212ef59", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd59ecb8-0f55-4d01-9550-db2c72669c93", "node_type": "1", "metadata": {}, "hash": "6f23f17325a7bae12a11aeaa4b2258dde3c2c87b23c085ff2471fbb01dd31c4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e", "node_type": "1", "metadata": {}, "hash": "b8a0eef87d18ed630f0150fe6480cd14dfd6d52e99cbf8cbae1ea71451099ca4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Using the REPL\n\nYou can run JavaScript commands from the REPL. You can also use the REPL's\n`home` object's predefined connections to other objects and services. To see what\u2019s\navailable, just type `home` into the REPL:\n\n![home](./assets/home.png)", "mimetype": "text/plain", "start_char_idx": 2389, "end_char_idx": 2637, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e": {"__data__": {"id_": "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01a3e93a-5e34-44bd-84f2-29d97212ef59", "node_type": "1", "metadata": {}, "hash": "346c5129db28f9e4bc587df92e5c429235b3f326cc7a0e6ab5bece72ae5fcb7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11122904-8000-4a1b-864e-9626db5fc73b", "node_type": "1", "metadata": {}, "hash": "1b589b13be40bdc1143dcd746207495fcad322ea78b4870a0b996fea4c2747a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "![home](./assets/home.png)\n\n```js\nCommand[1] home\nHistory[1] {\"chainTimerService\":[Presence o-50],\"contractHost\":[Presence o-52],\"ibcport\":[Presence o-53],\"registrar\":[Presence o-54],\"registry\":[Presence o-55],\"zoe\":[Presence o-56],\"localTimerService\":[Presence o-57],\"uploads\":[Presence o-58],\"spawner\":[Presence o-59],\"wallet\":[Presence o-60],\"network\":[Presence o-61],\"http\":[Presence o-62]}\n```\n\nThe results of what is entered into the REPL is saved under `history[N]`", "mimetype": "text/plain", "start_char_idx": 2611, "end_char_idx": 3083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11122904-8000-4a1b-864e-9626db5fc73b": {"__data__": {"id_": "11122904-8000-4a1b-864e-9626db5fc73b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e", "node_type": "1", "metadata": {}, "hash": "b8a0eef87d18ed630f0150fe6480cd14dfd6d52e99cbf8cbae1ea71451099ca4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c09b844e-33a0-4905-aaf5-e30e175d1d6e", "node_type": "1", "metadata": {}, "hash": "bad53086afa20ea5ee7e195fbc094bc29db6b8732a61c9ab967589855959004b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following sections describe the `home` objects developers can use. Click on the\nsection header to go to more detailed documentation about that object.\nSeveral `home` objects are either for internal Agoric use only or have been deprecated. These\nare listed together in the final section. External developers should ignore them and not try to use\nthem.\n\n### [`wallet`](../wallet-api/)", "mimetype": "text/plain", "start_char_idx": 3085, "end_char_idx": 3471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c09b844e-33a0-4905-aaf5-e30e175d1d6e": {"__data__": {"id_": "c09b844e-33a0-4905-aaf5-e30e175d1d6e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11122904-8000-4a1b-864e-9626db5fc73b", "node_type": "1", "metadata": {}, "hash": "1b589b13be40bdc1143dcd746207495fcad322ea78b4870a0b996fea4c2747a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "974b70f5-76ca-4528-9225-b1ccf39da033", "node_type": "1", "metadata": {}, "hash": "74d1a2f37d1b411834f529260a4bfe3f23b102730cde055cdd62b5e80103789b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### [`wallet`](../wallet-api/)\n\nHolds on-chain digital assets and object capabilities on behalf of the user.\nThe header link takes you to the standard non-REPL specific `wallet` API documentation. When calling\n`wallet` API methods from the REPL, `wallet` must be prefaced by `home.` and use `E()`. For\nexample, `E(home.wallet).getPurses()`. [Full Wallet API documentation.](/guides/wallet/)\n\n### [`chainTimerService`](./timerServices)", "mimetype": "text/plain", "start_char_idx": 3441, "end_char_idx": 3875, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "974b70f5-76ca-4528-9225-b1ccf39da033": {"__data__": {"id_": "974b70f5-76ca-4528-9225-b1ccf39da033", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c09b844e-33a0-4905-aaf5-e30e175d1d6e", "node_type": "1", "metadata": {}, "hash": "bad53086afa20ea5ee7e195fbc094bc29db6b8732a61c9ab967589855959004b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e884a0f3-2ab5-43df-8178-0c00080c3ad3", "node_type": "1", "metadata": {}, "hash": "9af02c4fc67c2518a43afe13db688422b6ab1d9acd5412b165a9ed9d7775b78f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "On-chain time authority used to schedule events. [Full `chainTimerService` documentation.](./timerServices)\n\n### [`localTimerService`](./timerServices)\n\nLocal off-chain time authority used to schedule events. [Full `localTimerService` documentation.](./timerServices)\n\n### [`board`](./board)\n\nShared on-chain location where users can post generally accessible values. [Full `board` documentation.](./board)\n\n### [`ibcport`](./networking)", "mimetype": "text/plain", "start_char_idx": 3877, "end_char_idx": 4314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e884a0f3-2ab5-43df-8178-0c00080c3ad3": {"__data__": {"id_": "e884a0f3-2ab5-43df-8178-0c00080c3ad3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "974b70f5-76ca-4528-9225-b1ccf39da033", "node_type": "1", "metadata": {}, "hash": "74d1a2f37d1b411834f529260a4bfe3f23b102730cde055cdd62b5e80103789b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f19d628-eeda-46bc-86d3-8dc73f097696", "node_type": "1", "metadata": {}, "hash": "833e3a0b7fd27d615c633f6ae6a4891ea5587742fad3fd8c4df317f94944f518", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### [`ibcport`](./networking)\n\nIBC implementation that lets vats open and close listening ports,\nconnect and disconnect to/from remote ports, and send and receive\ndata over those connections. [Full `ibcport` documentation.](./networking)\n\n### [`zoe`](../zoe-api/zoe)", "mimetype": "text/plain", "start_char_idx": 4285, "end_char_idx": 4551, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f19d628-eeda-46bc-86d3-8dc73f097696": {"__data__": {"id_": "5f19d628-eeda-46bc-86d3-8dc73f097696", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e884a0f3-2ab5-43df-8178-0c00080c3ad3", "node_type": "1", "metadata": {}, "hash": "9af02c4fc67c2518a43afe13db688422b6ab1d9acd5412b165a9ed9d7775b78f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48ca2205-3c90-4486-b90d-1af6b39b2f2b", "node_type": "1", "metadata": {}, "hash": "4754a486058e4f2a8645c8ac564fc4fd6ec3d05f8b00a2708032eae4306eac31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Deploy and interact with smart contracts. Zoe protects smart contract users by escrowing\ndigital assets and guaranteeing users get either what they want or get a refund of what\nthey escrowed. Even if the contract is buggy or malicious. The header link takes you to the\nstandard, non-REPL specific, `zoe` API documentation. When calling any of the `zoe` API\nmethods from the REPL, `zoe` must be prefaced by `home.` and use `E()`. For", "mimetype": "text/plain", "start_char_idx": 4553, "end_char_idx": 4985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48ca2205-3c90-4486-b90d-1af6b39b2f2b": {"__data__": {"id_": "48ca2205-3c90-4486-b90d-1af6b39b2f2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f19d628-eeda-46bc-86d3-8dc73f097696", "node_type": "1", "metadata": {}, "hash": "833e3a0b7fd27d615c633f6ae6a4891ea5587742fad3fd8c4df317f94944f518", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7cff4a08-25a0-49bd-b250-0844c6b09341", "node_type": "1", "metadata": {}, "hash": "5faa0274dd984f1892587dc14cfa0c7260f798c8aa9b6d4365f6f7b0ef4f8d07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "example, `E(home.zoe).getFoo()`. [Full Zoe API documentation.](../zoe-api/zoe)", "mimetype": "text/plain", "start_char_idx": 4986, "end_char_idx": 5064, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7cff4a08-25a0-49bd-b250-0844c6b09341": {"__data__": {"id_": "7cff4a08-25a0-49bd-b250-0844c6b09341", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48ca2205-3c90-4486-b90d-1af6b39b2f2b", "node_type": "1", "metadata": {}, "hash": "4754a486058e4f2a8645c8ac564fc4fd6ec3d05f8b00a2708032eae4306eac31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb3cb326-a902-41c7-994c-1f6ab2f2747e", "node_type": "1", "metadata": {}, "hash": "872ecf9a2e07975483844a91e82d2ffea85f7a78d175117f1ceeedf13435ed04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### [`priceAuthority`](./priceAuthority)\n\nGet price quotes for pairs of digital assets. [Full `priceAuthority` documentation.](./priceAuthority)\n\n### [`scratch`](./scratch)\n\nAn off-chain, private, place to store key-value pairs on your ag-solo for later use. [Full `scratch` documentation.](./scratch)\n\n### Deprecated and Internal-Only Objects", "mimetype": "text/plain", "start_char_idx": 5066, "end_char_idx": 5409, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb3cb326-a902-41c7-994c-1f6ab2f2747e": {"__data__": {"id_": "fb3cb326-a902-41c7-994c-1f6ab2f2747e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7cff4a08-25a0-49bd-b250-0844c6b09341", "node_type": "1", "metadata": {}, "hash": "5faa0274dd984f1892587dc14cfa0c7260f798c8aa9b6d4365f6f7b0ef4f8d07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a8d0790-dc1b-4d24-8b70-61d4951b9021", "node_type": "1", "metadata": {}, "hash": "075307f6d8a7d75fe15b313635ea83f8da6e476c69c391f33f9885e6dc1d1969", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `contractHost`: Replaced by the `spawner` object.\n- `faucet`: Internal for chain setup.\n- `http`: `api/deploy.js` uses this to install new HTTP and WebSocket handlers in an\n  ag-solo. You should not need to use it.\n- `network`: Privileged object for internal use. [Full Network documentation.](./networking)\n- `plugin`: Privileged object for internal use.\n- `priceAuthorityAdmin`: Privileged object for internal use.\n- `registrar`: Deprecated.\n- `registry`: Deprecated.", "mimetype": "text/plain", "start_char_idx": 5411, "end_char_idx": 5882, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a8d0790-dc1b-4d24-8b70-61d4951b9021": {"__data__": {"id_": "2a8d0790-dc1b-4d24-8b70-61d4951b9021", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_index.md", "node_type": "4", "metadata": {}, "hash": "d70911854a0f483eb4a99663a7bc1658a917da35f7d484495a9052f0e3fe9b47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb3cb326-a902-41c7-994c-1f6ab2f2747e", "node_type": "1", "metadata": {}, "hash": "872ecf9a2e07975483844a91e82d2ffea85f7a78d175117f1ceeedf13435ed04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `registry`: Deprecated.\n- `spawner`: Privileged object for internal use.\n- `uploads`: Deprecated name for `scratch`.\n- `vattp`: Privileged object for internal use.", "mimetype": "text/plain", "start_char_idx": 5857, "end_char_idx": 6022, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f03adbf6-b4ec-4832-9426-2870bd848f26": {"__data__": {"id_": "f03adbf6-b4ec-4832-9426-2870bd848f26", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b067cf1-f9a9-4b78-b728-7e51cb14acd0", "node_type": "1", "metadata": {}, "hash": "604e7a11abcc6d3a0650782edceb1f40f06f741291e502e5ecd00093e42afd61", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Network API\n\n<!--\n  content should remain synchronized with\n  https://github.com/Agoric/agoric-sdk/blob/HEAD/packages/SwingSet/docs/networking.md\n-->\n\nSuitably-empowered code inside a vat can access a \"network API\" that works\nvaguely like the BSD socket API. This code can:\n\n- Open a listening port on various networking stacks.\n- Initiate connections to remote ports.\n- Send and receive data over these connections\n- Close the connection and/or ports.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 454, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b067cf1-f9a9-4b78-b728-7e51cb14acd0": {"__data__": {"id_": "9b067cf1-f9a9-4b78-b728-7e51cb14acd0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f03adbf6-b4ec-4832-9426-2870bd848f26", "node_type": "1", "metadata": {}, "hash": "68cae65e75c0f7d752b3f673e0fbe6068f8d1af8d9682376bc37a94e28bc0cd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0df37420-4a90-4839-9531-ac90ba30b40e", "node_type": "1", "metadata": {}, "hash": "0516d4694ac853d9304666251c30e44905246f548d99de25b46e9d4a3ca9231e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The type of connection is limited by the host in which the vat is running. Chain-based machines must operate in a platonic realm of replicated consensus, so their network options are limited to protocols like IBC, which allow one gestalt chain to talk to other chain-like entities. Each such entity is defined by an evolving set of consensus rules, which typically include a current set of validator public keys and a particular history of hashed block identifiers.", "mimetype": "text/plain", "start_char_idx": 456, "end_char_idx": 921, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0df37420-4a90-4839-9531-ac90ba30b40e": {"__data__": {"id_": "0df37420-4a90-4839-9531-ac90ba30b40e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b067cf1-f9a9-4b78-b728-7e51cb14acd0", "node_type": "1", "metadata": {}, "hash": "604e7a11abcc6d3a0650782edceb1f40f06f741291e502e5ecd00093e42afd61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f63d176-944e-49a4-a91c-f2bc2abab1be", "node_type": "1", "metadata": {}, "hash": "3239d5ea84c4fc8088e57eaa9a26d8544da882b099de88ef8c16495c70232577", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**CAVEAT:** IBC uses\n[Connection](https://github.com/cosmos/ibc/tree/main/spec/core/ics-003-connection-semantics/README)\nto mean a chain-to-chain hop, and\n[Channel](https://github.com/cosmos/ibc/tree/main/spec/core/ics-004-channel-and-packet-semantics/README)\nto mean a Port-to-Port pathway through a series of hops.\nThis is unfortunate, because IBC \"Channels\" correspond most precisely to\nTCP \"connections\", and most discussions of network APIs (including this one,", "mimetype": "text/plain", "start_char_idx": 923, "end_char_idx": 1389, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f63d176-944e-49a4-a91c-f2bc2abab1be": {"__data__": {"id_": "0f63d176-944e-49a4-a91c-f2bc2abab1be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0df37420-4a90-4839-9531-ac90ba30b40e", "node_type": "1", "metadata": {}, "hash": "0516d4694ac853d9304666251c30e44905246f548d99de25b46e9d4a3ca9231e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a072bf8f-5a01-4cb2-bc2b-15349345fdbd", "node_type": "1", "metadata": {}, "hash": "75d842f20467485dd25030225a50ffbae81e72a17105ac4953cb6fd8a2efd019", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "below) will talk about \"connections\" extensively.\nFor now, our IBC implementation can only use pre-established hops, and provides\nno means for user-level code to create new hops (IBC Connections) at runtime.\nBut user-level code can create new IBC Channels at any time. The terminology\nconfusion will be most obvious in the section on \"Accepting an Inbound Connection\",\nwhere the user code is really accepting an inbound IBC _Channel_.", "mimetype": "text/plain", "start_char_idx": 1390, "end_char_idx": 1824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a072bf8f-5a01-4cb2-bc2b-15349345fdbd": {"__data__": {"id_": "a072bf8f-5a01-4cb2-bc2b-15349345fdbd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f63d176-944e-49a4-a91c-f2bc2abab1be", "node_type": "1", "metadata": {}, "hash": "3239d5ea84c4fc8088e57eaa9a26d8544da882b099de88ef8c16495c70232577", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27fab5fb-3a02-4356-b6ad-897204228736", "node_type": "1", "metadata": {}, "hash": "af77abead3ece94411a0d3f31c18d419555e4523c35183058c962d559630422a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A channel via these IBC hops will terminate in IBC-aware code on either end. These endpoints might be traditional (static) IBC handlers (such as an ICS-20 token transfer module), or dynamic IBC handlers (e.g. running in a SwingSet vat). SwingSet vat code that wants to speak to vat code in a different SwingSet machine would not use the IBC connection directly: instead it would simply perform normal eventual-send operations (`E(target).foo(args)`) and let the \"CapTP\" promise-pipelining layer handle the", "mimetype": "text/plain", "start_char_idx": 1826, "end_char_idx": 2331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27fab5fb-3a02-4356-b6ad-897204228736": {"__data__": {"id_": "27fab5fb-3a02-4356-b6ad-897204228736", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a072bf8f-5a01-4cb2-bc2b-15349345fdbd", "node_type": "1", "metadata": {}, "hash": "75d842f20467485dd25030225a50ffbae81e72a17105ac4953cb6fd8a2efd019", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e387d72-4856-4e5e-9ad7-39c2b90f98d3", "node_type": "1", "metadata": {}, "hash": "5d469db1ded40c56cdd567ac0143e6a9f569b6b6db6d02fd21419ab64f9d4f31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "promise-pipelining layer handle the details. But vat code which wants to speak to an ICS-20 handler in some other chain would need to use this layer.", "mimetype": "text/plain", "start_char_idx": 2296, "end_char_idx": 2445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2e387d72-4856-4e5e-9ad7-39c2b90f98d3": {"__data__": {"id_": "2e387d72-4856-4e5e-9ad7-39c2b90f98d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27fab5fb-3a02-4356-b6ad-897204228736", "node_type": "1", "metadata": {}, "hash": "af77abead3ece94411a0d3f31c18d419555e4523c35183058c962d559630422a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9edfc92-fdbd-4651-8adb-ee7561319d57", "node_type": "1", "metadata": {}, "hash": "ff73a078815c6d3b2555b4a23c4b7632b63d4e2053e197cd772171442d75407e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Vats which live inside a solo machine are able to use traditional networking layers, like TCP, HTTP, and WebSockets. This enables them to communicate with e.g. browser-side UI frontends that use WebSockets to query the vat for order status. These connections do not have to follow normal ocap rules, so vat code which accepts them must provide its own authentication and access control protections.", "mimetype": "text/plain", "start_char_idx": 2447, "end_char_idx": 2845, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9edfc92-fdbd-4651-8adb-ee7561319d57": {"__data__": {"id_": "a9edfc92-fdbd-4651-8adb-ee7561319d57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e387d72-4856-4e5e-9ad7-39c2b90f98d3", "node_type": "1", "metadata": {}, "hash": "5d469db1ded40c56cdd567ac0143e6a9f569b6b6db6d02fd21419ab64f9d4f31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e", "node_type": "1", "metadata": {}, "hash": "f7a755b135b393d16e63eef5c714eb25288d640e6e103325d13aefb4f83fe88b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Solo machines may be able to talk to chains and vice versa using specialized protocols. This will be used by CapTP to provide ocap messaging between these heterogeneous machine types.\n\n## The agoric-sdk User Local Port", "mimetype": "text/plain", "start_char_idx": 2847, "end_char_idx": 3065, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e": {"__data__": {"id_": "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9edfc92-fdbd-4651-8adb-ee7561319d57", "node_type": "1", "metadata": {}, "hash": "ff73a078815c6d3b2555b4a23c4b7632b63d4e2053e197cd772171442d75407e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d89637a-56c7-4769-8a79-89ef093e1256", "node_type": "1", "metadata": {}, "hash": "8ab3675428240193af1d667c33b84efad6ca290ae7d58a431f329b728401e8b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## The agoric-sdk User Local Port\n\nEach user of the Agoric testnet gets a few personal IBC listening ports. You can access these `Port` objects in the `home.ibcport` array, and you can learn their local address by calling something like `E(home.ibcport[0]).getLocalAddress()`, which will give you a local address like `/ibc-port/portbvmnfb`.", "mimetype": "text/plain", "start_char_idx": 3032, "end_char_idx": 3373, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d89637a-56c7-4769-8a79-89ef093e1256": {"__data__": {"id_": "9d89637a-56c7-4769-8a79-89ef093e1256", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e", "node_type": "1", "metadata": {}, "hash": "f7a755b135b393d16e63eef5c714eb25288d640e6e103325d13aefb4f83fe88b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fee9754-fc7d-4345-98e5-776382323606", "node_type": "1", "metadata": {}, "hash": "66feebbc6ffa4d6c3e42c03061e12d7dfdc9c25a31d900c8dc70c4a73c7dab9b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is currently the only way for user code to get an IBC `Port`, though non-IBC ports can be allocated using the local `home.network` object. This is an advanced use case, to be documented later.\n\n## Connecting to a Remote Port", "mimetype": "text/plain", "start_char_idx": 3375, "end_char_idx": 3604, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fee9754-fc7d-4345-98e5-776382323606": {"__data__": {"id_": "5fee9754-fc7d-4345-98e5-776382323606", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d89637a-56c7-4769-8a79-89ef093e1256", "node_type": "1", "metadata": {}, "hash": "8ab3675428240193af1d667c33b84efad6ca290ae7d58a431f329b728401e8b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509", "node_type": "1", "metadata": {}, "hash": "5aa92a88feccb9ac534fcba115428bfdbcf0641882854425d27211f0b04f755d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Connecting to a Remote Port\n\nTo establish a connection, you must start with a local `Port` object, and you must know the name of the remote endpoint. The remote endpoint will have a name like `/ibc-hop/$HOPNAME/ibc-port/$PORTNAME/ordered/$VERSION` (where `ibc-hop`, `ibc-port` and `ordered` are literal strings, spelled just like that, but `$HOPNAME`, `$PORTNAME`, and `$VERSION` are placeholders for arbitrary values that will vary from one endpoint to another).", "mimetype": "text/plain", "start_char_idx": 3574, "end_char_idx": 4040, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509": {"__data__": {"id_": "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fee9754-fc7d-4345-98e5-776382323606", "node_type": "1", "metadata": {}, "hash": "66feebbc6ffa4d6c3e42c03061e12d7dfdc9c25a31d900c8dc70c4a73c7dab9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe", "node_type": "1", "metadata": {}, "hash": "1768c0652129dddce547c5def47e370f63e55dc137edb7e7044c9d94f03a267b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You must also prepare a `ConnectionHandler` object to manage the connection you're about to create. This has a number of methods which will be called when the things happen to the connection, including packets arriving. This is described in [Receiving Data](#receiving-data).", "mimetype": "text/plain", "start_char_idx": 4042, "end_char_idx": 4317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe": {"__data__": {"id_": "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509", "node_type": "1", "metadata": {}, "hash": "5aa92a88feccb9ac534fcba115428bfdbcf0641882854425d27211f0b04f755d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8f34e52-c0a3-40af-8682-50facd40ee5d", "node_type": "1", "metadata": {}, "hash": "adc1ba6decb1e9ea1ee8942f0f4c256851973a90c834e1cdfbff39df91c8be99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Then you will call the `connect()` method on your local `Port`. This will return a `Promise` that will fire with a new `Connection` object, on which you can send data. Your `ConnectionHandler` will be notified about the new channel, and will receive inbound data from the other side.\n\n```js\nconst remoteEndpoint = `/ibc-hop/${hopName}/ibc-port/${portName}/ordered/${version}`;\nE(home.ibcport[0])\n  .connect(remoteEndpoint, connectionHandler)\n  .then(conn => doSomethingWithConnection(conn));\n```", "mimetype": "text/plain", "start_char_idx": 4319, "end_char_idx": 4814, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8f34e52-c0a3-40af-8682-50facd40ee5d": {"__data__": {"id_": "f8f34e52-c0a3-40af-8682-50facd40ee5d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe", "node_type": "1", "metadata": {}, "hash": "1768c0652129dddce547c5def47e370f63e55dc137edb7e7044c9d94f03a267b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3d92984-33c1-4757-a6ab-8993802145e2", "node_type": "1", "metadata": {}, "hash": "b1f1bd542b64e955b3c156fee36d46d93d42982f279d2d2fc524343685b5b795", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Opening a Listening Port and Accepting an Inbound Connection\n\nThe other side of `connect()` is a \"listening port\". These ports are waiting for inbound connections to be established.", "mimetype": "text/plain", "start_char_idx": 4816, "end_char_idx": 5000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3d92984-33c1-4757-a6ab-8993802145e2": {"__data__": {"id_": "b3d92984-33c1-4757-a6ab-8993802145e2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8f34e52-c0a3-40af-8682-50facd40ee5d", "node_type": "1", "metadata": {}, "hash": "adc1ba6decb1e9ea1ee8942f0f4c256851973a90c834e1cdfbff39df91c8be99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "232fb147-f8a3-4807-8ec5-9b027e235c99", "node_type": "1", "metadata": {}, "hash": "8504cad7c98f5d5b216097d979c9721556aa714e9cef1123aadc721c3049b747", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To get a listening port, you need a `NetworkInterface` object (such as the one on your `ag-solo` under `home.network`) and ask it to `bind()` to an endpoint. You can either provide a specific port name, or allow the API to allocate a random one for you. The endpoint specifies the type of connection that this port will be able to accept (IBC, TCP, etc), and some properties of that connection. `bind()` uses a \"multiaddress\" to encode this information.", "mimetype": "text/plain", "start_char_idx": 5002, "end_char_idx": 5455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "232fb147-f8a3-4807-8ec5-9b027e235c99": {"__data__": {"id_": "232fb147-f8a3-4807-8ec5-9b027e235c99", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3d92984-33c1-4757-a6ab-8993802145e2", "node_type": "1", "metadata": {}, "hash": "b1f1bd542b64e955b3c156fee36d46d93d42982f279d2d2fc524343685b5b795", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51feaa59-d638-467f-87f7-1ed8fbf70492", "node_type": "1", "metadata": {}, "hash": "8ac19419d58a55787b6dde87b091e5ab959f5a1fc40ef7767bd53cc747c3d511", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Ask for a random allocation - ends with a slash\nE(home.network)\n  .bind('/ibc-port/')\n  .then(port => usePort(port));\n\n// or ask for a specific port name\nE(home.network)\n  .bind('/ibc-port/my-cool-port-name')\n  .then(port => usePort(port));\n```", "mimetype": "text/plain", "start_char_idx": 5457, "end_char_idx": 5710, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51feaa59-d638-467f-87f7-1ed8fbf70492": {"__data__": {"id_": "51feaa59-d638-467f-87f7-1ed8fbf70492", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "232fb147-f8a3-4807-8ec5-9b027e235c99", "node_type": "1", "metadata": {}, "hash": "8504cad7c98f5d5b216097d979c9721556aa714e9cef1123aadc721c3049b747", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6b73e3a-cf10-45cf-bce7-abd9996b3347", "node_type": "1", "metadata": {}, "hash": "7cf53d4fa0f115ce5c4c4e66f8d4df751a530e08f1d6a05da1480848ea5bda26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "IBC has named \"hops\" (what they call \"Connections\" in the IBC spec) which each carry data between two specific chains. These hops are different from the connections described in this document. When you bind a port like `/ibc-port/$PORT` without specifying the \"hop\", any IBC chain can initiate a connection to this port.", "mimetype": "text/plain", "start_char_idx": 5712, "end_char_idx": 6032, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6b73e3a-cf10-45cf-bce7-abd9996b3347": {"__data__": {"id_": "d6b73e3a-cf10-45cf-bce7-abd9996b3347", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51feaa59-d638-467f-87f7-1ed8fbf70492", "node_type": "1", "metadata": {}, "hash": "8ac19419d58a55787b6dde87b091e5ab959f5a1fc40ef7767bd53cc747c3d511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2c5a93a-d58f-481c-9be6-b1608fc25462", "node_type": "1", "metadata": {}, "hash": "66222cd80d55b00835dc710901ff2eddcb15ed5d57b5842704d9df9908d3ce8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can ask the `Port` object this returns for its local address, which is especially useful if you had asked for a random allocation (since otherwise you have no way to know what address you got):\n\n```js\nE(port)\n  .getLocalAddress()\n  .then(localAddress => useIt(localAddress));\n```", "mimetype": "text/plain", "start_char_idx": 6034, "end_char_idx": 6317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2c5a93a-d58f-481c-9be6-b1608fc25462": {"__data__": {"id_": "c2c5a93a-d58f-481c-9be6-b1608fc25462", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6b73e3a-cf10-45cf-bce7-abd9996b3347", "node_type": "1", "metadata": {}, "hash": "7cf53d4fa0f115ce5c4c4e66f8d4df751a530e08f1d6a05da1480848ea5bda26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf8b9087-17e0-47c8-962c-027196ea1ce1", "node_type": "1", "metadata": {}, "hash": "2fea9fe9d74e00808aef0fc4a771a498e470087e72a8a9755050d34249634123", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Once the port is bound, you must call `addListener()` to mark it as ready for inbound connections. You must provide this with a `ListenHandler` object, which has methods to react to listening events. As with `ConnectionHandler`, these methods are all optional.", "mimetype": "text/plain", "start_char_idx": 6319, "end_char_idx": 6579, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf8b9087-17e0-47c8-962c-027196ea1ce1": {"__data__": {"id_": "cf8b9087-17e0-47c8-962c-027196ea1ce1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2c5a93a-d58f-481c-9be6-b1608fc25462", "node_type": "1", "metadata": {}, "hash": "66222cd80d55b00835dc710901ff2eddcb15ed5d57b5842704d9df9908d3ce8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2da8b47-88d7-4416-add7-74a585f26de9", "node_type": "1", "metadata": {}, "hash": "78f44971fcbbe1d6c7392d83feeb4ae6c042701bb23015a73da3a02e0ad02202", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `onListen(port, handler)`: called when the port starts listening\n- `onAccept(port, remote, handler)`: called when a new channel has been accepted\n- `onError(port, rejection, handler)`: called if the port is no longer able to accept channels, such as if the Connection to the remote chain has failed, perhaps because a consensus failure was observed\n- `onRemove(port, handler)`: called when the `ListenHandler` is being removed\n\nOnce your `ChannelHandler` is prepared, call `addListener()`:", "mimetype": "text/plain", "start_char_idx": 6581, "end_char_idx": 7072, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2da8b47-88d7-4416-add7-74a585f26de9": {"__data__": {"id_": "b2da8b47-88d7-4416-add7-74a585f26de9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf8b9087-17e0-47c8-962c-027196ea1ce1", "node_type": "1", "metadata": {}, "hash": "2fea9fe9d74e00808aef0fc4a771a498e470087e72a8a9755050d34249634123", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca3aeb0d-facc-4214-901b-066e65706835", "node_type": "1", "metadata": {}, "hash": "46b5756a46905235d179940f5075974fc8bc68bdab3fc4a0444391d68e4da415", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nport.addListener(handler).then(() => console.log('listener is active'));\n```\n\n`onAccept()` is the most important method. It is called with a `remote` endpoint, which tells you the address of the `Port` at the other end, where someone else called `connect()`. You can use this to decide if you want to accept the connection, or what sort of authority to exercise in response to messages arriving therein.", "mimetype": "text/plain", "start_char_idx": 7074, "end_char_idx": 7483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca3aeb0d-facc-4214-901b-066e65706835": {"__data__": {"id_": "ca3aeb0d-facc-4214-901b-066e65706835", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2da8b47-88d7-4416-add7-74a585f26de9", "node_type": "1", "metadata": {}, "hash": "78f44971fcbbe1d6c7392d83feeb4ae6c042701bb23015a73da3a02e0ad02202", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "546fbc69-6dbd-4d0a-919d-561570fab94b", "node_type": "1", "metadata": {}, "hash": "01f0844e25c86d69ccee70fe534453ab84af50c56a12c17e376c2b309eca6253", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If you choose to accept, your `onAccept()` method must return a `Promise` that fires with a [`ConnectionHandler`](#receiving-data). This will be used just like the one you would pass into `connect()`. To decline, throw an error.\n\n## Sending Data", "mimetype": "text/plain", "start_char_idx": 7485, "end_char_idx": 7730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "546fbc69-6dbd-4d0a-919d-561570fab94b": {"__data__": {"id_": "546fbc69-6dbd-4d0a-919d-561570fab94b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca3aeb0d-facc-4214-901b-066e65706835", "node_type": "1", "metadata": {}, "hash": "46b5756a46905235d179940f5075974fc8bc68bdab3fc4a0444391d68e4da415", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "814da12f-84cc-4044-89bf-a415fe8b4f44", "node_type": "1", "metadata": {}, "hash": "934f39441fa3b9c363a64b49e5f9fd00f62e0a0b73e24ac172228d4ebd7cd8c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Sending Data\n\nThe Networking API (at least for IBC) provides a \"record pipe\", in which each packet is transmitted intact over the network, requiring no additional framing to distinguish where one packet ends and the next one begins. This is in contrast to the \"byte pipe\" provided by a TCP connection, where you must typically prepend length headers to establish framing boundaries.\n\nOnce you have a `Connection` object, you send data by calling its `send()` method:\n\n```js\nconnection.send('data');\n```", "mimetype": "text/plain", "start_char_idx": 7715, "end_char_idx": 8220, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "814da12f-84cc-4044-89bf-a415fe8b4f44": {"__data__": {"id_": "814da12f-84cc-4044-89bf-a415fe8b4f44", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "546fbc69-6dbd-4d0a-919d-561570fab94b", "node_type": "1", "metadata": {}, "hash": "01f0844e25c86d69ccee70fe534453ab84af50c56a12c17e376c2b309eca6253", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3645f012-36a5-49e0-a4a1-a36fb918583e", "node_type": "1", "metadata": {}, "hash": "ef65096f90c391599ede6f939d05c61604061918b84dcabcdf317be2a12325fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconnection.send('data');\n```\n\n`send()` returns a Promise for the ACK data sent by the other side of the connection, which is represented in the same way as inbound data for `onReceive()`.\n\n## Receiving Data\n\nYou must provide each open connection with a `ConnectionHandler` object, where you write methods that will be called when various things happen to the connection. You can share a single handler object between multiple connections, if you like, or you can make a separate one for each.", "mimetype": "text/plain", "start_char_idx": 8186, "end_char_idx": 8684, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3645f012-36a5-49e0-a4a1-a36fb918583e": {"__data__": {"id_": "3645f012-36a5-49e0-a4a1-a36fb918583e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "814da12f-84cc-4044-89bf-a415fe8b4f44", "node_type": "1", "metadata": {}, "hash": "934f39441fa3b9c363a64b49e5f9fd00f62e0a0b73e24ac172228d4ebd7cd8c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "971039f0-35de-4ca6-b7f2-c170593fa162", "node_type": "1", "metadata": {}, "hash": "cc953a81c1a6cf640fd84741c78696036d612f78d4a3e0f7475b05b5c05850d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "You can omit any of the methods and those events will simply be ignored. All these methods include the Connection object as the first argument, and the `ConnectionHandler` itself as the last argument, which might help if you want to share a common handler function among multiple connections.", "mimetype": "text/plain", "start_char_idx": 8686, "end_char_idx": 8978, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "971039f0-35de-4ca6-b7f2-c170593fa162": {"__data__": {"id_": "971039f0-35de-4ca6-b7f2-c170593fa162", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3645f012-36a5-49e0-a4a1-a36fb918583e", "node_type": "1", "metadata": {}, "hash": "ef65096f90c391599ede6f939d05c61604061918b84dcabcdf317be2a12325fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e", "node_type": "1", "metadata": {}, "hash": "d53619d927494c88ca157a148bc930b8baa2a39c114f38f86be644b39830821e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `onOpen(connection, handler)`: this is called when the connection is established, which tells you that the remote end has successfully accepted the connection request\n- `onReceive(connection, packetBytes, handler)`: this is called each time the remote end sends a packet of data\n- `onClose(connection, reason, handler)`: this is called when the connection is closed, either because one side wanted it to close, or because an error occurred. `reason` may be `undefined`.", "mimetype": "text/plain", "start_char_idx": 8980, "end_char_idx": 9451, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e": {"__data__": {"id_": "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "971039f0-35de-4ca6-b7f2-c170593fa162", "node_type": "1", "metadata": {}, "hash": "cc953a81c1a6cf640fd84741c78696036d612f78d4a3e0f7475b05b5c05850d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e53cb834-ed36-45fd-9fba-607d5f090a34", "node_type": "1", "metadata": {}, "hash": "fa25dc3e93db0a871b8941d7980985bd724b6df23fa329eea98f17b118c5da55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "`onReceive()` is the most important method. Each time the remote end sends a packet, your `onReceive()` method will be called with the data inside that packet (currently as a String due to inter-vat marshalling limitations, but ideally as an ArrayBuffer with a custom `toString(encoding='latin1')` method so that it can contain arbitrary bytes).", "mimetype": "text/plain", "start_char_idx": 9453, "end_char_idx": 9798, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e53cb834-ed36-45fd-9fba-607d5f090a34": {"__data__": {"id_": "e53cb834-ed36-45fd-9fba-607d5f090a34", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e", "node_type": "1", "metadata": {}, "hash": "d53619d927494c88ca157a148bc930b8baa2a39c114f38f86be644b39830821e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf", "node_type": "1", "metadata": {}, "hash": "1697ddba32214b65d6ee503a1c7def8ceba5bbf98dc5b90acf728282c95579c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The return value of `onReceive()` is nominally a Promise for ACK data of the message (that will eventually appear on the other side as resolution of the Promise returned by `connection.send()`).\nFor IBC, if the ACK data settles to an empty value `''` then the implementation will automatically send a trivial `'\\x01'` ACK, because empty ACKs are not supported by [Cosmos ibc-go](https://github.com/cosmos/ibc-go). This behavior may be different for other network implementations.", "mimetype": "text/plain", "start_char_idx": 9800, "end_char_idx": 10279, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf": {"__data__": {"id_": "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e53cb834-ed36-45fd-9fba-607d5f090a34", "node_type": "1", "metadata": {}, "hash": "fa25dc3e93db0a871b8941d7980985bd724b6df23fa329eea98f17b118c5da55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddd73aad-19ef-4135-88b4-fd29af9fe8f4", "node_type": "1", "metadata": {}, "hash": "2aa637b54b8ac0dce2b620f167de498b416cf7c194429a9775a5bdfb15af4fd5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It is recommended to avoid ACK data where possible.", "mimetype": "text/plain", "start_char_idx": 10280, "end_char_idx": 10331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ddd73aad-19ef-4135-88b4-fd29af9fe8f4": {"__data__": {"id_": "ddd73aad-19ef-4135-88b4-fd29af9fe8f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf", "node_type": "1", "metadata": {}, "hash": "1697ddba32214b65d6ee503a1c7def8ceba5bbf98dc5b90acf728282c95579c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "508294e5-bb7b-4a2a-80ee-729192238bdd", "node_type": "1", "metadata": {}, "hash": "8bdcce1e10e0ab35e9d0a21261c740a5000013ac90bdc7ae6324be6e62f4892a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Closing the Connection\n\nWhen a given Connection has ceased to be useful, you should close it:\n\n```js\nconnection.close();\n```\n\nThis initiates a shutdown. The `ConnectionHandler` on both sides will eventually see their `onClose()` methods be called, with a `reason`. It will allow them to distinguish an intentional `onClose()` (`reason` is `undefined`) from some error condition.\n\n## Removing a Listener\n\nWhen you no longer wish to receive connections on a port, you can remove the listener:", "mimetype": "text/plain", "start_char_idx": 10333, "end_char_idx": 10826, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "508294e5-bb7b-4a2a-80ee-729192238bdd": {"__data__": {"id_": "508294e5-bb7b-4a2a-80ee-729192238bdd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddd73aad-19ef-4135-88b4-fd29af9fe8f4", "node_type": "1", "metadata": {}, "hash": "2aa637b54b8ac0dce2b620f167de498b416cf7c194429a9775a5bdfb15af4fd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1852214-e31f-4aa7-829d-7f502592c2cc", "node_type": "1", "metadata": {}, "hash": "7b03db3cb47a70769d79475fff5fd793db697afa6454056591190eddf3888859", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nport.removeListener(handler).then(() => console.log('removed'));\n```\n\nYou must provide the handler you added, to enable the future ability to have multiple listeners on the same port.\n\nNote that if you want to listen on this port again, you can just call `port.addListener(...)`, as before. If you want to start a new connection, you can always call `port.connect(...)`.\n\n### Closing the Port Entirely", "mimetype": "text/plain", "start_char_idx": 10828, "end_char_idx": 11235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1852214-e31f-4aa7-829d-7f502592c2cc": {"__data__": {"id_": "c1852214-e31f-4aa7-829d-7f502592c2cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "508294e5-bb7b-4a2a-80ee-729192238bdd", "node_type": "1", "metadata": {}, "hash": "8bdcce1e10e0ab35e9d0a21261c740a5000013ac90bdc7ae6324be6e62f4892a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "879cb766-e368-4c38-9e4a-fcc5dfd02c1e", "node_type": "1", "metadata": {}, "hash": "659b2f57710f9ca0572bd16b593a12b6998359d9da1f89765ff86e6edd9fe727", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Closing the Port Entirely\n\nRemoving a listener doesn't release the port address to make it available for other `bind()` requests. You can call:\n\n```js\nport.revoke();\n```\n\nto completely deallocate the port, remove all listeners, close all pending connections, and release its address.", "mimetype": "text/plain", "start_char_idx": 11206, "end_char_idx": 11493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "879cb766-e368-4c38-9e4a-fcc5dfd02c1e": {"__data__": {"id_": "879cb766-e368-4c38-9e4a-fcc5dfd02c1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_networking.md", "node_type": "4", "metadata": {}, "hash": "06d822e602edb069b459b57317104f83f0606a506ab76852139a7bed915759d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1852214-e31f-4aa7-829d-7f502592c2cc", "node_type": "1", "metadata": {}, "hash": "7b03db3cb47a70769d79475fff5fd793db697afa6454056591190eddf3888859", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**CAUTION:** Be aware that if you call `E(home.ibcport[0]).revoke()`, it will be useless for new `connect()` or `addListener()` attempts. You will need to provision a new Agoric client to obtain a new setup with a functioning `home.ibcport[0]`.", "mimetype": "text/plain", "start_char_idx": 11495, "end_char_idx": 11739, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "907e7d26-9ea5-4b32-b5b4-4a72343176ab": {"__data__": {"id_": "907e7d26-9ea5-4b32-b5b4-4a72343176ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_priceAuthority.md", "node_type": "4", "metadata": {}, "hash": "900967e1127e971ebe1b19fbcbd508c2f765d2a3d56fe00dfde1177d5a117887", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "see [Price Authority Guide](/guides/zoe/price-authority), [PriceAuthority API](../zoe-api/price-authority)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 106, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72662a33-8696-41e5-86f1-1c617abb8480": {"__data__": {"id_": "72662a33-8696-41e5-86f1-1c617abb8480", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_scratch.md", "node_type": "4", "metadata": {}, "hash": "e4b2854734f3989ba2607a27206e011ad576626903d7d1a8364ebf71d539ee56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1e9b122-3555-4cb8-b447-78c10fb8b1c1", "node_type": "1", "metadata": {}, "hash": "cb6dbbce3eee6f83241f39d9ebc80b455d621a68a63a43e229e93a9814b37e46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Scratch\n\nYou use `scratch` to save key-value pairs for later. It is only on the ag-solo and is not accessible from the chain, making it private to the ag-solo user. Since deploy scripts are ephemeral, use `scratch` to save objects from a deploy script for later scripts to use.\n\nNote that when calling from the REPL's home object, you must use the [E() syntax](/guides/js-programming/eventual-send) as shown below.\n\nKeys can be anything.\n\n## `E(home.scratch).set(id, obj)`", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1e9b122-3555-4cb8-b447-78c10fb8b1c1": {"__data__": {"id_": "b1e9b122-3555-4cb8-b447-78c10fb8b1c1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_scratch.md", "node_type": "4", "metadata": {}, "hash": "e4b2854734f3989ba2607a27206e011ad576626903d7d1a8364ebf71d539ee56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72662a33-8696-41e5-86f1-1c617abb8480", "node_type": "1", "metadata": {}, "hash": "6c0db90987911cdc85d01f96fabd5f7ea042c99255ce87f85d8a3969ce50f0f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d5f45d9-4be1-432b-a02a-3d38b6296db5", "node_type": "1", "metadata": {}, "hash": "7bedbd0df2c5ad20397a035c08b26bb86475b5953499be1918b281c764fe8492", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## `E(home.scratch).set(id, obj)`\n\n- `id`: `{ any }`\n- `obj`: `{ Object }`\n  Returns: `{ any }`\n\nAdds the key-value pair `[id, obj]` to the Scratchpad, returns the `id`.\n\n```js\ncommand[1] E(home.scratch).set(\"foo\", \"bar\")\nhistory[1] \"foo\"\n```\n\n## `E(home.scratch).get(id)`\n\n- `id`: `{ any }`\n- Returns: `{ Object }`\n\nTakes an ID key and returns its associated object in the ag-solo's scratchpad.\nIf the `id` parameter is not a valid key, it returns `undefined`.", "mimetype": "text/plain", "start_char_idx": 441, "end_char_idx": 902, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d5f45d9-4be1-432b-a02a-3d38b6296db5": {"__data__": {"id_": "3d5f45d9-4be1-432b-a02a-3d38b6296db5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_scratch.md", "node_type": "4", "metadata": {}, "hash": "e4b2854734f3989ba2607a27206e011ad576626903d7d1a8364ebf71d539ee56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1e9b122-3555-4cb8-b447-78c10fb8b1c1", "node_type": "1", "metadata": {}, "hash": "cb6dbbce3eee6f83241f39d9ebc80b455d621a68a63a43e229e93a9814b37e46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ncommand[2] E(home.scratch).get(\"foo\")\nhistory[2] \"bar\"\n```\n\n## `E(home.scratch).list()`\n\n- Returns: `{ Array<any> }`\n\nReturns a sorted array of all ID values currently in the Scratchpad.\n\n```js\ncommand[3] E(home.scratch).list()\nhistory[3] [\"faucetTokenIssuer\",\"foo\"]\n```", "mimetype": "text/plain", "start_char_idx": 904, "end_char_idx": 1180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84be469c-e2ae-4296-8d7a-39396c0a6b8e": {"__data__": {"id_": "84be469c-e2ae-4296-8d7a-39396c0a6b8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_repl_timerServices.md", "node_type": "4", "metadata": {}, "hash": "e1cc0f3c1aac9c88bf99d15dc33b52503eb02a2778f0a74ec8cac817be4b1b60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Timer Services\n\n## chainTimerService\n\nThe `chainTimerService` is based on block times with units of 1 second.\n\nThe timer service lets you:\n\n- Schedule `wake()` calls.\n- Remove scheduled `wake()` calls.\n- Create a repeater for scheduling of events at regular intervals.\n\nFor testing, use\n\n```js\nimport buildManualTimer from '@agoric/zoe/tools/manualTimer.js';\n```\n\nSee package [@agoric/time](https://agoric-sdk.pages.dev/modules/_agoric_time) for details.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 456, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c3e4853-9103-405d-9756-9a0ab78c4ac5": {"__data__": {"id_": "5c3e4853-9103-405d-9756-9a0ab78c4ac5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_index.md", "node_type": "4", "metadata": {}, "hash": "2099516f8e711d78140fa4fca52b6896b5b27e450b9bd7d4ea8ca1c1cffb042f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1250f2f-a805-4cbf-918f-a3d673f0e431", "node_type": "1", "metadata": {}, "hash": "80797230f344ff63fc0e7222d515dd9eb176158550161098b947cdfda60013a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wallet API\n\nYou can interact with a Wallet via the JavaScript _REPL_ (_Read-Eval-Print Loop_),\nwhich is visible at the bottom of the Wallet UI display.\nIn the REPL, you send messages to `home.wallet`, which is the Wallet running on that\npage/process. Typing `E(home.wallet).foo()` in the REPL returns the names of all the Wallet\nAPI methods by the clever method of asking it to evaluate a non-existent API method and\ngetting an error message listing all the valid methods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1250f2f-a805-4cbf-918f-a3d673f0e431": {"__data__": {"id_": "b1250f2f-a805-4cbf-918f-a3d673f0e431", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_index.md", "node_type": "4", "metadata": {}, "hash": "2099516f8e711d78140fa4fca52b6896b5b27e450b9bd7d4ea8ca1c1cffb042f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c3e4853-9103-405d-9756-9a0ab78c4ac5", "node_type": "1", "metadata": {}, "hash": "78e0d5701ec40b72f8b6264586fadf6e5ec1dd052b966258bf698d7d21d10751", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afba586e-f144-49e9-93c4-f17a5c4fd12c", "node_type": "1", "metadata": {}, "hash": "1202f7b1fcb1899c38827b9b95d486998da392083f32d3b4c6efe94c936e80be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Running `agoric open --repl only` opens a browser tab that shows only the REPL, and not\nthe combination of Wallet UI and REPL area. When issuing commands to the Wallet from the\nREPL, they must be of the form `E(home.wallet).<Wallet API command and arguments>`. For more\ninformation about `E()`, see the [`E()` section](/guides/js-programming/eventual-send) in\nthe Distributed JavaScript Programming Guide.\n\nThere are two objects on which the Wallet API commands work:", "mimetype": "text/plain", "start_char_idx": 476, "end_char_idx": 943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "afba586e-f144-49e9-93c4-f17a5c4fd12c": {"__data__": {"id_": "afba586e-f144-49e9-93c4-f17a5c4fd12c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_index.md", "node_type": "4", "metadata": {}, "hash": "2099516f8e711d78140fa4fca52b6896b5b27e450b9bd7d4ea8ca1c1cffb042f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1250f2f-a805-4cbf-918f-a3d673f0e431", "node_type": "1", "metadata": {}, "hash": "80797230f344ff63fc0e7222d515dd9eb176158550161098b947cdfda60013a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `WalletUser`: The presence exposed as `local.wallet` (and `home.wallet` for backwards compatibility).  \n  It provides a place for Wallet API commands.\n- `WalletBridge`: Its methods can be used by an untrusted\n  Dapp without breaching the wallet's integrity. These methods are also\n  exposed via the iframe/WebSocket bridge that a Dapp UI can use to access the\n  wallet.", "mimetype": "text/plain", "start_char_idx": 945, "end_char_idx": 1316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b438b43-d390-4423-a8b8-7cf1dadeb60e": {"__data__": {"id_": "8b438b43-d390-4423-a8b8-7cf1dadeb60e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-bridge.md", "node_type": "4", "metadata": {}, "hash": "eac764bcd36a17d1030205aa4197a26c7b94b4955cfda2b722a9d6ee937aa8ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0754994-a9e6-419e-8362-f16a2a3634f9", "node_type": "1", "metadata": {}, "hash": "c8f4c54b0fc60d1b7bad8b5b19ae9362f00c671575ef095cb7586548a207eb21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# WalletBridge API Commands\n\nThese methods can be used by an untrusted Dapp without breaching the wallet's\nintegrity. They are also exposed via the iframe/WebSocket bridge that a\nDapp UI can use to access a Wallet.\n\n### `addOffer(offer)`\n\n- `offer` `{OfferState}`\n- Returns: `{Promise<string>}`\n\nAdds an offer to the Wallet, returning the offer's unique private ID in the Wallet.\nThis ID is not stored in the Board.\n\n### `addOfferInvitation(offer, invitation)`", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 460, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b0754994-a9e6-419e-8362-f16a2a3634f9": {"__data__": {"id_": "b0754994-a9e6-419e-8362-f16a2a3634f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-bridge.md", "node_type": "4", "metadata": {}, "hash": "eac764bcd36a17d1030205aa4197a26c7b94b4955cfda2b722a9d6ee937aa8ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b438b43-d390-4423-a8b8-7cf1dadeb60e", "node_type": "1", "metadata": {}, "hash": "99598cd70550fb81c03690a9b615f50fea177a64618a6b5fc5b9b036bd599481", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dee8b471-5189-4180-bbc1-59bd63f3f019", "node_type": "1", "metadata": {}, "hash": "967f852934a34f9d3f1567dbd32dd71c3d5ae2bb8fbb9f7d60ee52fa11a396ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `offer` `{OfferState}`\n- `invitation` `{ERef<Payment>}`\n- Returns: `{Promise<string>}`\n\nAdd the specified invitation to the specified offer, returning the offer's private ID in the Wallet.  \nThis ID is not stored in the Board.\n\n### `getDepositFacetId(brandBoardId`\n\n- `brandBoardId` `{string}`\n- Returns: `{Promise<string>}`\n\nReturns the Board ID to use to receive payments of the specified by its Board ID brand.\n\n### `getPursesNotifier()`\n\n- Returns: `{Promise<Notifier<Array<PursesJSONState>>>}`", "mimetype": "text/plain", "start_char_idx": 462, "end_char_idx": 962, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dee8b471-5189-4180-bbc1-59bd63f3f019": {"__data__": {"id_": "dee8b471-5189-4180-bbc1-59bd63f3f019", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-bridge.md", "node_type": "4", "metadata": {}, "hash": "eac764bcd36a17d1030205aa4197a26c7b94b4955cfda2b722a9d6ee937aa8ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0754994-a9e6-419e-8362-f16a2a3634f9", "node_type": "1", "metadata": {}, "hash": "c8f4c54b0fc60d1b7bad8b5b19ae9362f00c671575ef095cb7586548a207eb21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d4b8ae5-f268-4643-9138-7aac4f91e9cd", "node_type": "1", "metadata": {}, "hash": "5fc81fda800c60776611f80d41ed8cfda85bc462291cd48a097f48ccc120b3a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a notifier that follows changes to the purses in the Wallet.\n\n### `getOffersNotifier()`\n\n- Returns: `{Promise<Notifier<array<OfferState>>>}`\n\nReturns a notifier that follows changes to the offers received by the Wallet.\n\n### `suggestIssuer(petname, issuerBoardId)`\n\n- `petname` `{Petname}`\n- `issuerBoardId` `{string}`\n- Returns: `void`\n\nIntroduce an ERTP issuer with a suggested petname to the Wallet.\n\n### `suggestInstallation(petname, installationBoardID)`", "mimetype": "text/plain", "start_char_idx": 964, "end_char_idx": 1431, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d4b8ae5-f268-4643-9138-7aac4f91e9cd": {"__data__": {"id_": "5d4b8ae5-f268-4643-9138-7aac4f91e9cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-bridge.md", "node_type": "4", "metadata": {}, "hash": "eac764bcd36a17d1030205aa4197a26c7b94b4955cfda2b722a9d6ee937aa8ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dee8b471-5189-4180-bbc1-59bd63f3f019", "node_type": "1", "metadata": {}, "hash": "967f852934a34f9d3f1567dbd32dd71c3d5ae2bb8fbb9f7d60ee52fa11a396ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `petname` `{Petname}`\n- `installationBoardId` `{string}`\n- Returns: `void`\n\nIntroduce a Zoe contract installation with a suggested petname to the Wallet.\n\n### `suggestInstance(petname, instanceBoardId)`\n\n- `petname` `{Petname}`\n- `instanceBoardId` `{string}`\n- Returns: `void`\n\nIntroduce a Zoe contract instance with a suggested petname to the Wallet.", "mimetype": "text/plain", "start_char_idx": 1433, "end_char_idx": 1786, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d53fb613-73d6-4535-a061-c37c6b036904": {"__data__": {"id_": "d53fb613-73d6-4535-a061-c37c6b036904", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-commands.md", "node_type": "4", "metadata": {}, "hash": "5861081e6cb9600cb7086804e243f444992bbbd33a0495fd60e8077b488ba26c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f455844-25e6-4fa3-8d76-8068cea91bc4", "node_type": "1", "metadata": {}, "hash": "e5542da71fe8ba53380e208504bc0f6343360e3e6ae857804f8a9983583a495a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Wallet API Commands\n\n### `getBridge()`\n\n- Returns: `{Promise<WalletBridge>}`\n\nReturns the wallet bridge that bypasses Dapp-authorization. This should\nonly be used within the REPL or deployment scripts that want to use the\nWalletBridge API without the effort of calling `getScopedBridge`.\nSince your REPL and deployment scripts already run using the ag-solo's full authority,\nit doesn't really make a difference to have them use a more restricted bridge.\n\n### `getScopedBridge(suggestedDappPetname, dappOrigin)`", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 512, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f455844-25e6-4fa3-8d76-8068cea91bc4": {"__data__": {"id_": "2f455844-25e6-4fa3-8d76-8068cea91bc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-commands.md", "node_type": "4", "metadata": {}, "hash": "5861081e6cb9600cb7086804e243f444992bbbd33a0495fd60e8077b488ba26c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d53fb613-73d6-4535-a061-c37c6b036904", "node_type": "1", "metadata": {}, "hash": "15db3c6518fd96834485e219123886794530f77c7a34a6ca6b13a2634d1449e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f01eae45-0904-4087-bdf2-49493eb9ac38", "node_type": "1", "metadata": {}, "hash": "8f7f14d5098e9d96679911acf85c3687bb94e4dc9ad4d4b3cb6da25a994768bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `suggestedDappPetname` `{Petname}`\n- `dappOrigin` `{String}`\n- Returns: `{Promise<WalletBridge>}`\n\nReturns a wallet bridge corresponding to an origin that must be approved in the wallet UI.\nThis is available for completeness to provide the underlying API that's available over the\nstandard wallet-bridge.html.\n\n### `addPayment(payment)`\n\n- `payment` `{ERef<Payment>}`\n- Returns: `void`\n\nAdds a payment to the Wallet for deposit to the user-specified purse,\neither via an autodeposit or manually approved.", "mimetype": "text/plain", "start_char_idx": 514, "end_char_idx": 1020, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f01eae45-0904-4087-bdf2-49493eb9ac38": {"__data__": {"id_": "f01eae45-0904-4087-bdf2-49493eb9ac38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-commands.md", "node_type": "4", "metadata": {}, "hash": "5861081e6cb9600cb7086804e243f444992bbbd33a0495fd60e8077b488ba26c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f455844-25e6-4fa3-8d76-8068cea91bc4", "node_type": "1", "metadata": {}, "hash": "e5542da71fe8ba53380e208504bc0f6343360e3e6ae857804f8a9983583a495a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e57f8613-2de4-42d2-85a2-ade35207dfc4", "node_type": "1", "metadata": {}, "hash": "3da0bc89a8fa10ae38f003731b8bff9856d4a7dc0738164abbac6eb4b8ebd55f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### `getDepositFacetId(brandBoardId)`\n\n- `brandBoardId` `{String}`\n- Returns: `{Promise<string>}`\n\nReturns the board ID for the deposit facet of the user's Wallet that accepts payments\nof the brand specified by the `brandBoardId` parameter.\n\n### `getIssuers()`\n\n- Returns: `{Array<[Petname, Issuer]>}`\n\nReturns an array of all the Issuers and their petnames associated with this Wallet.\n\n### `getIssuer(petname)`\n\n- `petname` `{Petname}`\n- Returns: `{Issuer}`", "mimetype": "text/plain", "start_char_idx": 1022, "end_char_idx": 1481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e57f8613-2de4-42d2-85a2-ade35207dfc4": {"__data__": {"id_": "e57f8613-2de4-42d2-85a2-ade35207dfc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_wallet-api_wallet-commands.md", "node_type": "4", "metadata": {}, "hash": "5861081e6cb9600cb7086804e243f444992bbbd33a0495fd60e8077b488ba26c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f01eae45-0904-4087-bdf2-49493eb9ac38", "node_type": "1", "metadata": {}, "hash": "8f7f14d5098e9d96679911acf85c3687bb94e4dc9ad4d4b3cb6da25a994768bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns the issuer with the specified petname associated with this Wallet.\n\n### `getPurses()`\n\n- Returns: `{Array<[Petname, Purse]>}`\n\nReturns all the purses associated with this wallet.\n\n### `getPurse(pursePetname)`\n\n- `pursePetName` `{String}`\n- Returns `{Purse}`\n- Errors: Throws an error if there is no purse with the given petname.\n\nReturns the `purse` object with the given petname", "mimetype": "text/plain", "start_char_idx": 1483, "end_char_idx": 1870, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1b503a7-b188-4763-b986-a379874fb178": {"__data__": {"id_": "d1b503a7-b188-4763-b986-a379874fb178", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "631f096c-16d6-4a80-a013-07dc8f5af1d6", "node_type": "1", "metadata": {}, "hash": "21f3a9b5a5f535517ace9f06c17f85903e12799cb8d98e5f7a5f86aff09b925c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe API\n\n<Zoe-Version/>\n\nThe Zoe framework provides a way to write smart contracts without having to worry about [offer safety](/guides/zoe/offer-safety).\nTo use Zoe, we put things in terms of \"offers\". An offer proposal is a statement about what you want and\nwhat you're willing to offer. It turns out, many smart contracts (apart from gifts and one-way payments)\ninvolve an exchange of digital assets that can be put in terms of offer proposals.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 449, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "631f096c-16d6-4a80-a013-07dc8f5af1d6": {"__data__": {"id_": "631f096c-16d6-4a80-a013-07dc8f5af1d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1b503a7-b188-4763-b986-a379874fb178", "node_type": "1", "metadata": {}, "hash": "e50c0433517e0ab1e1f33859398e3fca277516de924c6010e15cc582241861a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d5edabe-8650-41b0-9884-9e6a6cac2c11", "node_type": "1", "metadata": {}, "hash": "8b3a3cace30e8c7b73349fa15d2f45165bf2587caf77a79d8bc3fecf818232a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Start creating your own contract or build on any of our existing contracts.\nExplore our [pre-built contracts](/guides/zoe/contracts/index).\n\nThe Zoe API supports the following objects:", "mimetype": "text/plain", "start_char_idx": 451, "end_char_idx": 635, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d5edabe-8650-41b0-9884-9e6a6cac2c11": {"__data__": {"id_": "9d5edabe-8650-41b0-9884-9e6a6cac2c11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "631f096c-16d6-4a80-a013-07dc8f5af1d6", "node_type": "1", "metadata": {}, "hash": "21f3a9b5a5f535517ace9f06c17f85903e12799cb8d98e5f7a5f86aff09b925c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "584efdc5-419c-4757-9edf-327c99370148", "node_type": "1", "metadata": {}, "hash": "83cb96763a481c22c85d37a5c696230380ebe9905c7e2476d81ea0add99b224a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Object                                     | Description                                            |\n| ------------------------------------------ | ------------------------------------------------------ |\n| [Zoe Service](./zoe)                       | Deploys and works with smart contracts.                |\n| [UserSeat](./user-seat)                    | Used outside contracts to access or manipulate offers. |", "mimetype": "text/plain", "start_char_idx": 637, "end_char_idx": 1052, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "584efdc5-419c-4757-9edf-327c99370148": {"__data__": {"id_": "584efdc5-419c-4757-9edf-327c99370148", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d5edabe-8650-41b0-9884-9e6a6cac2c11", "node_type": "1", "metadata": {}, "hash": "8b3a3cace30e8c7b73349fa15d2f45165bf2587caf77a79d8bc3fecf818232a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdcf027a-f67c-47ac-af16-38fc79c57f75", "node_type": "1", "metadata": {}, "hash": "09a2f41f4e2d068de16b0881e801e742a762eefd8983e09fa537c38416dbfb57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Zoe Contract Facet](./zoe-contract-facet) | Accesses a running contract instance.                  |\n| [ZCFSeat](./zcfseat)                       | Used within contracts to access or manipulate offers.  |\n| [ZCFMint](./zcfmint)                       | Used by a contract to issue digital assets.            |", "mimetype": "text/plain", "start_char_idx": 1053, "end_char_idx": 1364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdcf027a-f67c-47ac-af16-38fc79c57f75": {"__data__": {"id_": "bdcf027a-f67c-47ac-af16-38fc79c57f75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "584efdc5-419c-4757-9edf-327c99370148", "node_type": "1", "metadata": {}, "hash": "83cb96763a481c22c85d37a5c696230380ebe9905c7e2476d81ea0add99b224a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fff91de-8e25-4d3d-9cfd-ab51cf990de3", "node_type": "1", "metadata": {}, "hash": "6eb2d784b1be024a2f752ecb1b1728705fdcad82c17caa377784a1fabb676ba9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Zoe API provides the following libraries:", "mimetype": "text/plain", "start_char_idx": 1366, "end_char_idx": 1411, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7fff91de-8e25-4d3d-9cfd-ab51cf990de3": {"__data__": {"id_": "7fff91de-8e25-4d3d-9cfd-ab51cf990de3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdcf027a-f67c-47ac-af16-38fc79c57f75", "node_type": "1", "metadata": {}, "hash": "09a2f41f4e2d068de16b0881e801e742a762eefd8983e09fa537c38416dbfb57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c16aa3e-6706-453a-b8a2-1c345c4c1151", "node_type": "1", "metadata": {}, "hash": "f5ed3aa506b85ff836e316273c1d0f80d1d1d8e6c7eab9d90eef451e80f26f33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Library                     | Description                                                                        |\n| --------------------------- | ---------------------------------------------------------------------------------- |\n| [ZoeHelpers](./zoe-helpers) | Functions that extract common contract code and patterns into reusable helpers.    |\n| [Ratio Math](./ratio-math)  | Functions that let you create and manipulate **[Ratios](./zoe-data-types#ratio)**. |", "mimetype": "text/plain", "start_char_idx": 1413, "end_char_idx": 1880, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c16aa3e-6706-453a-b8a2-1c345c4c1151": {"__data__": {"id_": "1c16aa3e-6706-453a-b8a2-1c345c4c1151", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fff91de-8e25-4d3d-9cfd-ab51cf990de3", "node_type": "1", "metadata": {}, "hash": "6eb2d784b1be024a2f752ecb1b1728705fdcad82c17caa377784a1fabb676ba9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c51c36c-d142-4a51-a48a-1589f5e4a483", "node_type": "1", "metadata": {}, "hash": "f3a4e01b1239f182bb47677b492071e87dae9a11670f68310f35bb2a4f4543e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The Zoe API introduces and uses the following data types:", "mimetype": "text/plain", "start_char_idx": 1882, "end_char_idx": 1939, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c51c36c-d142-4a51-a48a-1589f5e4a483": {"__data__": {"id_": "1c51c36c-d142-4a51-a48a-1589f5e4a483", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c16aa3e-6706-453a-b8a2-1c345c4c1151", "node_type": "1", "metadata": {}, "hash": "f5ed3aa506b85ff836e316273c1d0f80d1d1d8e6c7eab9d90eef451e80f26f33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f20eb75f-1947-4041-bd99-9dff5e12c271", "node_type": "1", "metadata": {}, "hash": "39b317a3470af13d0d0c023ed291d26fe3847b8e40e8f8d8e3cbd563a5c93cd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Data Type                                             | Description                                                                                                                                                                                                                                                                   |", "mimetype": "text/plain", "start_char_idx": 1941, "end_char_idx": 2270, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f20eb75f-1947-4041-bd99-9dff5e12c271": {"__data__": {"id_": "f20eb75f-1947-4041-bd99-9dff5e12c271", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c51c36c-d142-4a51-a48a-1589f5e4a483", "node_type": "1", "metadata": {}, "hash": "f3a4e01b1239f182bb47677b492071e87dae9a11670f68310f35bb2a4f4543e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d", "node_type": "1", "metadata": {}, "hash": "79fafc7648bb88dc48ff9fa02b271021eb33dc451a785f9b8f8f6f2630c7d17f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| ----------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |", "mimetype": "text/plain", "start_char_idx": 2271, "end_char_idx": 2600, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d": {"__data__": {"id_": "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f20eb75f-1947-4041-bd99-9dff5e12c271", "node_type": "1", "metadata": {}, "hash": "39b317a3470af13d0d0c023ed291d26fe3847b8e40e8f8d8e3cbd563a5c93cd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95f933f2-6cea-4879-b67a-f33968a2567d", "node_type": "1", "metadata": {}, "hash": "585040588666ddf2f1b149851dd724372900fd2c943aee53539cb5bf190df9ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Allocation](./zoe-data-types#allocation)             | The **[Amounts](/reference/ertp-api/ertp-data-types#amount)** to be paid out to each seat upon exiting an **Offer**.                                                                                                                                                          |", "mimetype": "text/plain", "start_char_idx": 2601, "end_char_idx": 2930, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95f933f2-6cea-4879-b67a-f33968a2567d": {"__data__": {"id_": "95f933f2-6cea-4879-b67a-f33968a2567d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d", "node_type": "1", "metadata": {}, "hash": "79fafc7648bb88dc48ff9fa02b271021eb33dc451a785f9b8f8f6f2630c7d17f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4", "node_type": "1", "metadata": {}, "hash": "34781091354512680ef8f5eaaf3e1dacecc00d9999c00f493831b748b04e2bc4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [AmountKeywordRecord](./zoe-data-types#keywordrecord) | A record in which the property names are **Keywords** and the values are **[Amounts](/reference/ertp-api/ertp-data-types#amount)**.                                                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 2931, "end_char_idx": 3260, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4": {"__data__": {"id_": "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95f933f2-6cea-4879-b67a-f33968a2567d", "node_type": "1", "metadata": {}, "hash": "585040588666ddf2f1b149851dd724372900fd2c943aee53539cb5bf190df9ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1795752-b0a6-4cff-893d-754d90cc3ba9", "node_type": "1", "metadata": {}, "hash": "64b4607634fcfa436efb07834b1e1e6747eca673082c2338779905f1b2d8db9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Handle](./zoe-data-types#handle)                     | A **Far** object without any methods whose only useful property is its unique identity.                                                                                                                                                                                       |", "mimetype": "text/plain", "start_char_idx": 3261, "end_char_idx": 3590, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1795752-b0a6-4cff-893d-754d90cc3ba9": {"__data__": {"id_": "d1795752-b0a6-4cff-893d-754d90cc3ba9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4", "node_type": "1", "metadata": {}, "hash": "34781091354512680ef8f5eaaf3e1dacecc00d9999c00f493831b748b04e2bc4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b541d11-c176-433e-bd3f-8c69fcee85e7", "node_type": "1", "metadata": {}, "hash": "ed626b9192db08df4a8fce9083f6759978a8561ded418a939d929f025bcf20bb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Instance](./zoe-data-types#instance)                 | A handle to an opaque object that represents a contract instance.                                                                                                                                                                                                             |", "mimetype": "text/plain", "start_char_idx": 3591, "end_char_idx": 3920, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b541d11-c176-433e-bd3f-8c69fcee85e7": {"__data__": {"id_": "3b541d11-c176-433e-bd3f-8c69fcee85e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1795752-b0a6-4cff-893d-754d90cc3ba9", "node_type": "1", "metadata": {}, "hash": "64b4607634fcfa436efb07834b1e1e6747eca673082c2338779905f1b2d8db9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0034c606-88fe-4fc9-9053-1aed771c794e", "node_type": "1", "metadata": {}, "hash": "6926ffb938e249a97bc3dab3fab05984ded35f778adda1da046afc6586d43dcd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Invitation](./zoe-data-types#invitation)             | A non-fungible eright that can be held in **[Payments](/reference/ertp-api/payment)** or **[Purses](/reference/ertp-api/purse)**, just like any other eright.                                                                                                                 |", "mimetype": "text/plain", "start_char_idx": 3921, "end_char_idx": 4250, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0034c606-88fe-4fc9-9053-1aed771c794e": {"__data__": {"id_": "0034c606-88fe-4fc9-9053-1aed771c794e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b541d11-c176-433e-bd3f-8c69fcee85e7", "node_type": "1", "metadata": {}, "hash": "ed626b9192db08df4a8fce9083f6759978a8561ded418a939d929f025bcf20bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81244a86-0435-45e4-9a54-25a9bf48b392", "node_type": "1", "metadata": {}, "hash": "72c678ae7dbdb459189eba3beb69824eac6914d9678016daa083e425dc15c72b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [InvitationIssuer](./zoe-data-types#invitationissuer) | An **[Issuer](/reference/ertp-api/issuer)** for **[Invitations](./zoe-data-types#invitation)**, which grant the right to participate in a contract.                                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 4251, "end_char_idx": 4580, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81244a86-0435-45e4-9a54-25a9bf48b392": {"__data__": {"id_": "81244a86-0435-45e4-9a54-25a9bf48b392", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0034c606-88fe-4fc9-9053-1aed771c794e", "node_type": "1", "metadata": {}, "hash": "6926ffb938e249a97bc3dab3fab05984ded35f778adda1da046afc6586d43dcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "395e1f9b-7342-4445-a2b5-5e1c610592ca", "node_type": "1", "metadata": {}, "hash": "5791200bd419653a3ecac3b26bdba4dc09741b81921ba42e18e7cd9eb1ae23b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Keyword](./zoe-data-types#keyword)                   | An ASCII identifier string that must begin with an upper case letter.                                                                                                                                                                                                         |", "mimetype": "text/plain", "start_char_idx": 4581, "end_char_idx": 4910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "395e1f9b-7342-4445-a2b5-5e1c610592ca": {"__data__": {"id_": "395e1f9b-7342-4445-a2b5-5e1c610592ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81244a86-0435-45e4-9a54-25a9bf48b392", "node_type": "1", "metadata": {}, "hash": "72c678ae7dbdb459189eba3beb69824eac6914d9678016daa083e425dc15c72b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8be19f70-2c03-41e2-8d30-7d0056abe8a2", "node_type": "1", "metadata": {}, "hash": "68bdbe52b8faa54dbb318b3a0f300c0b25d90f71175ac35c5d38c1ff0bbf923e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [ParsableNumber](./zoe-data-types#parsablenumber)     | Defined as a **bigint**, **number**, or **string**.                                                                                                                                                                                                                           |", "mimetype": "text/plain", "start_char_idx": 4911, "end_char_idx": 5240, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8be19f70-2c03-41e2-8d30-7d0056abe8a2": {"__data__": {"id_": "8be19f70-2c03-41e2-8d30-7d0056abe8a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "395e1f9b-7342-4445-a2b5-5e1c610592ca", "node_type": "1", "metadata": {}, "hash": "5791200bd419653a3ecac3b26bdba4dc09741b81921ba42e18e7cd9eb1ae23b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "688dc657-5f98-4a54-a62a-0293f0a65745", "node_type": "1", "metadata": {}, "hash": "c4e93f2f397d04125fe7c11bc2cdd83702e6fafbc030c3704ad5349e7b4bcf33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [Ratio](./zoe-data-types#ratio)                       | Pass-by-value record that consists of a _numerator_ **[Amount](/reference/ertp-api/ertp-data-types#amount)** and a _denominator_ **Amount**.                                                                                                                                  |", "mimetype": "text/plain", "start_char_idx": 5241, "end_char_idx": 5570, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "688dc657-5f98-4a54-a62a-0293f0a65745": {"__data__": {"id_": "688dc657-5f98-4a54-a62a-0293f0a65745", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_index.md", "node_type": "4", "metadata": {}, "hash": "200e5322895f6bce7f33c457b674dcea491249d21582ba3a8497191b14e9edbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8be19f70-2c03-41e2-8d30-7d0056abe8a2", "node_type": "1", "metadata": {}, "hash": "68bdbe52b8faa54dbb318b3a0f300c0b25d90f71175ac35c5d38c1ff0bbf923e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| [TransferPart](./zoe-data-types#transferpart)         | **[Allocation](./zoe-data-types#allocation)** changes for one or two existing **[ZCFSeats](./zcfseat)**. **TransferParts** are the individual elements of the _transfer_ array passed into the **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** function. |", "mimetype": "text/plain", "start_char_idx": 5571, "end_char_idx": 5900, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "868bd997-f84a-4a2e-b50b-2e6a133d315d": {"__data__": {"id_": "868bd997-f84a-4a2e-b50b-2e6a133d315d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_mutable-quote.md", "node_type": "4", "metadata": {}, "hash": "196a101b3ac5dc902fd31a828dfe254b258f0284bd1d159b80c8ba1db59fa40a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b862a9b2-e939-4268-9964-7766c9e76080", "node_type": "1", "metadata": {}, "hash": "b84bb7b3e82e5177cd8447273e4b990d93ea3f712181ab0837f4e3834780b1d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# NOT CURRENTLY INCLUDED IN THE PUBLISHED DOCS; PLEASE IGNORE\n\n# MutableQuote Object\n\nUse a **MutableQuote** when you expect to make multiple calls, replacing the trigger\nvalue. If you just need a single quote, and won't change the trigger level, then use\na non-mutable quote.\n\nThere are four _mutable quote_ methods, which return a **MutableQuote** object with the methods:\n\n## aMutableQuote.cancel(e)\n\n- **e** **String**", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b862a9b2-e939-4268-9964-7766c9e76080": {"__data__": {"id_": "b862a9b2-e939-4268-9964-7766c9e76080", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_mutable-quote.md", "node_type": "4", "metadata": {}, "hash": "196a101b3ac5dc902fd31a828dfe254b258f0284bd1d159b80c8ba1db59fa40a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "868bd997-f84a-4a2e-b50b-2e6a133d315d", "node_type": "1", "metadata": {}, "hash": "42dd31c374e61ca3886d13e662f69f8aabe479d0ebb0b3b47807c59c55179ae6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c98b3d63-58e8-43a1-a41c-c55f0042f0df", "node_type": "1", "metadata": {}, "hash": "553873a533241cbece010e885fe9703b59a821d58450d4789542160666cfb825", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **e** **String**\n\nCauses the **Promise** to reject with the message **e**.\nWhen the promise is used with a **E.when()** the message is part of the rejection notification.\n\n## aMutableQuote.getPromise()\n\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\n## aMutableQuote.updateLevel(newAmountIn, newAmountOutLimit)\n\n- **newAmountIn** **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **newAmountOutLimit** **Amount**", "mimetype": "text/plain", "start_char_idx": 404, "end_char_idx": 850, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c98b3d63-58e8-43a1-a41c-c55f0042f0df": {"__data__": {"id_": "c98b3d63-58e8-43a1-a41c-c55f0042f0df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_mutable-quote.md", "node_type": "4", "metadata": {}, "hash": "196a101b3ac5dc902fd31a828dfe254b258f0284bd1d159b80c8ba1db59fa40a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b862a9b2-e939-4268-9964-7766c9e76080", "node_type": "1", "metadata": {}, "hash": "b84bb7b3e82e5177cd8447273e4b990d93ea3f712181ab0837f4e3834780b1d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Changes the **MutableQuote**'s trigger levels to the specified values without requiring a second **Promise**.\n\n_newAmountIn_'s and _newAmountOutLimit_'s **[Brands](/reference/ertp-api/brand)** must match the original\n_amountIn_ and _amountOutLimit_ **Brands**, respectively.", "mimetype": "text/plain", "start_char_idx": 852, "end_char_idx": 1126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d5a9db5-ddd5-48ba-a50a-676c38ff6dd9": {"__data__": {"id_": "9d5a9db5-ddd5-48ba-a50a-676c38ff6dd9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority-admin.md", "node_type": "4", "metadata": {}, "hash": "6e706110a0e696656e7bd927648209fd5a25a378159d05cc3fd6f089f8f2a0aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef6373db-674d-4d38-a28a-e902510cd65f", "node_type": "1", "metadata": {}, "hash": "5e765e2df488cdb0fab40080ebc9a69220b93148678126c26a047e98adb842bd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(PriceAuthorityRegistryAdmin).registerPriceAuthority(priceAuthority, brandIn, brandOut, force)\n\n\u2022 **registerPriceAuthority**: (`pa`: `ERef`\\<`PriceAuthority`\\>, `brandIn`: `Brand`\\<`AssetKind`\\>, `brandOut`: `Brand`\\<`AssetKind`\\>, `force?`: `boolean`) => `Promise`\\<`Deleter`\\>\n\nAdd a unique price authority for a given pair.\n\nIf the pair is already registered, throw unless `force` is `true`.\n\n##### Returns\n\n`Promise`\\<`Deleter`\\>\n\n#### Defined in", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 454, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef6373db-674d-4d38-a28a-e902510cd65f": {"__data__": {"id_": "ef6373db-674d-4d38-a28a-e902510cd65f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority-admin.md", "node_type": "4", "metadata": {}, "hash": "6e706110a0e696656e7bd927648209fd5a25a378159d05cc3fd6f089f8f2a0aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d5a9db5-ddd5-48ba-a50a-676c38ff6dd9", "node_type": "1", "metadata": {}, "hash": "5d3bae56eec883b6a073e22dd4082d4ecb0e30d4353676a65ebe94ab9fd39a59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "#### Defined in\n\n[priceAuthorityRegistry.js:27](https://github.com/Agoric/agoric-sdk/blob/a8c322206/packages/vats/src/priceAuthorityRegistry.js#L27)\n\n## E(Deleter).delete()\n\n\u2022 **delete**: () => `void`", "mimetype": "text/plain", "start_char_idx": 439, "end_char_idx": 639, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfdce8e5-a2de-4c8f-8b20-3643dbf191fd": {"__data__": {"id_": "cfdce8e5-a2de-4c8f-8b20-3643dbf191fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5812cff1-9f03-4d21-934d-bc1c6efaec80", "node_type": "1", "metadata": {}, "hash": "ace6a59cf4ced42ba4d7740adc2a59b11233384137b6570ba48fc98e182ef26d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# PriceAuthority Object", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 23, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5812cff1-9f03-4d21-934d-bc1c6efaec80": {"__data__": {"id_": "5812cff1-9f03-4d21-934d-bc1c6efaec80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfdce8e5-a2de-4c8f-8b20-3643dbf191fd", "node_type": "1", "metadata": {}, "hash": "f36727a351732091d5a2f9e3bf76caf683ea955f64937eb2c603d542ae6ad748", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d4b98fa-5b46-404e-8c32-eeb94b632b04", "node_type": "1", "metadata": {}, "hash": "0b1e3abea4163c1a9aec866a1aeb50adfcdc60d59f29cab669e9a2a84d6de1f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "We rely on **PriceAuthority** oracles. A **PriceAuthority**\ngives reliable quotes for prices. The quotes might be based on broad surveys\nof prices across the ecosystem, or might come directly from an AMM (Automatic\nMarket Maker). A **PriceAuthority** can either give a quote for the current price\nacross any pair of currencies it knows about, or can immediately return a\n**Promise** resolved when a condition is true. For example, a price\ncrossing some threshold, or at a particular time. It can also provide a", "mimetype": "text/plain", "start_char_idx": 25, "end_char_idx": 535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d4b98fa-5b46-404e-8c32-eeb94b632b04": {"__data__": {"id_": "1d4b98fa-5b46-404e-8c32-eeb94b632b04", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5812cff1-9f03-4d21-934d-bc1c6efaec80", "node_type": "1", "metadata": {}, "hash": "ace6a59cf4ced42ba4d7740adc2a59b11233384137b6570ba48fc98e182ef26d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c", "node_type": "1", "metadata": {}, "hash": "b06eb94b82576f635a06a1ebba1a01732b50d8024021d014406cdfeddd0707b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "price feed that updates with every price change.", "mimetype": "text/plain", "start_char_idx": 536, "end_char_idx": 584, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c": {"__data__": {"id_": "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d4b98fa-5b46-404e-8c32-eeb94b632b04", "node_type": "1", "metadata": {}, "hash": "0b1e3abea4163c1a9aec866a1aeb50adfcdc60d59f29cab669e9a2a84d6de1f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "456d04c5-779a-4840-8451-e6d2f63e7f75", "node_type": "1", "metadata": {}, "hash": "37b38c7ae2b708f664733f3ce9b694d7b8f4028a18eb4c6111cb223fce6249a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(PriceAuthority).getQuoteIssuer(brandIn, brandOut)\n\n- **brandIn**: **[Brand](/reference/ertp-api/brand)**\n- **brandOut**: **Brand**\n- Returns: **[Issuer](/reference/ertp-api/issuer) | Promise&lt;Issuer>**\n\nGets the ERTP **Issuer** of **[PriceQuotes](./zoe-data-types#pricequote)** for a\ngiven _brandIn_/_brandOut_ pair.\n\n```js\nconst quoteIssuer = await E(PriceAuthority).getQuoteIssuer(\n  collateralKit.brand,\n  loanKit.brand\n);\n```\n\n## E(PriceAuthority).getTimerService(brandIn, brandOut)", "mimetype": "text/plain", "start_char_idx": 586, "end_char_idx": 1079, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "456d04c5-779a-4840-8451-e6d2f63e7f75": {"__data__": {"id_": "456d04c5-779a-4840-8451-e6d2f63e7f75", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c", "node_type": "1", "metadata": {}, "hash": "b06eb94b82576f635a06a1ebba1a01732b50d8024021d014406cdfeddd0707b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef20ddcf-de03-4051-bb21-94484f6ef5b5", "node_type": "1", "metadata": {}, "hash": "784acfd0cf7550aa231351b9ad79f5ced84882d9b19fef40a8154b85dbb582cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **brandIn**: **[Brand](/reference/ertp-api/brand)**\n- **brandOut**: **Brand**\n- Returns: **TimerService | Promise&lt;TimerService>**\n\nGets the timer used in **[PriceQuotes](./zoe-data-types#pricequote)** for a\ngiven _brandIn_/_brandOut_ pair.\n\n```js\nconst myTimer = E(PriceAuthority).getTimerService(\n  collateral.brand,\n  loanKit.brand\n);\n```\n\n## E(PriceAuthority).makeQuoteNotifier(amountIn, brandOut)", "mimetype": "text/plain", "start_char_idx": 1081, "end_char_idx": 1486, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef20ddcf-de03-4051-bb21-94484f6ef5b5": {"__data__": {"id_": "ef20ddcf-de03-4051-bb21-94484f6ef5b5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "456d04c5-779a-4840-8451-e6d2f63e7f75", "node_type": "1", "metadata": {}, "hash": "37b38c7ae2b708f664733f3ce9b694d7b8f4028a18eb4c6111cb223fce6249a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3455549d-f28c-45a9-9baf-93f185fa8338", "node_type": "1", "metadata": {}, "hash": "2d5723a8feb91eddb2c5a64d30baf1c2d05587309030159311a00698eee06c90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **brandOut**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **ERef&lt;Notifier&lt;[PriceQuote](./zoe-data-types#pricequote)>>**\n\nBe notified of the latest **PriceQuotes** for a given _amountIn_. The issuing\nrate may be very different between **PriceAuthorities**.\n\n```js\nconst myNotifier = E(PriceAuthority).makeQuoteNotifier(quatloos100, usdBrand);\n```\n\n## E(PriceAuthority).quoteGiven(amountIn, brandOut)", "mimetype": "text/plain", "start_char_idx": 1488, "end_char_idx": 1973, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3455549d-f28c-45a9-9baf-93f185fa8338": {"__data__": {"id_": "3455549d-f28c-45a9-9baf-93f185fa8338", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef20ddcf-de03-4051-bb21-94484f6ef5b5", "node_type": "1", "metadata": {}, "hash": "784acfd0cf7550aa231351b9ad79f5ced84882d9b19fef40a8154b85dbb582cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b9d150d-b9e8-41c2-922b-6716df827837", "node_type": "1", "metadata": {}, "hash": "ef74f228398341a224b755d620a17339ba5f702779046283db1ef74863db81df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **brandOut**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nGets a quote on-demand corresponding to _amountIn_.\n\n```js\nconst quote = await E(PriceAuthority).quoteGiven(moola500, quatloosBrand);\n```\n\n## E(PriceAuthority).quoteWanted(brandIn, amountOut)", "mimetype": "text/plain", "start_char_idx": 1975, "end_char_idx": 2364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b9d150d-b9e8-41c2-922b-6716df827837": {"__data__": {"id_": "3b9d150d-b9e8-41c2-922b-6716df827837", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3455549d-f28c-45a9-9baf-93f185fa8338", "node_type": "1", "metadata": {}, "hash": "2d5723a8feb91eddb2c5a64d30baf1c2d05587309030159311a00698eee06c90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbffb93a-c612-489f-97b1-22efc935c77e", "node_type": "1", "metadata": {}, "hash": "42430fc2cc37a19b18e0106a7ee8b8b0ffec1573ab460102bfe099bbf4d90899", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **brandIn**: **[Brand](/reference/ertp-api/brand)**\n- **amountOut**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nGets a quote on-demand corresponding to _amountOut_.\n\n```js\nconst quote = await E(PriceAuthority).quoteWanted(quatloosBrand, moola500);\n```\n\n## E(PriceAuthority).quoteAtTime(deadline, amountIn, brandOut)", "mimetype": "text/plain", "start_char_idx": 2366, "end_char_idx": 2767, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbffb93a-c612-489f-97b1-22efc935c77e": {"__data__": {"id_": "bbffb93a-c612-489f-97b1-22efc935c77e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b9d150d-b9e8-41c2-922b-6716df827837", "node_type": "1", "metadata": {}, "hash": "ef74f228398341a224b755d620a17339ba5f702779046283db1ef74863db81df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03a9eb2d-1ecb-4148-ab3f-701681c4f089", "node_type": "1", "metadata": {}, "hash": "5d26da6a4c84a0842a202e99d965a6c639980d0f5ea17aaaea9bcdf2499f2bfa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **deadline**: **Timestamp**\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **brandOut**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nResolves after _deadline_ passes on the **PriceAuthority**\u2019s **timerService** with the\n**PriceQuote** of _amountIn_ at that time. Note that _deadline_'s value is a **BigInt**.", "mimetype": "text/plain", "start_char_idx": 2769, "end_char_idx": 3172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03a9eb2d-1ecb-4148-ab3f-701681c4f089": {"__data__": {"id_": "03a9eb2d-1ecb-4148-ab3f-701681c4f089", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbffb93a-c612-489f-97b1-22efc935c77e", "node_type": "1", "metadata": {}, "hash": "42430fc2cc37a19b18e0106a7ee8b8b0ffec1573ab460102bfe099bbf4d90899", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96982d35-6c07-4209-b484-c511128660dc", "node_type": "1", "metadata": {}, "hash": "03236a2d631c405b2b00bf647d13251be4e550acfc0a4d8397f943354f44db57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst priceQuoteOnThisAtTime = E(PriceAuthority).quoteAtTime(\n  7n,\n  quatloosAmount34,\n  usdBrand\n);\n```\n\n## E(PriceAuthority).quoteWhenGT(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ exceeds _amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 3174, "end_char_idx": 3593, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96982d35-6c07-4209-b484-c511128660dc": {"__data__": {"id_": "96982d35-6c07-4209-b484-c511128660dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03a9eb2d-1ecb-4148-ab3f-701681c4f089", "node_type": "1", "metadata": {}, "hash": "5d26da6a4c84a0842a202e99d965a6c639980d0f5ea17aaaea9bcdf2499f2bfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b894f9e-15c5-4c32-874c-cd255f2e6417", "node_type": "1", "metadata": {}, "hash": "16979b738323f77e4521ec28ee7693415455a0acb39c57177d95ad0a909c5a89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).quoteWhenGT(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).quoteWhenGTE(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ reaches or exceeds _amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 3595, "end_char_idx": 4043, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b894f9e-15c5-4c32-874c-cd255f2e6417": {"__data__": {"id_": "0b894f9e-15c5-4c32-874c-cd255f2e6417", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96982d35-6c07-4209-b484-c511128660dc", "node_type": "1", "metadata": {}, "hash": "03236a2d631c405b2b00bf647d13251be4e550acfc0a4d8397f943354f44db57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "562e2eaa-1d2e-4e98-ac79-9a670c222277", "node_type": "1", "metadata": {}, "hash": "e9ff4b431c7f4acf8954cd071bf2d79daeb8d6423f62e98d807e3efc2fd845f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).quoteWhenGTE(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).quoteWhenLT(amountIn, amountOutLimit)\n\n- **amountIn** **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit** **Amount**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ drops below _amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 4045, "end_char_idx": 4484, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "562e2eaa-1d2e-4e98-ac79-9a670c222277": {"__data__": {"id_": "562e2eaa-1d2e-4e98-ac79-9a670c222277", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b894f9e-15c5-4c32-874c-cd255f2e6417", "node_type": "1", "metadata": {}, "hash": "16979b738323f77e4521ec28ee7693415455a0acb39c57177d95ad0a909c5a89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "126310b5-b1c1-4ed4-9751-2b1f1e52b760", "node_type": "1", "metadata": {}, "hash": "68c3f12af72cf493b91584ea0bb0bcfdddd654d6750e91d8924cb58a3bebe451", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).quoteWhenLT(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).quoteWhenLTE(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[PriceQuote](./zoe-data-types#pricequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ reaches or drops below _amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 4486, "end_char_idx": 4938, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "126310b5-b1c1-4ed4-9751-2b1f1e52b760": {"__data__": {"id_": "126310b5-b1c1-4ed4-9751-2b1f1e52b760", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "562e2eaa-1d2e-4e98-ac79-9a670c222277", "node_type": "1", "metadata": {}, "hash": "e9ff4b431c7f4acf8954cd071bf2d79daeb8d6423f62e98d807e3efc2fd845f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5406b19-e121-4e99-b208-68599970c8ce", "node_type": "1", "metadata": {}, "hash": "8b9f5cd8cd9a00778601c1e3ac41bf605b8c638d9d398668a8aab657dc39304b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).quoteWhenLTE(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).mutableQuoteWhenGT(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[MutableQuote](./zoe-data-types#mutablequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ exceeds _amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 4940, "end_char_idx": 5388, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5406b19-e121-4e99-b208-68599970c8ce": {"__data__": {"id_": "c5406b19-e121-4e99-b208-68599970c8ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "126310b5-b1c1-4ed4-9751-2b1f1e52b760", "node_type": "1", "metadata": {}, "hash": "68c3f12af72cf493b91584ea0bb0bcfdddd654d6750e91d8924cb58a3bebe451", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0573b45-150e-4885-a5ec-40f1550f19fa", "node_type": "1", "metadata": {}, "hash": "c9ff2e17522f2c1718f90f60757d9b9c3f6ff728a9fe0a1b20967267aedf86ed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).mutableQuoteWhenGT(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).mutableQuoteWhenGTE(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[MutableQuote](./zoe-data-types#mutablequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ reaches or exceeds\n_amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 5390, "end_char_idx": 5856, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f0573b45-150e-4885-a5ec-40f1550f19fa": {"__data__": {"id_": "f0573b45-150e-4885-a5ec-40f1550f19fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5406b19-e121-4e99-b208-68599970c8ce", "node_type": "1", "metadata": {}, "hash": "8b9f5cd8cd9a00778601c1e3ac41bf605b8c638d9d398668a8aab657dc39304b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78", "node_type": "1", "metadata": {}, "hash": "978365e8357853ed5fbf1a4942898e9a30ebae0c726f126ff1bb14ceddc13bbd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).mutableQuoteWhenGTE(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).mutableQuoteWhenLT(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[MutableQuote](./zoe-data-types#mutablequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ drops below\n_amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 5858, "end_char_idx": 6317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78": {"__data__": {"id_": "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0573b45-150e-4885-a5ec-40f1550f19fa", "node_type": "1", "metadata": {}, "hash": "c9ff2e17522f2c1718f90f60757d9b9c3f6ff728a9fe0a1b20967267aedf86ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34f9df45-4bc3-4660-8772-bd6b9b3ee73b", "node_type": "1", "metadata": {}, "hash": "b1030d42e46e1ab25514403fbfa8d1f5c77c0771a19231a232b1f158074af8cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).mutableQuoteWhenLT(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## E(PriceAuthority).mutableQuoteWhenLTE(amountIn, amountOutLimit)\n\n- **amountIn**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **amountOutLimit**: **Amount**\n- Returns: **Promise&lt;[MutableQuote](./zoe-data-types#mutablequote)>**\n\nResolves when a **PriceQuote** of _amountIn_ reaches or drops below\n_amountOutLimit_.", "mimetype": "text/plain", "start_char_idx": 6319, "end_char_idx": 6789, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34f9df45-4bc3-4660-8772-bd6b9b3ee73b": {"__data__": {"id_": "34f9df45-4bc3-4660-8772-bd6b9b3ee73b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78", "node_type": "1", "metadata": {}, "hash": "978365e8357853ed5fbf1a4942898e9a30ebae0c726f126ff1bb14ceddc13bbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d08bb50-f548-4ca4-be6e-7510e0b10c4f", "node_type": "1", "metadata": {}, "hash": "d809f20444e9b9974f1d68f8d172ba73969b93c4ba9ba7f3dff37e57bd146941", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst quote = E(PriceAuthority).mutableQuoteWhenLTE(\n  AmountMath.make(brands.In, 29n),\n  AmountMath.make(brands.Out, 974n)\n);\n```\n\n## MutableQuote\n\nA **MutableQuote** represents a statement from a **[PriceAuthority](./price-authority)** as to the\ncurrent price level at a particular time. The significant content (prices\nand time) is packaged in the **[Amount](/reference/ertp-api/ertp-data-types#amount)**, and repeated\nin the **[Payment](/reference/ertp-api/payment)** for veracity.", "mimetype": "text/plain", "start_char_idx": 6791, "end_char_idx": 7282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d08bb50-f548-4ca4-be6e-7510e0b10c4f": {"__data__": {"id_": "5d08bb50-f548-4ca4-be6e-7510e0b10c4f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34f9df45-4bc3-4660-8772-bd6b9b3ee73b", "node_type": "1", "metadata": {}, "hash": "b1030d42e46e1ab25514403fbfa8d1f5c77c0771a19231a232b1f158074af8cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2561e202-1bab-4901-927c-0c4ca186b12c", "node_type": "1", "metadata": {}, "hash": "ec1ebf3c9f08c842ab1ad97e9ede55fa8f8c3f89cc8c219c9e23c3e769166cfe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**MutableQuotes** should be used when you expect to make multiple calls, replacing the trigger\nvalue. If you just need a single quote, and won't change the trigger level, you should use\n**PriceQuotes**.\n\nA **MutableQuote** is an **Amount**-**Payment** pair, where the **Amount** is also the current\nbalance of the **Payment**.\n\n## PriceQuote", "mimetype": "text/plain", "start_char_idx": 7284, "end_char_idx": 7625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2561e202-1bab-4901-927c-0c4ca186b12c": {"__data__": {"id_": "2561e202-1bab-4901-927c-0c4ca186b12c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d08bb50-f548-4ca4-be6e-7510e0b10c4f", "node_type": "1", "metadata": {}, "hash": "d809f20444e9b9974f1d68f8d172ba73969b93c4ba9ba7f3dff37e57bd146941", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cf4cc70-0418-4718-b75c-118cfc7b5048", "node_type": "1", "metadata": {}, "hash": "d97c5c534e778af4fe9939e745477dbc32e5c69ff77629f2d3e944d7b4b23ed4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## PriceQuote\n\nA **PriceQuote** represents a statement from a **[PriceAuthority](./price-authority)** as to the\ncurrent price level at a particular time. The significant content (prices\nand time) is packaged in the **[Amount](/reference/ertp-api/ertp-data-types#amount)** and repeated\nin the **[Payment](/reference/ertp-api/payment)** for veracity.\nA **PriceQuote** is an **Amount**-**Payment** pair, where the **Amount** is also the current\nbalance of the **Payment**.", "mimetype": "text/plain", "start_char_idx": 7612, "end_char_idx": 8081, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cf4cc70-0418-4718-b75c-118cfc7b5048": {"__data__": {"id_": "6cf4cc70-0418-4718-b75c-118cfc7b5048", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_price-authority.md", "node_type": "4", "metadata": {}, "hash": "3f80d15d4b3b9d31687442b1979c7f72b16357272d8353013418d17299f04607", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2561e202-1bab-4901-927c-0c4ca186b12c", "node_type": "1", "metadata": {}, "hash": "ec1ebf3c9f08c842ab1ad97e9ede55fa8f8c3f89cc8c219c9e23c3e769166cfe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst { quoteAmount, quotePayment } = priceQuote;\n```\n\n**PriceQuotes** are returned in two forms:\n\n- **PriceDescription**\n  - Always includes **amountIn**, **amountOut**, the quote's **Timestamp**,\n    and the **TimerService** the **Timestamp** is relative to.\n- **PriceDescription** wrapped as a **QuoteAuthority** issued payment.\n  - This lets quotes be shared in a format letting others verify the time and values.", "mimetype": "text/plain", "start_char_idx": 8083, "end_char_idx": 8506, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "176b2fab-51c2-4cc8-911c-895bf0706c08": {"__data__": {"id_": "176b2fab-51c2-4cc8-911c-895bf0706c08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9efd59b-4d23-4c2d-b56b-73197265083e", "node_type": "1", "metadata": {}, "hash": "8009a9925ea3bcf90ac0e565abb46c7ab5f1d60f69894efe65227abd12136bd8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Ratio Math Functions\n\nThese functions let you apply a **[Ratio](./zoe-data-types#ratio)** (a fraction) to an amount, multiplying or\ndividing an amount by a ratio of two natural numbers.\n\nThe Ratio Math functions have to be imported.\n\n## assertIsRatio(ratio)\n\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: None.\n\nThrows an error if the argument is not a valid **Ratio**.\n\nThrows messages for errors:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 414, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9efd59b-4d23-4c2d-b56b-73197265083e": {"__data__": {"id_": "c9efd59b-4d23-4c2d-b56b-73197265083e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "176b2fab-51c2-4cc8-911c-895bf0706c08", "node_type": "1", "metadata": {}, "hash": "95f3c257d2bb77f753cb2a73884ae51d59d4ff0956734a03cd3ee85824f7eaf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a30dee1e-8825-4a7a-802a-df7f70e55e59", "node_type": "1", "metadata": {}, "hash": "accdeae0b6ac882821bfca80da820bbcea1524d45a801d5724bdf3b2de08554c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Throws messages for errors:\n\n- **Ratio ${ratio} must be a record with 2 fields.**\n- **Parameter must be a Ratio record, but ${ratio} has ${q(name)}**\n\n```js\nassertIsRatio(aRatio);\n```\n\n## makeRatio(numerator, numeratorBrand, denominator?, denominatorBrand?)", "mimetype": "text/plain", "start_char_idx": 387, "end_char_idx": 644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a30dee1e-8825-4a7a-802a-df7f70e55e59": {"__data__": {"id_": "a30dee1e-8825-4a7a-802a-df7f70e55e59", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9efd59b-4d23-4c2d-b56b-73197265083e", "node_type": "1", "metadata": {}, "hash": "8009a9925ea3bcf90ac0e565abb46c7ab5f1d60f69894efe65227abd12136bd8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31", "node_type": "1", "metadata": {}, "hash": "d40f4b4e279490d3842f1efcf5647f3e3d8c72c560e3ae725471d1b1d077d549", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **numerator**: **BigInt**\n- **numeratorBrand**: **[Brand](/reference/ertp-api/brand)**\n- **denominator**: **BigInt** - Optional, defaults to 100n.\n- **denominatorBrand**: **Brand** - Optional, defaults to the _numeratorBrand_ value.\n- Returns: **[Ratio](./zoe-data-types#ratio)**\n\nReturns a **Ratio** based on the arguments passed into the function.\n\nBy default, the _denominator_ is 100n (i.e., the **Ratio** is a percent).", "mimetype": "text/plain", "start_char_idx": 646, "end_char_idx": 1072, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31": {"__data__": {"id_": "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a30dee1e-8825-4a7a-802a-df7f70e55e59", "node_type": "1", "metadata": {}, "hash": "accdeae0b6ac882821bfca80da820bbcea1524d45a801d5724bdf3b2de08554c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5", "node_type": "1", "metadata": {}, "hash": "220b6bc47d2fb413f7e4427d268928328357f75ef6066a462e4503a810479fcb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Use default values to create a ratio of 50 / 100 Quatloos\nconst ratio = makeRatio(50n, quatloosBrand);\n// Specify all values to create a ratio of 75 Quatloos / 4 Moolas (the current exchange rate)\nconst ratio = makeRatio(75n, quatloosBrand, 4n, moolasBrand);\n```\n\n## makeRatioFromAmounts(numeratorAmount, denominatorAmount)\n\n- **numeratorAmount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **denominatorAmount**: **Amount**\n- Returns: **[Ratio](./zoe-data-types#ratio)**", "mimetype": "text/plain", "start_char_idx": 1074, "end_char_idx": 1570, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5": {"__data__": {"id_": "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31", "node_type": "1", "metadata": {}, "hash": "d40f4b4e279490d3842f1efcf5647f3e3d8c72c560e3ae725471d1b1d077d549", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b9f5343-7882-4d60-9da3-4a7b121c52df", "node_type": "1", "metadata": {}, "hash": "4234dd5f7d1b3b57e549febf2d5f1953d314e1486fd1fb3645b2b45e3feb5cee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Ratio**, representing a fraction and consisting of an immutable pair\nof two **Amounts**. The _numeratorAmount_ is the **Ratio's** numerator and\nthe _denominatorAmount_ is the **Ratio's** denominator.\n\n```js\nconst fiftyCents = AmountMath.make(centsBrand, 50n);\nconst dollar = AmountMath.make(centsBrand, 100n);\nconst halfADollar = makeRatioFromAmounts(fiftyCents, dollar);\n```\n\n## floorMultiplyBy(amount, ratio)", "mimetype": "text/plain", "start_char_idx": 1572, "end_char_idx": 1994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b9f5343-7882-4d60-9da3-4a7b121c52df": {"__data__": {"id_": "1b9f5343-7882-4d60-9da3-4a7b121c52df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5", "node_type": "1", "metadata": {}, "hash": "220b6bc47d2fb413f7e4427d268928328357f75ef6066a462e4503a810479fcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b921781b-f8a0-4b4f-b950-df248b5427db", "node_type": "1", "metadata": {}, "hash": "186bc756f508d7f2d4d53b8c3d0a9787792c27801b41c30db1cf2bbaf58e5328", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## floorMultiplyBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**\n\nReturns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s\nnumerator's **Brand**. Note that the denominator **Brand** has to be the same as the _amount_ **Brand**.\n\nThe resulting **Amount** is determined by:", "mimetype": "text/plain", "start_char_idx": 1961, "end_char_idx": 2380, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b921781b-f8a0-4b4f-b950-df248b5427db": {"__data__": {"id_": "b921781b-f8a0-4b4f-b950-df248b5427db", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b9f5343-7882-4d60-9da3-4a7b121c52df", "node_type": "1", "metadata": {}, "hash": "4234dd5f7d1b3b57e549febf2d5f1953d314e1486fd1fb3645b2b45e3feb5cee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c11f23c-5b6f-414e-9a74-f90874cb5f31", "node_type": "1", "metadata": {}, "hash": "b85d89046a2ab7e230f08a715f37040f1382568724c8c6ec5fc67679424deaf0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Multiplying the _amount_ value by the _ratio_'s numerator's value.\n2. Dividing the result from step 1 by the _ratio_'s denominator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded down to the next\n   integer.\n\nFor example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go\n\n1. 47 \\* 3 = 141\n2. 141 / 5 = 28.2\n3. Floor(28.2) = 28\n\nThrows errors with messages:", "mimetype": "text/plain", "start_char_idx": 2382, "end_char_idx": 2825, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c11f23c-5b6f-414e-9a74-f90874cb5f31": {"__data__": {"id_": "2c11f23c-5b6f-414e-9a74-f90874cb5f31", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b921781b-f8a0-4b4f-b950-df248b5427db", "node_type": "1", "metadata": {}, "hash": "186bc756f508d7f2d4d53b8c3d0a9787792c27801b41c30db1cf2bbaf58e5328", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9484c566-490c-41a5-89df-2f604858c9c9", "node_type": "1", "metadata": {}, "hash": "de9da650ac299be51782455b367c02c4ee2504880ff65e47d3ef0da10bde90a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Throws errors with messages:\n\n- **Expected an amount: ${amount}**: First argument isn't an **Amount**.\n- \\*_amount's brand ${q(amount.brand)} must match ratio's denominator ${q(\n  ratio.denominator.brand_)}\\*: The amount and ratio's denominator must have the same brand.\n\n```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 28 Swiss francs\nconst exchange = floorMultiplyBy(dollars47, exchangeRatio);\n```", "mimetype": "text/plain", "start_char_idx": 2797, "end_char_idx": 3302, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9484c566-490c-41a5-89df-2f604858c9c9": {"__data__": {"id_": "9484c566-490c-41a5-89df-2f604858c9c9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c11f23c-5b6f-414e-9a74-f90874cb5f31", "node_type": "1", "metadata": {}, "hash": "b85d89046a2ab7e230f08a715f37040f1382568724c8c6ec5fc67679424deaf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6be391e5-9b5f-4fc3-9f67-334592758f1b", "node_type": "1", "metadata": {}, "hash": "c8af5c4f1a0af6d076503751e4b16978a496ca96dfc8ab82a9110d734fae5e34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ceilMultiplyBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**\n\nReturns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s\nnumerator's **Brand**. Note that the denominator **Brand** has to be the same as the _amount_ **Brand**.\n\nThe resulting **Amount** is determined by:", "mimetype": "text/plain", "start_char_idx": 3304, "end_char_idx": 3722, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6be391e5-9b5f-4fc3-9f67-334592758f1b": {"__data__": {"id_": "6be391e5-9b5f-4fc3-9f67-334592758f1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9484c566-490c-41a5-89df-2f604858c9c9", "node_type": "1", "metadata": {}, "hash": "de9da650ac299be51782455b367c02c4ee2504880ff65e47d3ef0da10bde90a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e602b352-6a7f-4228-a976-8f028b401164", "node_type": "1", "metadata": {}, "hash": "c3d45a1e18140e40400e3f5374208f644ae723d061a8d2be4e5e453465d605dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Multiplying the _amount_ value by the _ratio_'s numerator's value.\n2. Dividing the result from step 1 by the _ratio_'s denominator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded up to the next\n   integer.\n\nFor example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go\n\n1. 47 \\* 3 = 141\n2. 141 / 5 = 28.2\n3. Ceiling(28.2) = 29\n\nThrows errors with messages:", "mimetype": "text/plain", "start_char_idx": 3724, "end_char_idx": 4167, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e602b352-6a7f-4228-a976-8f028b401164": {"__data__": {"id_": "e602b352-6a7f-4228-a976-8f028b401164", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6be391e5-9b5f-4fc3-9f67-334592758f1b", "node_type": "1", "metadata": {}, "hash": "c8af5c4f1a0af6d076503751e4b16978a496ca96dfc8ab82a9110d734fae5e34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc041423-ad69-42ed-9381-32f45e2c82b0", "node_type": "1", "metadata": {}, "hash": "ebdb41e6d6c6204ef71a7f51aaf82e59091a084e4267241e3b0f914cd6cd15f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Throws errors with messages:\n\n- **Expected an amount: ${amount})**: First argument isn't an **Amount**.\n- **amount's brand ${q(amount.brand)} must match ratio's denominator ${q(\n  ratio.denominator.brand**: The amount and ratio's denominator must have the same brand.\n\n```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 29 Swiss francs\nconst exchange = ceilMultiplyBy(dollars47, exchangeRatio);\n```", "mimetype": "text/plain", "start_char_idx": 4139, "end_char_idx": 4640, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc041423-ad69-42ed-9381-32f45e2c82b0": {"__data__": {"id_": "cc041423-ad69-42ed-9381-32f45e2c82b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e602b352-6a7f-4228-a976-8f028b401164", "node_type": "1", "metadata": {}, "hash": "c3d45a1e18140e40400e3f5374208f644ae723d061a8d2be4e5e453465d605dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f8f492f-5032-451b-919c-44e8d347f4d0", "node_type": "1", "metadata": {}, "hash": "4dd60051455c479cb7cd0228a4ef0060960176d50accd81d99b6cdd33be685b2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## multiplyBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**\n\nReturns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s\nnumerator's **Brand**. Note that the denominator **Brand** has to be the same as the _amount_ **Brand**.\n\nThe resulting **Amount** is determined by:", "mimetype": "text/plain", "start_char_idx": 4642, "end_char_idx": 5056, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f8f492f-5032-451b-919c-44e8d347f4d0": {"__data__": {"id_": "2f8f492f-5032-451b-919c-44e8d347f4d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc041423-ad69-42ed-9381-32f45e2c82b0", "node_type": "1", "metadata": {}, "hash": "ebdb41e6d6c6204ef71a7f51aaf82e59091a084e4267241e3b0f914cd6cd15f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e701e34-b211-4106-9ce0-f35bc767bfae", "node_type": "1", "metadata": {}, "hash": "73f936ea15318469cc8c2fec2ce958e2e7a9e451c5a919d9e0da52497458e40b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Multiplying the _amount_ value by the _ratio_'s numerator's value.\n2. Dividing the result from step 1 by the _ratio_'s denominator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded to the nearest integer according to [banker's rounding rules](https://en.wikipedia.org/wiki/Rounding#Rounding_half_to_even).\n\nFor example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go", "mimetype": "text/plain", "start_char_idx": 5058, "end_char_idx": 5511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e701e34-b211-4106-9ce0-f35bc767bfae": {"__data__": {"id_": "6e701e34-b211-4106-9ce0-f35bc767bfae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f8f492f-5032-451b-919c-44e8d347f4d0", "node_type": "1", "metadata": {}, "hash": "4dd60051455c479cb7cd0228a4ef0060960176d50accd81d99b6cdd33be685b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176", "node_type": "1", "metadata": {}, "hash": "84b9e300ef77944b6888f0eb8865a0b5c5c3425b6a6aca80bf68126a4fcafa0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. 47 \\* 3 = 141\n2. 141 / 5 = 28.2\n3. BankersRounding(28.2) = 28\n\nThrows errors with messages:\n\n- **Expected an amount: ${amount})**: First argument isn't an **Amount**.\n- **amount's brand ${q(amount.brand)} must match ratio's denominator ${q(\n  ratio.denominator.brand**: The amount and ratio's denominator must have the same brand.", "mimetype": "text/plain", "start_char_idx": 5513, "end_char_idx": 5846, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176": {"__data__": {"id_": "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e701e34-b211-4106-9ce0-f35bc767bfae", "node_type": "1", "metadata": {}, "hash": "73f936ea15318469cc8c2fec2ce958e2e7a9e451c5a919d9e0da52497458e40b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dcd1c22-2dc5-4683-8c8b-db59bac537d9", "node_type": "1", "metadata": {}, "hash": "996eb812bf88a9c5ecbc666b494c08c8813224e02e26ed091d95b4da8dfaa9ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 28 Swiss francs\nconst exchange = multiplyBy(dollars47, exchangeRatio);\n```\n\n## floorDivideBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**", "mimetype": "text/plain", "start_char_idx": 5848, "end_char_idx": 6252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3dcd1c22-2dc5-4683-8c8b-db59bac537d9": {"__data__": {"id_": "3dcd1c22-2dc5-4683-8c8b-db59bac537d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176", "node_type": "1", "metadata": {}, "hash": "84b9e300ef77944b6888f0eb8865a0b5c5c3425b6a6aca80bf68126a4fcafa0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "496e0df3-a138-4b87-a114-0b7d37d73d4d", "node_type": "1", "metadata": {}, "hash": "e89c28b2859427ffa59b79716866165f3b57aefa47cc42f6378ddc8a9364f3db", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s denominator's **Brand**.\n\nThe resulting value is determined by:\n\n1. Multiplying the _amount_ value by the _ratio_'s denominator's value.\n2. Dividing the result from step 1 by the _ratio_'s numerator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded down to the next integer.", "mimetype": "text/plain", "start_char_idx": 6254, "end_char_idx": 6673, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "496e0df3-a138-4b87-a114-0b7d37d73d4d": {"__data__": {"id_": "496e0df3-a138-4b87-a114-0b7d37d73d4d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dcd1c22-2dc5-4683-8c8b-db59bac537d9", "node_type": "1", "metadata": {}, "hash": "996eb812bf88a9c5ecbc666b494c08c8813224e02e26ed091d95b4da8dfaa9ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cebf3be-c41d-4f78-8940-33d0f61e2474", "node_type": "1", "metadata": {}, "hash": "a50576a73b85ef91c77b0c389076172a43973535c149db450db6419c9c2a8eb2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go\n\n1. 47 \\* 5 = 235\n2. 235 / 3 = 78.33333...\n3. Floor(78.3333...) = 78\n\nThrows errors with messages:\n\n- **Expected an amount: ${amount})**: First argument isn't an **Amount**.\n- **amount's brand ${q(amount.brand)} must match ratio's numerator ${q(ratio.numerator.brand**: The\n  amount and ratio's numerator must have the same brand.", "mimetype": "text/plain", "start_char_idx": 6675, "end_char_idx": 7097, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4cebf3be-c41d-4f78-8940-33d0f61e2474": {"__data__": {"id_": "4cebf3be-c41d-4f78-8940-33d0f61e2474", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "496e0df3-a138-4b87-a114-0b7d37d73d4d", "node_type": "1", "metadata": {}, "hash": "e89c28b2859427ffa59b79716866165f3b57aefa47cc42f6378ddc8a9364f3db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74b53960-32b5-475c-b65b-f274a582f722", "node_type": "1", "metadata": {}, "hash": "adba1fc66bf9b04eabde2249e0a09606372ad9f882c38c331be585ff9329987a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 78 dollars\nconst exchange = floorDivideBy(dollars47, exchangeRatio);\n```\n\n## ceilDivideBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**", "mimetype": "text/plain", "start_char_idx": 7099, "end_char_idx": 7500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74b53960-32b5-475c-b65b-f274a582f722": {"__data__": {"id_": "74b53960-32b5-475c-b65b-f274a582f722", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cebf3be-c41d-4f78-8940-33d0f61e2474", "node_type": "1", "metadata": {}, "hash": "a50576a73b85ef91c77b0c389076172a43973535c149db450db6419c9c2a8eb2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3da5602-00ff-4987-aff3-0ff557cb73aa", "node_type": "1", "metadata": {}, "hash": "dcbadde7e142a52d6ba4c9d64462f8ed2da4b085b5dee7745154128b98c995da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s denominator's **Brand**.\n\nThe resulting value is determined by:\n\n1. Multiplying the _amount_ value by the _ratio_'s denominator's value.\n2. Dividing the result from step 1 by the _ratio_'s numerator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded up to the next integer.\n\nFor example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go", "mimetype": "text/plain", "start_char_idx": 7502, "end_char_idx": 8012, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3da5602-00ff-4987-aff3-0ff557cb73aa": {"__data__": {"id_": "c3da5602-00ff-4987-aff3-0ff557cb73aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74b53960-32b5-475c-b65b-f274a582f722", "node_type": "1", "metadata": {}, "hash": "adba1fc66bf9b04eabde2249e0a09606372ad9f882c38c331be585ff9329987a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f", "node_type": "1", "metadata": {}, "hash": "294ea8d7f5c3b137848f4c899a2fbf9d8687da01928b23fb647214c1e4d91119", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. 47 \\* 5 = 235\n2. 235 / 3 = 78.33333...\n3. Ceiling(78.3333...) = 79\n\nThrows errors with messages:\n\n- **Expected an amount: ${amount})**: First argument isn't an **Amount**.\n- **amount's brand ${q(amount.brand)} must match ratio's numerator ${q(ratio.numerator.brand**: The\n  amount and ratio's numerator must have the same brand.", "mimetype": "text/plain", "start_char_idx": 8014, "end_char_idx": 8345, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f": {"__data__": {"id_": "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3da5602-00ff-4987-aff3-0ff557cb73aa", "node_type": "1", "metadata": {}, "hash": "dcbadde7e142a52d6ba4c9d64462f8ed2da4b085b5dee7745154128b98c995da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "034beb18-7d94-4daf-b839-a04e4b622cc1", "node_type": "1", "metadata": {}, "hash": "ef00d4f3fc0815527450d1ff771da6c48c1dd61a3ddf206f6d5d35cacaaba917", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 79 dollars\nconst exchange = ceilDivideBy(dollars47, exchangeRatio);\n```\n\n## divideBy(amount, ratio)\n\n- **amount**: **[Amount](/reference/ertp-api/ertp-data-types#amount)**\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Amount**", "mimetype": "text/plain", "start_char_idx": 8347, "end_char_idx": 8743, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "034beb18-7d94-4daf-b839-a04e4b622cc1": {"__data__": {"id_": "034beb18-7d94-4daf-b839-a04e4b622cc1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f", "node_type": "1", "metadata": {}, "hash": "294ea8d7f5c3b137848f4c899a2fbf9d8687da01928b23fb647214c1e4d91119", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5875d24a-5b24-4904-8ac8-e3b9fbe1c713", "node_type": "1", "metadata": {}, "hash": "e7a9650b9b7806c9044acd93597c050750f94bd5d58082125445b6ed0d47a8d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns an immutable **Amount**. Its **[Brand](/reference/ertp-api/brand)** is the _ratio_'s denominator's **Brand**.\n\nThe resulting value is determined by:", "mimetype": "text/plain", "start_char_idx": 6254, "end_char_idx": 6410, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5875d24a-5b24-4904-8ac8-e3b9fbe1c713": {"__data__": {"id_": "5875d24a-5b24-4904-8ac8-e3b9fbe1c713", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "034beb18-7d94-4daf-b839-a04e4b622cc1", "node_type": "1", "metadata": {}, "hash": "ef00d4f3fc0815527450d1ff771da6c48c1dd61a3ddf206f6d5d35cacaaba917", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cbc9f09-3790-4639-b6c1-d77fe26e4d81", "node_type": "1", "metadata": {}, "hash": "12621e2c33cffffa01e25af13a67c562f0765af296dc30a08a8bc5beaf920313", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Multiplying the _amount_ value by the _ratio_'s denominator's value.\n2. Dividing the result from step 1 by the _ratio_'s numerator's value.\n3. If that results in an integer, that value is returned. Otherwise, the value\n   is rounded to the nearest integer according to [banker's rounding rules](https://en.wikipedia.org/wiki/Rounding#Rounding_half_to_even).\n\nFor example, if the _amount_ value is 47 and the _ratio_ is 3 / 5, the calculation\nwould go", "mimetype": "text/plain", "start_char_idx": 8903, "end_char_idx": 9356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cbc9f09-3790-4639-b6c1-d77fe26e4d81": {"__data__": {"id_": "6cbc9f09-3790-4639-b6c1-d77fe26e4d81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5875d24a-5b24-4904-8ac8-e3b9fbe1c713", "node_type": "1", "metadata": {}, "hash": "e7a9650b9b7806c9044acd93597c050750f94bd5d58082125445b6ed0d47a8d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc", "node_type": "1", "metadata": {}, "hash": "05d09273896caa29a9f65fb61813ca45a8df3073856a5a43bc55f7a0ac8cbda5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. 47 \\* 5 = 235\n2. 235 / 3 = 78.33333...\n3. BankersRounding(78.3333...) = 78\n\nThrows errors with messages:\n\n- **Expected an amount: ${amount})**: First argument isn't an **Amount**.\n- **amount's brand ${q(amount.brand)} must match ratio's numerator ${q(ratio.numerator.brand**: The\n  amount and ratio's numerator must have the same brand.", "mimetype": "text/plain", "start_char_idx": 9358, "end_char_idx": 9697, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc": {"__data__": {"id_": "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cbc9f09-3790-4639-b6c1-d77fe26e4d81", "node_type": "1", "metadata": {}, "hash": "12621e2c33cffffa01e25af13a67c562f0765af296dc30a08a8bc5beaf920313", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6af7c9e-7568-435d-841e-add9f033389d", "node_type": "1", "metadata": {}, "hash": "78cf9b81483fea7f0515a11727b671596e8166883cd4a7061a2acdcd2c80004c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, dollarBrand);\nconst dollars47 = AmountMath.make(dollarBrand, 47n);\n// Returns an amount of 78 dollars\nconst exchange = divideBy(dollars47, exchangeRatio);\n```\n\n## invertRatio(ratio)\n\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Ratio**\n\nReturns a **Ratio** such that the _ratio_ argument's numerator is the returned value's\ndenominator and the _ratio_ argument's denominator is the returned value's numerator.", "mimetype": "text/plain", "start_char_idx": 9699, "end_char_idx": 10188, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6af7c9e-7568-435d-841e-add9f033389d": {"__data__": {"id_": "f6af7c9e-7568-435d-841e-add9f033389d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc", "node_type": "1", "metadata": {}, "hash": "05d09273896caa29a9f65fb61813ca45a8df3073856a5a43bc55f7a0ac8cbda5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a79d54a-4840-4949-8766-6438e3f993c5", "node_type": "1", "metadata": {}, "hash": "f79094d002d74370e38467bff19788f19101b4815353b629e27437f242c5fd60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst exchangeRatio = makeRatio(3n, swissFrancBrand, 5n, usDollarBrand);\n// Returns a ratio of 5 US dollars / 3 swiss Francs\nconst invertedRatio = invertRatio(exchangeRatio);\n```\n\n## addRatios(left, right)\n\n- **left**: **[Ratio](./zoe-data-types#ratio)**\n- **right**: **Ratio**\n- Returns: **Ratio**\n\nReturns a **Ratio** that's the sum of the _left_ and _right_ parameters.", "mimetype": "text/plain", "start_char_idx": 10190, "end_char_idx": 10568, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a79d54a-4840-4949-8766-6438e3f993c5": {"__data__": {"id_": "8a79d54a-4840-4949-8766-6438e3f993c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6af7c9e-7568-435d-841e-add9f033389d", "node_type": "1", "metadata": {}, "hash": "78cf9b81483fea7f0515a11727b671596e8166883cd4a7061a2acdcd2c80004c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b", "node_type": "1", "metadata": {}, "hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **[Brands](/reference/ertp-api/brand)** of the _numerators_ of _left_ and _right_ must be\nidentical. similarly, the **Brands** of the _denominators_ of _left_ and\n_right_ must also be identical. If either of these conditions aren't met, then no **Ratio** is returned\nand an error is thrown instead.\n\nIf the _denominator_ values aren't identical, then both **Ratios** are multiplied by the lowest common\ndenominator, and then the **Ratios** are added.\n\nFor example:", "mimetype": "text/plain", "start_char_idx": 10570, "end_char_idx": 11038, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b": {"__data__": {"id_": "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a79d54a-4840-4949-8766-6438e3f993c5", "node_type": "1", "metadata": {}, "hash": "f79094d002d74370e38467bff19788f19101b4815353b629e27437f242c5fd60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b102bd7-50c8-4406-9e58-e023d27e567d", "node_type": "1", "metadata": {}, "hash": "fdb4540d9970251f5d98b4c12bb524cd8b504f6a7b113f5a11fa80f3497c90fe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Let's assume _left_ = { numerator: `44n` kilometers, denominator: `3n` hours } and\n   _right_ = { numerator: `25n` kilometers, denominator: `2n` hours }.\n2. _left_ would be multiplied by 2/2, and _right_ would be multiplied by 3/3, resulting in\n   _left_ = { numerator: `88n` kilometers, denominator: `6n` hours } and _right_ = { numerator: `75n` kilometers, denominator: `6n` hours }", "mimetype": "text/plain", "start_char_idx": 11040, "end_char_idx": 11427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b102bd7-50c8-4406-9e58-e023d27e567d": {"__data__": {"id_": "3b102bd7-50c8-4406-9e58-e023d27e567d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b", "node_type": "1", "metadata": {}, "hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b688279-c190-4409-865f-23b9635ec480", "node_type": "1", "metadata": {}, "hash": "1710f4831b19ee10d129dfe29e25688d65d4ed227813a253e50896c1d7603d07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. _left_ and _right_ would then be added together, resulting in { numerator: `163n` kilometers, denominator: `6n` hours }.\n   This **Ratio** would then be returned.", "mimetype": "text/plain", "start_char_idx": 11428, "end_char_idx": 11593, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b688279-c190-4409-865f-23b9635ec480": {"__data__": {"id_": "7b688279-c190-4409-865f-23b9635ec480", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b102bd7-50c8-4406-9e58-e023d27e567d", "node_type": "1", "metadata": {}, "hash": "fdb4540d9970251f5d98b4c12bb524cd8b504f6a7b113f5a11fa80f3497c90fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e0ec446-40eb-4846-855f-0fdb00459b6f", "node_type": "1", "metadata": {}, "hash": "a662ea605b4b72986b113f20176beb2fd0489dc0bf1c1c11f79e6a7dd5f8f84e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## subtractRatios(left, right)\n\n- **left**: **[Ratio](./zoe-data-types#ratio)**\n- **right**: **Ratio**\n- Returns: **Ratio**\n\nReturns a **Ratio** that's the result when the _right_ parameter is subtracted from the _left_ one.", "mimetype": "text/plain", "start_char_idx": 11595, "end_char_idx": 11819, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e0ec446-40eb-4846-855f-0fdb00459b6f": {"__data__": {"id_": "0e0ec446-40eb-4846-855f-0fdb00459b6f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b688279-c190-4409-865f-23b9635ec480", "node_type": "1", "metadata": {}, "hash": "1710f4831b19ee10d129dfe29e25688d65d4ed227813a253e50896c1d7603d07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46e65229-9f44-4f19-b145-c1cd1a7d5877", "node_type": "1", "metadata": {}, "hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **[Brands](/reference/ertp-api/brand)** of the _numerators_ of _left_ and _right_ must be\nidentical. similarly, the **Brands** of the _denominators_ of _left_ and\n_right_ must also be identical. If either of these conditions aren't met, then no **Ratio** is returned\nand an error is thrown instead.\n\nIf the _denominator_ values aren't identical, then both **Ratios** are multiplied by the lowest common\ndenominator, and then _right_ is subtracted from _left_.\n\nFor example:", "mimetype": "text/plain", "start_char_idx": 11821, "end_char_idx": 12298, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46e65229-9f44-4f19-b145-c1cd1a7d5877": {"__data__": {"id_": "46e65229-9f44-4f19-b145-c1cd1a7d5877", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e0ec446-40eb-4846-855f-0fdb00459b6f", "node_type": "1", "metadata": {}, "hash": "a662ea605b4b72986b113f20176beb2fd0489dc0bf1c1c11f79e6a7dd5f8f84e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d366aafd-6a28-4a2d-bee6-8ef946e14aa8", "node_type": "1", "metadata": {}, "hash": "b22955b27a661cec7580e096b203ce39043c7ba0dc5fddc24c2d5ad7181b19dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Let's assume _left_ = { numerator: `44n` kilometers, denominator: `3n` hours } and\n   _right_ = { numerator: `25n` kilometers, denominator: `2n` hours }.\n2. _left_ would be multiplied by 2/2, and _right_ would be multiplied by 3/3, resulting in\n   _left_ = { numerator: `88n` kilometers, denominator: `6n` hours } and _right_ = { numerator: `75n` kilometers, denominator: `6n` hours }", "mimetype": "text/plain", "start_char_idx": 11040, "end_char_idx": 11427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d366aafd-6a28-4a2d-bee6-8ef946e14aa8": {"__data__": {"id_": "d366aafd-6a28-4a2d-bee6-8ef946e14aa8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46e65229-9f44-4f19-b145-c1cd1a7d5877", "node_type": "1", "metadata": {}, "hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a", "node_type": "1", "metadata": {}, "hash": "64c249bb492f73420e52031c33c5ad92e6a33c1422545eb504743ff35d30b4d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. _right_ would then be subtracted from _left_ would then be added together, resulting in { numerator: `13n` kilometers, denominator: `6n` hours }.\n   This **Ratio** would then be returned.", "mimetype": "text/plain", "start_char_idx": 12688, "end_char_idx": 12878, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a": {"__data__": {"id_": "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d366aafd-6a28-4a2d-bee6-8ef946e14aa8", "node_type": "1", "metadata": {}, "hash": "b22955b27a661cec7580e096b203ce39043c7ba0dc5fddc24c2d5ad7181b19dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "166c4685-0c88-4e3e-a3a5-5434557e4b2d", "node_type": "1", "metadata": {}, "hash": "03708048b6ee3cdedcb3ec517ec38f9a570cfc2b7758ddd2331c13a4caab2bcc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## multiplyRatios(left, right)\n\n- **left**: **[Ratio](./zoe-data-types#ratio)**\n- **right**: **Ratio**\n- Returns: **Ratio**\n\nReturns a **Ratio** that's the product of the _left_ and _right_ parameters.\n\nThe **[Brands](/reference/ertp-api/brand)** of the _numerators_ of _left_ and _right_ must be\nidentical. similarly, the **Brands** of the _denominators_ of _left_ and\n_right_ must also be identical. If either of these conditions aren't met, then no **Ratio** is returned\nand an error is thrown instead.", "mimetype": "text/plain", "start_char_idx": 12880, "end_char_idx": 13385, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "166c4685-0c88-4e3e-a3a5-5434557e4b2d": {"__data__": {"id_": "166c4685-0c88-4e3e-a3a5-5434557e4b2d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a", "node_type": "1", "metadata": {}, "hash": "64c249bb492f73420e52031c33c5ad92e6a33c1422545eb504743ff35d30b4d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77455358-6a7c-4e79-a230-a271fadc5e46", "node_type": "1", "metadata": {}, "hash": "8021d70b5928dd6b3e4440d6742f18c445a2dd2c10867dea539a1851042c820f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## oneMinus(ratio)\n\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- Returns: **Ratio**\n\nSubtracts the _ratio_ argument from 1 and returns the resultant **Ratio**.\n\nThis function requires the _ratio_ argument to be between 0 and 1. It also requires the numerator and denominator **[Brands](/reference/ertp-api/brand)** to be the same. If either of these conditions aren't met, an error is thrown and no **Ratio** is returned.\n\n## ratioGTE(left, right)", "mimetype": "text/plain", "start_char_idx": 13387, "end_char_idx": 13840, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77455358-6a7c-4e79-a230-a271fadc5e46": {"__data__": {"id_": "77455358-6a7c-4e79-a230-a271fadc5e46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "166c4685-0c88-4e3e-a3a5-5434557e4b2d", "node_type": "1", "metadata": {}, "hash": "03708048b6ee3cdedcb3ec517ec38f9a570cfc2b7758ddd2331c13a4caab2bcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d193bf99-9749-4c0a-8295-622a1c054c1d", "node_type": "1", "metadata": {}, "hash": "b260f4ceac75325ed3b50a620e00999d0a87169bc3e801e4b2d5353d816f2c26", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## ratioGTE(left, right)\n\n- **left**: **[Ratio](./zoe-data-types#ratio)**\n- **right**: **Ratio**\n- Returns: **Boolean**\n\nReturns **true** if _left_ is larger than or equal to _right_, **false** otherwise.\n\nAn error is returned if the **[Brands](/reference/ertp-api/brand)** of _left_ and _right_\naren't identical.\n\n## ratiosSame(left, right)\n\n- **left**: **[Ratio](./zoe-data-types#ratio)**\n- **right**: **Ratio**\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 13816, "end_char_idx": 14252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d193bf99-9749-4c0a-8295-622a1c054c1d": {"__data__": {"id_": "d193bf99-9749-4c0a-8295-622a1c054c1d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77455358-6a7c-4e79-a230-a271fadc5e46", "node_type": "1", "metadata": {}, "hash": "8021d70b5928dd6b3e4440d6742f18c445a2dd2c10867dea539a1851042c820f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8734f9ee-79b1-40af-9d09-a7d16c051d3d", "node_type": "1", "metadata": {}, "hash": "86f5b121ec1107de87fe57658b2583a8e51ab6421de35af038525ed3d07b81ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns **true** if the _left_ and _right_ **Ratios** are the same, **false** otherwise. Note that for\nthe two **Ratios** to be considered the same, the\n**[AmountValue](/reference/ertp-api/ertp-data-types#amountvalue)** and **[Brand](/reference/ertp-api/brand)**\nof both the _numerator_ and _denominator_ of one **Ratio** must be identical to the **AmountValue** and\n**Brand** of the _numerator_ and _denominator_ of the other **Ratio**.\n\n## quantize(ratio, newDen)", "mimetype": "text/plain", "start_char_idx": 14254, "end_char_idx": 14719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8734f9ee-79b1-40af-9d09-a7d16c051d3d": {"__data__": {"id_": "8734f9ee-79b1-40af-9d09-a7d16c051d3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d193bf99-9749-4c0a-8295-622a1c054c1d", "node_type": "1", "metadata": {}, "hash": "b260f4ceac75325ed3b50a620e00999d0a87169bc3e801e4b2d5353d816f2c26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a727e192-7b65-447c-af9f-aea52bc83629", "node_type": "1", "metadata": {}, "hash": "90c378c17c2ffbae041693bdea9470429f704cbd8f6a8c181315a740e287c634", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## quantize(ratio, newDen)\n\n- **ratio**: **[Ratio](./zoe-data-types#ratio)**\n- **newDen**: **BigInt**\n- Returns: **Ratio**\n\nCreates and returns a new **Ratio** that's equivalent to the _ratio_ argument, but with a new denominator specified by the _newDen_ argument.\n\n## parseRatio(numeric, numeratorBrand, denominatorBrand?)", "mimetype": "text/plain", "start_char_idx": 14693, "end_char_idx": 15017, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a727e192-7b65-447c-af9f-aea52bc83629": {"__data__": {"id_": "a727e192-7b65-447c-af9f-aea52bc83629", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_ratio-math.md", "node_type": "4", "metadata": {}, "hash": "62526755a845658e516fecbf14fc3eaee791c51e56c7df4c90a9b1636ac72462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8734f9ee-79b1-40af-9d09-a7d16c051d3d", "node_type": "1", "metadata": {}, "hash": "86f5b121ec1107de87fe57658b2583a8e51ab6421de35af038525ed3d07b81ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **numeric**: **[ParsableNumber](./zoe-data-types#parsablenumber)**\n- **numeratorBrand**: **[Brand](/reference/ertp-api/brand)**\n- **denominatorBrand**: **Brand** - Optional, defaults to _numeratorBrand_.\n- Returns: **[Ratio](./zoe-data-types#ratio)**\n\nCreates a **Ratio** from the _numeric_ argument, and returns that **Ratio**.\n\n## assertParsableNumber(specimen)\n\n- **specimen**: **Object**\n- Returns: None.\n\nThrows an error if the argument is not a **[ParsableNumber](./zoe-data-types#parsablenumber)**.", "mimetype": "text/plain", "start_char_idx": 15019, "end_char_idx": 15526, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5dfd582-6e9c-4483-bd1c-2e41228dd077": {"__data__": {"id_": "f5dfd582-6e9c-4483-bd1c-2e41228dd077", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18a08a27-5e4f-41b2-831f-70b761b637b2", "node_type": "1", "metadata": {}, "hash": "19294985840f70ddb702a0466399c7e1c508f4856fc5f44ade8419b239110eb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# UserSeat Object", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "18a08a27-5e4f-41b2-831f-70b761b637b2": {"__data__": {"id_": "18a08a27-5e4f-41b2-831f-70b761b637b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5dfd582-6e9c-4483-bd1c-2e41228dd077", "node_type": "1", "metadata": {}, "hash": "612881e822f864ac13c6933eeab150493993ad092aacd25bf62989d1efa9d4f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "229f6e77-8553-4753-8b4c-0a321328b1a0", "node_type": "1", "metadata": {}, "hash": "38e132757cfbbae0f3073925554ee495ce2b892897a8285b65c6e6e87cd8fdcc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Within Zoe, **seats** are used by contracts and users to access or manipulate offers.\nZoe has two kinds of seats. **[ZCFSeats](./zcfseat)**\nare used within contracts and with **zcf** methods. **UserSeats** represent offers external to\nZoe and the contract. The party who exercises an **[Invitation](./zoe-data-types#invitation)** and sends the **offer()** message\nto Zoe gets a **UserSeat** that can check payouts' status or retrieve the result of", "mimetype": "text/plain", "start_char_idx": 19, "end_char_idx": 466, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "229f6e77-8553-4753-8b4c-0a321328b1a0": {"__data__": {"id_": "229f6e77-8553-4753-8b4c-0a321328b1a0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18a08a27-5e4f-41b2-831f-70b761b637b2", "node_type": "1", "metadata": {}, "hash": "19294985840f70ddb702a0466399c7e1c508f4856fc5f44ade8419b239110eb3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15af6a7f-e766-40f7-8ec1-5539e78aa6ca", "node_type": "1", "metadata": {}, "hash": "2166055a8b18b681317250f6fdd470d7a10033deab8cdaffffdce9656f15d152", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "processing the offer in the contract. This varies, but examples\nare a **String** and an **Invitation** for another seat.", "mimetype": "text/plain", "start_char_idx": 467, "end_char_idx": 587, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15af6a7f-e766-40f7-8ec1-5539e78aa6ca": {"__data__": {"id_": "15af6a7f-e766-40f7-8ec1-5539e78aa6ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "229f6e77-8553-4753-8b4c-0a321328b1a0", "node_type": "1", "metadata": {}, "hash": "38e132757cfbbae0f3073925554ee495ce2b892897a8285b65c6e6e87cd8fdcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2", "node_type": "1", "metadata": {}, "hash": "b86f1feb7ef8e446c0e54ce550b817ed0cd8b53ca71d643719ce92c09bd54fcb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Also, a **UserSeat** can be handed to an agent outside Zoe and the contract, letting\nthem query or monitor the current state, access the payouts and result,\nand, if it's allowed for this seat, call **tryExit()**.\n\nTake care when sharing a **UserSeat**, since it includes authority to (attempt to) exit the seat.", "mimetype": "text/plain", "start_char_idx": 589, "end_char_idx": 900, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2": {"__data__": {"id_": "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15af6a7f-e766-40f7-8ec1-5539e78aa6ca", "node_type": "1", "metadata": {}, "hash": "2166055a8b18b681317250f6fdd470d7a10033deab8cdaffffdce9656f15d152", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9acd3be6-50b0-4305-8b14-3d5148977c3c", "node_type": "1", "metadata": {}, "hash": "556f2a3268ea6b6377865f92919c540189a4ebf6e863ec038c0128073257c7fa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "These methods are all documented as returning Promises, since they are always called remotely,\nbut that obscures the fact that they are expected to resolve at semantically different times.\nSome return a value promptly, and others return a promise that won't be fulfilled until the\nseat is exited. **getOfferResult()** resolves at the discretion of the contract. The\ndescriptions below will call out explicitly the cases in which the value is not guaranteed to\nbe resolved promptly.", "mimetype": "text/plain", "start_char_idx": 902, "end_char_idx": 1383, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9acd3be6-50b0-4305-8b14-3d5148977c3c": {"__data__": {"id_": "9acd3be6-50b0-4305-8b14-3d5148977c3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2", "node_type": "1", "metadata": {}, "hash": "b86f1feb7ef8e446c0e54ce550b817ed0cd8b53ca71d643719ce92c09bd54fcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d0f210c-f265-40f1-97f2-92d5b9287c64", "node_type": "1", "metadata": {}, "hash": "78f398965655e7e3a51741acaada898bcda768fb6efb15a882576ee6a6c10c00", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**UserSeat** includes queries for the associated offer's current state\nand an operation to request that the offer exit, as follows:\n\n## E(UserSeat).getProposal()\n\n- Returns: **Promise&lt;ProposalRecord>**", "mimetype": "text/plain", "start_char_idx": 1385, "end_char_idx": 1589, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1d0f210c-f265-40f1-97f2-92d5b9287c64": {"__data__": {"id_": "1d0f210c-f265-40f1-97f2-92d5b9287c64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9acd3be6-50b0-4305-8b14-3d5148977c3c", "node_type": "1", "metadata": {}, "hash": "556f2a3268ea6b6377865f92919c540189a4ebf6e863ec038c0128073257c7fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b1c90ad-dfb4-405b-bf95-f65b5db907c0", "node_type": "1", "metadata": {}, "hash": "14b9466933b8a0ea92a573cf54e76cae5e185cc10d218dd8e06ef0cedd129f0d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **Proposal** is represented by a **ProposalRecord**. It is the rules\naccompanying the escrow of **[Payments](/reference/ertp-api/payment)** dictating what the user expects\nto get back from Zoe. It has keys **give**, **want**, and\n**exit**. **give** and **want** are records with **[Keywords](./zoe-data-types#keyword)** as keys and\n**[Amounts](/reference/ertp-api/ertp-data-types#amount)** as values. If it is compatible with the contract, the", "mimetype": "text/plain", "start_char_idx": 1591, "end_char_idx": 2036, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b1c90ad-dfb4-405b-bf95-f65b5db907c0": {"__data__": {"id_": "0b1c90ad-dfb4-405b-bf95-f65b5db907c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d0f210c-f265-40f1-97f2-92d5b9287c64", "node_type": "1", "metadata": {}, "hash": "78f398965655e7e3a51741acaada898bcda768fb6efb15a882576ee6a6c10c00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12f25b05-f98f-49a6-bb38-cc63d7214129", "node_type": "1", "metadata": {}, "hash": "458ee4fd90796878be74372630511da011017fb2e00462c02f0c342806425330", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "contract tries to satisfy it. If not, the contract kicks the **seat** out.", "mimetype": "text/plain", "start_char_idx": 2037, "end_char_idx": 2111, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12f25b05-f98f-49a6-bb38-cc63d7214129": {"__data__": {"id_": "12f25b05-f98f-49a6-bb38-cc63d7214129", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b1c90ad-dfb4-405b-bf95-f65b5db907c0", "node_type": "1", "metadata": {}, "hash": "14b9466933b8a0ea92a573cf54e76cae5e185cc10d218dd8e06ef0cedd129f0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af1bd818-4145-465d-ada9-9a57a955e36d", "node_type": "1", "metadata": {}, "hash": "aed3eafcb1891e932f47a3b12ddcef8c6122970f8c5990ff0e1f39b314de6ac2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Offer safety is always enforced; if kicked out, the user gets back\nwhat they put in. If the contract attempts to satisfy it, they either\nget what they asked for or Zoe ensures they get back their deposit.\n\nExample:\n\n```js\nconst { want, give, exit } = sellerSeat.getProposal();\n```\n\n## E(UserSeat).getPayouts()\n\n- Returns: **Promise&lt;[PaymentPKeywordRecord](./zoe-data-types#keywordrecord)>**", "mimetype": "text/plain", "start_char_idx": 2113, "end_char_idx": 2506, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "af1bd818-4145-465d-ada9-9a57a955e36d": {"__data__": {"id_": "af1bd818-4145-465d-ada9-9a57a955e36d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12f25b05-f98f-49a6-bb38-cc63d7214129", "node_type": "1", "metadata": {}, "hash": "458ee4fd90796878be74372630511da011017fb2e00462c02f0c342806425330", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4064c16-0384-4af8-9016-af808dd68a04", "node_type": "1", "metadata": {}, "hash": "ba44a83d0278c3021b13c31865545031d8c3dd9f9ba21857c860d46dd5fdc826", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for a [KeywordRecord](./zoe-data-types#keywordrecord) containing **Promises** for all the **Payouts** associated with the **seat**'s offers.\nA **Payout** is a **[Payment](/reference/ertp-api/payment)** that goes to a party in a successful transaction,\nredirecting escrowed assets in accordance with the result of the transaction.\n\nThe promise will be resolved promptly once the seat exits.\n\n## E(UserSeat).getPayout(keyword)", "mimetype": "text/plain", "start_char_idx": 2508, "end_char_idx": 2954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4064c16-0384-4af8-9016-af808dd68a04": {"__data__": {"id_": "c4064c16-0384-4af8-9016-af808dd68a04", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af1bd818-4145-465d-ada9-9a57a955e36d", "node_type": "1", "metadata": {}, "hash": "aed3eafcb1891e932f47a3b12ddcef8c6122970f8c5990ff0e1f39b314de6ac2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd7756f6-3f49-4687-bf39-4843de7e068e", "node_type": "1", "metadata": {}, "hash": "517dcb6b5f7747607b709017ffbcc459e556f0dfabe84051c324d979b952467d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(UserSeat).getPayout(keyword)\n\n- **keyword**: **[Keyword](./zoe-data-types#keyword)**\n- Returns: **Promise&lt;[Payment](/reference/ertp-api/payment)>**\n\nReturns a **Promise** for the **Payout** associated with the _keyword_ argument.\nA **Payout** is a **[Payment](/reference/ertp-api/payment)** that goes to a party in a successful transaction,\nredirecting escrowed assets in accordance with the result of the transaction.\n\nThe promise will be resolved promptly once the seat exits.", "mimetype": "text/plain", "start_char_idx": 2921, "end_char_idx": 3407, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd7756f6-3f49-4687-bf39-4843de7e068e": {"__data__": {"id_": "bd7756f6-3f49-4687-bf39-4843de7e068e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4064c16-0384-4af8-9016-af808dd68a04", "node_type": "1", "metadata": {}, "hash": "ba44a83d0278c3021b13c31865545031d8c3dd9f9ba21857c860d46dd5fdc826", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "920fb742-0525-4546-a363-f33fbf6b0676", "node_type": "1", "metadata": {}, "hash": "f340085355cb4ca552c91871c96443cc3f5fdd9a7342177e84f97c8e80df4457", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(UserSeat).getOfferResult()\n\n- Returns: **Promise&lt;OfferResult>**", "mimetype": "text/plain", "start_char_idx": 3409, "end_char_idx": 3480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "920fb742-0525-4546-a363-f33fbf6b0676": {"__data__": {"id_": "920fb742-0525-4546-a363-f33fbf6b0676", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd7756f6-3f49-4687-bf39-4843de7e068e", "node_type": "1", "metadata": {}, "hash": "517dcb6b5f7747607b709017ffbcc459e556f0dfabe84051c324d979b952467d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c538f1f-61f6-485a-8235-1778c487bb81", "node_type": "1", "metadata": {}, "hash": "c32636e3c54e519bb89ec59849871543a5153ab48b9b95353b54bebfadb84466", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for an **OfferResult**. The **OfferResult** can be any **[Passable](/glossary/#passable)**.\nFor example, in the [Automatic Refund](/guides/zoe/contracts/automatic-refund) example, it's the string \"The offer was accepted\".\nIn the [Covered Call](/guides/zoe/contracts/covered-call) example, it's a call option, which is an assayable **[Invitation](./zoe-data-types#invitation)**\nto buy the underlying asset. Strings and invitations are the most common things returned.", "mimetype": "text/plain", "start_char_idx": 3482, "end_char_idx": 3970, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c538f1f-61f6-485a-8235-1778c487bb81": {"__data__": {"id_": "3c538f1f-61f6-485a-8235-1778c487bb81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "920fb742-0525-4546-a363-f33fbf6b0676", "node_type": "1", "metadata": {}, "hash": "f340085355cb4ca552c91871c96443cc3f5fdd9a7342177e84f97c8e80df4457", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78c094e5-c717-4d37-a9d5-aa8678b82b0d", "node_type": "1", "metadata": {}, "hash": "f8b25980cb43140aa6ab933ff745e73c021865eba4085538c776f613be27cfeb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The value is the result returned by the **offerHandler** function passed\nin the first argument to [`zcf.makeInvitation(...)`](./zoe-contract-facet#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape).", "mimetype": "text/plain", "start_char_idx": 3971, "end_char_idx": 4191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78c094e5-c717-4d37-a9d5-aa8678b82b0d": {"__data__": {"id_": "78c094e5-c717-4d37-a9d5-aa8678b82b0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c538f1f-61f6-485a-8235-1778c487bb81", "node_type": "1", "metadata": {}, "hash": "c32636e3c54e519bb89ec59849871543a5153ab48b9b95353b54bebfadb84466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df8e8e7c-8103-4e56-97b9-d2ea21449d25", "node_type": "1", "metadata": {}, "hash": "02b5a9d8c04411f032d8ef48357d1b17ae8b7e60cbfe61dffeaec47a1c7d7679", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Since the contract can return whatever it wants as an offer result, there is no guarantee that the\npromise will resolve promptly.\n\n## E(UserSeat).hasExited()\n\n- Returns: **Promise&lt;Boolean>**\n\nReturns **true** if the seat has exited, **false** if it's still active. The value is returned\npromptly.\n\nIf you want to take some action when the seat does exit, use **getExitSubscriber()** and call", "mimetype": "text/plain", "start_char_idx": 4193, "end_char_idx": 4587, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "df8e8e7c-8103-4e56-97b9-d2ea21449d25": {"__data__": {"id_": "df8e8e7c-8103-4e56-97b9-d2ea21449d25", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78c094e5-c717-4d37-a9d5-aa8678b82b0d", "node_type": "1", "metadata": {}, "hash": "f8b25980cb43140aa6ab933ff745e73c021865eba4085538c776f613be27cfeb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "094ff33b-ec22-4b2f-9145-76255d9c5d86", "node_type": "1", "metadata": {}, "hash": "f7e22dee5207e2ffcc0c664caabd685d7df63fa024fb0bebb919e5f5ef814c07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```\nconst subscriber = E(seat).getExitSubscriber();\nE.when(E(subscriber).getUpdateSince(), () => takeAction());\n```\n\nThe eventual send to the subscriber will survive upgrade of the contract. Waiting on any of the\npromises would be broken in the case of a contract upgrade.\n\n## E(UserSeat).tryExit()\n\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 4589, "end_char_idx": 4905, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "094ff33b-ec22-4b2f-9145-76255d9c5d86": {"__data__": {"id_": "094ff33b-ec22-4b2f-9145-76255d9c5d86", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df8e8e7c-8103-4e56-97b9-d2ea21449d25", "node_type": "1", "metadata": {}, "hash": "02b5a9d8c04411f032d8ef48357d1b17ae8b7e60cbfe61dffeaec47a1c7d7679", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "163886e6-60e5-4786-8bd8-8b4441aff54e", "node_type": "1", "metadata": {}, "hash": "0d3c4117a19e91c308c7a49374aa801c93bb6754c142ea74d9183a536e44c670", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: None.\n\nNote: Only works if the **seat**'s **proposal** has an **OnDemand** **exit** clause.\nZoe's offer-safety guarantee applies no matter how a **seat**'s interaction with\na contract ends. Under normal\ncircumstances, the participant might be able to call **tryExit()**, or the\ncontract might do something explicitly. On exiting, the seat holder\ngets its current **[Allocation](./zoe-data-types#allocation)** and the **seat** can no longer interact with the contract.", "mimetype": "text/plain", "start_char_idx": 4889, "end_char_idx": 5367, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "163886e6-60e5-4786-8bd8-8b4441aff54e": {"__data__": {"id_": "163886e6-60e5-4786-8bd8-8b4441aff54e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "094ff33b-ec22-4b2f-9145-76255d9c5d86", "node_type": "1", "metadata": {}, "hash": "f7e22dee5207e2ffcc0c664caabd685d7df63fa024fb0bebb919e5f5ef814c07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "768d53f9-5962-4a72-8037-1421e9dbab3f", "node_type": "1", "metadata": {}, "hash": "745e83ce2975f5f4abfd0bcadb0751ef632011eec22748d064893af59fe24ca4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(UserSeat).numWantsSatisfied()\n\n- Returns: **Promise&lt;Number>**\n\nReturns a **Promise** for a number which indicates the result of the exited **Proposal**, as described below:", "mimetype": "text/plain", "start_char_idx": 5369, "end_char_idx": 5549, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "768d53f9-5962-4a72-8037-1421e9dbab3f": {"__data__": {"id_": "768d53f9-5962-4a72-8037-1421e9dbab3f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "163886e6-60e5-4786-8bd8-8b4441aff54e", "node_type": "1", "metadata": {}, "hash": "0d3c4117a19e91c308c7a49374aa801c93bb6754c142ea74d9183a536e44c670", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d209a822-02f5-409e-b348-74fdf5f471a7", "node_type": "1", "metadata": {}, "hash": "0627078dbe9cba51eae699cb0fc658522520c9d5a15e6ae0b125522e6e9b4102", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "| Number Returned | Description                                                                              |\n| --------------- | ---------------------------------------------------------------------------------------- |\n| 0               | The user didn't get what they wanted from the **Proposal**, so their offer was refunded. |\n| 1               | The user got what they wanted from the **Proposal**, so their offer is spent & gone.     |\n\nThis promise will be resolved promptly once the seat exits.", "mimetype": "text/plain", "start_char_idx": 5551, "end_char_idx": 6055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d209a822-02f5-409e-b348-74fdf5f471a7": {"__data__": {"id_": "d209a822-02f5-409e-b348-74fdf5f471a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_user-seat.md", "node_type": "4", "metadata": {}, "hash": "40ac3df505d9e5f3452077ea5dd66353a2d6075d8d899449d377e348ad9b7a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "768d53f9-5962-4a72-8037-1421e9dbab3f", "node_type": "1", "metadata": {}, "hash": "745e83ce2975f5f4abfd0bcadb0751ef632011eec22748d064893af59fe24ca4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(UserSeat).getExitSubscriber()\n\n- Returns: **Promise&lt;Subscriber>**\n\nReturns a **Promise** for the **Subscriber** for the seat.\n\n## E(UserSeat).getFinalAllocation()\n\n- Returns: **Promise&lt;[Allocation](./zoe-data-types#allocation)>**\n\nReturns a **Promise** for the **Allocation** when the **UserSeat** exits the **proposal**.\nThis promise will be resolved promptly once the seat exits.", "mimetype": "text/plain", "start_char_idx": 6057, "end_char_idx": 6449, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "507655e6-0116-4a68-8789-9fe7ab1ac23a": {"__data__": {"id_": "507655e6-0116-4a68-8789-9fe7ab1ac23a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfmint.md", "node_type": "4", "metadata": {}, "hash": "7ee0edbb3d6aa64240a7b74510b754f2c199b4671e213e8ab2fd15fac84dacaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b060d2d-6ced-4a4b-8cd7-19a774d76dac", "node_type": "1", "metadata": {}, "hash": "403dbf7ea1a7228bd5fe76c9682ee5470350c4428c11a457ce2bdc667701261a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ZCFMint Object\n\nAn object used by the **[Zoe Contract Facet](./zoe-contract-facet)** to issue digital assets. It's\nvery similar to the **[Mint](/reference/ertp-api/mint)** object, but it has a more limited set of\nmethods.\n\n**ZCFMints** are created and returned by **Zoe Contract Facet's** **[zcf.makeZCFMint()](./zoe-contract-facet#zcf-makezcfmint-keyword-assetkind-displayinfo)** method.\n\n## aZCFMint.getIssuerRecord()\n\n- Returns: **IssuerRecord**", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 450, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b060d2d-6ced-4a4b-8cd7-19a774d76dac": {"__data__": {"id_": "6b060d2d-6ced-4a4b-8cd7-19a774d76dac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfmint.md", "node_type": "4", "metadata": {}, "hash": "7ee0edbb3d6aa64240a7b74510b754f2c199b4671e213e8ab2fd15fac84dacaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "507655e6-0116-4a68-8789-9fe7ab1ac23a", "node_type": "1", "metadata": {}, "hash": "8f7210f09961aa8495c7c40d1347fd9946f932f021a2b029be3cdcc7a22c9cdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e14cc516-0ab9-4d12-bda9-8f02f02f84ac", "node_type": "1", "metadata": {}, "hash": "ce4879250df61c864a9231a87495693491f385b5957531f60cc36aa15510aa08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **IssuerRecord**\n\nReturns an **IssuerRecord** containing the **[Issuer](/reference/ertp-api/issuer)** and\n**[Brand](/reference/ertp-api/brand)** associated with the **zcfMint**.\n\n## aZCFMint.mintGains(gains, zcfSeat?)\n\n- **gains**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- **zcfSeat**: **[ZCFSeat](./zcfseat)** - Optional.\n- Returns: **ZCFSeat**", "mimetype": "text/plain", "start_char_idx": 423, "end_char_idx": 798, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e14cc516-0ab9-4d12-bda9-8f02f02f84ac": {"__data__": {"id_": "e14cc516-0ab9-4d12-bda9-8f02f02f84ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfmint.md", "node_type": "4", "metadata": {}, "hash": "7ee0edbb3d6aa64240a7b74510b754f2c199b4671e213e8ab2fd15fac84dacaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b060d2d-6ced-4a4b-8cd7-19a774d76dac", "node_type": "1", "metadata": {}, "hash": "403dbf7ea1a7228bd5fe76c9682ee5470350c4428c11a457ce2bdc667701261a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe49fc9e-b6eb-4405-b57e-b9a35f107013", "node_type": "1", "metadata": {}, "hash": "2f379e3482201d6852b917d3d9e060906941a806668737e36bb8dab6eb855769", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All **amounts** in _gains_ must be of this **ZCFMint**'s **[Brand](/reference/ertp-api/brand)**\nand the _gains_' **[Keywords](./zoe-data-types#keyword)** should be defined by the contract instance in which _zcfSeat_ is participating.\nIf _zcfSeat_ is not provided, a new **seat** is used.\nMints the _gains_ **Amount** of assets and adds them to _zcfSeat_'s **[Allocation](./zoe-data-types#allocation)**, then returns _zcfSeat_.\n\n## aZCFMint.burnLosses(losses, zcfSeat)", "mimetype": "text/plain", "start_char_idx": 800, "end_char_idx": 1267, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fe49fc9e-b6eb-4405-b57e-b9a35f107013": {"__data__": {"id_": "fe49fc9e-b6eb-4405-b57e-b9a35f107013", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfmint.md", "node_type": "4", "metadata": {}, "hash": "7ee0edbb3d6aa64240a7b74510b754f2c199b4671e213e8ab2fd15fac84dacaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e14cc516-0ab9-4d12-bda9-8f02f02f84ac", "node_type": "1", "metadata": {}, "hash": "ce4879250df61c864a9231a87495693491f385b5957531f60cc36aa15510aa08", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77c17476-4707-4814-be0e-8fa48a4b2da0", "node_type": "1", "metadata": {}, "hash": "9184b95d99a0b054681e73a86b79aab9260370fe4d8324411bfcf6061e1bded9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **losses**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- **zcfSeat**: **[ZCFSeat](./zcfseat)**\n- Returns: None", "mimetype": "text/plain", "start_char_idx": 1269, "end_char_idx": 1396, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77c17476-4707-4814-be0e-8fa48a4b2da0": {"__data__": {"id_": "77c17476-4707-4814-be0e-8fa48a4b2da0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfmint.md", "node_type": "4", "metadata": {}, "hash": "7ee0edbb3d6aa64240a7b74510b754f2c199b4671e213e8ab2fd15fac84dacaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe49fc9e-b6eb-4405-b57e-b9a35f107013", "node_type": "1", "metadata": {}, "hash": "2f379e3482201d6852b917d3d9e060906941a806668737e36bb8dab6eb855769", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All **amounts** in _losses_ must be of this **ZCFMint**'s **[Brand](/reference/ertp-api/brand)**\nand the _losses_' **[Keywords](./zoe-data-types#keyword)** must be defined by the contract instance in which _zcfSeat_ is participating.\nSubtracts _losses_ from _zcfSeat_'s **[Allocation](./zoe-data-types#allocation)**, then\nburns that **amount** from the assets escrowed by Zoe for this contract instance.", "mimetype": "text/plain", "start_char_idx": 1398, "end_char_idx": 1801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d11636f-1f01-4d57-a63a-cd2e3ed83750": {"__data__": {"id_": "9d11636f-1f01-4d57-a63a-cd2e3ed83750", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60", "node_type": "1", "metadata": {}, "hash": "50036f893e169fd938dd0a0680c0eeefe70020441b6a45f1197cc8a22403fa80", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ZCFSeat Object\n\nZoe uses **seats** to access or manipulate offers. Seats represent active offers and let\ncontracts and users interact with them. Two kinds of seats represent a single\nposition. **ZCFSeats** are used within contracts and with **zcf** methods. **UserSeats**\nrepresent offers outside the contract. The two facets provide access to the same allocation,\nand changes made from either side affect both.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 413, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60": {"__data__": {"id_": "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d11636f-1f01-4d57-a63a-cd2e3ed83750", "node_type": "1", "metadata": {}, "hash": "4489bed722ef437a6c0df2a887da526eca86d6f1f647f58b026e51cb09dc8156", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b44113e-1f24-4cb0-ab01-e566f2962f3d", "node_type": "1", "metadata": {}, "hash": "ce00aa730b2054c4991524f8c20fda56929ab80624c25a70016efd8f51afd032", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **ZCFSeat** includes synchronous queries for the current state of the\nassociated offer, such as the amounts of assets that are currently\nassigned to the **ZCFSeat** Object. It also includes synchronous operations\nto manipulate the offer. The queries and operations are as follows:\n\n## aZCFSeat.getSubscriber()\n\n- Returns: **Subscriber**\n\nReturns the **Subscriber** for the seat.\n\n## aZCFSeat.getProposal()\n\n- Returns: **ProposalRecord**", "mimetype": "text/plain", "start_char_idx": 415, "end_char_idx": 853, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b44113e-1f24-4cb0-ab01-e566f2962f3d": {"__data__": {"id_": "7b44113e-1f24-4cb0-ab01-e566f2962f3d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60", "node_type": "1", "metadata": {}, "hash": "50036f893e169fd938dd0a0680c0eeefe70020441b6a45f1197cc8a22403fa80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f447f9c9-3f70-48a6-8706-e8c85112072d", "node_type": "1", "metadata": {}, "hash": "6ad6a291e2bc4b9a68e6ea2d534338ddba213a69aada2bb8806ab6390679c7b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **Proposal** is represented by a **ProposalRecord**. It is the rules\naccompanying the escrow of **payments** dictating what the user expects\nto get back from Zoe. It has keys **give**, **want**, and\n**exit**. **give** and **want** are records with **[Keywords](./zoe-data-types#keyword)** as keys and\n**[Amounts](/reference/ertp-api/ertp-data-types#amount)** as values. The **proposal** is a user's understanding of the\ncontract that they are entering when they make an offer. See", "mimetype": "text/plain", "start_char_idx": 855, "end_char_idx": 1337, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f447f9c9-3f70-48a6-8706-e8c85112072d": {"__data__": {"id_": "f447f9c9-3f70-48a6-8706-e8c85112072d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b44113e-1f24-4cb0-ab01-e566f2962f3d", "node_type": "1", "metadata": {}, "hash": "ce00aa730b2054c4991524f8c20fda56929ab80624c25a70016efd8f51afd032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10bb00d5-7a01-4015-9d51-a6500899b27d", "node_type": "1", "metadata": {}, "hash": "66672d16845fe3e9c7237796f493e04149682d670e171b878f2ec7a0534feb02", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[`E(zoe).offer(...)`](./zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs) for full details.", "mimetype": "text/plain", "start_char_idx": 1338, "end_char_idx": 1448, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10bb00d5-7a01-4015-9d51-a6500899b27d": {"__data__": {"id_": "10bb00d5-7a01-4015-9d51-a6500899b27d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f447f9c9-3f70-48a6-8706-e8c85112072d", "node_type": "1", "metadata": {}, "hash": "6ad6a291e2bc4b9a68e6ea2d534338ddba213a69aada2bb8806ab6390679c7b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c08f434-0e1b-4b0f-8158-42610e59cdea", "node_type": "1", "metadata": {}, "hash": "f45783911fb1c42d29cd67fd9f30fc40cd5827dae419f06bcec10043670e71cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Example:\n\n```js\nconst { want, give, exit } = sellerSeat.getProposal();\n```\n\n## aZCFSeat.exit(completion)\n\n- **completion**: **Object**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 1450, "end_char_idx": 1603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c08f434-0e1b-4b0f-8158-42610e59cdea": {"__data__": {"id_": "0c08f434-0e1b-4b0f-8158-42610e59cdea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10bb00d5-7a01-4015-9d51-a6500899b27d", "node_type": "1", "metadata": {}, "hash": "66672d16845fe3e9c7237796f493e04149682d670e171b878f2ec7a0534feb02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827", "node_type": "1", "metadata": {}, "hash": "78ee2694f12bc0485ac9a9b45ec7c02dd6803244954244854b64a5ffb0bacf9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Causes the **seat** to exit, preventing further changes to its allocation. All **payouts**,\nif any, are made, and the **seat** object can no longer interact with the contract. The\n**completion** argument is usually a string, but this is not required. Its only use is for\nthe notification sent to the corresponding **UserSeat**'s\n**[exitSubscriber.](./user-seat#e-userseat-getexitsubscriber)** Any other still open\nseats or outstanding promises and the contract instance continue.", "mimetype": "text/plain", "start_char_idx": 1605, "end_char_idx": 2084, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827": {"__data__": {"id_": "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c08f434-0e1b-4b0f-8158-42610e59cdea", "node_type": "1", "metadata": {}, "hash": "f45783911fb1c42d29cd67fd9f30fc40cd5827dae419f06bcec10043670e71cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf", "node_type": "1", "metadata": {}, "hash": "6b905dd455bcf0b2a869b81b57105e98cdb46c2a02df2a25a50de8e67fe13bfb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note**: You should not use **aZCFSeat.exit()** when exiting with an error. Use the method **[aZCFSeat.fail()](#azcfseat-fail-msg)** instead.\n\n## aZCFSeat.fail(msg)\n\n- **msg**: **String**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 2086, "end_char_idx": 2291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf": {"__data__": {"id_": "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827", "node_type": "1", "metadata": {}, "hash": "78ee2694f12bc0485ac9a9b45ec7c02dd6803244954244854b64a5ffb0bacf9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2827a890-94ca-44fe-ab47-241a03e09f7f", "node_type": "1", "metadata": {}, "hash": "5abd39dc8f5f9d2e486b41a56209c8ab51694df20fd31b8fd6fa8dd6f50024ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **seat** exits, displaying the optional **msg** string, if there is one, on the console.\nThis is equivalent to exiting, except that **exit** is successful while\n**ZCFSeat.fail()** signals an error occurred while processing the offer. The contract\nstill gets its current **allocation** and the **seat** can no longer interact with the contract.\nAny other still open seats or outstanding promises and the contract instance continue.\n\nAgoric recommends you exit a seat with an error as follows", "mimetype": "text/plain", "start_char_idx": 2293, "end_char_idx": 2787, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2827a890-94ca-44fe-ab47-241a03e09f7f": {"__data__": {"id_": "2827a890-94ca-44fe-ab47-241a03e09f7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf", "node_type": "1", "metadata": {}, "hash": "6b905dd455bcf0b2a869b81b57105e98cdb46c2a02df2a25a50de8e67fe13bfb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faa69621-4e74-4f09-a550-48563091ffe3", "node_type": "1", "metadata": {}, "hash": "066e2876dbdf132971b6273d631305104d73409a79f39a6551e17925e630e895", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nthrow seat.fail(Error('you did it wrong'));\n```\n\n## aZCFSeat.hasExited()\n\n- Returns: **Boolean**\n\nReturns **true** if the **ZCFSeat** has exited, **false** if it is still active.\n\n## aZCFSeat.getAmountAllocated(keyword, brand)\n\n- **keyword**: **[Keyword](./zoe-data-types#keyword)**\n- **brand**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **[Amount](/reference/ertp-api/ertp-data-types#amount)**", "mimetype": "text/plain", "start_char_idx": 2789, "end_char_idx": 3197, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "faa69621-4e74-4f09-a550-48563091ffe3": {"__data__": {"id_": "faa69621-4e74-4f09-a550-48563091ffe3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2827a890-94ca-44fe-ab47-241a03e09f7f", "node_type": "1", "metadata": {}, "hash": "5abd39dc8f5f9d2e486b41a56209c8ab51694df20fd31b8fd6fa8dd6f50024ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79a36fa9-259c-40db-bccd-a86fb486eaaf", "node_type": "1", "metadata": {}, "hash": "26259617e43d5afe5bc2aae60cd058360481fbb764da2397df756e809c5c3b8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns the **Amount** from the part of the **[Allocation](./zoe-data-types#allocation)** that matches the\n_keyword_ and _brand_. If the _keyword_ is not in the **Allocation**, it\nreturns an empty **Amount** of the _brand_ argument. (After\n**aZCFSeat.exit()** has been called, it continues to report the final allocation balance,\nwhich was transferred to a payout.)", "mimetype": "text/plain", "start_char_idx": 3199, "end_char_idx": 3564, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79a36fa9-259c-40db-bccd-a86fb486eaaf": {"__data__": {"id_": "79a36fa9-259c-40db-bccd-a86fb486eaaf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faa69621-4e74-4f09-a550-48563091ffe3", "node_type": "1", "metadata": {}, "hash": "066e2876dbdf132971b6273d631305104d73409a79f39a6551e17925e630e895", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "985d008c-16e5-4649-b52e-bc5b7b0350e8", "node_type": "1", "metadata": {}, "hash": "8a0986f6f45400eb5fa4f9cfc7e23d52bab2862b476a9dd67278990328068f56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is similar to the next method, **getCurrentAllocation()**. **getAmountAllocated()**\ngets the **Allocation** of one **Keyword** at a time, while **getCurrentAllocation()** returns\nall the current **Allocations** at once.\n\n## aZCFSeat.getCurrentAllocation()\n\n- Returns: **[Allocation](./zoe-data-types#allocation)**", "mimetype": "text/plain", "start_char_idx": 3566, "end_char_idx": 3884, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "985d008c-16e5-4649-b52e-bc5b7b0350e8": {"__data__": {"id_": "985d008c-16e5-4649-b52e-bc5b7b0350e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79a36fa9-259c-40db-bccd-a86fb486eaaf", "node_type": "1", "metadata": {}, "hash": "26259617e43d5afe5bc2aae60cd058360481fbb764da2397df756e809c5c3b8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f561039b-42ab-46b6-ba55-b46755f33fc3", "node_type": "1", "metadata": {}, "hash": "2032262add55faa2e63635b137c09c670b1b3e44eb0164be54af312cb475fcac", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "An **Allocation** is an **AmountKeywordRecord** of key-value pairs where\nthe key is a **[Keyword](./zoe-data-types#keyword)** such as **Asset** or **Price** applicable to the\ncontract. The value is an **[Amount](/reference/ertp-api/ertp-data-types#amount)** with its **value** and **brand**.", "mimetype": "text/plain", "start_char_idx": 3886, "end_char_idx": 4177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f561039b-42ab-46b6-ba55-b46755f33fc3": {"__data__": {"id_": "f561039b-42ab-46b6-ba55-b46755f33fc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "985d008c-16e5-4649-b52e-bc5b7b0350e8", "node_type": "1", "metadata": {}, "hash": "8a0986f6f45400eb5fa4f9cfc7e23d52bab2862b476a9dd67278990328068f56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72e6809a-45b7-41d8-84d0-0ddca9edc184", "node_type": "1", "metadata": {}, "hash": "ff2d2ded1ea839e8284756e68dd1c4ed83adda047475fb95dd82dcd202e4d3c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Allocations** represent the **Amounts** to be paid\nout to each **seat** on exit. (After\n**exit()** has been called, the final allocation balances, which were transferred to\npayouts, continue to be reported.)\nNormal reasons for exiting are the user requesting to exit or the contract\nexplicitly choosing to close out the **seat**. The guarantees also hold if the contract\nencounters an error or misbehaves. There are several methods for finding out\nwhat **amount** a current **allocation** is.", "mimetype": "text/plain", "start_char_idx": 4179, "end_char_idx": 4673, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "72e6809a-45b7-41d8-84d0-0ddca9edc184": {"__data__": {"id_": "72e6809a-45b7-41d8-84d0-0ddca9edc184", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f561039b-42ab-46b6-ba55-b46755f33fc3", "node_type": "1", "metadata": {}, "hash": "2032262add55faa2e63635b137c09c670b1b3e44eb0164be54af312cb475fcac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d59534f4-6311-4b0e-a743-e143d2566df9", "node_type": "1", "metadata": {}, "hash": "da311b7997ec7df3b6084d80b6ae9f9c16bf0f0d62c0c4581459ed5f9d231b60", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is similar to the previous method, **getAmountAllocated()**. **getAmountAllocated()**\ngets the **allocation** of one keyword at a time, while **getCurrentAllocation()** returns\nall the current **allocations** at once.\n\nAn **Allocation** example:\n\n```js\n{\n  Asset: AmountMath.make(quatloosBrand, 5n),\n  Price: AmountMath.make(quatloosBrand, 9n)\n}\n```\n\n## aZCFSeat.isOfferSafe(newAllocation)\n\n- **newAllocation**: **[Allocation](./zoe-data-types#allocation)**\n- Returns **Boolean**", "mimetype": "text/plain", "start_char_idx": 4675, "end_char_idx": 5159, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d59534f4-6311-4b0e-a743-e143d2566df9": {"__data__": {"id_": "d59534f4-6311-4b0e-a743-e143d2566df9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72e6809a-45b7-41d8-84d0-0ddca9edc184", "node_type": "1", "metadata": {}, "hash": "ff2d2ded1ea839e8284756e68dd1c4ed83adda047475fb95dd82dcd202e4d3c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78bae0eb-0efc-47d7-b2b1-dad51a140ac5", "node_type": "1", "metadata": {}, "hash": "e2ad97f41f111f6cdbd52ab46e2f33699f9a47c0c719b11bb3769169de8829e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Takes an **allocation** as an argument and returns **true** if that **allocation**\nsatisfies offer safety, **false** if it doesn't. Essentially, it checks\n**newAllocation** for offer safety, against the **seat**'s **proposal**.\nIt checks whether **newAllocation** fully satisfies\n**proposal.give** (giving a refund) or whether it fully satisfies\n**proposal.want**. Both can be fully satisfied. See the ZoeHelper\n[**satisfies()**](./zoe-helpers#satisfies-zcf-seat-update) method for more details.", "mimetype": "text/plain", "start_char_idx": 5161, "end_char_idx": 5656, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78bae0eb-0efc-47d7-b2b1-dad51a140ac5": {"__data__": {"id_": "78bae0eb-0efc-47d7-b2b1-dad51a140ac5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d59534f4-6311-4b0e-a743-e143d2566df9", "node_type": "1", "metadata": {}, "hash": "da311b7997ec7df3b6084d80b6ae9f9c16bf0f0d62c0c4581459ed5f9d231b60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83b468cb-18c0-4008-aa82-6ac7cc3a0b04", "node_type": "1", "metadata": {}, "hash": "3ff4385b216482d054c4bd289fca29be9b9850f68d4e8c010ef5d096394b3fe0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: warning DEPRECATED\n\n## aZCFSeat.getStagedAllocation()\n\n- Returns: **[Allocation](./zoe-data-types#allocation)**\n\nGets and returns the **stagedAllocation**, which is the **Allocation** committed if the seat is\nreallocated over, if offer safety holds, and rights are conserved.\n\n**Note**: This method has been deprecated. Use **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** instead.\n:::\n\n::: warning DEPRECATED\n\n## aZCFSeat.hasStagedAllocation()\n\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 5658, "end_char_idx": 6150, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83b468cb-18c0-4008-aa82-6ac7cc3a0b04": {"__data__": {"id_": "83b468cb-18c0-4008-aa82-6ac7cc3a0b04", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78bae0eb-0efc-47d7-b2b1-dad51a140ac5", "node_type": "1", "metadata": {}, "hash": "e2ad97f41f111f6cdbd52ab46e2f33699f9a47c0c719b11bb3769169de8829e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1804d37d-492f-40ea-ad50-b7ddd7f53fb3", "node_type": "1", "metadata": {}, "hash": "3cef2d0f8b514736a843418be4c2e78983795218f471ac7adf2e64a91df78e61", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **Boolean**\n\nReturns **true** if there is a staged allocation, i.e., whether **ZCFSeat.incrementBy()** or\n**ZCFSeat.decrementBy()** has been called and **ZCFSeat.clear()**\nand **reallocate()** have not. Otherwise returns **false**.\n\n**Note**: This method has been deprecated. Use **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** instead.\n:::\n\n::: warning DEPRECATED\n\n## aZCFSeat.incrementBy(amountKeywordRecord)", "mimetype": "text/plain", "start_char_idx": 6128, "end_char_idx": 6570, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1804d37d-492f-40ea-ad50-b7ddd7f53fb3": {"__data__": {"id_": "1804d37d-492f-40ea-ad50-b7ddd7f53fb3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83b468cb-18c0-4008-aa82-6ac7cc3a0b04", "node_type": "1", "metadata": {}, "hash": "3ff4385b216482d054c4bd289fca29be9b9850f68d4e8c010ef5d096394b3fe0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1c966fa-843c-44e6-867b-92f49fb76f4a", "node_type": "1", "metadata": {}, "hash": "3e51bd32c3a9db5a4ca507a2233d563966f8e3f5b0fdf4f895ac369d81da1932", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **amountKeywordRecord**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- Returns: **AmountKeyRecord**\n\nAdds the **amountKeywordRecord** argument to the **ZCFseat**'s staged allocation and returns the\nsame **amountKeywordRecord** so it can be reused in another call. Note that this lets\n**zcfSeat1.incrementBy(zcfSeat2.decrementBy(amountKeywordRecord))** work as a usage pattern.", "mimetype": "text/plain", "start_char_idx": 6572, "end_char_idx": 6964, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a1c966fa-843c-44e6-867b-92f49fb76f4a": {"__data__": {"id_": "a1c966fa-843c-44e6-867b-92f49fb76f4a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1804d37d-492f-40ea-ad50-b7ddd7f53fb3", "node_type": "1", "metadata": {}, "hash": "3cef2d0f8b514736a843418be4c2e78983795218f471ac7adf2e64a91df78e61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0272bf36-d8ee-400c-a5bf-105377d1245f", "node_type": "1", "metadata": {}, "hash": "9f5d42a4c540865e588cdc4f7301bb7c6a3402783c7cb210414578b8f25a7786", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that you can add amounts to original or staged allocations which do not have the\nspecified **[Keyword](./zoe-data-types#keyword)** for the amount. The result is for the **Keyword** and amount to become part\nof the allocation. For example, if we start with a new, empty, allocation:", "mimetype": "text/plain", "start_char_idx": 6966, "end_char_idx": 7252, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0272bf36-d8ee-400c-a5bf-105377d1245f": {"__data__": {"id_": "0272bf36-d8ee-400c-a5bf-105377d1245f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1c966fa-843c-44e6-867b-92f49fb76f4a", "node_type": "1", "metadata": {}, "hash": "3e51bd32c3a9db5a4ca507a2233d563966f8e3f5b0fdf4f895ac369d81da1932", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9dd1b78-9476-4802-a430-197776dc99ba", "node_type": "1", "metadata": {}, "hash": "50593c1d748d8e1b9575f83c8a0de9cdf0c9b3103f707d29368dc8acf7aeeab5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Make an empty seat.\nconst { zcfSeat: zcfSeat1 } = zcf.makeEmptySeatKit();\n// The allocation is currently empty, i.e. `{}`\nconst stagedAllocation = zcfSeat1.getStagedAllocation();\nconst empty = AmountMath.makeEmpty(brand, AssetKind.NAT);\n// Try to incrementBy empty. This succeeds, and the keyword is added\n// with an empty amount.\nzcfSeat1.incrementBy({ IST: empty });\nt.deepEqual(zcfSeat1.getStagedAllocation(), { IST: empty });\n```", "mimetype": "text/plain", "start_char_idx": 7254, "end_char_idx": 7696, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9dd1b78-9476-4802-a430-197776dc99ba": {"__data__": {"id_": "e9dd1b78-9476-4802-a430-197776dc99ba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0272bf36-d8ee-400c-a5bf-105377d1245f", "node_type": "1", "metadata": {}, "hash": "9f5d42a4c540865e588cdc4f7301bb7c6a3402783c7cb210414578b8f25a7786", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1", "node_type": "1", "metadata": {}, "hash": "c737f2327b0694994d91926750bb26ac04005c5791200bf66a26d1f811468aea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "While this incremented the allocation by an empty amount, any amount would have been added to the\nallocation in the same way.\n\n**Note**: This method has been deprecated. Use **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** instead.\n:::\n\n::: warning DEPRECATED\n\n## aZCFSeat.decrementBy(amountKeywordRecord)\n\n- **amountKeywordRecord**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- Returns: **AmountKeywordRecord**", "mimetype": "text/plain", "start_char_idx": 7698, "end_char_idx": 8144, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1": {"__data__": {"id_": "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9dd1b78-9476-4802-a430-197776dc99ba", "node_type": "1", "metadata": {}, "hash": "50593c1d748d8e1b9575f83c8a0de9cdf0c9b3103f707d29368dc8acf7aeeab5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36c1e7c5-2440-4792-8666-3a37ca44497f", "node_type": "1", "metadata": {}, "hash": "58b8cce410a86bea479c57a28c00d74b639fc8e9aa2a3a6801f251ae4a8afaa8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Subtracts the **amountKeywordRecord** argument from the **ZCFseat**'s staged allocation and returns the\nsame **amountKeywordRecord** so it can be used in another call. Note that this lets\n**zcfSeat1.incrementBy(zcfSeat2.decrementBy(amountKeywordRecord))** work as a usage pattern.\n\nThe amounts to subtract cannot be greater than the staged allocation (i.e., negative\nresults are not allowed).", "mimetype": "text/plain", "start_char_idx": 8146, "end_char_idx": 8538, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36c1e7c5-2440-4792-8666-3a37ca44497f": {"__data__": {"id_": "36c1e7c5-2440-4792-8666-3a37ca44497f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1", "node_type": "1", "metadata": {}, "hash": "c737f2327b0694994d91926750bb26ac04005c5791200bf66a26d1f811468aea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b58ad44f-f800-4d2f-9800-2486c77df8ac", "node_type": "1", "metadata": {}, "hash": "18ab5045b7fc5e57972ced9e5df93924c4a27330cc18a1096726e5c4a7f378a1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**decrementBy()** has different behavior from **incrementBy()** if the original or staged allocation\ndoes not have the **[Keyword](./zoe-data-types#keyword)** specified for an amount in the **amountKeywordRecord** argument. There are two\ncases to look at; when the corresponding amount to subtract is empty and when it isn't.", "mimetype": "text/plain", "start_char_idx": 8540, "end_char_idx": 8865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b58ad44f-f800-4d2f-9800-2486c77df8ac": {"__data__": {"id_": "b58ad44f-f800-4d2f-9800-2486c77df8ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36c1e7c5-2440-4792-8666-3a37ca44497f", "node_type": "1", "metadata": {}, "hash": "58b8cce410a86bea479c57a28c00d74b639fc8e9aa2a3a6801f251ae4a8afaa8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9", "node_type": "1", "metadata": {}, "hash": "5b6c4b53ac4d750d72ba8553122e6a065814b766507e240e37c27a2c4fd0add4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Make an empty seat.\nconst { zcfSeat: zcfSeat1 } = zcf.makeEmptySeatKit();\n// The allocation is currently {}\nconst stagedAllocation = zcfSeat1.getStagedAllocation();\nconst empty = AmountMath.makeEmpty(brand, AssetKind.NAT);\n// decrementBy empty does not throw, and does not add a keyword\nzcfSeat1.decrementBy({ IST: empty });\nt.deepEqual(zcfSeat1.getStagedAllocation(), {});\n```", "mimetype": "text/plain", "start_char_idx": 8867, "end_char_idx": 9253, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9": {"__data__": {"id_": "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b58ad44f-f800-4d2f-9800-2486c77df8ac", "node_type": "1", "metadata": {}, "hash": "18ab5045b7fc5e57972ced9e5df93924c4a27330cc18a1096726e5c4a7f378a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71dc7d12-7442-4cf3-aa7c-891dcbde34ce", "node_type": "1", "metadata": {}, "hash": "3ba17d6783796b4a0425d73e5a636a98386f550c6f703e18a907b759dfcd35d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The result here is **not** to add the **Keyword** to the allocation. It wasn't there to begin with, and\nthe operation was to try to subtract it from the allocation. Subtracting something that's not there\ndoes not add it to the original value. For example, if I tell you I'm taking away the Mona Lisa from\nyou and you are not the Louvre and don't have it, you still don't have it after I try to take it away.\nIn the above example, trying to take away an empty amount from an empty allocation is effectively a", "mimetype": "text/plain", "start_char_idx": 9255, "end_char_idx": 9762, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71dc7d12-7442-4cf3-aa7c-891dcbde34ce": {"__data__": {"id_": "71dc7d12-7442-4cf3-aa7c-891dcbde34ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9", "node_type": "1", "metadata": {}, "hash": "5b6c4b53ac4d750d72ba8553122e6a065814b766507e240e37c27a2c4fd0add4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e4a4ef1-d782-4e3b-8132-dd7847d4c895", "node_type": "1", "metadata": {}, "hash": "d4d237f5bd8050ec7eb15276bb48c43e458e35a972e637256559c8ab09eb8d42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "null operation; the allocation is still empty, didn't add the new **Keyword**, and no error is thrown.", "mimetype": "text/plain", "start_char_idx": 9763, "end_char_idx": 9865, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5e4a4ef1-d782-4e3b-8132-dd7847d4c895": {"__data__": {"id_": "5e4a4ef1-d782-4e3b-8132-dd7847d4c895", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71dc7d12-7442-4cf3-aa7c-891dcbde34ce", "node_type": "1", "metadata": {}, "hash": "3ba17d6783796b4a0425d73e5a636a98386f550c6f703e18a907b759dfcd35d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7991d951-8b81-42bb-9385-197799a345f4", "node_type": "1", "metadata": {}, "hash": "c8d41428098bd28a7c7fa9d1aabee5dafa93929bbb5d9a087b2bc54ea80a1261", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "However, decrementing a non-empty amount from an empty allocation has a different result. For example:\n\n```js\n// Make an empty seat.\nconst { zcfSeat: zcfSeat1 } = zcf.makeEmptySeatKit();\n// The allocation is currently {}\nconst stagedAllocation = zcfSeat1.getStagedAllocation();\n// decrementBy throws for a keyword that does not exist on the stagedAllocation and a non-empty amount\nzcfSeat1.decrementBy({ IST: runFee });\n```", "mimetype": "text/plain", "start_char_idx": 9867, "end_char_idx": 10290, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7991d951-8b81-42bb-9385-197799a345f4": {"__data__": {"id_": "7991d951-8b81-42bb-9385-197799a345f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e4a4ef1-d782-4e3b-8132-dd7847d4c895", "node_type": "1", "metadata": {}, "hash": "d4d237f5bd8050ec7eb15276bb48c43e458e35a972e637256559c8ab09eb8d42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f78d295b-189b-465c-b44b-0daab9030453", "node_type": "1", "metadata": {}, "hash": "c2bb85c08f50e8afad41bf0f76c13eb79916eca23a8cc1b7add264a42ddbb32b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It throws an error because you cannot subtract something from nothing. So trying to decrement an empty\nallocation by a non-empty amount is an error, while decrementing an empty allocation by an empty amount\nis effectively a null operation with no effects.\n\n**Note**: This method has been deprecated. Use **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** instead.\n:::\n\n::: warning DEPRECATED\n\n## aZCFSeat.clear()\n\n- Returns: None.\n\nDeletes the **ZCFSeat**'s current staged allocation, if any,", "mimetype": "text/plain", "start_char_idx": 10292, "end_char_idx": 10802, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f78d295b-189b-465c-b44b-0daab9030453": {"__data__": {"id_": "f78d295b-189b-465c-b44b-0daab9030453", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zcfseat.md", "node_type": "4", "metadata": {}, "hash": "91c42419c9ebbf68a957d5eb284604e48e96d81451685c1d2cad3e1d52d41826", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7991d951-8b81-42bb-9385-197799a345f4", "node_type": "1", "metadata": {}, "hash": "c8d41428098bd28a7c7fa9d1aabee5dafa93929bbb5d9a087b2bc54ea80a1261", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note**: This method has been deprecated. Use **[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** instead.\n:::", "mimetype": "text/plain", "start_char_idx": 5939, "end_char_idx": 6067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "394dcad8-d165-499e-96f8-de179a6eeaaa": {"__data__": {"id_": "394dcad8-d165-499e-96f8-de179a6eeaaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "753d946f-f407-4e25-8b49-ba890e516e02", "node_type": "1", "metadata": {}, "hash": "e0046e0a65010028a8c2b7ac0862a66af49e7c0e98d3c342092bafae2d5c6210", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe Contract Facet (ZCF)\n\n<Zoe-Version/>\n\nA Zoe Contract Facet is an API object for a running contract instance to access the Zoe state\nfor that instance. A Zoe Contract Facet is accessed synchronously from within the contract,\nand usually is referred to in code as **zcf**.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 276, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "753d946f-f407-4e25-8b49-ba890e516e02": {"__data__": {"id_": "753d946f-f407-4e25-8b49-ba890e516e02", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "394dcad8-d165-499e-96f8-de179a6eeaaa", "node_type": "1", "metadata": {}, "hash": "c6d0d7e1b5df2d598469510718520d1b3ec0b4f36bf72f7c6226fc25a3f2ae31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3489153-e598-4949-8eb1-be1aa9a16af5", "node_type": "1", "metadata": {}, "hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The contract instance is launched by **E(Zoe).startInstance()**, and is given access to\nthe **zcf** object during that launch (see [Contract Requirements](/guides/zoe/contract-requirements)).\nIn the operations below, **instance** is the handle for the running contract instance.\n\n## zcf.atomicRearrange(transfers)\n\n- **transfers**: **Array&lt;[TransferPart](./zoe-data-types#transferpart)>**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 278, "end_char_idx": 686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a3489153-e598-4949-8eb1-be1aa9a16af5": {"__data__": {"id_": "a3489153-e598-4949-8eb1-be1aa9a16af5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "753d946f-f407-4e25-8b49-ba890e516e02", "node_type": "1", "metadata": {}, "hash": "e0046e0a65010028a8c2b7ac0862a66af49e7c0e98d3c342092bafae2d5c6210", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cffeb22c-c446-4ec9-aa81-28b29e4a0d37", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Asks Zoe to rearrange the **[Allocations](./zoe-data-types#allocation)** among the seats mentioned in\n_transfers_. _transfers_ are a set of changes to **Allocations** that must satisfy several\nconstraints. If these constraints are all met, then the reallocation happens atomically. Otherwise an\nerror is thrown and none of the proposed changes has any effect. The constraints are as follows.\n\n- All the mentioned seats are still live.\n- There aren't any outstanding stagings for any of the mentioned seats.", "mimetype": "text/plain", "start_char_idx": 688, "end_char_idx": 1194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cffeb22c-c446-4ec9-aa81-28b29e4a0d37": {"__data__": {"id_": "cffeb22c-c446-4ec9-aa81-28b29e4a0d37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3489153-e598-4949-8eb1-be1aa9a16af5", "node_type": "1", "metadata": {}, "hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b97b380-b502-432f-9da6-316aeec8359f", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Stagings are a reallocation mechanism that has been\n  deprecated in favor of this **atomicRearrange()** function.\n  To prevent confusion, each reallocation can only be\n  expressed in the old way or the new way, but not a mixture.", "mimetype": "text/plain", "start_char_idx": 1198, "end_char_idx": 1427, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b97b380-b502-432f-9da6-316aeec8359f": {"__data__": {"id_": "6b97b380-b502-432f-9da6-316aeec8359f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cffeb22c-c446-4ec9-aa81-28b29e4a0d37", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e32a56ed-d543-45e8-b904-ed7ff8490efa", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Overall conservation must be maintained. In other words, the reallocated\n  **[Amounts](/reference/ertp-api/ertp-data-types#amount)** must balance out.\n- Offer Safety is preserved for each seat. That means reallocations can only take assets from a seat\n  as long as either it gets the assets described in the want section of its proposal, or it retains\n  all of the assets specified in the give section of the proposal. This constraint applies to each", "mimetype": "text/plain", "start_char_idx": 1429, "end_char_idx": 1881, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e32a56ed-d543-45e8-b904-ed7ff8490efa": {"__data__": {"id_": "e32a56ed-d543-45e8-b904-ed7ff8490efa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b97b380-b502-432f-9da6-316aeec8359f", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86e533a3-a20c-4f60-ab75-a2a191d842c7", "node_type": "1", "metadata": {}, "hash": "4edf03b55c855b578f312d086191911792f76433c796967e9fa62448456567a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "seat across the entire atomicRearrangement, not to the individual **TransferParts**.", "mimetype": "text/plain", "start_char_idx": 1884, "end_char_idx": 1968, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86e533a3-a20c-4f60-ab75-a2a191d842c7": {"__data__": {"id_": "86e533a3-a20c-4f60-ab75-a2a191d842c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e32a56ed-d543-45e8-b904-ed7ff8490efa", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ec268f4-b77e-4116-b48b-738980a5ea79", "node_type": "1", "metadata": {}, "hash": "afe8491dbf705079902ca06d27906ccb5ac14d8395887a51f56c3fbcbf4e0493", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that you can construct the **TransferParts** that make up the _transfers_ array manually, or for\ntransfers that only include one seat, you can use the helper functions\n**[fromOnly()](./zoe-helpers#fromonly-fromseat-fromamounts)** and\n**[toOnly()](./zoe-helpers#toonly-toseat-toamounts)** to create\n**TransferParts** that only use a subset of the fields.\n\n## zcf.makeZCFMint(keyword, assetKind?, displayInfo?)", "mimetype": "text/plain", "start_char_idx": 1970, "end_char_idx": 2383, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ec268f4-b77e-4116-b48b-738980a5ea79": {"__data__": {"id_": "5ec268f4-b77e-4116-b48b-738980a5ea79", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86e533a3-a20c-4f60-ab75-a2a191d842c7", "node_type": "1", "metadata": {}, "hash": "4edf03b55c855b578f312d086191911792f76433c796967e9fa62448456567a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7753c0ea-6951-4800-b3cc-3cab5719081a", "node_type": "1", "metadata": {}, "hash": "bfcd5b49ea531b494bcbfa1fb9295e4d8b2beb4ff6949b0f4338d65bc505c380", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **keyword**: **[Keyword](./zoe-data-types#keyword)**\n- **assetKind**: **[AssetKind](/reference/ertp-api/ertp-data-types#assetkind)** - Optional, defaults to **AssetKind.NAT**.\n- **displayInfo**: **[DisplayInfo](/reference/ertp-api/ertp-data-types#displayinfo)** - Optional, defaults to **undefined**.\n- Returns: **Promise&lt;[ZCFMint](./zcfmint)>**", "mimetype": "text/plain", "start_char_idx": 2385, "end_char_idx": 2735, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7753c0ea-6951-4800-b3cc-3cab5719081a": {"__data__": {"id_": "7753c0ea-6951-4800-b3cc-3cab5719081a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ec268f4-b77e-4116-b48b-738980a5ea79", "node_type": "1", "metadata": {}, "hash": "afe8491dbf705079902ca06d27906ccb5ac14d8395887a51f56c3fbcbf4e0493", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e145ea7-4041-428a-856a-d9da3590d2a1", "node_type": "1", "metadata": {}, "hash": "b30970c5ff8e7b885c6016c280ac1bf7934062d33c528141c747f43391a9d4b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Creates a synchronous Zoe mint, allowing users to mint and reallocate digital assets synchronously\ninstead of relying on an asynchronous ERTP **[Mint](/reference/ertp-api/mint)**.\nThe optional _displayInfo_ parameter takes values\nlike **decimalPlaces: 16** that tell the UI how to display values associated with the created mint's\nbrand. It defaults to undefined.\n\n**Important**: **ZCFMints** do **not** have the same methods as an ERTP **Mint**. Do not try to use\nERTP methods on a **ZCFMint** or vice versa.", "mimetype": "text/plain", "start_char_idx": 2737, "end_char_idx": 3246, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e145ea7-4041-428a-856a-d9da3590d2a1": {"__data__": {"id_": "9e145ea7-4041-428a-856a-d9da3590d2a1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7753c0ea-6951-4800-b3cc-3cab5719081a", "node_type": "1", "metadata": {}, "hash": "bfcd5b49ea531b494bcbfa1fb9295e4d8b2beb4ff6949b0f4338d65bc505c380", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bd911dd-1dd6-4073-9ed3-fceced04dcf4", "node_type": "1", "metadata": {}, "hash": "4247c7a81e4c6b77f163e72c9129aab5be75ab5a1f2e17b0a4fb4d124f950a8e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Important**: On the other hand, the **[Issuer](/reference/ertp-api/issuer)** and **[Brand](/reference/ertp-api/brand)** associated with a **zcfMint**\ndo have the same methods as their ERTP-derived counterparts. Assets created by a **zcfMint** are treated\nthe same as assets created by ERTP **Mint** methods.\n\nThe following demonstrates **zcf.makeZCFMint**:\n\n**Note**: The call to make the **ZCFMint** is asynchronous, but\ncalls to the resulting **ZCFMint** are synchronous.", "mimetype": "text/plain", "start_char_idx": 3248, "end_char_idx": 3723, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6bd911dd-1dd6-4073-9ed3-fceced04dcf4": {"__data__": {"id_": "6bd911dd-1dd6-4073-9ed3-fceced04dcf4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e145ea7-4041-428a-856a-d9da3590d2a1", "node_type": "1", "metadata": {}, "hash": "b30970c5ff8e7b885c6016c280ac1bf7934062d33c528141c747f43391a9d4b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9624c528-ffce-41d6-be13-6855d7d7afa0", "node_type": "1", "metadata": {}, "hash": "a92a651217c9c6d768b76bb2375c621fa1913fc00730fff356d9389ef711fc9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst mySynchronousMint = await zcf.makeZCFMint('MyToken', AssetKind.COPY_SET);\nconst { brand, issuer } = mySynchronousMint.getIssuerRecord();\nmySynchronousMint.mintGains({ myKeyword: amount }, seat);\n```\n\n## zcf.getInvitationIssuer()\n\n- Returns: **Promise&lt;[InvitationIssuer](./zoe-data-types#invitationissuer)>**\n\nReturns the **InvitationIssuer** for the Zoe instance.\n\n```js\nconst invitationIssuer = await zcf.getInvitationIssuer();\n```\n\n## zcf.saveIssuer(issuer, keyword)", "mimetype": "text/plain", "start_char_idx": 3725, "end_char_idx": 4208, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9624c528-ffce-41d6-be13-6855d7d7afa0": {"__data__": {"id_": "9624c528-ffce-41d6-be13-6855d7d7afa0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bd911dd-1dd6-4073-9ed3-fceced04dcf4", "node_type": "1", "metadata": {}, "hash": "4247c7a81e4c6b77f163e72c9129aab5be75ab5a1f2e17b0a4fb4d124f950a8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f42db2e7-f7f8-4fd2-9c00-fd123385b84a", "node_type": "1", "metadata": {}, "hash": "09dbd15744a38a5470e6c3670b57a3769b3a87f4ba54470c5d6681539ed1e806", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## zcf.saveIssuer(issuer, keyword)\n\n- **issuer**: **[Issuer](/reference/ertp-api/issuer)**\n- **keyword**: **[Keyword](./zoe-data-types#keyword)**\n- Returns: **Promise&lt;IssuerRecord>**\n\nInforms Zoe about an **Issuer** and returns a promise for acknowledging\nwhen the **Issuer** is added and ready. The _keyword_ is the one associated\nwith the new **Issuer**. This method returns a promise for an **IssuerRecord** of the new **Issuer**", "mimetype": "text/plain", "start_char_idx": 4174, "end_char_idx": 4609, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f42db2e7-f7f8-4fd2-9c00-fd123385b84a": {"__data__": {"id_": "f42db2e7-f7f8-4fd2-9c00-fd123385b84a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9624c528-ffce-41d6-be13-6855d7d7afa0", "node_type": "1", "metadata": {}, "hash": "a92a651217c9c6d768b76bb2375c621fa1913fc00730fff356d9389ef711fc9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05", "node_type": "1", "metadata": {}, "hash": "13ec7f4ee5ecc10195086fb5a17e63382dc4c885322672d1abde449660d682cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This saves an **Issuer** in Zoe's records for this contract **instance**.\nIt also has saved the **Issuer** information such that Zoe can handle offers involving\nthis **Issuer** and ZCF can provide the **IssuerRecord** synchronously on request.\n\nAn **IssuerRecord** has two fields, each of which holds the namesake object\nassociated with the **Issuer** value of the record:\n**IssuerRecord.brand** and **IssuerRecord.issuer**.\n\n```js\nawait zcf.saveIssuer(secondaryIssuer, keyword);\n```", "mimetype": "text/plain", "start_char_idx": 4611, "end_char_idx": 5094, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05": {"__data__": {"id_": "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f42db2e7-f7f8-4fd2-9c00-fd123385b84a", "node_type": "1", "metadata": {}, "hash": "09dbd15744a38a5470e6c3670b57a3769b3a87f4ba54470c5d6681539ed1e806", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e", "node_type": "1", "metadata": {}, "hash": "0e7474081db75421c5a56ec66b65ffc1ef337bfb5538989727457012c31cb116", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<a id=\"zcf-makeinvitation-offerhandler-description-customproperties-proposalshape\"></a>\n\n## zcf.makeInvitation(offerHandler, description, customDetails?, proposalShape?)\n\n- **offerHandler**: **(seat: ZCFSeat, offerArgs?: CopyRecord) => any**\n- **description**: **String**\n- **customDetails**: **Object** - Optional.\n- **proposalShape**: **[Pattern](https://github.com/endojs/endo/tree/master/packages/patterns#readme)** - Optional.\n- Returns: **Promise&lt;[Invitation](./zoe-data-types#invitation)>**", "mimetype": "text/plain", "start_char_idx": 5096, "end_char_idx": 5596, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e": {"__data__": {"id_": "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05", "node_type": "1", "metadata": {}, "hash": "13ec7f4ee5ecc10195086fb5a17e63382dc4c885322672d1abde449660d682cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10c09f27-6912-4282-9a17-1ad91e9c2690", "node_type": "1", "metadata": {}, "hash": "006bbcde5d442d110f562754f3aefc519a78a15547ca3d8a5577f4bb53143b30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Uses the Zoe **[InvitationIssuer](./zoe-data-types#invitationissuer)** to _mint_\na credible **Invitation** for a smart contract.\nThe returned **Invitation**'s **amount** specifies:\n\n- The specific contract **instance**.\n- The Zoe **installation**.\n- A unique **[Handle](./zoe-data-types#handle)**.", "mimetype": "text/plain", "start_char_idx": 5598, "end_char_idx": 5895, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10c09f27-6912-4282-9a17-1ad91e9c2690": {"__data__": {"id_": "10c09f27-6912-4282-9a17-1ad91e9c2690", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e", "node_type": "1", "metadata": {}, "hash": "0e7474081db75421c5a56ec66b65ffc1ef337bfb5538989727457012c31cb116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec53a38c-70ed-4039-84dd-e242f5c1be85", "node_type": "1", "metadata": {}, "hash": "5792cf1888e37f8b843ce733a0015802ba1688013e83a239b5d8b2f5654b66dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**offerHandler** is a required function accepting a **ZCFSeat** and **offerArgs**\n(which will be present if and only if provided to\n[`E(Zoe).offer(...)`](/reference/zoe-api/zoe#e-zoe-offer-invitation-proposal-paymentpkeywordrecord-offerargs))\nand returning arbitrary offer results.", "mimetype": "text/plain", "start_char_idx": 5897, "end_char_idx": 6178, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec53a38c-70ed-4039-84dd-e242f5c1be85": {"__data__": {"id_": "ec53a38c-70ed-4039-84dd-e242f5c1be85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10c09f27-6912-4282-9a17-1ad91e9c2690", "node_type": "1", "metadata": {}, "hash": "006bbcde5d442d110f562754f3aefc519a78a15547ca3d8a5577f4bb53143b30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c3612af-da8c-41da-a29b-5ce8e6430fce", "node_type": "1", "metadata": {}, "hash": "ffb9130979dd0807164da103079821795707f9412aca7c2ef5ad0925f58ca550", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**description** is a required string describing the **Invitation**,\nand should include whatever information is needed for a potential recipient of the **Invitation**\nto distinguish among this contract's invitations.\nEach description should be a string literal that is unique within the source text of its contract\nand used only as the argument to make invitations of a particular kind.\n\nThe optional **customDetails** argument is included in the **Invitation**'s\n**amount** and not otherwise relied on by Zoe.", "mimetype": "text/plain", "start_char_idx": 6180, "end_char_idx": 6689, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6c3612af-da8c-41da-a29b-5ce8e6430fce": {"__data__": {"id_": "6c3612af-da8c-41da-a29b-5ce8e6430fce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec53a38c-70ed-4039-84dd-e242f5c1be85", "node_type": "1", "metadata": {}, "hash": "5792cf1888e37f8b843ce733a0015802ba1688013e83a239b5d8b2f5654b66dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0", "node_type": "1", "metadata": {}, "hash": "175e13a56cf0e1e738b194440569d002c7d1b87ea2d5f8306e05d233de0a6b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The optional **proposalShape** argument can be used to describe the required and allowed components of each proposal.\n\n### Proposal Shapes\n\nProposals that don't match the pattern will be rejected by Zoe without even being sent to the contract.", "mimetype": "text/plain", "start_char_idx": 6691, "end_char_idx": 6934, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0": {"__data__": {"id_": "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c3612af-da8c-41da-a29b-5ce8e6430fce", "node_type": "1", "metadata": {}, "hash": "ffb9130979dd0807164da103079821795707f9412aca7c2ef5ad0925f58ca550", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "525b66de-dd33-47c4-822e-0903a759e0b0", "node_type": "1", "metadata": {}, "hash": "e9583b7f8b166210a050b358cc0a0ceac1ca274f46fba8e7d62251f56990acaa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Patterns are often constructed using the\n**[M](https://endojs.github.io/endo/interfaces/_endo_patterns.PatternMatchers.html)** (for '**M**atcher') object.\n**proposalShape**s are usually built from [`M.splitRecord(required, optional, rest)`](https://endojs.github.io/endo/interfaces/_endo_patterns.PatternMatchers.html#splitRecord).\nFor example, when making a covered call, to express that the offering party can't cancel:\n\n```js\nimport { M } from '@endo/patterns';", "mimetype": "text/plain", "start_char_idx": 6936, "end_char_idx": 7400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "525b66de-dd33-47c4-822e-0903a759e0b0": {"__data__": {"id_": "525b66de-dd33-47c4-822e-0903a759e0b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0", "node_type": "1", "metadata": {}, "hash": "175e13a56cf0e1e738b194440569d002c7d1b87ea2d5f8306e05d233de0a6b4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb", "node_type": "1", "metadata": {}, "hash": "cb115782e4f126300661a75d1a7e461154699d8777a2538253cb0ed7d0775517", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const waivedExitProposalShape = M.splitRecord(\n  // required properties\n  { exit: { waived: null } },\n  // optional properties\n  { give: M.record(), want: M.record() },\n  // unknown properties\n  M.record()\n);\nconst creatorInvitation = zcf.makeInvitation(\n  makeCallOption,\n  'makeCallOption',\n  undefined,\n  waivedExitProposalShape\n);\n```\n\nFull details are in the [@endo/patterns](https://endojs.github.io/endo/modules/_endo_patterns.html) package. Here's a handy reference:", "mimetype": "text/plain", "start_char_idx": 7402, "end_char_idx": 7876, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb": {"__data__": {"id_": "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "525b66de-dd33-47c4-822e-0903a759e0b0", "node_type": "1", "metadata": {}, "hash": "e9583b7f8b166210a050b358cc0a0ceac1ca274f46fba8e7d62251f56990acaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27c119ab-3e62-45b8-8fb0-a4ab8242c95d", "node_type": "1", "metadata": {}, "hash": "8e88847818407cde596aa8e85e87b48256915b9e05b0fdd18ceeb4b53752df1e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\ninterface PatternMatchers {\n    and: ((...subPatts) => Matcher);\n    any: (() => Matcher);\n    array: ((limits?) => Matcher);\n    arrayOf: ((subPatt?, limits?) => Matcher);\n    bag: ((limits?) => Matcher);\n    bagOf: ((keyPatt?, countPatt?, limits?) => Matcher);\n    bigint: ((limits?) => Matcher);\n    boolean: (() => Matcher);\n    eq: ((key) => Matcher);\n    eref: ((subPatt) => any);\n    error: (() => Matcher);\n    gt: ((rightOperand) => Matcher);\n    gte: ((rightOperand) => Matcher);", "mimetype": "text/plain", "start_char_idx": 7878, "end_char_idx": 8373, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27c119ab-3e62-45b8-8fb0-a4ab8242c95d": {"__data__": {"id_": "27c119ab-3e62-45b8-8fb0-a4ab8242c95d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb", "node_type": "1", "metadata": {}, "hash": "cb115782e4f126300661a75d1a7e461154699d8777a2538253cb0ed7d0775517", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b25c6c6b-9ff5-43bb-ad57-9fea59776ece", "node_type": "1", "metadata": {}, "hash": "748df86d61ef5b28037846c64b186637444290e992c93b549ff09ed20c9e1b17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "key: (() => Matcher);\n    kind: ((kind) => Matcher);\n    lt: ((rightOperand) => Matcher);\n    lte: ((rightOperand) => Matcher);\n    map: ((limits?) => Matcher);\n    mapOf: ((keyPatt?, valuePatt?, limits?) => Matcher);\n    nat: ((limits?) => Matcher);\n    neq: ((key) => Matcher);\n    not: ((subPatt) => Matcher);\n    null: (() => null);\n    number: (() => Matcher);\n    opt: ((subPatt) => any);\n    or: ((...subPatts) => Matcher);\n    partial: ((basePatt, rest?) => Matcher);\n    pattern: (() => Matcher);", "mimetype": "text/plain", "start_char_idx": 8378, "end_char_idx": 8883, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b25c6c6b-9ff5-43bb-ad57-9fea59776ece": {"__data__": {"id_": "b25c6c6b-9ff5-43bb-ad57-9fea59776ece", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27c119ab-3e62-45b8-8fb0-a4ab8242c95d", "node_type": "1", "metadata": {}, "hash": "8e88847818407cde596aa8e85e87b48256915b9e05b0fdd18ceeb4b53752df1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "349883ad-3701-48b6-9e3a-4bb8756348f5", "node_type": "1", "metadata": {}, "hash": "d77898c0fc0a971f5c29033261be1b4d13128fca1a1242c91b099869bd162ee4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "pattern: (() => Matcher);\n    promise: (() => Matcher);\n    record: ((limits?) => Matcher);\n    recordOf: ((keyPatt?, valuePatt?, limits?) => Matcher);\n    remotable: ((label?) => Matcher);\n    scalar: (() => Matcher);\n    set: ((limits?) => Matcher);\n    setOf: ((keyPatt?, limits?) => Matcher);\n    split: ((basePatt, rest?) => Matcher);\n    splitArray: ((required, optional?, rest?) => Matcher);\n    splitRecord: ((required, optional?, rest?) => Matcher);\n    string: ((limits?) => Matcher);", "mimetype": "text/plain", "start_char_idx": 8858, "end_char_idx": 9352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "349883ad-3701-48b6-9e3a-4bb8756348f5": {"__data__": {"id_": "349883ad-3701-48b6-9e3a-4bb8756348f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b25c6c6b-9ff5-43bb-ad57-9fea59776ece", "node_type": "1", "metadata": {}, "hash": "748df86d61ef5b28037846c64b186637444290e992c93b549ff09ed20c9e1b17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "579790a1-9007-434f-b325-2fb04d6bf6d3", "node_type": "1", "metadata": {}, "hash": "1717e517ac685b86d7a9550a6bcd8ec405fddbe28304ae6dff1d39405c5c1e04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "string: ((limits?) => Matcher);\n    symbol: ((limits?) => Matcher);\n    tagged: ((tagPatt?, payloadPatt?) => Matcher);\n    undefined: (() => Matcher);\n}\n```", "mimetype": "text/plain", "start_char_idx": 9321, "end_char_idx": 9477, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "579790a1-9007-434f-b325-2fb04d6bf6d3": {"__data__": {"id_": "579790a1-9007-434f-b325-2fb04d6bf6d3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "349883ad-3701-48b6-9e3a-4bb8756348f5", "node_type": "1", "metadata": {}, "hash": "d77898c0fc0a971f5c29033261be1b4d13128fca1a1242c91b099869bd162ee4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02491069-b70a-4118-92ce-3fe6dd8a85ea", "node_type": "1", "metadata": {}, "hash": "df6fb3e2aa0cf810cefa68de36ec23eea49944e74a3a8be903213cc291689e11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## zcf.makeEmptySeatKit()\n\n- Returns: **[ZCFSeat](./zcfseat), Promise&lt;[UserSeat](./user-seat)>**\n\nReturns an empty **ZCFSeat** and a **Promise** for a **UserSeat**\n\nZoe uses **seats** to represent offers, and has two seat facets (a\nparticular view or API of an object;\nthere may be multiple such facets per object) a **ZCFSeat** and a **UserSeat**.\n\n```js\nconst { zcfSeat: mySeat } = zcf.makeEmptySeatKit();\n```\n\n## zcf.getInstance()\n\n- Returns: **[Instance](./zoe-data-types#instance)**", "mimetype": "text/plain", "start_char_idx": 9479, "end_char_idx": 9969, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02491069-b70a-4118-92ce-3fe6dd8a85ea": {"__data__": {"id_": "02491069-b70a-4118-92ce-3fe6dd8a85ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "579790a1-9007-434f-b325-2fb04d6bf6d3", "node_type": "1", "metadata": {}, "hash": "1717e517ac685b86d7a9550a6bcd8ec405fddbe28304ae6dff1d39405c5c1e04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19454e34-af09-4a84-aa88-8543bb4cd22a", "node_type": "1", "metadata": {}, "hash": "1e7c3de9202adabe63adc182f9e564db4da4e198c7b6411e599154b821164428", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The contract code can request its own current instance, so it can be sent elsewhere.\n\n## zcf.getBrandForIssuer(issuer)\n\n- **issuer**: **[Issuer](/reference/ertp-api/issuer)**\n- Returns: **[Brand](/reference/ertp-api/brand)**\n\nReturns the **Brand** associated with the _issuer_.\n\n## zcf.getIssuerForBrand(brand)\n\n- **brand**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **[Issuer](/reference/ertp-api/issuer)**\n\nReturns the **Issuer** of the _brand_ argument.\n\n## zcf.getAssetKind(brand)", "mimetype": "text/plain", "start_char_idx": 9971, "end_char_idx": 10463, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19454e34-af09-4a84-aa88-8543bb4cd22a": {"__data__": {"id_": "19454e34-af09-4a84-aa88-8543bb4cd22a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02491069-b70a-4118-92ce-3fe6dd8a85ea", "node_type": "1", "metadata": {}, "hash": "df6fb3e2aa0cf810cefa68de36ec23eea49944e74a3a8be903213cc291689e11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d62ad2ee-c4ca-4a96-a31d-6fa73768126a", "node_type": "1", "metadata": {}, "hash": "96b3e27e3801efa19468075ce35a78799ed674dd1c3cca156836d5bb71748b23", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## zcf.getAssetKind(brand)\n\n- **brand**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **[AssetKind](/reference/ertp-api/ertp-data-types#assetkind)**\n\nReturns the **AssetKind** associated with the _brand_ argument.\n\n```js\nconst quatloosAssetKind = zcf.getAssetKind(quatloosBrand);\n```\n\n## zcf.stopAcceptingOffers()\n\n- Returns: None.\n\nThe contract requests Zoe to not accept offers for this contract instance.\nIt can't be called from outside the contract unless the contract explicitly makes it accessible.", "mimetype": "text/plain", "start_char_idx": 10437, "end_char_idx": 10946, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d62ad2ee-c4ca-4a96-a31d-6fa73768126a": {"__data__": {"id_": "d62ad2ee-c4ca-4a96-a31d-6fa73768126a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19454e34-af09-4a84-aa88-8543bb4cd22a", "node_type": "1", "metadata": {}, "hash": "1e7c3de9202adabe63adc182f9e564db4da4e198c7b6411e599154b821164428", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02756ea4-392c-4303-b5fe-c5c31b5708b0", "node_type": "1", "metadata": {}, "hash": "a9cda11da4cc046017b7f146d0d8e74aba5f8d057ed782b42bd5dfe029b53b9a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## zcf.shutdown(completion)\n\n- **completion**: **Usually (but not always) a String**\n- Returns: None.\n\nShuts down the entire vat and contract instance and gives payouts.\n\nAll open **seats** associated with the current **instance** have **fail()**\ncalled on them.\n\nCall when:\n\n- You want nothing more to happen in the contract, and\n- You don't want to take any more offers", "mimetype": "text/plain", "start_char_idx": 10948, "end_char_idx": 11319, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02756ea4-392c-4303-b5fe-c5c31b5708b0": {"__data__": {"id_": "02756ea4-392c-4303-b5fe-c5c31b5708b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d62ad2ee-c4ca-4a96-a31d-6fa73768126a", "node_type": "1", "metadata": {}, "hash": "96b3e27e3801efa19468075ce35a78799ed674dd1c3cca156836d5bb71748b23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84328755-4f0a-4659-9975-1947cad2422b", "node_type": "1", "metadata": {}, "hash": "ff5f3e56717850a96f2a902e7cc707c172c153410a8fcbcc965aa2b692bd4240", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The _completion_ argument is usually a **String**, but this\nis not required. It is used for the notification sent to the\ncontract instance's **done()** function. Any still open seats or\nother outstanding promises are closed with a generic 'vat terminated'\nmessage.\n\n```js\nzcf.shutdown();\n```\n\n## zcf.shutdownWithFailure(reason)\n\n- **reason**: **Error**\n- Returns: None.\n\nShuts down the entire vat and contract instance due to an error.", "mimetype": "text/plain", "start_char_idx": 11321, "end_char_idx": 11756, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84328755-4f0a-4659-9975-1947cad2422b": {"__data__": {"id_": "84328755-4f0a-4659-9975-1947cad2422b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02756ea4-392c-4303-b5fe-c5c31b5708b0", "node_type": "1", "metadata": {}, "hash": "a9cda11da4cc046017b7f146d0d8e74aba5f8d057ed782b42bd5dfe029b53b9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3854786-ba35-46a1-8e09-63acbb6ffb1e", "node_type": "1", "metadata": {}, "hash": "53d2a965ddfbd2b1d6d64fb830e77e2d628171d4462dd1ee15077dd50b8fb40b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All open **seats** associated with the current **instance** have **fail()**\ncalled on them.\n\nThe _reason_ argument is a JavaScript error object.\nIt is used for the notification sent to the\ncontract instance's **done()** function. Any still open seats or\nother outstanding promises are closed with the relevant\nerror message.\n\n```js\nzcf.shutdownWithFailure();\n```\n\n## zcf.getTerms()\n\n- Returns: **Object**", "mimetype": "text/plain", "start_char_idx": 11758, "end_char_idx": 12162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3854786-ba35-46a1-8e09-63acbb6ffb1e": {"__data__": {"id_": "d3854786-ba35-46a1-8e09-63acbb6ffb1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84328755-4f0a-4659-9975-1947cad2422b", "node_type": "1", "metadata": {}, "hash": "ff5f3e56717850a96f2a902e7cc707c172c153410a8fcbcc965aa2b692bd4240", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d53392bc-6985-473c-b085-afa7617f92f7", "node_type": "1", "metadata": {}, "hash": "ce3208c3c8c5653ad18baf57c471179a6de92e4b51a70d8283a9d5d1e54958e6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **Object**\n\nReturns the **[Issuers](/reference/ertp-api/issuer)**, **[Brands](/reference/ertp-api/brand)**, and custom **terms** the current contract **instance** was instantiated with.\n\nThe returned values look like:\n\n```js\n{ brands, issuers, customTermA, customTermB ... }\n// where brands and issuers are keywordRecords, like:", "mimetype": "text/plain", "start_char_idx": 12141, "end_char_idx": 12480, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d53392bc-6985-473c-b085-afa7617f92f7": {"__data__": {"id_": "d53392bc-6985-473c-b085-afa7617f92f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3854786-ba35-46a1-8e09-63acbb6ffb1e", "node_type": "1", "metadata": {}, "hash": "53d2a965ddfbd2b1d6d64fb830e77e2d628171d4462dd1ee15077dd50b8fb40b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "047d5c13-cfb0-4f32-8188-575a558dadfe", "node_type": "1", "metadata": {}, "hash": "12830fd3f23636e491d4ae6f6e9b878cd1fc721b55bf103f745efc8cc7fbb9e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  brands: { A: moolaKit.brand, B: simoleanKit.brand },\n  issuers: { A: moolaKit.issuer, B: simoleanKit.issuer },\n  customTermA: 'something',\n  customTermB: 'something else'\n};\n```", "mimetype": "text/plain", "start_char_idx": 12482, "end_char_idx": 12663, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "047d5c13-cfb0-4f32-8188-575a558dadfe": {"__data__": {"id_": "047d5c13-cfb0-4f32-8188-575a558dadfe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d53392bc-6985-473c-b085-afa7617f92f7", "node_type": "1", "metadata": {}, "hash": "ce3208c3c8c5653ad18baf57c471179a6de92e4b51a70d8283a9d5d1e54958e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2af35305-5330-4c2c-885d-167a626b1176", "node_type": "1", "metadata": {}, "hash": "54989ad634e0e6ef16aa60f80ddabb69ac810784684bba5095385d192d20bbe9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that there is also an **E(zoe).getTerms(instance)**. Often the choice of which to use is not which method\nto use, but which of Zoe Service or ZCF you have access to. On the contract side, you more easily have access\nto **zcf**, and **zcf** already knows what instance is running. So in contract code, you use **zcf.getTerms()**. From\na user side, with access to Zoe Service, you use **E(zoe).getTerms()**.\n\n```js\nconst { brands, issuers, maths, terms } = zcf.getTerms();\n```\n\n## zcf.getZoeService()", "mimetype": "text/plain", "start_char_idx": 12665, "end_char_idx": 13168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2af35305-5330-4c2c-885d-167a626b1176": {"__data__": {"id_": "2af35305-5330-4c2c-885d-167a626b1176", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "047d5c13-cfb0-4f32-8188-575a558dadfe", "node_type": "1", "metadata": {}, "hash": "12830fd3f23636e491d4ae6f6e9b878cd1fc721b55bf103f745efc8cc7fbb9e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e037c1f0-03e9-4d1f-81f1-edba9d8549f2", "node_type": "1", "metadata": {}, "hash": "4713c5100273d6a8a353cba31f6188fe4d3f7bad8929230c63877329972b03a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## zcf.getZoeService()\n\n- Returns: [ZoeService](./zoe)\n\nThis is the only way to get the user-facing [Zoe Service API](./zoe) to\nthe contract code as well.\n\n```js\n// Making an offer to another contract instance in the contract.\nconst zoeService = zcf.getZoeService();\nE(zoeService).offer(creatorInvitation, proposal, paymentKeywordRecord);\n```\n\n## zcf.assertUniqueKeyword(keyword)\n\n- **keyword**: **[Keyword](./zoe-data-types#keyword)**\n- Returns: **Undefined**", "mimetype": "text/plain", "start_char_idx": 13146, "end_char_idx": 13606, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e037c1f0-03e9-4d1f-81f1-edba9d8549f2": {"__data__": {"id_": "e037c1f0-03e9-4d1f-81f1-edba9d8549f2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2af35305-5330-4c2c-885d-167a626b1176", "node_type": "1", "metadata": {}, "hash": "54989ad634e0e6ef16aa60f80ddabb69ac810784684bba5095385d192d20bbe9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d", "node_type": "1", "metadata": {}, "hash": "0e740ef1fad011f922b6d1ddca18133296d5a7caf14930a526dd44aaa85d9f68", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Checks if a **Keyword** is valid and not already used as a **Brand** in this **Instance** (i.e., unique)\nand could be used as a new **Brand** to make an **Issuer**. Throws an appropriate error if it's not\na valid **Keyword**, or is not unique.\n\n```js\nzcf.assertUniqueKeyword(keyword);\n```\n\n## zcf.setOfferFilter(strings)\n\n- **strings**: **Array&lt;String>**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 13608, "end_char_idx": 13982, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d": {"__data__": {"id_": "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e037c1f0-03e9-4d1f-81f1-edba9d8549f2", "node_type": "1", "metadata": {}, "hash": "4713c5100273d6a8a353cba31f6188fe4d3f7bad8929230c63877329972b03a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20c534f1-2602-4ec6-8519-f8d5fde0d74b", "node_type": "1", "metadata": {}, "hash": "bfedce3aab58c9414ad723780b6aaf495fbdf19cd75ee6572dfe8811edc632d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Prohibit invocation of invitatations whose description include any of the strings.\nAny of the strings that end with a colon (`:`) will be treated as a prefix,\nand invitations whose description string begins with the string (including the colon)\nwill not be processed if passed to **E(Zoe).offer()**. Instead, an exception will be thrown.", "mimetype": "text/plain", "start_char_idx": 13984, "end_char_idx": 14321, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "20c534f1-2602-4ec6-8519-f8d5fde0d74b": {"__data__": {"id_": "20c534f1-2602-4ec6-8519-f8d5fde0d74b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d", "node_type": "1", "metadata": {}, "hash": "0e740ef1fad011f922b6d1ddca18133296d5a7caf14930a526dd44aaa85d9f68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7f56897-24ab-46af-88a2-cd4ba8fa7d10", "node_type": "1", "metadata": {}, "hash": "2da776ff5d92530569cdbe1c29fc9c3eecdbdbc7b1bac4392e6bba8db431a34f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "It is expected that most contracts will never invoke this function directly. It is\nintended to be used by **governance** in a legible way, so that the contract's\ngovernance process can take emergency action in order to stop processing when necessary.\n\nNote that blocked strings can be re-enabled by calling this method again and simply not\nincluding that string in the _strings_ argument.\n\n## zcf.getOfferFilter()\n\n- Returns: **Array&lt;String>**", "mimetype": "text/plain", "start_char_idx": 14323, "end_char_idx": 14769, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a7f56897-24ab-46af-88a2-cd4ba8fa7d10": {"__data__": {"id_": "a7f56897-24ab-46af-88a2-cd4ba8fa7d10", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20c534f1-2602-4ec6-8519-f8d5fde0d74b", "node_type": "1", "metadata": {}, "hash": "bfedce3aab58c9414ad723780b6aaf495fbdf19cd75ee6572dfe8811edc632d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d", "node_type": "1", "metadata": {}, "hash": "c11b89ee03a03ebd7ce0c9ecbdc7aa6d57286766e44dae15741beecd873346f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **Array&lt;String>**\n\nReturns all the strings that have been disabled for use in invitations, if any.\nA contract's invitations may be disabled using the\n**[zcf.setOfferFilter()](#zcf-setofferfilter-strings)** method when governance determines\nthat they provide a vulnerability.\n\n::: warning DEPRECATED\n\n## zcf.reallocate(seats)\n\n- **seats**: **[ZCFSeats](./zcfseat)[]** (at least two)\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 14738, "end_char_idx": 15150, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d": {"__data__": {"id_": "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7f56897-24ab-46af-88a2-cd4ba8fa7d10", "node_type": "1", "metadata": {}, "hash": "2da776ff5d92530569cdbe1c29fc9c3eecdbdbc7b1bac4392e6bba8db431a34f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56e3c7e7-eafd-486c-88fa-90f641b51239", "node_type": "1", "metadata": {}, "hash": "7be290719de9e4c71121be072f1e06928e3a11a9b8f1f276331265073d32e77e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**zcf.reallocate()** commits the staged allocations for each of its seat arguments,\nmaking their staged allocations their current allocations. **zcf.reallocate()** then\ntransfers the assets escrowed in Zoe from one seat to another. Importantly, the assets\nstay escrowed, with only the internal Zoe accounting of each seat's allocation changed.", "mimetype": "text/plain", "start_char_idx": 15152, "end_char_idx": 15495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56e3c7e7-eafd-486c-88fa-90f641b51239": {"__data__": {"id_": "56e3c7e7-eafd-486c-88fa-90f641b51239", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d", "node_type": "1", "metadata": {}, "hash": "c11b89ee03a03ebd7ce0c9ecbdc7aa6d57286766e44dae15741beecd873346f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c45cc69e-c86f-443e-934f-dc54dda7b4f3", "node_type": "1", "metadata": {}, "hash": "da55284993bbb5785470c4aecaf15ae9403fecdcd2340225640656a025441390", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "There must be at least two **ZCFSeats** in the array argument. Every **ZCFSeat**\nwith a staged allocation must be included in the argument array or an error\nis thrown. If any seat in the argument array does not have a staged allocation,\nan error is thrown.\n\nOn commit, the staged allocations become the seats' current allocations and\nthe staged allocations are deleted.", "mimetype": "text/plain", "start_char_idx": 15497, "end_char_idx": 15866, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c45cc69e-c86f-443e-934f-dc54dda7b4f3": {"__data__": {"id_": "c45cc69e-c86f-443e-934f-dc54dda7b4f3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56e3c7e7-eafd-486c-88fa-90f641b51239", "node_type": "1", "metadata": {}, "hash": "7be290719de9e4c71121be072f1e06928e3a11a9b8f1f276331265073d32e77e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b712c677-bf05-4a76-8151-d68880764872", "node_type": "1", "metadata": {}, "hash": "3666b00ad76bcf0fe32ff36970adeaf5f15d413940c7096357b7ce63859e0b96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note: **reallocate()** is an _atomic operation_. To enforce offer safety,\nit will never abort part way through. It will completely succeed or it will\nfail before any seats have their current allocation changed.\n\nThe reallocation only succeeds if it:\n\n1. Conserves rights (the specified **[Amounts](/reference/ertp-api/ertp-data-types#amount)** have the same total value as the\n   current total amount)\n2. Is 'offer-safe' for all parties involved.", "mimetype": "text/plain", "start_char_idx": 15868, "end_char_idx": 16314, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b712c677-bf05-4a76-8151-d68880764872": {"__data__": {"id_": "b712c677-bf05-4a76-8151-d68880764872", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c45cc69e-c86f-443e-934f-dc54dda7b4f3", "node_type": "1", "metadata": {}, "hash": "da55284993bbb5785470c4aecaf15ae9403fecdcd2340225640656a025441390", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91daca1c-2720-4089-bc94-1b26627434af", "node_type": "1", "metadata": {}, "hash": "0f040302511b056562316831034ffbc450551c03eeaeaac08a0a140ad5e02f7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The reallocation is partial, only applying to the **seats** in the\nargument array. By induction, if rights conservation and\noffer safety hold before, they hold after a safe reallocation.\n\nThis is true even though we only re-validate for **seats** whose\nallocations change. A reallocation can only effect offer safety for\nthose **seats**, and since rights are conserved for the change, overall\nrights are unchanged.\n\n**zcf.reallocate()** throws this error:", "mimetype": "text/plain", "start_char_idx": 16316, "end_char_idx": 16771, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91daca1c-2720-4089-bc94-1b26627434af": {"__data__": {"id_": "91daca1c-2720-4089-bc94-1b26627434af", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-contract-facet.md", "node_type": "4", "metadata": {}, "hash": "2ff112025c70d7841c3c756d1b7680c425554dcfb36cb91cb422c511eaa1fd7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b712c677-bf05-4a76-8151-d68880764872", "node_type": "1", "metadata": {}, "hash": "3666b00ad76bcf0fe32ff36970adeaf5f15d413940c7096357b7ce63859e0b96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **reallocating must be done over two or more seats**\n\n```js\nsellerSeat.incrementBy(buyerSeat.decrementBy({ Money: providedMoney }));\nbuyerSeat.incrementBy(sellerSeat.decrementBy({ Items: wantedItems }));\nzcf.reallocate(buyerSeat, sellerSeat);\n```\n\n**Note**: This method has been deprecated. Use **[atomicRearrange()](./#atomicrearrange-transfers)** instead.\n:::", "mimetype": "text/plain", "start_char_idx": 16773, "end_char_idx": 17136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e4761fcc-3b95-4766-ac1d-b78ef7b6a430": {"__data__": {"id_": "e4761fcc-3b95-4766-ac1d-b78ef7b6a430", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36d394fb-49fd-47cb-81f9-ab2e6542f546", "node_type": "1", "metadata": {}, "hash": "c70e04fcad2daa50d2becb7bf8039b9ab1224679dd47a33dd116b82f3a7b67d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe Data Types\n\nZoe introduces and uses several data types.\n\n## Allocation\n\n**Allocations** represent the **[Amounts](/reference/ertp-api/ertp-data-types#amount)** to be paid\nout to each seat upon exiting a **Proposal**.\n\nFor example, if a seat expected to be paid 5 _Quatloos_ and 3 _Widgets_ after successfully exiting a **Proposal**, the **Allocation** would look like:\n\n```js\n{\n  Quatloos: 5n;\n  Widgets: 3n;\n}\n```\n\n## Handle", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 431, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36d394fb-49fd-47cb-81f9-ab2e6542f546": {"__data__": {"id_": "36d394fb-49fd-47cb-81f9-ab2e6542f546", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4761fcc-3b95-4766-ac1d-b78ef7b6a430", "node_type": "1", "metadata": {}, "hash": "20f80eec8e924ee47a11def7b5d5c77f7270cd023e5045d8f759f33cb958f798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34480ea1-9e2a-48f6-a35d-6d1e20068a14", "node_type": "1", "metadata": {}, "hash": "0bcec248beed451df0f3139c1f93982053189b4a426714b73d8c61b0c2a211b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Handle\n\n**Handles** are **Far** objects without any methods whose only useful property are their\nunique identities. They're often created in order to designate some other object, where the\n**Handles** can be passed around as reliable designators without giving access to the\ndesignated objects.\n\n## Instance\n\nAn **Instance** is a handle that represents an instance of a contract.\nYou can get information about the contract instance via these methods:", "mimetype": "text/plain", "start_char_idx": 422, "end_char_idx": 875, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34480ea1-9e2a-48f6-a35d-6d1e20068a14": {"__data__": {"id_": "34480ea1-9e2a-48f6-a35d-6d1e20068a14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36d394fb-49fd-47cb-81f9-ab2e6542f546", "node_type": "1", "metadata": {}, "hash": "c70e04fcad2daa50d2becb7bf8039b9ab1224679dd47a33dd116b82f3a7b67d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9", "node_type": "1", "metadata": {}, "hash": "6a58b8288b5c6a2d06179bc7d2bd94da1e2d497be39ab02af3f34cfd1777b9c9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **[E(Zoe).getBrands()](./zoe#e-zoe-getbrands-instance)**\n- **[E(Zoe).getIssuers()](./zoe#e-zoe-getissuers-instance)**\n- **[E(Zoe).getTerms()](./zoe#e-zoe-getterms-instance)**\n- **[E(Zoe).getPublicFacet()](./zoe#e-zoe-getpublicfacet-instance)**\n\n## Invitation\n\nAn **Invitation** is a non-fungible asset created by the **[InvitationIssuer](#invitationissuer)**.\nAn **Invitation Payment** is a **[Payment](/reference/ertp-api/payment)** holding an **Invitation**.\n\n## InvitationIssuer", "mimetype": "text/plain", "start_char_idx": 877, "end_char_idx": 1360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9": {"__data__": {"id_": "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34480ea1-9e2a-48f6-a35d-6d1e20068a14", "node_type": "1", "metadata": {}, "hash": "0bcec248beed451df0f3139c1f93982053189b4a426714b73d8c61b0c2a211b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6f49309-1fd9-4eaa-aa8a-887f5e519a47", "node_type": "1", "metadata": {}, "hash": "95aadaafa48e52a3bbee70d0cefe4815eb09bc490394555d76f085ecf845c60f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## InvitationIssuer\n\nThe **InvitationIssuer** is an **[Issuer](/reference/ertp-api/issuer)** that plays a\nspecial role throughout Zoe. Zoe has a single **InvitationIssuer** for its entire\nlifetime. All **Invitations** come from the **[Mint](/reference/ertp-api/mint)**\nassociated with the Zoe instance's **InvitationIssuer**.\n\nThe issuer is publicly available (via [`E(Zoe).getInvitationIssuer()`](./zoe-contract-facet#zcf-getinvitationissuer)),\nso the ability to validate invitations is widely available.", "mimetype": "text/plain", "start_char_idx": 1341, "end_char_idx": 1846, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6f49309-1fd9-4eaa-aa8a-887f5e519a47": {"__data__": {"id_": "a6f49309-1fd9-4eaa-aa8a-887f5e519a47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9", "node_type": "1", "metadata": {}, "hash": "6a58b8288b5c6a2d06179bc7d2bd94da1e2d497be39ab02af3f34cfd1777b9c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b8e0cef-7b92-460c-b516-9394cf8a99a4", "node_type": "1", "metadata": {}, "hash": "23659ac005e1debfdafdfb60d5a4e2a5b863a96d0261a8447cd30601f583b27d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**InvitationIssuer** has all the methods of regular **Issuers**, but the two methods that are most\noften used are **[anIssuer.claim()](/reference/ertp-api/issuer#anissuer-claim-payment-optamount)**\nand **[anIssuer.getAmountOf()](/reference/ertp-api/issuer#anissuer-getamountof-payment)**.", "mimetype": "text/plain", "start_char_idx": 1848, "end_char_idx": 2136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b8e0cef-7b92-460c-b516-9394cf8a99a4": {"__data__": {"id_": "1b8e0cef-7b92-460c-b516-9394cf8a99a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6f49309-1fd9-4eaa-aa8a-887f5e519a47", "node_type": "1", "metadata": {}, "hash": "95aadaafa48e52a3bbee70d0cefe4815eb09bc490394555d76f085ecf845c60f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87d35163-0675-4e22-b2bd-f8da2e95b7be", "node_type": "1", "metadata": {}, "hash": "cdc66939dd4c3e97b5e1fbd654be292183e9be3db1e9b47e542bb5d1744042e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A successful call of **anInvitationIssuer.claim()** means you are assured the **Invitation** passed into\nthe method is recognized as valid by the **InvitationIssuer**. You are also assured the **Invitation**\nis exclusively yours and no one else has access to it.\n\n## Keyword", "mimetype": "text/plain", "start_char_idx": 2138, "end_char_idx": 2412, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87d35163-0675-4e22-b2bd-f8da2e95b7be": {"__data__": {"id_": "87d35163-0675-4e22-b2bd-f8da2e95b7be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b8e0cef-7b92-460c-b516-9394cf8a99a4", "node_type": "1", "metadata": {}, "hash": "23659ac005e1debfdafdfb60d5a4e2a5b863a96d0261a8447cd30601f583b27d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7729e7aa-2c72-4524-bb67-e4df0a14bcff", "node_type": "1", "metadata": {}, "hash": "617a6ec006d4569ccfe4a1c2aa4f1dc51dd7580a420cb5dc854e4f9b171524fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **Keyword** is a unique identifier string within a contract for tying together the\n**issuers** in its **proposals**, **payments**, and **payouts**.\nIt must be an ASCII-only [identifier](https://developer.mozilla.org/en-US/docs/Glossary/Identifier)\nand start with an upper case letter in order to avoid collisions with JavaScript properties\nsuch as `toString` when used as a property name in a record.", "mimetype": "text/plain", "start_char_idx": 2414, "end_char_idx": 2816, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7729e7aa-2c72-4524-bb67-e4df0a14bcff": {"__data__": {"id_": "7729e7aa-2c72-4524-bb67-e4df0a14bcff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87d35163-0675-4e22-b2bd-f8da2e95b7be", "node_type": "1", "metadata": {}, "hash": "cdc66939dd4c3e97b5e1fbd654be292183e9be3db1e9b47e542bb5d1744042e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a", "node_type": "1", "metadata": {}, "hash": "51f9d27eb931728516a9227c61652567cb45f24fa7e63da1f907ce2674b300ee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(For more detail, see [Why do Zoe keywords have to start with a capital letter? #8241](https://github.com/Agoric/agoric-sdk/discussions/8241).)\n`NaN` and `Infinity` are also not allowed as keywords.", "mimetype": "text/plain", "start_char_idx": 2817, "end_char_idx": 3015, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a": {"__data__": {"id_": "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7729e7aa-2c72-4524-bb67-e4df0a14bcff", "node_type": "1", "metadata": {}, "hash": "617a6ec006d4569ccfe4a1c2aa4f1dc51dd7580a420cb5dc854e4f9b171524fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c194e683-5e0e-43c0-9060-eed4ac8afe0d", "node_type": "1", "metadata": {}, "hash": "dab4d7e6330a3f114a792b6233f47ec5fbda7ab779d8d280f44967987307f13a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<a id=\"amountkeywordrecord\"></a>\n\n## KeywordRecord", "mimetype": "text/plain", "start_char_idx": 3017, "end_char_idx": 3067, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c194e683-5e0e-43c0-9060-eed4ac8afe0d": {"__data__": {"id_": "c194e683-5e0e-43c0-9060-eed4ac8afe0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a", "node_type": "1", "metadata": {}, "hash": "51f9d27eb931728516a9227c61652567cb45f24fa7e63da1f907ce2674b300ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92b8ba1b-1236-409e-bef5-bab644ea2ac1", "node_type": "1", "metadata": {}, "hash": "050100c7aa4099470af643a8d5b4f991f5bd55884b900e727003f9f29ade8813", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **KeywordRecord** is a [CopyRecord](/glossary/#copyrecord) in which every property name\nis a **[Keyword](#keyword)**, such as `harden({ Asset: moolaIssuer, Bid: simoleanIssuer })`.\nSubtypes further constrain property values (for example, an\n**AmountKeywordRecord** is a **KeywordRecord** in which every value is an\n**[Amount](/reference/ertp-api/ertp-data-types#amount)** and a\n**PaymentPKeywordRecord** is a **KeywordRecord** in which every value is either a", "mimetype": "text/plain", "start_char_idx": 3069, "end_char_idx": 3530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92b8ba1b-1236-409e-bef5-bab644ea2ac1": {"__data__": {"id_": "92b8ba1b-1236-409e-bef5-bab644ea2ac1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c194e683-5e0e-43c0-9060-eed4ac8afe0d", "node_type": "1", "metadata": {}, "hash": "dab4d7e6330a3f114a792b6233f47ec5fbda7ab779d8d280f44967987307f13a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f95656b-9a1f-4b55-a815-9a2666cdf865", "node_type": "1", "metadata": {}, "hash": "449b94432cc58fc266f9e4d1596510034152f695cdbe85930d73f2d8bf5dec7c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**[Payment](/reference/ertp-api/payment)** or a Promise for a Payment).", "mimetype": "text/plain", "start_char_idx": 3531, "end_char_idx": 3602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f95656b-9a1f-4b55-a815-9a2666cdf865": {"__data__": {"id_": "2f95656b-9a1f-4b55-a815-9a2666cdf865", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92b8ba1b-1236-409e-bef5-bab644ea2ac1", "node_type": "1", "metadata": {}, "hash": "050100c7aa4099470af643a8d5b4f991f5bd55884b900e727003f9f29ade8813", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70540470-ddf1-4add-9953-8fe27b807efa", "node_type": "1", "metadata": {}, "hash": "4342b925a59ecd020e7ec348aab7dc3d6b67428d98d039109be530236013d479", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Users submit their **payments** as **KeywordRecords**:\n\n```js\nconst aFistfulOfQuatloos = AmountMath.make(quatloosBrand, 1000n);\nconst paymentKeywordRecord = {\n  Asset: quatloosPurse.withdraw(aFistfulOfQuatloos)\n};\n```\n\n## ParsableNumber\n\nA **ParsableNumber** is defined as a **bigint**, **number**, or **string**.\n\n## Ratio", "mimetype": "text/plain", "start_char_idx": 3604, "end_char_idx": 3927, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "70540470-ddf1-4add-9953-8fe27b807efa": {"__data__": {"id_": "70540470-ddf1-4add-9953-8fe27b807efa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f95656b-9a1f-4b55-a815-9a2666cdf865", "node_type": "1", "metadata": {}, "hash": "449b94432cc58fc266f9e4d1596510034152f695cdbe85930d73f2d8bf5dec7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979", "node_type": "1", "metadata": {}, "hash": "a1c0b84345af74abd097ee8085ed3d23368b238732db444700d08f303ba9a3e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## Ratio\n\n**Ratios** are pass-by-value records that consist of a\n_numerator_ and a _denominator_. Both of these consist of a\n**[AmountValue](/reference/ertp-api/ertp-data-types#amountvalue)** and a **[Brand](/reference/ertp-api/brand)**,\njust like **[Amounts](/reference/ertp-api/ertp-data-types#amount)**.\nA **Ratio** cannot have a denominator value of 0.\n\nThe most common kind of **Ratio** is applied to an **Amount** of a particular **Brand**\nand produces results of the same **Brand**.", "mimetype": "text/plain", "start_char_idx": 3919, "end_char_idx": 4408, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979": {"__data__": {"id_": "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70540470-ddf1-4add-9953-8fe27b807efa", "node_type": "1", "metadata": {}, "hash": "4342b925a59ecd020e7ec348aab7dc3d6b67428d98d039109be530236013d479", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a1f0023-4051-4212-b480-c112fead71cf", "node_type": "1", "metadata": {}, "hash": "58ccc4220130c09963d3ec28b98545c56f985f5e1b2d8154cff14280b2bcbdc8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Ratios** can also have two different **Brands**, essentially typing them such as miles per\nhour or US dollars for Swiss francs (i.e., an exchange rate ratio).\n\n## TransferPart", "mimetype": "text/plain", "start_char_idx": 4410, "end_char_idx": 4587, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a1f0023-4051-4212-b480-c112fead71cf": {"__data__": {"id_": "6a1f0023-4051-4212-b480-c112fead71cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979", "node_type": "1", "metadata": {}, "hash": "a1c0b84345af74abd097ee8085ed3d23368b238732db444700d08f303ba9a3e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5b40086-2a89-474d-9015-9f48a9c8df22", "node_type": "1", "metadata": {}, "hash": "cfbf7170a9afce94e3248921b88eb224ecf4a964158ebde0bad016395dc3e339", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## TransferPart\n\n**TransferParts** are the individual elements of the _transfer_ array passed into the\n**[atomicRearrange()](./zoe-helpers#atomicrearrange-zcf-transfers)** function. Each **TransferPart**\nrepresents one or two **[Allocation](#allocation)** changes among existing\n**[ZCFSeats](./zcfseat)**. Each **TransferPart** consists of 4 elements, each of which can be elided\nin some cases:", "mimetype": "text/plain", "start_char_idx": 4572, "end_char_idx": 4966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5b40086-2a89-474d-9015-9f48a9c8df22": {"__data__": {"id_": "d5b40086-2a89-474d-9015-9f48a9c8df22", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a1f0023-4051-4212-b480-c112fead71cf", "node_type": "1", "metadata": {}, "hash": "58ccc4220130c09963d3ec28b98545c56f985f5e1b2d8154cff14280b2bcbdc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec49b791-54c1-4ddc-a287-c41aa74da1dc", "node_type": "1", "metadata": {}, "hash": "efc5177e040a5fac38daaa7efb8314fe28bca8723c1fceb5f9fbe173cacaa87d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **fromSeat**?: **ZCFSeat** - The seat from which **amounts** are being taken.\n- **toSeat**?: **ZCFSeat** - The seat to which **amounts** are being given.\n- **fromAmounts**?: **[AmountKeywordRecord](#keywordrecord)** - The **amounts** which will be taken from the _fromSeat_.\n- **toAmounts**?: **AmountKeywordRecord** - The **amounts** which will be given to the _toSeat_.", "mimetype": "text/plain", "start_char_idx": 4968, "end_char_idx": 5341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec49b791-54c1-4ddc-a287-c41aa74da1dc": {"__data__": {"id_": "ec49b791-54c1-4ddc-a287-c41aa74da1dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5b40086-2a89-474d-9015-9f48a9c8df22", "node_type": "1", "metadata": {}, "hash": "cfbf7170a9afce94e3248921b88eb224ecf4a964158ebde0bad016395dc3e339", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f365d0f-f051-469d-8cf2-4074bcb92d61", "node_type": "1", "metadata": {}, "hash": "09fc4b41e7e2a29e5cb2561bf7057aa1a4a345dba480e7218464e5bdafdef3a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If a _fromSeat_ is specified, then a _fromAmounts_ is required. When you specify a _toSeat_ without\nspecifying a _toAmounts_, it means that the _fromAmount_ will be taken from _fromSeat_ and given to\n_toSeat_.", "mimetype": "text/plain", "start_char_idx": 5343, "end_char_idx": 5552, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f365d0f-f051-469d-8cf2-4074bcb92d61": {"__data__": {"id_": "0f365d0f-f051-469d-8cf2-4074bcb92d61", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec49b791-54c1-4ddc-a287-c41aa74da1dc", "node_type": "1", "metadata": {}, "hash": "efc5177e040a5fac38daaa7efb8314fe28bca8723c1fceb5f9fbe173cacaa87d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ff944d4-304d-4665-938d-3569ecb4ffa1", "node_type": "1", "metadata": {}, "hash": "1e3cc0c56d81036e620c4d0a2e4a5dcfb90cecf0e4fcfc89ecbb16775543fb56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**TransferParts** that represent one side of a transfer\ncan be created using the helper functions\n**[fromOnly()](./zoe-helpers#fromonly-fromseat-fromamounts)** or\n**[toOnly()](./zoe-helpers#toonly-toseat-toamounts)**.\nOf course, as with any JavaScript datatype, you can also manually create **TransferParts**.\nIf you manually create a **TransferPart** and don't include the _fromSeat_, _toSeat_, and/or\n_fromAmounts_ fields, you'll need to set the missing fields to **undefined**. (Note that if you don't", "mimetype": "text/plain", "start_char_idx": 5554, "end_char_idx": 6058, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0ff944d4-304d-4665-938d-3569ecb4ffa1": {"__data__": {"id_": "0ff944d4-304d-4665-938d-3569ecb4ffa1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-data-types.md", "node_type": "4", "metadata": {}, "hash": "ac8702f956a2d86b17b6895a1709a5be684db7185934208317dcc42540abc0cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f365d0f-f051-469d-8cf2-4074bcb92d61", "node_type": "1", "metadata": {}, "hash": "09fc4b41e7e2a29e5cb2561bf7057aa1a4a345dba480e7218464e5bdafdef3a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "include the _toAmounts_ field, there's no need to set it to **undefined**; you can simply omit it.)", "mimetype": "text/plain", "start_char_idx": 6059, "end_char_idx": 6158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dba51709-bd69-4e7d-abbd-fad45f30793e": {"__data__": {"id_": "dba51709-bd69-4e7d-abbd-fad45f30793e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5110d15f-432f-4f8d-af20-7b29e0bed3b1", "node_type": "1", "metadata": {}, "hash": "9060662ae5a4ae817a0d797683acb9bf9b8f9c85c98fe3e605c30c69f4d6f47f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ZoeHelper Functions\n\nThe ZoeHelper functions provide convenient abstractions for accessing Zoe functionality from within\ncontracts. In most cases, you pass a reference to zcf or one or more seats.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 198, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5110d15f-432f-4f8d-af20-7b29e0bed3b1": {"__data__": {"id_": "5110d15f-432f-4f8d-af20-7b29e0bed3b1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dba51709-bd69-4e7d-abbd-fad45f30793e", "node_type": "1", "metadata": {}, "hash": "b0419d7758584a0f2a5f3ce93aa387e018946ae1b1c8c42f56e17d696428d3e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23cf50df-7956-4a80-a7ed-98ab665181c3", "node_type": "1", "metadata": {}, "hash": "e3e84b7ce281685ecf5a9270db62c4400dfd7934f9a03e91c25c5f4a407566cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All of the ZoeHelper functions are described below. To use any of them, import them\ndirectly from **@agoric/zoe/src/contractSupport/index.js**. For example, the\nfollowing imports the two ZoeHelper functions **[assertIssuerKeywords()](#assertissuerkeywords-zcf-expected)** and\n**[assertProposalShape()](#assertproposalshape-seat-expected)**:\n\n```js\nimport {\n  assertIssuerKeywords,\n  assertProposalShape\n} from '@agoric/zoe/src/contractSupport/index.js';\n```\n\n## atomicRearrange(zcf, transfers)", "mimetype": "text/plain", "start_char_idx": 200, "end_char_idx": 693, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23cf50df-7956-4a80-a7ed-98ab665181c3": {"__data__": {"id_": "23cf50df-7956-4a80-a7ed-98ab665181c3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5110d15f-432f-4f8d-af20-7b29e0bed3b1", "node_type": "1", "metadata": {}, "hash": "9060662ae5a4ae817a0d797683acb9bf9b8f9c85c98fe3e605c30c69f4d6f47f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f1134ee-e5fe-495d-90a5-6846e6656d0b", "node_type": "1", "metadata": {}, "hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## atomicRearrange(zcf, transfers)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **transfers**: **Array&lt;[TransferPart](./zoe-data-types#transferpart)>**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 659, "end_char_idx": 844, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f1134ee-e5fe-495d-90a5-6846e6656d0b": {"__data__": {"id_": "1f1134ee-e5fe-495d-90a5-6846e6656d0b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23cf50df-7956-4a80-a7ed-98ab665181c3", "node_type": "1", "metadata": {}, "hash": "e3e84b7ce281685ecf5a9270db62c4400dfd7934f9a03e91c25c5f4a407566cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b278f8d-e6d8-4af9-95c5-2f246a771c3a", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Asks Zoe to rearrange the **[Allocations](./zoe-data-types#allocation)** among the seats mentioned in\n_transfers_. _transfers_ are a set of changes to **Allocations** that must satisfy several\nconstraints. If these constraints are all met, then the reallocation happens atomically. Otherwise an\nerror is thrown and none of the proposed changes has any effect. The constraints are as follows.\n\n- All the mentioned seats are still live.\n- There aren't any outstanding stagings for any of the mentioned seats.", "mimetype": "text/plain", "start_char_idx": 846, "end_char_idx": 1352, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b278f8d-e6d8-4af9-95c5-2f246a771c3a": {"__data__": {"id_": "4b278f8d-e6d8-4af9-95c5-2f246a771c3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f1134ee-e5fe-495d-90a5-6846e6656d0b", "node_type": "1", "metadata": {}, "hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6a7111b-48d8-4fed-aee8-3c2c4ad76964", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Stagings are a reallocation mechanism that has been\n  deprecated in favor of this **atomicRearrange()** function.\n  To prevent confusion, each reallocation can only be\n  expressed in the old way or the new way, but not a mixture.", "mimetype": "text/plain", "start_char_idx": 1356, "end_char_idx": 1585, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6a7111b-48d8-4fed-aee8-3c2c4ad76964": {"__data__": {"id_": "a6a7111b-48d8-4fed-aee8-3c2c4ad76964", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b278f8d-e6d8-4af9-95c5-2f246a771c3a", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99756241-b063-4c22-a583-dfcb96a6258c", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Overall conservation must be maintained. In other words, the reallocated\n  **[Amounts](/reference/ertp-api/ertp-data-types#amount)** must balance out.\n- Offer Safety is preserved for each seat. That means reallocations can only take assets from a seat\n  as long as either it gets the assets described in the want section of its proposal, or it retains\n  all of the assets specified in the give section of the proposal. This constraint applies to each", "mimetype": "text/plain", "start_char_idx": 1587, "end_char_idx": 2039, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99756241-b063-4c22-a583-dfcb96a6258c": {"__data__": {"id_": "99756241-b063-4c22-a583-dfcb96a6258c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6a7111b-48d8-4fed-aee8-3c2c4ad76964", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80f765a9-af98-47f2-9697-09ee724fc62e", "node_type": "1", "metadata": {}, "hash": "64b8582a3ca0ba5572fc290a6be0657e3ba28942d5110fd6c8c107d0c558d2d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "seat across the entire atomicRearrangement, not to the individual **TransferParts**.", "mimetype": "text/plain", "start_char_idx": 2042, "end_char_idx": 2126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "80f765a9-af98-47f2-9697-09ee724fc62e": {"__data__": {"id_": "80f765a9-af98-47f2-9697-09ee724fc62e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99756241-b063-4c22-a583-dfcb96a6258c", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7e6cbf3-e650-4160-b62f-d202f0d68547", "node_type": "1", "metadata": {}, "hash": "596424cafdd73971b48747ddb58360cc4e600e61b203ebaab1ec7aa9e272aa2e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Note that you can construct the **TransferParts** that make up the _transfers_ array manually, or for\ntransfers that only include one seat, you can use the helper functions\n**[fromOnly()](#fromonly-fromseat-fromamounts)** and **[toOnly()](#toonly-toseat-toamounts)** to create\n**TransferParts** that only use a subset of the fields.\n\n## fromOnly(fromSeat, fromAmounts)", "mimetype": "text/plain", "start_char_idx": 2128, "end_char_idx": 2496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7e6cbf3-e650-4160-b62f-d202f0d68547": {"__data__": {"id_": "c7e6cbf3-e650-4160-b62f-d202f0d68547", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80f765a9-af98-47f2-9697-09ee724fc62e", "node_type": "1", "metadata": {}, "hash": "64b8582a3ca0ba5572fc290a6be0657e3ba28942d5110fd6c8c107d0c558d2d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cc205c0-b7ad-413b-85f2-e2c1087bb169", "node_type": "1", "metadata": {}, "hash": "f677fe47ed5ae34a07a85067a0b26773cca1e92d196fb4d272e6fc8d0749b41e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## fromOnly(fromSeat, fromAmounts)\n\n- **fromSeat**: **[ZCFSeat](./zcfseat)**\n- **fromAmounts**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- Returns: **[TransferPart](./zoe-data-types#transferpart)**\n\nReturns a **TransferPart** which only takes **fromAmounts** from _fromSeat_. **TransferParts** are used\nas part of the _transfer_ argument of the **[atomicRearrange()](#atomicrearrange-zcf-transfers)**\nfunction.\n\n## toOnly(toSeat, toAmounts)", "mimetype": "text/plain", "start_char_idx": 2462, "end_char_idx": 2919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cc205c0-b7ad-413b-85f2-e2c1087bb169": {"__data__": {"id_": "9cc205c0-b7ad-413b-85f2-e2c1087bb169", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7e6cbf3-e650-4160-b62f-d202f0d68547", "node_type": "1", "metadata": {}, "hash": "596424cafdd73971b48747ddb58360cc4e600e61b203ebaab1ec7aa9e272aa2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9", "node_type": "1", "metadata": {}, "hash": "8b253f2b4e6c56903127cef67c5e763319e675ab255820eb0b392f31ad6fdca0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## toOnly(toSeat, toAmounts)\n\n- **toSeat**: **[ZCFSeat](./zcfseat)**\n- **toAmounts**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- Returns: **[TransferPart](./zoe-data-types#transferpart)**\n\nReturns a **TransferPart** which only gives **toAmount** to _toSeat_. **TransferParts** are used as part\nof the _transfer_ argument of the **[atomicRearrange()](#atomicrearrange-zcf-transfers)** function.\n\n## atomicTransfer(zcf, fromSeat, toSeat, fromAmounts, toAmounts?)", "mimetype": "text/plain", "start_char_idx": 2891, "end_char_idx": 3368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9": {"__data__": {"id_": "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cc205c0-b7ad-413b-85f2-e2c1087bb169", "node_type": "1", "metadata": {}, "hash": "f677fe47ed5ae34a07a85067a0b26773cca1e92d196fb4d272e6fc8d0749b41e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bd43ba4-a2e7-475b-88b5-68b49e626281", "node_type": "1", "metadata": {}, "hash": "785834f08911b86fcab0fa9007a032ef9833ba9d82f6202dc474707fd7e55c98", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **fromSeat**: **[ZCFSeat](./zcfseat)** - Optional.\n- **toSeat**: **ZCFSeat** - Optional.\n- **fromAmounts**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)** - Optional.\n- **toAmounts**: **AmountKeywordRecord** - Optional, defaults to **fromAmounts**.\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 3370, "end_char_idx": 3704, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3bd43ba4-a2e7-475b-88b5-68b49e626281": {"__data__": {"id_": "3bd43ba4-a2e7-475b-88b5-68b49e626281", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9", "node_type": "1", "metadata": {}, "hash": "8b253f2b4e6c56903127cef67c5e763319e675ab255820eb0b392f31ad6fdca0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b5f438e-dc02-4d03-b20d-20f3f41a49cf", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Asks Zoe to rearrange the **[Allocations](./zoe-data-types#allocation)** among the seats mentioned in\n_fromSeat_ and _toSeat_. The reallocations must satisfy several constraints. If these constraints are all\nmet, then the reallocation happens atomically. Otherwise an error is thrown and none of the proposed\nchanges has any effect. The constraints are as follows.\n\n- All the mentioned seats are still live.\n- There aren't any outstanding stagings for any of the mentioned seats.", "mimetype": "text/plain", "start_char_idx": 3706, "end_char_idx": 4185, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b5f438e-dc02-4d03-b20d-20f3f41a49cf": {"__data__": {"id_": "7b5f438e-dc02-4d03-b20d-20f3f41a49cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bd43ba4-a2e7-475b-88b5-68b49e626281", "node_type": "1", "metadata": {}, "hash": "785834f08911b86fcab0fa9007a032ef9833ba9d82f6202dc474707fd7e55c98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Stagings are a reallocation mechanism that has been\n  deprecated in favor of this **atomicRearrange()** function.\n  To prevent confusion, each reallocation can only be\n  expressed in the old way or the new way, but not a mixture.", "mimetype": "text/plain", "start_char_idx": 1356, "end_char_idx": 1585, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209": {"__data__": {"id_": "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b5f438e-dc02-4d03-b20d-20f3f41a49cf", "node_type": "1", "metadata": {}, "hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d856a7b-2eb6-4615-be4c-41f39ea6f538", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Overall conservation must be maintained. In other words, the reallocated\n  **[Amounts](/reference/ertp-api/ertp-data-types#amount)** must balance out.\n- Offer Safety is preserved for each seat. That means reallocations can only take assets from a seat\n  as long as either it gets the assets described in the want section of its proposal, or it retains\n  all of the assets specified in the give section of the proposal. This constraint applies to each", "mimetype": "text/plain", "start_char_idx": 1587, "end_char_idx": 2039, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d856a7b-2eb6-4615-be4c-41f39ea6f538": {"__data__": {"id_": "4d856a7b-2eb6-4615-be4c-41f39ea6f538", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209", "node_type": "1", "metadata": {}, "hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03eef8f8-9193-46a0-aa18-d5c1654d2432", "node_type": "1", "metadata": {}, "hash": "76d7429a8d114637875b559a4c3cff5d459c2ce2b18d40b2b201c3d37b770739", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "seat across the entire atomicRearrangement, not to the individual **TransferParts**.", "mimetype": "text/plain", "start_char_idx": 2042, "end_char_idx": 2126, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03eef8f8-9193-46a0-aa18-d5c1654d2432": {"__data__": {"id_": "03eef8f8-9193-46a0-aa18-d5c1654d2432", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d856a7b-2eb6-4615-be4c-41f39ea6f538", "node_type": "1", "metadata": {}, "hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3", "node_type": "1", "metadata": {}, "hash": "a2e427ad7feb816efe5cc1e3bede7c686e65e5bd51f7eaf333a22093eb8b5f8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "When you don't specify _toAmounts_, it means that the _fromAmount_ will be taken from _fromSeat_ and\ngiven to _toSeat_.\n\n## assertIssuerKeywords(zcf, expected)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **expected**: **Array&lt;String>**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 4961, "end_char_idx": 5231, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3": {"__data__": {"id_": "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03eef8f8-9193-46a0-aa18-d5c1654d2432", "node_type": "1", "metadata": {}, "hash": "76d7429a8d114637875b559a4c3cff5d459c2ce2b18d40b2b201c3d37b770739", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa40b134-620f-4a3b-b1a0-f18d7afee458", "node_type": "1", "metadata": {}, "hash": "843f042fe446b6ca1d99d09a5046df1ffba33a0e95a33ca146a9ed23cb1ce840", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Checks that the **[Keywords](./zoe-data-types#keyword)** in the _expected_ argument match what the contract expects.\nThe function throws an error if incorrect or extra **Keywords** are passed\nin, or if there are **Keywords** missing. The **Keyword** order is irrelevant.\n\n```js\nimport { assertIssuerKeywords } from '@agoric/zoe/src/contractSupport/index.js';\n\n// Proposals for this contract instance use keywords 'Asset' and 'Price'\nassertIssuerKeywords(zcf, harden(['Asset', 'Price']));\n```", "mimetype": "text/plain", "start_char_idx": 5233, "end_char_idx": 5724, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aa40b134-620f-4a3b-b1a0-f18d7afee458": {"__data__": {"id_": "aa40b134-620f-4a3b-b1a0-f18d7afee458", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3", "node_type": "1", "metadata": {}, "hash": "a2e427ad7feb816efe5cc1e3bede7c686e65e5bd51f7eaf333a22093eb8b5f8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3edd22ed-1326-4213-b4c2-eaddde0a4576", "node_type": "1", "metadata": {}, "hash": "09a3feda875937469a2f58b033deb10f42c2313d9203c0a84ce3a1d1b8ae35d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## satisfies(zcf, seat, update)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **seat**: **[ZCFSeat](./zcfseat)**\n- **update**: **[AmountKeywordRecord](./zoe-data-types#keywordrecord)**\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 5726, "end_char_idx": 5946, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3edd22ed-1326-4213-b4c2-eaddde0a4576": {"__data__": {"id_": "3edd22ed-1326-4213-b4c2-eaddde0a4576", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa40b134-620f-4a3b-b1a0-f18d7afee458", "node_type": "1", "metadata": {}, "hash": "843f042fe446b6ca1d99d09a5046df1ffba33a0e95a33ca146a9ed23cb1ce840", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ad34693-30e1-4982-8901-394a632af16b", "node_type": "1", "metadata": {}, "hash": "be90c36b7c9bdf2bae8a8e6a5bda96489dffc58f37703b9a16f730de76554708", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns **true** if an update to a **seat**'s **currentAllocation** satisfies its\n**proposal.want**. Note this is half of the offer safety check;\nit does not check if the **[Allocation](./zoe-data-types#allocation)** constitutes a refund.\nThe update is merged with **currentAllocation** such that\n_update_'s values prevail if the **[Keywords](./zoe-data-types#keyword)** are the same. If they\nare not the same, the **Keyword** and **value** is just added to the **currentAllocation**.", "mimetype": "text/plain", "start_char_idx": 5948, "end_char_idx": 6432, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ad34693-30e1-4982-8901-394a632af16b": {"__data__": {"id_": "5ad34693-30e1-4982-8901-394a632af16b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3edd22ed-1326-4213-b4c2-eaddde0a4576", "node_type": "1", "metadata": {}, "hash": "09a3feda875937469a2f58b033deb10f42c2313d9203c0a84ce3a1d1b8ae35d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52b725cb-c657-440f-8a55-3693fbec2c06", "node_type": "1", "metadata": {}, "hash": "e3017f692c575188631bcdae9c06db6bbc84e01e6d16e982a86d51b02f3c3fe6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The following example code uses **satisfies()** to define a **satisfiedBy()** comparison\nfunction between two **seats**. It checks if the second **seat** argument's _currentAllocation_\nsatisfies the first **seat** argument's **proposal.want**.\n\nIt then calls **satisfiedBy()** on both orders of the two **seats**. If both satisfy each other,\nit does a swap on them.\n\n```js\nimport { satisfies } from '@agoric/zoe/src/contractSupport/index.js';", "mimetype": "text/plain", "start_char_idx": 6434, "end_char_idx": 6876, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "52b725cb-c657-440f-8a55-3693fbec2c06": {"__data__": {"id_": "52b725cb-c657-440f-8a55-3693fbec2c06", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ad34693-30e1-4982-8901-394a632af16b", "node_type": "1", "metadata": {}, "hash": "be90c36b7c9bdf2bae8a8e6a5bda96489dffc58f37703b9a16f730de76554708", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85c0f5cf-f126-42a9-8e9b-57dc8c253a35", "node_type": "1", "metadata": {}, "hash": "d9f74c0f888c9e5f1e0b2e315dd50b2854e9d7a2b8753973a750e7eb61e044e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const satisfiedBy = (xSeat, ySeat) =>\n  satisfies(zcf, xSeat, ySeat.getCurrentAllocation());\n\nif (satisfiedBy(offer, seat) && satisfiedBy(seat, offer)) {\n  swap(zcf, seat, offer);\n}\n```\n\n## swap(zcf, leftSeat, rightSeat)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **leftSeat**: **[ZCFSeat](./zcfseat)**\n- **rightSeat**: **ZCFSeat**\n- Returns: **defaultAcceptanceMsg**", "mimetype": "text/plain", "start_char_idx": 6878, "end_char_idx": 7261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "85c0f5cf-f126-42a9-8e9b-57dc8c253a35": {"__data__": {"id_": "85c0f5cf-f126-42a9-8e9b-57dc8c253a35", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52b725cb-c657-440f-8a55-3693fbec2c06", "node_type": "1", "metadata": {}, "hash": "e3017f692c575188631bcdae9c06db6bbc84e01e6d16e982a86d51b02f3c3fe6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "462891e8-984d-414c-b6a2-5e07f8435b64", "node_type": "1", "metadata": {}, "hash": "caf15029f8b7c2925f991264e0a48aa81e6a856772e3521977b1b1a1a6cfc357", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For both **seats**, everything a **seat** wants is given to it, having been\ntaken from the other **seat**. **swap()** exits both **seats**.\nUse **swap()** when all of these are true:\n\n- Both **seats** use the same **[Keywords](./zoe-data-types#keyword)**.\n- The **seats**' wants can be fulfilled from the other **seat**.\n- No further **seat** interaction is desired.", "mimetype": "text/plain", "start_char_idx": 7263, "end_char_idx": 7629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "462891e8-984d-414c-b6a2-5e07f8435b64": {"__data__": {"id_": "462891e8-984d-414c-b6a2-5e07f8435b64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85c0f5cf-f126-42a9-8e9b-57dc8c253a35", "node_type": "1", "metadata": {}, "hash": "d9f74c0f888c9e5f1e0b2e315dd50b2854e9d7a2b8753973a750e7eb61e044e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ebc441a-ac82-4f40-ac2a-4f50f8082041", "node_type": "1", "metadata": {}, "hash": "a43f7f31f6283711c023608d3728f36c4116af7eb5e979b7d052c0586876522a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the two **seats** can trade, they swap their compatible assets,\nexiting both **seats**. It returns the message **The offer has been accepted.\nOnce the contract has been completed, please check your payout**.\n\nAny surplus remains with whichever **seat** has the surplus.\nFor example if **seat** A gives 5 Quatloos and **seat** B only\nwants 3 Quatloos, **seat** A retains 2 Quatloos.\n\nIf the swap fails, no assets transfer, and both _leftSeat_ and _rightSeat_ are exited.", "mimetype": "text/plain", "start_char_idx": 7631, "end_char_idx": 8103, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ebc441a-ac82-4f40-ac2a-4f50f8082041": {"__data__": {"id_": "6ebc441a-ac82-4f40-ac2a-4f50f8082041", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "462891e8-984d-414c-b6a2-5e07f8435b64", "node_type": "1", "metadata": {}, "hash": "caf15029f8b7c2925f991264e0a48aa81e6a856772e3521977b1b1a1a6cfc357", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36738d28-b1b9-4cde-a273-8f47af46768a", "node_type": "1", "metadata": {}, "hash": "0cb4ff25df5b7c8c303f78b136a5a2d74f107e16a23af72efd34d8ef4c746274", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { swap } from '@agoric/zoe/src/contractSupport.js';\n\nswap(zcf, firstSeat, secondSeat);\n```\n\n## swapExact(zcf, leftSeat, rightSeat)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **leftSeat**: **[ZCFSeat](./zcfseat)**\n- **rightSeat**: **ZCFSeat**\n- Returns: **defaultAcceptanceMsg**\n\nFor both seats, everything a seat wants is given to it, having been\ntaken from the other seat. **swapExact()** exits both seats.\nUse **swapExact()** when both of these are true:", "mimetype": "text/plain", "start_char_idx": 8105, "end_char_idx": 8590, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36738d28-b1b9-4cde-a273-8f47af46768a": {"__data__": {"id_": "36738d28-b1b9-4cde-a273-8f47af46768a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ebc441a-ac82-4f40-ac2a-4f50f8082041", "node_type": "1", "metadata": {}, "hash": "a43f7f31f6283711c023608d3728f36c4116af7eb5e979b7d052c0586876522a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e535a283-c88d-4b01-85f9-9e1d83eb7d51", "node_type": "1", "metadata": {}, "hash": "9269c5730cac0fc4d6fb50873dd26568750bfc75265d096c03b69f42f847c373", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- The **seats**' wants can be fulfilled from the other **seat**.\n- No further **seat** interaction is desired.\n\nNote that unlike the **swap()** function, _leftSeat_ and _rightSeat_ don't necessarily use the same **[Keywords](./zoe-data-types#keyword)**.", "mimetype": "text/plain", "start_char_idx": 8592, "end_char_idx": 8845, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e535a283-c88d-4b01-85f9-9e1d83eb7d51": {"__data__": {"id_": "e535a283-c88d-4b01-85f9-9e1d83eb7d51", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36738d28-b1b9-4cde-a273-8f47af46768a", "node_type": "1", "metadata": {}, "hash": "0cb4ff25df5b7c8c303f78b136a5a2d74f107e16a23af72efd34d8ef4c746274", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0bad6ddf-0f53-4ca7-a968-1f9c43355b53", "node_type": "1", "metadata": {}, "hash": "ba9643c93a688654826485c5da01c4d0b37ea507cf3cdca7f78d79b92ceb9683", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**swapExact()** is a special case of **swap()** such that it is successful only\nif both seats gain everything they want and lose everything they were willing to give.\nIt is only good for exact and entire swaps where each\nseat wants everything that the other seat has. The benefit of using\nthis method is that the **Keywords** of each seat do not matter.", "mimetype": "text/plain", "start_char_idx": 8847, "end_char_idx": 9200, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0bad6ddf-0f53-4ca7-a968-1f9c43355b53": {"__data__": {"id_": "0bad6ddf-0f53-4ca7-a968-1f9c43355b53", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e535a283-c88d-4b01-85f9-9e1d83eb7d51", "node_type": "1", "metadata": {}, "hash": "9269c5730cac0fc4d6fb50873dd26568750bfc75265d096c03b69f42f847c373", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb900323-27e2-461f-8f1e-87735239cb2b", "node_type": "1", "metadata": {}, "hash": "c11d8d1c8df2478f799b1aafabdb9982a98aea84ec7b19f88c095c489af9ee37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the two **seats** can trade, they swap their compatible assets,\nexiting both **seats**. It returns the message **The offer has been accepted.\nOnce the contract has been completed, please check your payout**.\n\nIf the swap fails, no assets transfer, and both _leftSeat_ and _rightSeat_ are exited.\n\n```js\nimport { swapExact } from '@agoric/zoe/src/contractSupport/index.js';\n\nconst swapMsg = swapExact(zcf, zcfSeatA, zcfSeatB);\n```\n\n## fitProposalShape(seat, proposalShape)", "mimetype": "text/plain", "start_char_idx": 9202, "end_char_idx": 9676, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb900323-27e2-461f-8f1e-87735239cb2b": {"__data__": {"id_": "bb900323-27e2-461f-8f1e-87735239cb2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0bad6ddf-0f53-4ca7-a968-1f9c43355b53", "node_type": "1", "metadata": {}, "hash": "ba9643c93a688654826485c5da01c4d0b37ea507cf3cdca7f78d79b92ceb9683", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431", "node_type": "1", "metadata": {}, "hash": "a02add6f1b2e3897ef45920db60788ae5bd635d2525f85cb721246fb112e4798", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **seat**: **[ZCFSeat](./zcfseat)**\n- **proposalShape**: **[Pattern](https://github.com/endojs/endo/tree/master/packages/patterns#readme)**\n- Returns: None.\n\nChecks the seat's proposal against the _proposalShape_ argument. If the proposal does not match _proposalShape_, the seat will be exited and all **[Payments](/reference/ertp-api/payment)** will be refunded.\n\n## assertProposalShape(seat, expected)\n\n- **seat**: **[ZCFSeat](./zcfseat)**\n- **expected**: **ExpectedRecord**\n- Returns: None.", "mimetype": "text/plain", "start_char_idx": 9678, "end_char_idx": 10173, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431": {"__data__": {"id_": "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb900323-27e2-461f-8f1e-87735239cb2b", "node_type": "1", "metadata": {}, "hash": "c11d8d1c8df2478f799b1aafabdb9982a98aea84ec7b19f88c095c489af9ee37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e405efc-8d72-46f0-92bd-92925250c46f", "node_type": "1", "metadata": {}, "hash": "c706d682295d06b328a190025707e6aece4028e5d72a2f3d1de84e38f86b41d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Note: Most uses of `assertProposalShape` are better\nexpressed using the `proposalShape` argument\nof [zcf.makeInvitation()](./zoe-contract-facet#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape)**.\n\nChecks the seat's proposal against an _expected_ record that says\nwhat shape of proposal is acceptable.", "mimetype": "text/plain", "start_char_idx": 10175, "end_char_idx": 10501, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e405efc-8d72-46f0-92bd-92925250c46f": {"__data__": {"id_": "4e405efc-8d72-46f0-92bd-92925250c46f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431", "node_type": "1", "metadata": {}, "hash": "a02add6f1b2e3897ef45920db60788ae5bd635d2525f85cb721246fb112e4798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e", "node_type": "1", "metadata": {}, "hash": "199a3aaaa09a138fe72095b70422caf033f9cb6cd0c863b60c62e32cbd23b31d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "By \"shape\", we mean the **give**, **want**, and **exit** rule **[Keywords](./zoe-data-types#keyword)** of the proposal must be equal to\nthose in _expected_. Note that **exit** rule **Keywords** are optional in _expected_. Also, none of the\nvalues of those **Keywords** are checked.", "mimetype": "text/plain", "start_char_idx": 10503, "end_char_idx": 10784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e": {"__data__": {"id_": "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e405efc-8d72-46f0-92bd-92925250c46f", "node_type": "1", "metadata": {}, "hash": "c706d682295d06b328a190025707e6aece4028e5d72a2f3d1de84e38f86b41d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd186799-78b0-47b6-bad4-b53d092be8b9", "node_type": "1", "metadata": {}, "hash": "3f1eaa483335a2b689cbf4118f94236caaab7f8b9de84ff53485a6057e8baf9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This **ExpectedRecord** is like a **Proposal**, but the amounts in **want**\nand **give** should be **null**; the **exit** clause should specify a rule with\n**null** contents. If the client submits a **Proposal** which does not match\nthese expectations, that **proposal** is rejected (and refunded).\n\n```js\nimport { assertProposalShape } from '@agoric/zoe/src/contractSupport/index.js';", "mimetype": "text/plain", "start_char_idx": 10786, "end_char_idx": 11171, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd186799-78b0-47b6-bad4-b53d092be8b9": {"__data__": {"id_": "bd186799-78b0-47b6-bad4-b53d092be8b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e", "node_type": "1", "metadata": {}, "hash": "199a3aaaa09a138fe72095b70422caf033f9cb6cd0c863b60c62e32cbd23b31d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "699d17eb-bd6a-4fba-a114-7f9bd15f4616", "node_type": "1", "metadata": {}, "hash": "29f484a2d915f44895bc0499c11108addb26b1a281aaf768321d2baf2c8217dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const sellAssetForPrice = harden({\n  give: { Asset: null },\n  want: { Price: null }\n});\nconst sell = seat => {\n  assertProposalShape(seat, sellAssetForPrice);\n  buySeats = swapIfCanTradeAndUpdateBook(buySeats, sellSeats, seat);\n  return 'Trade Successful';\n};\n```\n\n## assertNatAssetKind(zcf, brand)\n\n- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **brand**: **[Brand](/reference/ertp-api/brand)**\n- Returns: **Boolean**", "mimetype": "text/plain", "start_char_idx": 11173, "end_char_idx": 11603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "699d17eb-bd6a-4fba-a114-7f9bd15f4616": {"__data__": {"id_": "699d17eb-bd6a-4fba-a114-7f9bd15f4616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd186799-78b0-47b6-bad4-b53d092be8b9", "node_type": "1", "metadata": {}, "hash": "3f1eaa483335a2b689cbf4118f94236caaab7f8b9de84ff53485a6057e8baf9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2", "node_type": "1", "metadata": {}, "hash": "8250b47cf33a07c668c53344d27817709192d259b09daefcf0e0b012cedc6a47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Asserts that the _brand_ is [AssetKind.NAT](/reference/ertp-api/ertp-data-types#assetkind).\nThis means the corresponding **[Mint](/reference/ertp-api/mint)** creates fungible assets.\n\nIf **false** throws with message **brand must be AssetKind.NAT**.\n\n```js\nimport { assertNatAssetKind } from '@agoric/zoe/src/contractSupport/index.js';\n\nassertNatAssetKind(zcf, quatloosBrand);\n```\n\n## depositToSeat(zcf, recipientSeat, amounts, payments)", "mimetype": "text/plain", "start_char_idx": 11605, "end_char_idx": 12042, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2": {"__data__": {"id_": "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "699d17eb-bd6a-4fba-a114-7f9bd15f4616", "node_type": "1", "metadata": {}, "hash": "29f484a2d915f44895bc0499c11108addb26b1a281aaf768321d2baf2c8217dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebf9035d-a2df-4c90-ba58-159d65c2b63d", "node_type": "1", "metadata": {}, "hash": "fb50f1b1fcd47df2d866197cafd71932277d1703551edaba8e7940649323aad2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **recipientSeat**: **[ZCFSeat](./zcfseat)**\n- **amounts**: **[AmountKeywordRecord](./zoe-data-types#allocation)**\n- **payments**: **PaymentPKeywordRecord**\n- Returns: **Promise&lt;String>**\n\nDeposits payments such that their amounts are reallocated to a seat.\nThe **amounts** and **payments** records must have corresponding\n**[Keywords](./zoe-data-types#keyword)**.", "mimetype": "text/plain", "start_char_idx": 12044, "end_char_idx": 12468, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ebf9035d-a2df-4c90-ba58-159d65c2b63d": {"__data__": {"id_": "ebf9035d-a2df-4c90-ba58-159d65c2b63d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2", "node_type": "1", "metadata": {}, "hash": "8250b47cf33a07c668c53344d27817709192d259b09daefcf0e0b012cedc6a47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f1b6f6b-77fc-4602-b7f5-b036580d478a", "node_type": "1", "metadata": {}, "hash": "9a48fc923c4880cc0218e91e55485ba3cc99b982410cb6b5eeb4ecc460a0dc4c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the seat has exited, aborts with the message **The recipientSeat cannot have exited.**\n\nOn success, returns the exported and settable **depositToSeatSuccessMsg** which\ndefaults to **Deposit and reallocation successful.**\n\n```js\nimport { depositToSeat } from '@agoric/zoe/src/contractSupport/index.js';\n\nawait depositToSeat(\n  zcf,\n  zcfSeat,\n  { Dep: quatloos(2n) },\n  { Dep: quatloosPayment }\n);\n```\n\n## withdrawFromSeat(zcf, seat, amounts)", "mimetype": "text/plain", "start_char_idx": 12470, "end_char_idx": 12914, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f1b6f6b-77fc-4602-b7f5-b036580d478a": {"__data__": {"id_": "2f1b6f6b-77fc-4602-b7f5-b036580d478a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebf9035d-a2df-4c90-ba58-159d65c2b63d", "node_type": "1", "metadata": {}, "hash": "fb50f1b1fcd47df2d866197cafd71932277d1703551edaba8e7940649323aad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f744e79-6ba3-4532-8401-1e0ea71142c5", "node_type": "1", "metadata": {}, "hash": "4661ed802b5d48d80d33bcb326b6e03b3674880bbc6b2ca52cd8a34a5e47bc45", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **seat**: **[ZCFSeat](./zcfseat)**\n- **amounts**: **[AmountKeywordRecord](./zoe-data-types#allocation)**\n- Returns: **Promise&lt;PaymentPKeywordRecord>**\n\nWithdraws payments from a seat. Note that withdrawing the amounts of\nthe payments must not and cannot violate offer safety for the seat. The\n**amounts** and **payments** records must have corresponding **[Keywords](./zoe-data-types#keyword)**.", "mimetype": "text/plain", "start_char_idx": 12916, "end_char_idx": 13372, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f744e79-6ba3-4532-8401-1e0ea71142c5": {"__data__": {"id_": "8f744e79-6ba3-4532-8401-1e0ea71142c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f1b6f6b-77fc-4602-b7f5-b036580d478a", "node_type": "1", "metadata": {}, "hash": "9a48fc923c4880cc0218e91e55485ba3cc99b982410cb6b5eeb4ecc460a0dc4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1c31795-74b7-499a-b3f9-386332845e0c", "node_type": "1", "metadata": {}, "hash": "b17bf54f6034ed0ab9d525f2de4904da0fe0fcf1be5a8e0fb05c210218d7f210", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "If the seat has exited, aborts with the message **The seat cannot have exited.**\n\nUnlike **depositToSeat()**, a **PaymentPKeywordRecord** is returned, not a success message.\n\n```js\nimport { withdrawFromSeat } from '@agoric/zoe/src/contractSupport/index.js';\n\nconst paymentKeywordRecord = await withdrawFromSeat(zcf, zcfSeat, {\n  With: quatloos(2n)\n});\n```\n\n## saveAllIssuers(zcf, issuerKeywordRecord)", "mimetype": "text/plain", "start_char_idx": 13374, "end_char_idx": 13774, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1c31795-74b7-499a-b3f9-386332845e0c": {"__data__": {"id_": "b1c31795-74b7-499a-b3f9-386332845e0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f744e79-6ba3-4532-8401-1e0ea71142c5", "node_type": "1", "metadata": {}, "hash": "4661ed802b5d48d80d33bcb326b6e03b3674880bbc6b2ca52cd8a34a5e47bc45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "400603cb-4242-4736-8c8e-8ed96d935a8b", "node_type": "1", "metadata": {}, "hash": "5e00797f0d79a83dee5d1090c57a800b121f3efcab17690758571ee7c77e8ad2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **issuerKeywordRecord**: **IssuerKeywordRecord**\n- Returns: **Promise&lt;PaymentPKeywordRecord>**\n\nSaves all of the issuers in an **IssuersKeywordRecord** to ZCF, using\nthe method [**zcf.saveIssuer()**](./zoe-contract-facet#zcf-saveissuer-issuer-keyword).\n\nThis does **not** error if any of the **[Keywords](./zoe-data-types#keyword)** already exist. If the **Keyword** is\nalready present, it is ignored.", "mimetype": "text/plain", "start_char_idx": 13776, "end_char_idx": 14238, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "400603cb-4242-4736-8c8e-8ed96d935a8b": {"__data__": {"id_": "400603cb-4242-4736-8c8e-8ed96d935a8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1c31795-74b7-499a-b3f9-386332845e0c", "node_type": "1", "metadata": {}, "hash": "b17bf54f6034ed0ab9d525f2de4904da0fe0fcf1be5a8e0fb05c210218d7f210", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6fd6ede-66fc-4527-9c66-ac981610f2d6", "node_type": "1", "metadata": {}, "hash": "74b4df0ebb48cb52d75f933e730ad5400a4a197101783d32e4985050c01f1e0d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nimport { saveAllIssuers } from '@agoric/zoe/src/contractSupport/index.js';\n\nawait saveAllIssuers(zcf, { G: gIssuer, D: dIssuer, P: pIssuer });\n```\n\n## offerTo(zcf, invitation, keywordMapping, proposal, fromSeat, toSeat, offerArgs)", "mimetype": "text/plain", "start_char_idx": 14240, "end_char_idx": 14476, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6fd6ede-66fc-4527-9c66-ac981610f2d6": {"__data__": {"id_": "f6fd6ede-66fc-4527-9c66-ac981610f2d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "400603cb-4242-4736-8c8e-8ed96d935a8b", "node_type": "1", "metadata": {}, "hash": "5e00797f0d79a83dee5d1090c57a800b121f3efcab17690758571ee7c77e8ad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2057a89f-c8ea-4179-8300-525442084df7", "node_type": "1", "metadata": {}, "hash": "ade053a8147bbe2260821df8a744dfe9f439a02532538b44595aa613ff0506fb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **zcf**: **[ZoeContractFacet](./zoe-contract-facet)**\n- **invitation**: **ERef&lt;[Invitation](./zoe-data-types#invitation)>**\n- **keywordMapping**: **KeywordRecord**\n- **proposal**: **Proposal**\n- **fromSeat**: **[ZCFSeat](./zcfseat)**\n- **toSeat**: **ZCFSeat**\n- **offerArgs**: **Object**\n- Returns: **OfferToReturns**", "mimetype": "text/plain", "start_char_idx": 14478, "end_char_idx": 14800, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2057a89f-c8ea-4179-8300-525442084df7": {"__data__": {"id_": "2057a89f-c8ea-4179-8300-525442084df7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6fd6ede-66fc-4527-9c66-ac981610f2d6", "node_type": "1", "metadata": {}, "hash": "74b4df0ebb48cb52d75f933e730ad5400a4a197101783d32e4985050c01f1e0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9", "node_type": "1", "metadata": {}, "hash": "31207a358acb2845f3305aa158711ed010e7a806aeea4a1b439091142effb02f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**offerTo()** makes an offer from your current contract instance (which\nwe'll call \"contractA\") to another contract instance (which we'll call\n\"contractB\"). It withdraws offer payments from the _fromSeat_ in\ncontractA and deposits any payouts in the _toSeat_, also a contractA\nseat. Note that _fromSeat_ and _toSeat_ may be the same seat, which is\nthe default condition (i.e. _toSeat_ is an optional parameter\ndefaulting to _fromSeat_'s value). **offerTo()** can be used to make an", "mimetype": "text/plain", "start_char_idx": 14802, "end_char_idx": 15283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9": {"__data__": {"id_": "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2057a89f-c8ea-4179-8300-525442084df7", "node_type": "1", "metadata": {}, "hash": "ade053a8147bbe2260821df8a744dfe9f439a02532538b44595aa613ff0506fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e14b12d3-5837-42c6-ac1f-81073397b449", "node_type": "1", "metadata": {}, "hash": "8fa230378cfe3cf7cb12cfbb12942c139338eafff769eaca181cca2a6bbaa481", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "offer from any contract instance to any other contract instance, as\nlong as the _fromSeat_ allows the withdrawal without violating\noffer-safety. To be clear, this does mean that contractA and contractB\ndo not have to be instances of the same contract.", "mimetype": "text/plain", "start_char_idx": 15284, "end_char_idx": 15535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e14b12d3-5837-42c6-ac1f-81073397b449": {"__data__": {"id_": "e14b12d3-5837-42c6-ac1f-81073397b449", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9", "node_type": "1", "metadata": {}, "hash": "31207a358acb2845f3305aa158711ed010e7a806aeea4a1b439091142effb02f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae6c5943-2cee-414d-abfd-c09114107756", "node_type": "1", "metadata": {}, "hash": "3990310a6836d41b8e68be3d2c7a7b79f74014dc1db9b9e54ab6a3f49d7c963a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_zcf_ is contractA's Zoe contract facet. The _invitation_ parameter is an **Invitation**\nto contractB. The _proposal_ parameter is the proposal part of the offer made to contractB.", "mimetype": "text/plain", "start_char_idx": 15537, "end_char_idx": 15717, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae6c5943-2cee-414d-abfd-c09114107756": {"__data__": {"id_": "ae6c5943-2cee-414d-abfd-c09114107756", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e14b12d3-5837-42c6-ac1f-81073397b449", "node_type": "1", "metadata": {}, "hash": "8fa230378cfe3cf7cb12cfbb12942c139338eafff769eaca181cca2a6bbaa481", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4b46f3b-c101-4952-be3f-adfc414fc9e5", "node_type": "1", "metadata": {}, "hash": "36f5a335878f5911bbaf6ddea2a33ec301db99ca8e0b61a0086de29e071168e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_keywordMapping_ is a record of the **[Keywords](./zoe-data-types#keyword)** used in contractA mapped to the\n**Keywords** for contractB. Note that the pathway to deposit the payout back to\ncontractA reverses this mapping. It looks like this, where the **Keywords** are\nfrom the contracts indicated by using \"A\" or \"B\" in the **Keyword** name.\n\n```js\n// Map the keywords in contractA to the keywords in contractB\nconst keywordMapping = harden({\n  TokenA1: 'TokenB1',\n  TokenA2: 'TokenB2'\n});\n```", "mimetype": "text/plain", "start_char_idx": 15719, "end_char_idx": 16213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4b46f3b-c101-4952-be3f-adfc414fc9e5": {"__data__": {"id_": "b4b46f3b-c101-4952-be3f-adfc414fc9e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae6c5943-2cee-414d-abfd-c09114107756", "node_type": "1", "metadata": {}, "hash": "3990310a6836d41b8e68be3d2c7a7b79f74014dc1db9b9e54ab6a3f49d7c963a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "350ac398-5e3d-4496-865c-d119015f0044", "node_type": "1", "metadata": {}, "hash": "ee0f59f92f582ab87d7699f45250028dc058110416a19c908b1d9688a917793e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "_offerArgs_ is an object that can be used to pass\nadditional arguments to the **offerHandler** of contractB's contract code.\nWhich arguments should be included within _offerArgs_ is determined by the\ncontract in question; each contract can define whatever additional arguments it requires. If no\nadditional arguments are defined for a particular contract, then the _offerArgs_ argument can be\nomitted entirely. It is up to the contract code how it chooses to handle any unexpected or missing", "mimetype": "text/plain", "start_char_idx": 16215, "end_char_idx": 16706, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "350ac398-5e3d-4496-865c-d119015f0044": {"__data__": {"id_": "350ac398-5e3d-4496-865c-d119015f0044", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4b46f3b-c101-4952-be3f-adfc414fc9e5", "node_type": "1", "metadata": {}, "hash": "36f5a335878f5911bbaf6ddea2a33ec301db99ca8e0b61a0086de29e071168e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1968e7b-3550-4b26-b2af-32f38ba2fde4", "node_type": "1", "metadata": {}, "hash": "fe3828349019edb1df4e233898eb94effd4d2a5364f3306d16bc3b515c983f57", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "arguments within _offerArgs_.", "mimetype": "text/plain", "start_char_idx": 16707, "end_char_idx": 16736, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1968e7b-3550-4b26-b2af-32f38ba2fde4": {"__data__": {"id_": "b1968e7b-3550-4b26-b2af-32f38ba2fde4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "350ac398-5e3d-4496-865c-d119015f0044", "node_type": "1", "metadata": {}, "hash": "ee0f59f92f582ab87d7699f45250028dc058110416a19c908b1d9688a917793e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e753d91d-9342-433d-a1ce-b823c1d6b569", "node_type": "1", "metadata": {}, "hash": "9e2b05bcc595dc163357a4af0bcd203743c6aa0398a07b2af8156cc5cc4dc501", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Contract code should be careful interacting with _offerArgs_. These values need input validation\nbefore being used by the contract code since they are coming directly from the user and may\nhave malicious behavior.\n\nThe **OfferToReturns** return value is a promise for an object containing\nthe **userSeat** for the offer to the other contract, and a promise (**deposited**)\nthat resolves when the payout for the offer has been deposited to the **toSeat**.\nIts two properties are:", "mimetype": "text/plain", "start_char_idx": 16738, "end_char_idx": 17216, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e753d91d-9342-433d-a1ce-b823c1d6b569": {"__data__": {"id_": "e753d91d-9342-433d-a1ce-b823c1d6b569", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1968e7b-3550-4b26-b2af-32f38ba2fde4", "node_type": "1", "metadata": {}, "hash": "fe3828349019edb1df4e233898eb94effd4d2a5364f3306d16bc3b515c983f57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b732e90c-98ac-4190-bc16-cf493468eeaf", "node_type": "1", "metadata": {}, "hash": "a5e28b2a34ea5ec4bf8dd91f18fe202ccc3143c9229dd3cdadcd605fe3e9ffc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **userSeatPromise**: **Promise&lt;UserSeat>**\n- **deposited**: **Promise&lt;AmountKeywordRecord>**\n\n```js\nconst { userSeatPromise: AMMUserSeat, deposited } = zcf.offerTo(\n  swapInvitation,\n  keywordMapping, // {}\n  proposal,\n  fromSeat,\n  lenderSeat\n);\n```\n\n## prepareRecorderKitMakers(baggage, marshaller)\n\nConvenience wrapper for DurablePublishKit and Recorder kinds.\n\n::: tip\n\nThis defines two durable kinds. Must be called at most once per baggage.\n\n:::", "mimetype": "text/plain", "start_char_idx": 17218, "end_char_idx": 17677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b732e90c-98ac-4190-bc16-cf493468eeaf": {"__data__": {"id_": "b732e90c-98ac-4190-bc16-cf493468eeaf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e753d91d-9342-433d-a1ce-b823c1d6b569", "node_type": "1", "metadata": {}, "hash": "9e2b05bcc595dc163357a4af0bcd203743c6aa0398a07b2af8156cc5cc4dc501", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cf30aa1-3a35-4542-94ea-2dc1754fef2e", "node_type": "1", "metadata": {}, "hash": "cd9e549d05150e2828ea07485f7536f3ba958e76119f2095c4bb89ef31c8a9bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":::\n\n- `makeRecorderKit` is suitable for making a durable `RecorderKit` which can be held in Exo state.\n- `makeERecorderKit` is for closures that must return a `subscriber` synchronously but can defer the `recorder`.\n\n```js\n@param {import('@agoric/vat-data').Baggage} baggage\n@param {ERef<Marshaller>} marshaller\n```", "mimetype": "text/plain", "start_char_idx": 17674, "end_char_idx": 17990, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cf30aa1-3a35-4542-94ea-2dc1754fef2e": {"__data__": {"id_": "9cf30aa1-3a35-4542-94ea-2dc1754fef2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe-helpers.md", "node_type": "4", "metadata": {}, "hash": "92bf75030ed4f378de5663a93a5c2ec489b7aa2aead79b2f858668f503abc9ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b732e90c-98ac-4190-bc16-cf493468eeaf", "node_type": "1", "metadata": {}, "hash": "a5e28b2a34ea5ec4bf8dd91f18fe202ccc3143c9229dd3cdadcd605fe3e9ffc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Source: [@agoric/zoe/src/contractSupport/recorder.js#L215](https://github.com/Agoric/agoric-sdk/blob/5a6cdeb0c18ae9700d706445acf402f8d1e873c3/packages/zoe/src/contractSupport/recorder.js#L215)", "mimetype": "text/plain", "start_char_idx": 17992, "end_char_idx": 18184, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "08589e1b-45c2-420c-bde9-b2c9d99972ae": {"__data__": {"id_": "08589e1b-45c2-420c-bde9-b2c9d99972ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "357584b3-9cfb-4123-9bcf-9527bb997dc1", "node_type": "1", "metadata": {}, "hash": "3ec36ccfbb933c10bed58980ce15cfebd736f4f2b14e90ecd597512bb9ffb80c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Zoe Service\n\n<Zoe-Version/>\n\nZoe provides a framework for deploying and working with smart contracts. It is accessed\nas a long-lived and well-trusted service that enforces offer safety for the contracts that use it. Zoe\nhas a single **[InvitationIssuer](./zoe-data-types#invitationissuer)** for the entirety of its lifetime. By having a reference to Zoe, a user\ncan get the **InvitationIssuer** and thus validate any **[Invitation](./zoe-data-types#invitation)** they receive from someone else.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "357584b3-9cfb-4123-9bcf-9527bb997dc1": {"__data__": {"id_": "357584b3-9cfb-4123-9bcf-9527bb997dc1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08589e1b-45c2-420c-bde9-b2c9d99972ae", "node_type": "1", "metadata": {}, "hash": "601364bbfc74b95204d810cb07edc064cdc8fcbd60fa64b76826b56a58e566d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d", "node_type": "1", "metadata": {}, "hash": "4b1648b7e5eba9e1a7558c6115030b03741673b7728f05186561737902b6ffc0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "::: tip Zoe is accessed asynchronously\nThe Zoe service is accessed asynchronously, using a standards-track library extension\nto JavaScript that uses promises as remote references. In code, the Zoe service instance\nis referred to via **Zoe**, which only supports asynchronous invocation. Operations are\ninvoked asynchronously using the [**E** helper for async messaging](https://github.com/tc39/proposal-eventual-send#e-and-esendonly-convenience-proxies).", "mimetype": "text/plain", "start_char_idx": 498, "end_char_idx": 952, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d": {"__data__": {"id_": "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "357584b3-9cfb-4123-9bcf-9527bb997dc1", "node_type": "1", "metadata": {}, "hash": "3ec36ccfbb933c10bed58980ce15cfebd736f4f2b14e90ecd597512bb9ffb80c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c98ea8d8-4171-4984-b22b-8bc6650c507a", "node_type": "1", "metadata": {}, "hash": "ed1c7c96aa54d43967974ff7e437b3dcfd18f243839c779602ce2c633f1fa43d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "All such operations immediately return a promise for their result. That may eventually fulfill to a\nlocal value, or to a **Presence** for another remote object (e.g., in another contract or service,\nrunning on another chain, etc.). Asynchronous messages can be sent using **E** with either promises or\npresences.", "mimetype": "text/plain", "start_char_idx": 953, "end_char_idx": 1265, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c98ea8d8-4171-4984-b22b-8bc6650c507a": {"__data__": {"id_": "c98ea8d8-4171-4984-b22b-8bc6650c507a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d", "node_type": "1", "metadata": {}, "hash": "4b1648b7e5eba9e1a7558c6115030b03741673b7728f05186561737902b6ffc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99148ab4-d319-4e19-8b73-e5c294e9aafc", "node_type": "1", "metadata": {}, "hash": "62eb7f8907951383c120a075622669b52fb729b8295e9b4aa8b3d60a3e204a03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "For more information about using **E**, see the [Agoric's JavaScript Distributed Programming Guide](/guides/js-programming/eventual-send).\n:::\n\n## E(Zoe).getBrands(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns: **Promise&lt;BrandKeywordRecord>**\n\nReturns a **Promise** for a **BrandKeywordRecord** containing all **[Brands](/reference/ertp-api/brand)** defined in the _instance_ argument.", "mimetype": "text/plain", "start_char_idx": 1267, "end_char_idx": 1688, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99148ab4-d319-4e19-8b73-e5c294e9aafc": {"__data__": {"id_": "99148ab4-d319-4e19-8b73-e5c294e9aafc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c98ea8d8-4171-4984-b22b-8bc6650c507a", "node_type": "1", "metadata": {}, "hash": "ed1c7c96aa54d43967974ff7e437b3dcfd18f243839c779602ce2c633f1fa43d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfedd131-8c26-464c-b86a-44c3b786f87b", "node_type": "1", "metadata": {}, "hash": "5f1604649c34a0351998d34b9b8dde946d8bd60719a6f812802209fb2bebbd1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **BrandKeywordRecord** is an object where the keys are **[Keywords](./zoe-data-types#keyword)**,\nand the values are the **Brands** for particular **[Issuers](/reference/ertp-api/issuer)**.\n\n```js\n// Record example\nconst brandKeywordRecord = {\n  FirstCurrency: quatloosBrand,\n  SecondCurrency: moolaBrand\n  // etc.\n};\n```\n\n```js\n// Call example\nconst brandKeywordRecord = await E(Zoe).getBrands(instance);\n```\n\n## E(Zoe).getIssuers(instance)", "mimetype": "text/plain", "start_char_idx": 1690, "end_char_idx": 2132, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfedd131-8c26-464c-b86a-44c3b786f87b": {"__data__": {"id_": "cfedd131-8c26-464c-b86a-44c3b786f87b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99148ab4-d319-4e19-8b73-e5c294e9aafc", "node_type": "1", "metadata": {}, "hash": "62eb7f8907951383c120a075622669b52fb729b8295e9b4aa8b3d60a3e204a03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e51f744a-4cdd-4e90-9c80-3a074688ef80", "node_type": "1", "metadata": {}, "hash": "786337bf11005cffd5d7c3920018829e31b169f068aec89086d2cea51a0b9f34", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(Zoe).getIssuers(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns: **Promise&lt;IssuerKeywordRecord>**\n\nReturns a **Promise** for an **IssuerKeywordRecord** containing all **[Issuers](/reference/ertp-api/issuer)** defined in the _instance_ argument.\n\nAn **IssuerKeywordRecord** is an object where the keys are **[Keywords](./zoe-data-types#keyword)**,\nand the values are **Issuers**.", "mimetype": "text/plain", "start_char_idx": 2102, "end_char_idx": 2519, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e51f744a-4cdd-4e90-9c80-3a074688ef80": {"__data__": {"id_": "e51f744a-4cdd-4e90-9c80-3a074688ef80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfedd131-8c26-464c-b86a-44c3b786f87b", "node_type": "1", "metadata": {}, "hash": "5f1604649c34a0351998d34b9b8dde946d8bd60719a6f812802209fb2bebbd1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc", "node_type": "1", "metadata": {}, "hash": "63043c4c115b8f9a22ca33b46b5115c4f36e513f522da42e98c3986032b1dede", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// Record example\nconst issuerKeywordRecord = {\n  FirstCurrency: quatloosIssuer,\n  SecondCurrency: moolaIssuer\n};\n```\n\n```js\n// Call example\nconst issuerKeywordRecord = await E(Zoe).getIssuers(instance);\n```\n\n## E(Zoe).getTerms(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns: **Promise&lt;Object>**", "mimetype": "text/plain", "start_char_idx": 2521, "end_char_idx": 2857, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc": {"__data__": {"id_": "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e51f744a-4cdd-4e90-9c80-3a074688ef80", "node_type": "1", "metadata": {}, "hash": "786337bf11005cffd5d7c3920018829e31b169f068aec89086d2cea51a0b9f34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc4aae1b-d952-4af8-b897-bf560928ddf8", "node_type": "1", "metadata": {}, "hash": "738beaf2fc25eb7c9274a4037a99f7af41df03c0b0f3c232eca97bce7a2598e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for the terms of the _instance_ argument, including its **[Brands](/reference/ertp-api/brand)**, **[Issuers](/reference/ertp-api/issuer)**, and any\ncustom terms. The returned values look like:\n\n```js\n{\n  // Brands and issuers are keywordRecords\n  brands: { A: moolaKit.brand, B: simoleanKit.brand },\n  issuers: { A: moolaKit.issuer, B: simoleanKit.issuer },\n  customTermA: 'something',\n  customTermB: 'something else',\n  // All other customTerms\n};\n```", "mimetype": "text/plain", "start_char_idx": 2859, "end_char_idx": 3333, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc4aae1b-d952-4af8-b897-bf560928ddf8": {"__data__": {"id_": "cc4aae1b-d952-4af8-b897-bf560928ddf8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc", "node_type": "1", "metadata": {}, "hash": "63043c4c115b8f9a22ca33b46b5115c4f36e513f522da42e98c3986032b1dede", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16b08e3a-8221-41fc-bc30-927b1f051d4e", "node_type": "1", "metadata": {}, "hash": "18b03189d909a7af19ff094d12316ad27c1ccc0db5bdd6b23bea61436350f8c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst terms = await E(Zoe).getTerms(instance);\n```\n\n## E(Zoe).getPublicFacet(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns: **Promise&lt;PublicFacet>**\n\nReturns a **Promise** for the **PublicFacet** defined for the _instance_ argument.", "mimetype": "text/plain", "start_char_idx": 3335, "end_char_idx": 3609, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16b08e3a-8221-41fc-bc30-927b1f051d4e": {"__data__": {"id_": "16b08e3a-8221-41fc-bc30-927b1f051d4e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc4aae1b-d952-4af8-b897-bf560928ddf8", "node_type": "1", "metadata": {}, "hash": "738beaf2fc25eb7c9274a4037a99f7af41df03c0b0f3c232eca97bce7a2598e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8233c4ab-e57e-4838-baee-9177894b9120", "node_type": "1", "metadata": {}, "hash": "615824033d016eb1d8c94f31f3d8f9249c8b4b13d17c8bdf74fc8c1187ade16e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A contract instance's **PublicFacet** is an object available via Zoe to anyone knowing that **Instance**.\nYou use it for general queries and actions, such as getting a current price or creating public **[Invitations](./zoe-data-types#invitation)**.\nSince a facet is defined just as any other object, the contract adds methods to the **PublicFacet** just like you would\nany object.\n\n```js\nconst ticketSalesPublicFacet = await E(Zoe).getPublicFacet(sellItemsInstance);\n```\n\n## E(Zoe).getInvitationIssuer()", "mimetype": "text/plain", "start_char_idx": 3611, "end_char_idx": 4114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8233c4ab-e57e-4838-baee-9177894b9120": {"__data__": {"id_": "8233c4ab-e57e-4838-baee-9177894b9120", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16b08e3a-8221-41fc-bc30-927b1f051d4e", "node_type": "1", "metadata": {}, "hash": "18b03189d909a7af19ff094d12316ad27c1ccc0db5bdd6b23bea61436350f8c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea376711-964f-4baa-a36a-385b7527d1e9", "node_type": "1", "metadata": {}, "hash": "e5a953dba2b7b2411e9b9d411c24e07eb774cc705ee63f36cf4a64d4cbb2cd45", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(Zoe).getInvitationIssuer()\n\n- Returns: **Promise&lt;[InvitationIssuer](./zoe-data-types#invitationissuer)>**\n\nReturns a **Promise** for the **InvitationIssuer** for the Zoe instance.", "mimetype": "text/plain", "start_char_idx": 4083, "end_char_idx": 4270, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea376711-964f-4baa-a36a-385b7527d1e9": {"__data__": {"id_": "ea376711-964f-4baa-a36a-385b7527d1e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8233c4ab-e57e-4838-baee-9177894b9120", "node_type": "1", "metadata": {}, "hash": "615824033d016eb1d8c94f31f3d8f9249c8b4b13d17c8bdf74fc8c1187ade16e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d0f3383-895e-4c34-8cfc-9350cd1dce56", "node_type": "1", "metadata": {}, "hash": "60740d26d149f7182589b0be387808edd536eba061fabfe5ce6e9fce3c373931", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst invitationIssuer = await E(Zoe).getInvitationIssuer();\n// Here a user, Bob, has received an untrusted invitation from Alice.\n// Bob uses the trusted **InvitationIssuer** from Zoe to\n// transform the untrusted invitation to a trusted one\nconst trustedInvitation = await invitationIssuer.claim(untrustedInvitation);\nconst { value: invitationValue } =\n  await E(invitationIssuer).getAmountOf(trustedInvitation);\n```\n\n## E(Zoe).getInvitationDetails(invitation)", "mimetype": "text/plain", "start_char_idx": 4272, "end_char_idx": 4740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d0f3383-895e-4c34-8cfc-9350cd1dce56": {"__data__": {"id_": "6d0f3383-895e-4c34-8cfc-9350cd1dce56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea376711-964f-4baa-a36a-385b7527d1e9", "node_type": "1", "metadata": {}, "hash": "e5a953dba2b7b2411e9b9d411c24e07eb774cc705ee63f36cf4a64d4cbb2cd45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44415bc6-ffc8-427d-a849-c09c5e8f0a29", "node_type": "1", "metadata": {}, "hash": "fa93e6dfb37a741104d9196edb1d02db8fe5097b86b4852c7cf73d97519ef83b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **invitation**: **[Invitation](./zoe-data-types#invitation)**\n- Returns **Promise&lt;Object>**\n\nTakes an **Invitation** as an argument and returns a **Promise** for an object containing the following\ndetails about the **Invitation**:", "mimetype": "text/plain", "start_char_idx": 4742, "end_char_idx": 4977, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44415bc6-ffc8-427d-a849-c09c5e8f0a29": {"__data__": {"id_": "44415bc6-ffc8-427d-a849-c09c5e8f0a29", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d0f3383-895e-4c34-8cfc-9350cd1dce56", "node_type": "1", "metadata": {}, "hash": "60740d26d149f7182589b0be387808edd536eba061fabfe5ce6e9fce3c373931", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b70846e-0bfb-410f-92c6-e2ea1c72179e", "node_type": "1", "metadata": {}, "hash": "dfc00cc2d775da9004da61a758ee27d27e9324370e60e62b534907f63b8f8d59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **installation**: **Installation**: The contract's Zoe installation.\n- **instance**: **[Instance](./zoe-data-types#instance)**: The contract instance this invitation is for.\n- **invitationHandle**: **[Handle](./zoe-data-types#handle)**: A **Handle** used to refer to this **Invitation**.\n- **description**: **String**: Describes the purpose of this **Invitation**. Use it\n  to match the invitation to the role it plays in the contract.", "mimetype": "text/plain", "start_char_idx": 4979, "end_char_idx": 5416, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b70846e-0bfb-410f-92c6-e2ea1c72179e": {"__data__": {"id_": "4b70846e-0bfb-410f-92c6-e2ea1c72179e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44415bc6-ffc8-427d-a849-c09c5e8f0a29", "node_type": "1", "metadata": {}, "hash": "fa93e6dfb37a741104d9196edb1d02db8fe5097b86b4852c7cf73d97519ef83b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dc9f18a-4715-4aa1-8717-455896f5cbc9", "node_type": "1", "metadata": {}, "hash": "56267c2509862b6c38683857af37c29222b606fe5caec039ca3a4af1c3a1d46b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst invitation = await invitationIssuer.claim(untrustedInvitation);\nconst invitationValue = await E(Zoe).getInvitationDetails(invitation);\n```\n\n## E(Zoe).install(bundle)\n\n- **bundle**: **SourceBundle**\n- Returns: **Promise&lt;Installation>**\n\nTakes bundled source code for a Zoe contract as an argument and installs the code on Zoe.\nReturns a **Promise** for an **Installation** object.", "mimetype": "text/plain", "start_char_idx": 5418, "end_char_idx": 5812, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3dc9f18a-4715-4aa1-8717-455896f5cbc9": {"__data__": {"id_": "3dc9f18a-4715-4aa1-8717-455896f5cbc9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b70846e-0bfb-410f-92c6-e2ea1c72179e", "node_type": "1", "metadata": {}, "hash": "dfc00cc2d775da9004da61a758ee27d27e9324370e60e62b534907f63b8f8d59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da19eb58-2669-424f-a4f1-61cee82bfc3c", "node_type": "1", "metadata": {}, "hash": "9f00c15f8fab52c02b8ee7d6c8f9aca4412f0f72b37879d6aad01096537f8999", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\n// bundleSource takes source code files and\n// bundles them together in the format install expects.\nimport bundleSource from '@endto/bundle-source';\nconst bundle = await bundleSource(pathResolve(`./src/contract.js`));\nconst installationP = await E(Zoe).install(bundle);\n```\n\n## E(Zoe).getConfiguration()\n\n- Returns: **Promise&lt;Object>**", "mimetype": "text/plain", "start_char_idx": 5814, "end_char_idx": 6158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "da19eb58-2669-424f-a4f1-61cee82bfc3c": {"__data__": {"id_": "da19eb58-2669-424f-a4f1-61cee82bfc3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dc9f18a-4715-4aa1-8717-455896f5cbc9", "node_type": "1", "metadata": {}, "hash": "56267c2509862b6c38683857af37c29222b606fe5caec039ca3a4af1c3a1d46b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb", "node_type": "1", "metadata": {}, "hash": "1b9fc672e437851af2669f876ef0d9783feb197fdf949608d1302b8e4c6a3204", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- Returns: **Promise&lt;Object>**\n\nReturns a **Promise** for information about the feeIssuer.\n(The **Issuer** whose associated **[Mint](/reference/ertp-api/mint)** can mint IST.)\nIt consists of the issuer's name, assetKind, and displayInfo.\n\n## E(Zoe).getFeeIssuer()\n\n- Returns: **Promise&lt;[Issuer](/reference/ertp-api/issuer)>**\n\nReturns a **Promise** for the **Issuer** whose associated **[Mint](/reference/ertp-api/mint)** can mint IST.\n\n## E(Zoe).getOfferFilter(instance)", "mimetype": "text/plain", "start_char_idx": 6125, "end_char_idx": 6602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb": {"__data__": {"id_": "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da19eb58-2669-424f-a4f1-61cee82bfc3c", "node_type": "1", "metadata": {}, "hash": "9f00c15f8fab52c02b8ee7d6c8f9aca4412f0f72b37879d6aad01096537f8999", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2ac9834-1292-4db5-a418-19b5eb568e2c", "node_type": "1", "metadata": {}, "hash": "70240c716a786b88607e3e64227f68083f02d19825fdbe140c2a3a3e9104a020", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "## E(Zoe).getOfferFilter(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns: **Array&lt;String>**\n\nReturns all the offer **[Keywords](./zoe-data-types#keyword)** that have been disabled, if any. Offer **Keywords** may be disabled if they prove problematic in some fashion, or to debug undesired behavior.\n\n## E(Zoe).getInstance(invitation)\n\n- **invitation**: **[Invitation](./zoe-data-types#invitation)**\n- Returns: **Promise&lt;[Instance](./zoe-data-types#instance)>**", "mimetype": "text/plain", "start_char_idx": 6568, "end_char_idx": 7065, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2ac9834-1292-4db5-a418-19b5eb568e2c": {"__data__": {"id_": "e2ac9834-1292-4db5-a418-19b5eb568e2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb", "node_type": "1", "metadata": {}, "hash": "1b9fc672e437851af2669f876ef0d9783feb197fdf949608d1302b8e4c6a3204", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7", "node_type": "1", "metadata": {}, "hash": "68460d6717964f08460490d7786268142736f766f4c33af7411b5661a3087629", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for the contract **instance** the **Invitation** is part of.\n\nWhile **Instances** are opaque objects, you can get information about them via\nthese methods:\n\n- **getBrands()**\n- **getTerms()**\n- **getIssuers()**\n- **getPublicFacet()**\n\n```js\nconst instance = await E(Zoe).getInstance(invitation);\n```\n\n## E(Zoe).getProposalShapeForInvitation(invitation)", "mimetype": "text/plain", "start_char_idx": 7067, "end_char_idx": 7441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7": {"__data__": {"id_": "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2ac9834-1292-4db5-a418-19b5eb568e2c", "node_type": "1", "metadata": {}, "hash": "70240c716a786b88607e3e64227f68083f02d19825fdbe140c2a3a3e9104a020", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4", "node_type": "1", "metadata": {}, "hash": "4c2e7da06f9f78a061a394e7e1b565fe9da2f5216912f49f10dcec72b899f920", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **invitation**: **[Invitation](./zoe-data-types#invitation)**\n- Returns: **Promise&lt;[Pattern](https://github.com/endojs/endo/tree/master/packages/patterns#readme)>**\n\nReturns a **Promise** for the **Pattern** that the **Invitation's** **Proposal** adheres to.\nSee also [Proposal Shapes](./zoe-contract-facet#proposal-shapes).\n\n## E(Zoe).getInstallation(invitation)\n\n- **invitation**: **[Invitation](./zoe-data-types#invitation)**\n- Returns: **Promise&lt;Installation>**", "mimetype": "text/plain", "start_char_idx": 7443, "end_char_idx": 7916, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4": {"__data__": {"id_": "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7", "node_type": "1", "metadata": {}, "hash": "68460d6717964f08460490d7786268142736f766f4c33af7411b5661a3087629", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b346044b-f4c0-4c43-8e06-cf9fb34de3e7", "node_type": "1", "metadata": {}, "hash": "6a5e6191fb6862bcafbccc41809744c4f216b17c54a6e27cfb5163607d4ea2a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for the contract **installation** the **Invitation**'s contract instance uses.\n\n```js\nconst installation = await E(Zoe).getInstallation(invitation);\n```\n\n## E(Zoe).getInstallationForInstance(instance)\n\n- **instance**: **[Instance](./zoe-data-types#instance)**\n- Returns **Promise&lt;Installation>**", "mimetype": "text/plain", "start_char_idx": 7918, "end_char_idx": 8238, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b346044b-f4c0-4c43-8e06-cf9fb34de3e7": {"__data__": {"id_": "b346044b-f4c0-4c43-8e06-cf9fb34de3e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4", "node_type": "1", "metadata": {}, "hash": "4c2e7da06f9f78a061a394e7e1b565fe9da2f5216912f49f10dcec72b899f920", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "769c5365-9f7e-4f43-bb21-323d801a810a", "node_type": "1", "metadata": {}, "hash": "f930939b54eb25e1c789fd6ed88996d2ab0a224b2b2b64271953ea0581dc2ee9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Returns a **Promise** for the contract **installation** used by the\n**instance**. An **instance** is the unique identifier for the running,\nexecuting contract. The **installation** is the unique identifier for\nthe underlying code. This method can be used as part of a process to\ninspect the underlying code for a running contract **instance**.\n\n```js\nconst installation = await E(Zoe).getInstallationForInstance(instance);\n```\n\n## E(Zoe).startInstance(installation, issuerKeywordRecord?, terms?, privateArgs?)", "mimetype": "text/plain", "start_char_idx": 8240, "end_char_idx": 8749, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "769c5365-9f7e-4f43-bb21-323d801a810a": {"__data__": {"id_": "769c5365-9f7e-4f43-bb21-323d801a810a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b346044b-f4c0-4c43-8e06-cf9fb34de3e7", "node_type": "1", "metadata": {}, "hash": "6a5e6191fb6862bcafbccc41809744c4f216b17c54a6e27cfb5163607d4ea2a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e9c0254-7672-46cd-9aea-3fd29695c6b8", "node_type": "1", "metadata": {}, "hash": "01913926622758b7193d81b63889d2a25be11fcd354495a00d1e59641ec0a905", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **installation**: **ERef&lt;Installation>**\n- **issuerKeywordRecord**: **IssuerKeywordRecord** - Optional.\n- **terms**: **Object** - Optional.\n- **privateArgs**: **Object** - Optional.\n- Returns: **Promise&lt;StartInstanceResult>**\n\nCreates an instance of the installed smart contract specified by\nthe _installation_ argument. All contracts each run in a new vat with their own version of the\nZoe Contract Facet. There is one vat that contains the Zoe Service.", "mimetype": "text/plain", "start_char_idx": 8751, "end_char_idx": 9213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e9c0254-7672-46cd-9aea-3fd29695c6b8": {"__data__": {"id_": "7e9c0254-7672-46cd-9aea-3fd29695c6b8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "769c5365-9f7e-4f43-bb21-323d801a810a", "node_type": "1", "metadata": {}, "hash": "f930939b54eb25e1c789fd6ed88996d2ab0a224b2b2b64271953ea0581dc2ee9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e24afae1-db9f-4792-bede-721eeabd7c38", "node_type": "1", "metadata": {}, "hash": "dea88285e1d66753bbb516a82abbee8b319125caaf5d7b81707594611a4cef04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The _issuerKeywordRecord_ is an optional object mapping **[Keywords](./zoe-data-types#keyword)**\nto **[Issuers](/reference/ertp-api/issuer)**, such as **FirstCurrency: quatlooIssuer**.\nParties to the contract will use the **Keywords** to index their proposal and their payments.", "mimetype": "text/plain", "start_char_idx": 9215, "end_char_idx": 9493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e24afae1-db9f-4792-bede-721eeabd7c38": {"__data__": {"id_": "e24afae1-db9f-4792-bede-721eeabd7c38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e9c0254-7672-46cd-9aea-3fd29695c6b8", "node_type": "1", "metadata": {}, "hash": "01913926622758b7193d81b63889d2a25be11fcd354495a00d1e59641ec0a905", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8565155d-6a67-4565-8b58-244a1db45172", "node_type": "1", "metadata": {}, "hash": "158e916841de802821eec5d338386a52fc539f1302739f6acccba256d71f4efd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **terms** are values used by this contract instance, such as the\nnumber of bids an auction w ill wait for before closing. These values may\nbe different for different instances of the same contract, but the contract\ndefines what variables need their values passed in as **terms**.", "mimetype": "text/plain", "start_char_idx": 9495, "end_char_idx": 9778, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8565155d-6a67-4565-8b58-244a1db45172": {"__data__": {"id_": "8565155d-6a67-4565-8b58-244a1db45172", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e24afae1-db9f-4792-bede-721eeabd7c38", "node_type": "1", "metadata": {}, "hash": "dea88285e1d66753bbb516a82abbee8b319125caaf5d7b81707594611a4cef04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "956bd800-0ae4-4f2c-8610-b2000780ab63", "node_type": "1", "metadata": {}, "hash": "b3a66ca3f18bbb665048f165ca908ad132cc209f60c1c0e2e1c7f5a375efba1b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**privateArgs** are optional. Pass an object record here with any values\nthat need to be made available to the contract code, but which should\nnot be in the public terms. For example, to share minting authority\namong multiple contracts, pass in the following as **privateArgs**:\n\n```js\nconst privateArgs = { externalMint: myExternalMint };\n```\n\nIt returns a **Promise** for a **StartInstanceResult** object. The object consists of:", "mimetype": "text/plain", "start_char_idx": 9780, "end_char_idx": 10211, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "956bd800-0ae4-4f2c-8610-b2000780ab63": {"__data__": {"id_": "956bd800-0ae4-4f2c-8610-b2000780ab63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8565155d-6a67-4565-8b58-244a1db45172", "node_type": "1", "metadata": {}, "hash": "158e916841de802821eec5d338386a52fc539f1302739f6acccba256d71f4efd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5bb452e-5061-4a2d-acbc-e2a55dd900df", "node_type": "1", "metadata": {}, "hash": "41e2ad1ed72503b688a1c79d6f835b5a071399fbb1feeaacbc001e5de7329857", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **adminFacet**: **AdminFacet**\n- **creatorFacet**: **any**\n- **publicFacet**: **any**\n- **instance**: **Instance**\n- **creatorInvitation**: **Payment | undefined**\n\nThe **adminFacet** has one method:\n\n- **getVatShutdownPromise()**\n  - Returns a promise that resolves to reason (the value passed to **fail(reason)**) or\n    completion (the value passed to **exit(completion)**) when this newly started instance terminates.", "mimetype": "text/plain", "start_char_idx": 10213, "end_char_idx": 10636, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5bb452e-5061-4a2d-acbc-e2a55dd900df": {"__data__": {"id_": "f5bb452e-5061-4a2d-acbc-e2a55dd900df", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "956bd800-0ae4-4f2c-8610-b2000780ab63", "node_type": "1", "metadata": {}, "hash": "b3a66ca3f18bbb665048f165ca908ad132cc209f60c1c0e2e1c7f5a375efba1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c978617-153c-4701-b241-a850eb1f3de2", "node_type": "1", "metadata": {}, "hash": "6942f66578d44b956c27a4bef4157327ce32f7936fbaaed9870d99181246f2bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A **publicFacet** is an object available via Zoe to anyone knowing\nthe instance they are associated with. The **publicFacet** is used for general queries\nand actions, such as getting a current price or creating public **[Invitations](./zoe-data-types#invitation)**. Since a\nfacet is defined just as any other object,\nthe contract developer can add methods to them just like they would any object.", "mimetype": "text/plain", "start_char_idx": 10638, "end_char_idx": 11034, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c978617-153c-4701-b241-a850eb1f3de2": {"__data__": {"id_": "8c978617-153c-4701-b241-a850eb1f3de2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5bb452e-5061-4a2d-acbc-e2a55dd900df", "node_type": "1", "metadata": {}, "hash": "41e2ad1ed72503b688a1c79d6f835b5a071399fbb1feeaacbc001e5de7329857", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07964871-7474-4158-a60c-bf3cbe97f093", "node_type": "1", "metadata": {}, "hash": "ff410d3ff7e201a66082f8755a459e417231e41854eb235999fc09dc674ba078", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The **creatorFacet** is only available in this return value (i.e. only when starting\na contract instance). The contract designer\nshould use it to encapsulate things that the contract runner might not want to share,\nor might want to control the distribution of. The party who starts the contract\nshould carefully consider the impact before sharing access to the **creatorFacet**.", "mimetype": "text/plain", "start_char_idx": 11036, "end_char_idx": 11414, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07964871-7474-4158-a60c-bf3cbe97f093": {"__data__": {"id_": "07964871-7474-4158-a60c-bf3cbe97f093", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c978617-153c-4701-b241-a850eb1f3de2", "node_type": "1", "metadata": {}, "hash": "6942f66578d44b956c27a4bef4157327ce32f7936fbaaed9870d99181246f2bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6", "node_type": "1", "metadata": {}, "hash": "265fa5dc1aa0b11a658f6d2e346673e1382b12e5fa467f199776acd3a67455e1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**creatorInvitation** is an **Invitation** that the contract instance creator can use.\nIt is usually used in contracts where the creator immediately sells\nsomething (auctions, swaps, etc.), so it's helpful for the creator to have\nan **Invitation** to escrow and sell goods. Remember that Zoe **Invitations** are\nrepresented as a **Payment**.", "mimetype": "text/plain", "start_char_idx": 11416, "end_char_idx": 11757, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6": {"__data__": {"id_": "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07964871-7474-4158-a60c-bf3cbe97f093", "node_type": "1", "metadata": {}, "hash": "ff410d3ff7e201a66082f8755a459e417231e41854eb235999fc09dc674ba078", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40f72c95-d82f-45b4-b9c5-1f1dc227d713", "node_type": "1", "metadata": {}, "hash": "a2e3d6e562779eeea686727c0cb1b4835430f95fcddf92319f1a2634f5c44744", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst issuerKeywordRecord = {\n  Asset: moolaIssuer,\n  Price: quatlooIssuer\n};\nconst terms = { numBids: 3 };\nconst { creatorFacet, publicFacet, creatorInvitation } = await E(\n  Zoe\n).startInstance(installation, issuerKeywordRecord, terms);\n```\n\n<a id=\"e-zoe-offer-invitation-proposal-paymentkeywordrecord-offerargs\"></a>\n\n## E(Zoe).offer(invitation, proposal?, paymentPKeywordRecord?, offerArgs?)", "mimetype": "text/plain", "start_char_idx": 11759, "end_char_idx": 12160, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40f72c95-d82f-45b4-b9c5-1f1dc227d713": {"__data__": {"id_": "40f72c95-d82f-45b4-b9c5-1f1dc227d713", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6", "node_type": "1", "metadata": {}, "hash": "265fa5dc1aa0b11a658f6d2e346673e1382b12e5fa467f199776acd3a67455e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd05e706-7d5b-4b8b-a5cf-ecbe31889532", "node_type": "1", "metadata": {}, "hash": "95d42868efa9aca5575d1b264327436409c1d634bcad9fad5afafb9c70979c50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- **invitation**: **[Invitation](./zoe-data-types#invitation) | Promise&lt;[Invitation](./zoe-data-types#invitation)>**\n- **proposal**: **[Proposal](/glossary/#proposal)** - Optional.\n- **paymentPKeywordRecord**: **[PaymentPKeywordRecord](./zoe-data-types#keywordrecord)** - Optional.\n- **offerArgs**: **[CopyRecord](/glossary/#copyrecord)** - Optional.\n- Returns: **Promise&lt;[UserSeat](./user-seat)>**\n\nUsed to make an offer to the contract that created the **invitation**.", "mimetype": "text/plain", "start_char_idx": 12162, "end_char_idx": 12638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fd05e706-7d5b-4b8b-a5cf-ecbe31889532": {"__data__": {"id_": "fd05e706-7d5b-4b8b-a5cf-ecbe31889532", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40f72c95-d82f-45b4-b9c5-1f1dc227d713", "node_type": "1", "metadata": {}, "hash": "a2e3d6e562779eeea686727c0cb1b4835430f95fcddf92319f1a2634f5c44744", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c", "node_type": "1", "metadata": {}, "hash": "d0b53161b81ee83df8c0b580965b80e91fb1a68206ae2746827ffef79b15e49e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<a id=\"proposals-and-payments\"></a>\n\n### Proposals\n\n**proposal** must be either `undefined` or a record with **give**, **want**, and/or **exit** properties\nrespectively expressing conditions regarding what is being given,\nwhat is desired in exchange (protected by offer safety), and\nan exit rule defining how/when the offer can be canceled.\nNote that the contract is not obligated to accept the proposal;\nit may inspect it and reject it for any reason\n(in which case all payments will be returned promptly).", "mimetype": "text/plain", "start_char_idx": 12640, "end_char_idx": 13147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c": {"__data__": {"id_": "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd05e706-7d5b-4b8b-a5cf-ecbe31889532", "node_type": "1", "metadata": {}, "hash": "95d42868efa9aca5575d1b264327436409c1d634bcad9fad5afafb9c70979c50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbfe9ff6-b408-48f7-a7ea-d045057d39f1", "node_type": "1", "metadata": {}, "hash": "6da90373c3c4744d929cb5fb014c933c63e8a3557680e83fd6d9ebb907e69a30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "```js\nconst myProposal = harden({\n  give: { Asset: AmountMath.make(quatloosBrand, 4n) },\n  want: { Price: AmountMath.make(moolaBrand, 15n) },\n  exit: { onDemand: null }\n});\n```\n\n**give** and **want** use **[Keywords](./zoe-data-types#keyword)** defined by the contract.\nIn the example above, \"Asset\" and \"Price\" are the Keywords. However, in an auction contract,\nthe Keywords might be \"Asset\" and \"Bid\".\n\n**exit** specifies how the offer can be cancelled. It must conform to one of three shapes:", "mimetype": "text/plain", "start_char_idx": 13149, "end_char_idx": 13644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bbfe9ff6-b408-48f7-a7ea-d045057d39f1": {"__data__": {"id_": "bbfe9ff6-b408-48f7-a7ea-d045057d39f1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c", "node_type": "1", "metadata": {}, "hash": "d0b53161b81ee83df8c0b580965b80e91fb1a68206ae2746827ffef79b15e49e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d0899fd-1b51-423c-84b9-dc197db98f40", "node_type": "1", "metadata": {}, "hash": "40c9eacf9f9f0b0892a43e038a089374a89c1b3b4f3879243947cc58ee296d27", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "- `{ onDemand: null }`: (Default) The offering party can cancel on demand.\n- `{ waived: null }`: The offering party can't cancel and relies entirely on the smart contract to complete (finish or fail) their offer.\n- `{ afterDeadline: deadlineDetails }`: The offer is automatically cancelled after a deadline,", "mimetype": "text/plain", "start_char_idx": 13646, "end_char_idx": 13953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d0899fd-1b51-423c-84b9-dc197db98f40": {"__data__": {"id_": "9d0899fd-1b51-423c-84b9-dc197db98f40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbfe9ff6-b408-48f7-a7ea-d045057d39f1", "node_type": "1", "metadata": {}, "hash": "6da90373c3c4744d929cb5fb014c933c63e8a3557680e83fd6d9ebb907e69a30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6004dc60-534b-42ef-993b-cb882b4797ea", "node_type": "1", "metadata": {}, "hash": "729f089602285a8275034df455f79d64bc3f45dcfa2da5e6757f6756d83e13dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "as determined by its **timer** and **deadline** properties. The proposer cannot exit the seat before the deadline (the seat is in the **waived** state), but the contract can exit the proposer's seat early.\n  **timer** must be a timer, and **deadline** must be timestamp understood by it.\n  (Some timers use Unix epoch time, while others count block height.)\n  For more details, see [Timer Services](/reference/repl/timerServices).", "mimetype": "text/plain", "start_char_idx": 13956, "end_char_idx": 14386, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6004dc60-534b-42ef-993b-cb882b4797ea": {"__data__": {"id_": "6004dc60-534b-42ef-993b-cb882b4797ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d0899fd-1b51-423c-84b9-dc197db98f40", "node_type": "1", "metadata": {}, "hash": "40c9eacf9f9f0b0892a43e038a089374a89c1b3b4f3879243947cc58ee296d27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6", "node_type": "1", "metadata": {}, "hash": "171b670e784ef5efb5b6b5201d6ff51ffff94d27a322fab0ca5248c9842c4965", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "A contract can avoid invalid proposals;\nsee [Proposal Shapes](./zoe-contract-facet#proposal-shapes).\n\n### Payments\n\n**paymentPKeywordRecord** must be either `undefined` or a **[PaymentPKeywordRecord](./zoe-data-types#keywordrecord)**\ncontaining the actual **payments** to be escrowed by Zoe.\nEvery **Keyword** in **give** must have a corresponding **payment**.\n\n```js\nconst paymentKeywordRecord = harden({ Asset: quatloosPayment });\n```\n\n<a id=\"offerargs\"></a>\n\n### Offer Arguments", "mimetype": "text/plain", "start_char_idx": 14388, "end_char_idx": 14869, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6": {"__data__": {"id_": "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6004dc60-534b-42ef-993b-cb882b4797ea", "node_type": "1", "metadata": {}, "hash": "729f089602285a8275034df455f79d64bc3f45dcfa2da5e6757f6756d83e13dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfeb5023-1636-47e3-8f18-c32bd5ec730f", "node_type": "1", "metadata": {}, "hash": "1460589e346ea9c79bda392dce0c2c22fbf40c528abff18ca3de599b415505ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "### Offer Arguments\n\n**offerArgs** is an optional CopyRecord that can be used to pass additional arguments to the\n**offerHandler** contract code associated with the invitation by\n[`zcf.makeInvitation(...)`](./zoe-contract-facet#zcf-makeinvitation-offerhandler-description-customdetails-proposalshape).\nEach contract can define the properties it supports and which are required.\n\n## E(Zoe).installBundleID(bundleId)\n\n- bundleId: **BundleId**\n- Returns: **Promise&lt;Installation>**\n\nReserved for future use.", "mimetype": "text/plain", "start_char_idx": 14850, "end_char_idx": 15356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfeb5023-1636-47e3-8f18-c32bd5ec730f": {"__data__": {"id_": "cfeb5023-1636-47e3-8f18-c32bd5ec730f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "main_reference_zoe-api_zoe.md", "node_type": "4", "metadata": {}, "hash": "078187672934273a45df8e24db051a74023fda27ed1367e0b637ee5574f69924", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6", "node_type": "1", "metadata": {}, "hash": "171b670e784ef5efb5b6b5201d6ff51ffff94d27a322fab0ca5248c9842c4965", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Reserved for future use.\n\n## E(Zoe).getBundleIDFromInstallation(installation)\n\n- **installation**: **Installation**\n- Returns: **Promise&lt;BundleId>**\n\nReserved for future use.", "mimetype": "text/plain", "start_char_idx": 15332, "end_char_idx": 15509, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"7df91806-7929-41a3-b79e-704e77b4fbc5": {"doc_hash": "0561fee82a406845037deec8fc79df22fbfd66e872787c547653c367acb6f9d5", "ref_doc_id": "main_e2e-testing.md"}, "bbeed959-19df-4772-aa09-91c45a98391b": {"doc_hash": "f99cd83e98b35907550ac896cb8f38c0628e1623c7be0db8e965b05f56251412", "ref_doc_id": "main_e2e-testing.md"}, "67480952-3ef3-4660-ad84-be0fc44139d2": {"doc_hash": "4b5285d6c12bd5180357a541f2df215bc18c7d690af9871d64b14efc12cafddb", "ref_doc_id": "main_e2e-testing.md"}, "92a0962b-213c-4b8d-9155-bc6bcbd93abc": {"doc_hash": "0275a23b7b2c10661218176489a1ae02ca83cf21fffd1977ae0454a04bd13b74", "ref_doc_id": "main_e2e-testing.md"}, "77d1f3d6-b121-4489-88b4-0a5d1ca921a3": {"doc_hash": "d0763a4371bd3d26f1054cae49555c1edef8ffa629c1f6caf0656b40db1c3893", "ref_doc_id": "main_e2e-testing.md"}, "394cdea8-0b0c-431d-bccd-6a9de6996303": {"doc_hash": "e19a58b2b36943608b37618858541dd338228a7ffbaaa1e940a87180aa03dbab", "ref_doc_id": "main_e2e-testing.md"}, "0041759f-acaf-410a-9d26-ae81a60574ae": {"doc_hash": "0d26825cb4a0f4df2d118332922ff7cab1e77f4577ad60b0a0d443d9ccf40d59", "ref_doc_id": "main_e2e-testing.md"}, "c04d91fa-03d7-434b-b229-f341bf6a4abb": {"doc_hash": "7fd55d52a1dcb8dc9d40f9143711575e080397d5d9f083e05583c83936417298", "ref_doc_id": "main_e2e-testing.md"}, "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa": {"doc_hash": "eb069f257fb4ad720a59f6f79e4ace9d3fd1ab0d1839730cf3cd9787a11ccb92", "ref_doc_id": "main_e2e-testing.md"}, "49205a50-8f01-41f7-b71c-5ed2c4ff6942": {"doc_hash": "adafa06d5dc3639a07518c2c611fcd3ac355aa037b518d20c02edbfc9908549d", "ref_doc_id": "main_e2e-testing.md"}, "b73db82a-af6f-460f-938b-b35625d4e9af": {"doc_hash": "80d3c98b11c0a079bca5148121e90e829a81f76e1acff37baf6ffc02173fe90b", "ref_doc_id": "main_e2e-testing.md"}, "3bdeead0-2b85-416d-a108-3d21f20b93cb": {"doc_hash": "7abf59d35c928aea39e1f047588427e1b78eb66e661edbc84c3a56f32c3eb46e", "ref_doc_id": "main_e2e-testing.md"}, "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4": {"doc_hash": "577aa85692ac79325ea524a55d44d2b735ba4aa5ffc26e1b84916b6cdfa6703b", "ref_doc_id": "main_e2e-testing.md"}, "625e9c00-10f4-425d-b38b-528c802bf39b": {"doc_hash": "9f9abea364dc7ea3d06d5a78023c35beb4d221812edbed1830e8697449acfe2d", "ref_doc_id": "main_e2e-testing.md"}, "44bfad9b-a550-4158-9914-89f095dcc2fe": {"doc_hash": "458cff2f4c0ddecb940052acaad3635b1194ccfc322644d75c489eceb94cb1f4", "ref_doc_id": "main_e2e-testing.md"}, "e7933593-0aae-4fbf-a47c-40120122c8f5": {"doc_hash": "da20940b57d19809b9f98a04bebfa2d0831bba4ea1c969c3d94ffd3278d1ac0b", "ref_doc_id": "main_e2e-testing.md"}, "30fe353f-fbeb-4c35-a6cc-c7d36438e40f": {"doc_hash": "66fcfc20ddebe784279d6d0707bc338ae1b18075195260d42279fa5ae049e45b", "ref_doc_id": "main_e2e-testing.md"}, "bd773573-843c-44d1-bc02-53a3e146fad0": {"doc_hash": "bf0cd976cff6c61ecefdd9c6e29459bb573b6065c1ce5f9f8bd1836c9b465d88", "ref_doc_id": "main_e2e-testing.md"}, "1ad56aa0-df9c-45d9-a31e-8dfd80546b03": {"doc_hash": "22573e46382ac1becd2238f0447e7dcbb1a86868e19101f91aacc14caa12f5a4", "ref_doc_id": "main_e2e-testing.md"}, "8373015e-3a30-412e-aeca-83f71eebf235": {"doc_hash": "e22ee385576acec082d6a887570fc865b85d4ac3ade1db5c53a2caa4c00037d0", "ref_doc_id": "main_e2e-testing.md"}, "bb3a1e90-003c-4324-847d-327f1ea0250c": {"doc_hash": "252a106c1d7fe2486ecc863044a74ee59824bcdfc488e9d3af7593fc4a93d024", "ref_doc_id": "main_e2e-testing.md"}, "cdb7007b-c7ab-4f90-af25-62090434e8bd": {"doc_hash": "ace0ce3912250f77f9c609e21a5b0fe6a3908d927d1ba125fb1660609f942d7b", "ref_doc_id": "main_e2e-testing.md"}, "15a43e86-240a-463d-9e3a-fd13642ed6cc": {"doc_hash": "6a61522856a3760c71c11e0ef1e7c4833989eb7718cbdac62ef6a41c234acdc3", "ref_doc_id": "main_e2e-testing.md"}, "6270ed94-c253-4fca-aa18-9858f62956c0": {"doc_hash": "48a34cf4e0ba1a893d83031adeb8f2d376ab496de3f6b77ba88f67dc4f9ddf6c", "ref_doc_id": "main_e2e-testing.md"}, "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a": {"doc_hash": "7dd876716265e712560f35752e0860b80bb8ac4e5116f64b595353af1f10cfe9", "ref_doc_id": "main_e2e-testing.md"}, "4db0c86a-9276-4382-92fe-fc7652dedcf9": {"doc_hash": "b62b4f747dc1d3ce4627b7fe61c9ee48cbb6ada74f9e7861adce3ac977076770", "ref_doc_id": "main_e2e-testing.md"}, "ecfe11b7-60f6-4491-b06c-a55e51372777": {"doc_hash": "e5b8e79fa56767f54cde1ab3e82ec1e8840417eaf6f33b1b0b6194c514a87984", "ref_doc_id": "main_index.md"}, "1956d6bf-914c-47a6-977c-f8c35a47a2c6": {"doc_hash": "29f45b067fd51f9f2b69ef46b252fa987490e089b26e646872c0c669a2ef7846", "ref_doc_id": "main_index.md"}, "888564db-93fb-4eeb-a7ce-3d7fe030e83b": {"doc_hash": "b6d4068ff7adca355eb80d45f492abd986a1db913452e5b7a384b44933f0b22f", "ref_doc_id": "main_index.md"}, "6f98130d-39a3-463b-b8e4-4cd1d3add03c": {"doc_hash": "1dd05690700a95f619844e52d36cb0a4bc9036982bcc560451427e4ddf157804", "ref_doc_id": "main_index.md"}, "c2b6e77c-12c8-4aab-8646-7ed6876d88c4": {"doc_hash": "dea8f8afab5ee018e569cc411e5e5a75901d7e41e243ee73b5cffcba8a69358d", "ref_doc_id": "main_index.md"}, "0ea2ed53-6816-4b07-a78e-f1abe2fac07d": {"doc_hash": "66b7bcd1434b4d6bbe819f21bd7f9cfc96ee77110844f70dcc4bd0076093f718", "ref_doc_id": "main_index.md"}, "22bbfe55-e9f2-4e8d-8ae2-939dcb6ab0d9": {"doc_hash": "0bc6e8edd7b3b124ba5c5c70d75bea6ed6ebeecc6903aa1e820aae5aa797f5f6", "ref_doc_id": "main_what-is-agoric.md"}, "75eaea8d-3116-4b8a-8270-596746bf75e4": {"doc_hash": "3e28713775f544d758813ce3feaaf558fdc38e8a3ab86809094ec4c688592013", "ref_doc_id": "main_what-is-agoric.md"}, "13d5ea56-5b6a-4be3-98aa-ea5bd886275e": {"doc_hash": "0309929118ae125c15605da98ac7316c08e8d79205bf10aff115d40b25f29b3a", "ref_doc_id": "main_what-is-agoric.md"}, "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd": {"doc_hash": "5d53d72f1fd39276c2213d979eaf4146ec59d542f995f3bf696a6fb20853374b", "ref_doc_id": "main_what-is-agoric.md"}, "570fc89c-19d5-4c13-88a9-2acc59f45ea2": {"doc_hash": "1f8ce47989e54492ed4fcff248d2a1c0c80ec5ed1be56144a9c7a0206b35623b", "ref_doc_id": "main_what-is-agoric.md"}, "1402ca6c-941f-4dfa-9f32-9913b68438c5": {"doc_hash": "f3d2b0ede351a2cab836af4aaf48f358210295ea97357a431ea2957bca204a27", "ref_doc_id": "main_glossary_index.md"}, "b8f713c1-22b5-45f4-a0c9-533178a7d4a9": {"doc_hash": "6401712555ad38029b5973f86de3df61e87d134d6a5246278ec8e38b95012b23", "ref_doc_id": "main_glossary_index.md"}, "ad428229-1650-4d07-bf00-bbc5095eb6cc": {"doc_hash": "feeb979b91c2283212762ef61f7a7db017e6e5d72dc55e0a3b0b5a260d3f0e32", "ref_doc_id": "main_glossary_index.md"}, "5cbda961-6e55-482b-a1a6-64d565e66e2e": {"doc_hash": "00a72c69508a1be45c423415ec16eb4b2b87a0844c18d35cb59ab338dbc6410d", "ref_doc_id": "main_glossary_index.md"}, "0cafe8d5-668c-4237-a8d4-f8b6e1526812": {"doc_hash": "39228b136274c3b024e1f81b8ea8f25453569c4f253459a3db14e746919c278b", "ref_doc_id": "main_glossary_index.md"}, "1e4ed967-807c-406b-b8ae-8964a70d1710": {"doc_hash": "3495154273a8efabed1e45d57dd78f8d41cfd6d3bbf416c2ae464e6a17f78406", "ref_doc_id": "main_glossary_index.md"}, "dea2ee06-df27-48d2-9668-57016b79e200": {"doc_hash": "906306a8eaeb5fd93da95ceb770fa4dea9f3a3e9580b2126594683832d34e18e", "ref_doc_id": "main_glossary_index.md"}, "109504d6-86c4-4cf4-b907-8197d072d511": {"doc_hash": "a746e9a595355689e3c88a6d8d114ef3d761370f1b252c85520b6650ee50ac52", "ref_doc_id": "main_glossary_index.md"}, "55e8243f-c760-431d-826d-fd3f0b93ac56": {"doc_hash": "7840578623dbc7da769762f492c482c20729ab51efba0febe76ab80f07b10a48", "ref_doc_id": "main_glossary_index.md"}, "60729b3b-2648-4fa3-9580-1c9dc321a45f": {"doc_hash": "3111d051e41766d16b215711d3594bfe9145e79bd90248d339ae16b001280a22", "ref_doc_id": "main_glossary_index.md"}, "216e5849-af92-4eae-b170-b4cbe444b4b0": {"doc_hash": "acfd7106ecd2c61aa50e453914fdfc349e58991c0c104a91387b1ebe817db08a", "ref_doc_id": "main_glossary_index.md"}, "7fa9e3ea-765c-4684-be8a-8681370c797c": {"doc_hash": "8f31d76a5d538933aa2fa516d85d283bc47dc9327699344c5b3cb41e59ef0e86", "ref_doc_id": "main_glossary_index.md"}, "d4796b6b-88bc-4027-b909-3044f636e8cf": {"doc_hash": "ce07c6b239c4e6a46de84e9d03986e16e5595eda6c7e0d12405f61f5147f1b1d", "ref_doc_id": "main_glossary_index.md"}, "61d8c8f2-96c3-4658-b650-8fbf26e515f0": {"doc_hash": "3a4fd3b57ac9bebf609b80748b98aa21241ec06e0e3709b2ffae5f5c7c48cc39", "ref_doc_id": "main_glossary_index.md"}, "a5f270dd-dc8b-431b-ae12-85662cbc113b": {"doc_hash": "88ce20cb8cb8f5d0fe319547ee0ed2db791abff13a150b4d3d45ee72aba805bb", "ref_doc_id": "main_glossary_index.md"}, "021805c8-e8ed-4aef-b0a0-25179659b4a1": {"doc_hash": "1be94495230c7f7c4a81be55cb8bbe07e857304e3b08038856fe514676ceae71", "ref_doc_id": "main_glossary_index.md"}, "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c": {"doc_hash": "fe3fe5366305200d2cb89e3bb7ad40bb10be0e706a28856c0cfb76f33742d11d", "ref_doc_id": "main_glossary_index.md"}, "2066be5b-b36f-4aea-9be0-9225889c3f36": {"doc_hash": "a2450a5f5b603896140fc02ef2864eaa06e99e7e2643b2525a12d4841c0a6132", "ref_doc_id": "main_glossary_index.md"}, "16d4fea1-219a-4e29-9235-e232f5c3dbfb": {"doc_hash": "1c244be6e0eb2971fad19c413fc921178149456135fcb019f7fd058f3cf6675c", "ref_doc_id": "main_glossary_index.md"}, "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8": {"doc_hash": "7c3a7591d51c62367d9b84324f0637418d5d6574ad0ce16c1e042ab05c664fec", "ref_doc_id": "main_glossary_index.md"}, "ffa4d15c-3010-4451-a901-74c6c647ddb2": {"doc_hash": "6946db93d0a4f24669c5bf9961af7290e0fe1352553af73c747bc6161d603b6d", "ref_doc_id": "main_glossary_index.md"}, "4c8728a5-d95e-437b-9d93-7413fab31327": {"doc_hash": "02c96c2b8ed27336b2ae8feb0f076a6b9cf68b24c442baeb2d8eb6984a06daad", "ref_doc_id": "main_glossary_index.md"}, "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a": {"doc_hash": "75c46cfcf90d64fa844df3397080b2f725d4999353f9944a0e3bbbadf57e5218", "ref_doc_id": "main_glossary_index.md"}, "62e79afd-828c-42b0-a158-6caae2fb113d": {"doc_hash": "1c3a8e041f19e9577b550e62a46961545c08742004c0e8a3676e93af78701008", "ref_doc_id": "main_glossary_index.md"}, "d8f6246c-eff6-40bb-b06e-f72fdf938c83": {"doc_hash": "206f0201eb750f3928cf8624d4c1910b3aa09acd4a8605a04a09a76e52f8828c", "ref_doc_id": "main_glossary_index.md"}, "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3": {"doc_hash": "5addb7e92b405a93a75518cbf945e7ce62ac5c1cf88ab6fe0e54c8eac98449dc", "ref_doc_id": "main_glossary_index.md"}, "31babf25-57a9-471d-8916-3f46f260fb17": {"doc_hash": "91a668e2b383d597d3fa26d08edeebdfe39252e6d926925e8f67204ee8283900", "ref_doc_id": "main_glossary_index.md"}, "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7": {"doc_hash": "165b65f37a0adabbe7d73e7d45c91e87d9bf632534e233a238a8bf3d9bf69cc3", "ref_doc_id": "main_glossary_index.md"}, "9d4ea8ae-c745-4444-957d-d4276c9839c5": {"doc_hash": "c069e364812d8dae1bf482f4d18e52e0acf5da644e32b095bb0defbf275ad886", "ref_doc_id": "main_glossary_index.md"}, "97140f40-b9c4-4e09-93aa-f86f2a1b8345": {"doc_hash": "ef83d0a9165492b22241bd321122997cf20d0e899858d24bac6e45176e08cfce", "ref_doc_id": "main_glossary_index.md"}, "4bf3dc36-238f-4fea-afa5-af8d089f7616": {"doc_hash": "3ebaa2f5a7f8e098aa175fc85925eeff4d06517d0f02e89916088e96d2655f94", "ref_doc_id": "main_glossary_index.md"}, "552da849-a0a9-4b36-848c-22f1ab83a0c8": {"doc_hash": "9bf8ca68ca59963afae8544224d3b885027b57894ca64d1cf7dc22f60aefee16", "ref_doc_id": "main_glossary_index.md"}, "12ecfe58-2bad-4c79-83ae-d459c2d365aa": {"doc_hash": "cb75c9f0e5a15f788eb96980dc43e98f063926d93dcf373fc6f2fec808509005", "ref_doc_id": "main_glossary_index.md"}, "c8f792fa-e5a0-41a3-881f-381f0321c017": {"doc_hash": "cb1ae0404235c952dc925089da32c6233283ab414b489f7902f219b4216d1b9a", "ref_doc_id": "main_glossary_index.md"}, "b5c39875-baf0-4e01-b493-90a909501702": {"doc_hash": "e3454bcea488d232d27d07ef1b00d682da0bd8d1623a4b5f802e48a406e96592", "ref_doc_id": "main_glossary_index.md"}, "974356d5-94a3-4d51-bfea-f1f80d94d206": {"doc_hash": "9d7d6c490230aeac8831de7aca0503dd2656e0bdacf7e823020832d5bb170d19", "ref_doc_id": "main_glossary_index.md"}, "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736": {"doc_hash": "6ff5171cf73f79bbeb08994299605331972b356ff5e5c4601412247fb44ba81d", "ref_doc_id": "main_glossary_index.md"}, "79451cf1-1a07-4cbd-b91b-f5e51503bc08": {"doc_hash": "dc10b77cc8550deaf7ca773293062e961f9ca51b6cb80e58c8c0016ddde91381", "ref_doc_id": "main_glossary_index.md"}, "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2": {"doc_hash": "ae64641dd4b6d588886b03297f3ae9992c46b3513dc7d39d0df2360984a37d95", "ref_doc_id": "main_glossary_index.md"}, "e8e58ae8-d038-4383-9e86-d530f8a76c76": {"doc_hash": "271e062dfddd489dd80f5b72068cf81e2db4e4fe480aa319165c28aa3f2611f2", "ref_doc_id": "main_glossary_index.md"}, "51bfaba8-2c88-4489-9d57-2fbee54f4100": {"doc_hash": "87d0842d5d844c78f48a63300881a8908d1a9603571aaf21cdf4b970b53c90f5", "ref_doc_id": "main_glossary_index.md"}, "b56645f1-f516-4018-a113-9bec70b6d6b3": {"doc_hash": "3d3208dfd5360bc4f643140429ce2e869bc5f941c42a6a18f81a03c09d7da464", "ref_doc_id": "main_glossary_index.md"}, "8af97c82-fb2e-4dc3-8f81-785a3e6db16a": {"doc_hash": "75ea2ddbce87ba207193921824a86417b4c070053b6a1cc176ad3dedee709ce9", "ref_doc_id": "main_glossary_index.md"}, "a0d00453-d0b2-4ef6-b420-4323bc503b7e": {"doc_hash": "0d0f93fdf335c18c7c09e477a92ca21f2f7d42328b7f5840f447bfc36ef91670", "ref_doc_id": "main_glossary_index.md"}, "f763b8e6-200a-41df-a7c5-8cba5ced845c": {"doc_hash": "ec0d95bca26fe7b1423be8b1dd5f1a69c574c0c69ad50b4aa19be4f6834c8e22", "ref_doc_id": "main_glossary_index.md"}, "43ad6506-a813-4508-b88f-eb7d29ec4392": {"doc_hash": "4ff5926f765a9e45a7fdc7b7b5ddb2a04e592c369ea692bb7c76fb2a3e37d934", "ref_doc_id": "main_glossary_index.md"}, "203c5b7f-916d-4eb5-89c9-95b3f891ad21": {"doc_hash": "40604a556e92b4bb3722a538c080f84d3ef437003f7b4c0f224b2087510edb4b", "ref_doc_id": "main_glossary_index.md"}, "1a048a40-df1c-4a0d-9615-0b293ebfc74a": {"doc_hash": "404955933bb615a1fb716e11f12329f8ce63db672c3c9fc1d443504a6e648afc", "ref_doc_id": "main_glossary_index.md"}, "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b": {"doc_hash": "c47590c2069ee5e75ee2d11c4475bc899e4d7877b36ccc7ca54d938b91900138", "ref_doc_id": "main_glossary_index.md"}, "d34e89aa-72a1-4707-8c83-087d5f6961d9": {"doc_hash": "b561efd53291fa4778f470533ffad6191a4e63886da65261830fa08be81d0a20", "ref_doc_id": "main_glossary_index.md"}, "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c": {"doc_hash": "5c783de075dd26a38ffe465e3821eecdedd99b2df2830a4909ce4faf37a6c1f7", "ref_doc_id": "main_glossary_index.md"}, "c385dac4-cb89-4d26-b44c-b47bc17bf629": {"doc_hash": "a8aa96e5d363b5ba3524af79f389c24306e01b5d9509eaf2c61c95e30385069c", "ref_doc_id": "main_glossary_index.md"}, "475ed658-6e95-4734-b74f-8fd2599bfd95": {"doc_hash": "45d6a8b931fcab3cf87e4bd1da82ef582963d0b1300582807834b1b3ed000160", "ref_doc_id": "main_glossary_index.md"}, "94d9772c-c6db-41d7-9819-2f91db5bf3b5": {"doc_hash": "f5c3ccf60af4d63cfd2dc7bfe93ed5cb47a7ff9f010bd0259f1efd3ea03e2436", "ref_doc_id": "main_glossary_index.md"}, "ac147761-b92f-4820-b2a6-94b19762b43a": {"doc_hash": "360c18eec43c46f131b3c5861e873e98fc2104c5e301c63302a029acf9582fd2", "ref_doc_id": "main_glossary_index.md"}, "83475700-619d-4004-a7a5-af96b87af83e": {"doc_hash": "96dda88da11004d2e4b0c04decfefcb0170fd8abfdf0700dc4b0b348a7f92490", "ref_doc_id": "main_glossary_index.md"}, "16b0870b-6936-4811-9f41-0c229440daac": {"doc_hash": "73cb18ef1463a0a2f13ca1ff811adbd6b74fbbd7dc673ad46161d4158cfefd57", "ref_doc_id": "main_glossary_index.md"}, "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f": {"doc_hash": "cbbbf4b194bbc7be3a41aa08d40ee51b251bf7358da995f19d366916b7666fdb", "ref_doc_id": "main_glossary_index.md"}, "995b01e8-3865-4767-b669-23cea91b0898": {"doc_hash": "54bcc0c39b1ba0aac98d4fa58c568ba131263e58a067466bc687efe650e9f4eb", "ref_doc_id": "main_glossary_index.md"}, "ab112447-8fd8-4194-af97-470add9bc483": {"doc_hash": "6b894ebd4546e3c994823f310f04b60ef6ad79f1d230ad41526e84ec3ce1898f", "ref_doc_id": "main_glossary_index.md"}, "db685fb7-50ad-4b79-836d-55d67ba05546": {"doc_hash": "71c09bbfdb4340cfb42b0716b38f9a7c1012d0560f90df9666d237fd83ec4314", "ref_doc_id": "main_glossary_index.md"}, "15cb455e-0ea9-4b86-8c46-50cdc04af8ef": {"doc_hash": "0793affdb5b000510889449f46b1c5e1e94639fd602ae243f297b46f3c76b5e3", "ref_doc_id": "main_glossary_index.md"}, "007a1963-19bc-42ed-919b-c41dd2e33dfd": {"doc_hash": "89020907faef2f41a6334f787b9172484c6221403e1ce2c908989e79dd2d143e", "ref_doc_id": "main_glossary_index.md"}, "4d94257e-6511-40b1-8abe-654ff32d3fd1": {"doc_hash": "64d0e0f406dc9a4226e4f7428add46fec7b073c725b18ef4015e6f2eb3ac8ff4", "ref_doc_id": "main_glossary_index.md"}, "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2": {"doc_hash": "cbd169d88d587af0758dbe2608315c92dce1717bcc29f1c640497dc32a2fe3b1", "ref_doc_id": "main_glossary_index.md"}, "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910": {"doc_hash": "10f85b60e4cb5dab7741001a08021b909911ba15c09743671ce6c96462cf53fa", "ref_doc_id": "main_glossary_index.md"}, "c5118a26-3baa-4af0-bab5-a68e8adb2e69": {"doc_hash": "8d625f9ae65ed2ce17e294718b086b94eb5d3a99dc367daff2bf6c56fc255e2c", "ref_doc_id": "main_glossary_index.md"}, "daab7363-2c3d-4792-9635-6849f4a430d9": {"doc_hash": "2a446c389d4ce238f81bbc7ea9d3b6074fa6771326558c90b5eee70f1356c836", "ref_doc_id": "main_glossary_index.md"}, "9010bcf1-c75e-4046-a517-4674f5c266f7": {"doc_hash": "dd1e1ac6314a2f47e48a737b80ce3ceb87be80603511a5f08dd004134e8e1d83", "ref_doc_id": "main_glossary_index.md"}, "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0": {"doc_hash": "2f1edb14fba34ba80704cb373a6077e2f4b8327d758aa2d32a8aa31558caf698", "ref_doc_id": "main_glossary_index.md"}, "d760f539-07d7-42c2-b60b-e2d86c50fc4c": {"doc_hash": "30a1f69664123cbed3d2a1fa651fc749f14a428c5eed1c4d5c689d6ab6f3d39a", "ref_doc_id": "main_glossary_index.md"}, "68bf8e09-1bed-43f3-a602-5952890c30be": {"doc_hash": "c3e3c83b872483d6f342c988614e66d3193696db822b77fda387079522169d84", "ref_doc_id": "main_glossary_index.md"}, "8ff16f70-720d-4896-91ec-fbb8e6ba392b": {"doc_hash": "39d3f1009c0b3a6e64525cf9faa99ad02106e4d5c7da9320b3e276c71950518f", "ref_doc_id": "main_glossary_index.md"}, "1920e19c-61d4-4f4a-9614-bc6c093a808b": {"doc_hash": "4936c75b1d3ea731cfb4bdb54a9e162825883fda296597ca224fbc02a5a8ad19", "ref_doc_id": "main_glossary_index.md"}, "621de3c5-08bd-4507-9e01-093153e92c0c": {"doc_hash": "b91496e2537761e0a7964428637dc469eb35b62584bff5b4bf3fa39845b73a82", "ref_doc_id": "main_glossary_index.md"}, "9f70d633-79cd-45a9-b13c-c1b5df27836d": {"doc_hash": "cad8e6b368e64afbfef3790ae7011be4035676cffd9efa79b5f6335cd3f5914c", "ref_doc_id": "main_glossary_index.md"}, "b53a19d9-986c-454a-aae1-867e9632c8eb": {"doc_hash": "2c032ba8c006cc7cdd5a709177e2f37b92d7b023689df4d113780dc75530d779", "ref_doc_id": "main_glossary_index.md"}, "163f1355-3af8-49c0-8dcc-bc0cbbd10383": {"doc_hash": "0a6b75db1f69ebd9c8924104fa8a7cc2225e6043b66212fdcdf60524a3fada23", "ref_doc_id": "main_glossary_index.md"}, "16c7850f-f07d-4c67-80cd-a07159a8ccea": {"doc_hash": "13ef87f805614dd14e0daf42b50af9f5cb66e3cc1289f1d26dd5c1ee9500c79c", "ref_doc_id": "main_glossary_index.md"}, "6a04371b-80f7-4dd3-96d0-72760242cac3": {"doc_hash": "3ac08890588cb71b4bc1d6302fd0a32644a50ceb1a64a87b855b0878d05d5e0c", "ref_doc_id": "main_glossary_index.md"}, "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e": {"doc_hash": "cfa58f6e13335c69b3f32d34ab1ad05ab558673b26662ee459169fd0429a39b0", "ref_doc_id": "main_glossary_index.md"}, "cbd72bdc-d820-46b9-b987-2f3b4bf57796": {"doc_hash": "ed371c79a8bca8395d57821d9a80e5545730aba5f550f88cd070bcea8942df22", "ref_doc_id": "main_glossary_index.md"}, "78e75182-8e1f-486c-9434-173a8d8a9b80": {"doc_hash": "8264f1a855b4ba5fec018a96e259cf8730bbb9fc2a18ea84b2cfe817725861aa", "ref_doc_id": "main_glossary_index.md"}, "6b61df57-d759-4f6d-85e2-984a6f261373": {"doc_hash": "81aab3ec9ac21fd7a20e45fbc4f17919837fdcf4ca215310b90062499da20d38", "ref_doc_id": "main_glossary_index.md"}, "f198c1d8-f63e-4c3e-8786-2366abc50833": {"doc_hash": "c206e78ade32afc0a84de2d3f44dedb52e8dd882c9df70fd46154ba0b54b7e62", "ref_doc_id": "main_glossary_index.md"}, "1c49c6e4-0051-40af-8112-715dff8c1e80": {"doc_hash": "740c38f1f7a446031340aefd413619c6e886528142bcbcf5024c80f733added2", "ref_doc_id": "main_glossary_index.md"}, "ef18dcb0-60c2-47a3-b396-f9a56c60d71d": {"doc_hash": "90d7cbea38987ba9b88c6a6287711fc13ba1912ba5a1fed5ae7f48afc52f3905", "ref_doc_id": "main_glossary_index.md"}, "02a34f66-8b09-4746-9ff5-b6189d4efd51": {"doc_hash": "144597d752fa344dfdcab244c1dea115416efdaf7a6ca9102dd91ebd3bf68802", "ref_doc_id": "main_glossary_index.md"}, "8f036865-6783-4d63-a057-f1587deec6f7": {"doc_hash": "89e16a66252d569825a64608f308b7af6cc52471481a7e464e51fd2cb0c1aae3", "ref_doc_id": "main_glossary_index.md"}, "dd97167a-3eea-4a96-a953-ada055f34071": {"doc_hash": "77243fcfe51d8a28a58aefdd3192e938ecd4525aae19a6702ffcef06d2453149", "ref_doc_id": "main_glossary_index.md"}, "bbf9560f-f803-4e07-81d7-9d7e68409808": {"doc_hash": "dd2011af2a0ddfd2e4ef5c24c9beda16668afba27414b6018f3f9dd17ed688fd", "ref_doc_id": "main_glossary_index.md"}, "62d74454-cb4f-4e06-ab46-376c1f954e44": {"doc_hash": "92f5695f730c8788977d22b1a464c7630a8b9c5fbe0e88c13502872d3d3d52aa", "ref_doc_id": "main_glossary_index.md"}, "c9f14453-34d5-487f-8b8b-dec6f260b2c0": {"doc_hash": "9d3893aa401843a904e72f01869d1a1254db02eec0321a71c2df68512e7cdf59", "ref_doc_id": "main_glossary_index.md"}, "5c5529d2-515d-4bbc-a360-fe25e3128401": {"doc_hash": "e0b8756a0b998a9b274842c9079720f76f93dc5dab8828fb2d7c2a4d9c287b44", "ref_doc_id": "main_glossary_index.md"}, "0c725368-f3d5-48bc-8bca-7ff10382fda8": {"doc_hash": "9761e4ba9e1d6429a336aac3eb74bee54b0ec186e2e26fe6b772b4b8b1ab5ddb", "ref_doc_id": "main_glossary_index.md"}, "7b6aa85f-0d70-4c98-9f4c-6beef9956de7": {"doc_hash": "e299bce9e8415ec0a70ce40aa38821ccbbdba358c9c98f3261ee47969221d2e7", "ref_doc_id": "main_glossary_index.md"}, "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6": {"doc_hash": "58e6c9374bc595ab7b0a95b87319b98cc5a44ce935ac216ec771f1062aaf84f1", "ref_doc_id": "main_glossary_index.md"}, "7113224a-24bd-473f-8bfd-864c590a37bb": {"doc_hash": "8c9b4d424afce83fd1165af1635ef9ea4bacdf1ff096b9a686f0e33f05b170aa", "ref_doc_id": "main_glossary_index.md"}, "c57cefdd-ffbf-4806-abe8-cc9de9927260": {"doc_hash": "477afb2339cf66a16c50b3791fa6d6e2da401ca1587a6759fa56040ab7811cba", "ref_doc_id": "main_glossary_index.md"}, "1cf9642c-89a1-4772-9a3f-aa973c2af612": {"doc_hash": "8fd4444bd23a45ea1a6c4e3a281e6c380199650ad6f96c8fdf2adb23ae01d2e3", "ref_doc_id": "main_glossary_index.md"}, "d12d27fe-b142-4f41-b591-2f0ad9f14aa2": {"doc_hash": "3207861648abd505536c2e753a8a7814977dcf3e19b6cfd6a8da204e20deaa7b", "ref_doc_id": "main_glossary_index.md"}, "7c8bca3c-4a85-4505-a822-6b6044159374": {"doc_hash": "4b5e97991992831b9e6a0a00162be97e2303fc8695045cb2ab0c4070ae2636ed", "ref_doc_id": "main_glossary_index.md"}, "1a96121f-659e-4549-9d09-aa8a303cebdd": {"doc_hash": "e32bd03eb519fd1fc4a24abdac36d2088e7f2c43b3435c893abd76e050a774e6", "ref_doc_id": "main_glossary_index.md"}, "1291dc64-e9d9-464a-aba6-bde852af764c": {"doc_hash": "6814dec868256b69be4e096a38cd0004bd399fb2793af9e0bc3ae04e846373e2", "ref_doc_id": "main_glossary_index.md"}, "8855523d-e78a-43b0-8403-f3389f9c4e6b": {"doc_hash": "ade653a63b20bfcad61ed2db8ff52d7a0c6b9801d57ebe1d7d2ab420d6058b50", "ref_doc_id": "main_glossary_index.md"}, "e782d97d-8cab-4559-8606-3547af44472d": {"doc_hash": "29cf5b5bce92e63c1cbf06ef12746f87a2396477253f769810eef43bb420c3f7", "ref_doc_id": "main_glossary_index.md"}, "7f86571a-18ab-49e9-ad39-53e83535d71a": {"doc_hash": "79581fcf44caff083ab0ae82258b51f37596513e5dc30e94411d6f5268449ac7", "ref_doc_id": "main_guides_chainlink-integration.md"}, "e5dcd91a-fe74-4d8b-bf2c-87c6a09e7137": {"doc_hash": "4bef347780e526a195dd3de7f87ed72fafe782fa61489b9ae80f215adda6adb9", "ref_doc_id": "main_guides_index.md"}, "d65da903-2c7a-48bd-b9c8-03f5b8d2177d": {"doc_hash": "cfd320f33c99b9f8177732a92f3553a48124413ccdcde3a42272ff8fa410c348", "ref_doc_id": "main_guides_subquery-indexing.md"}, "a43a7238-5c00-4982-89d1-8c245d2888e7": {"doc_hash": "d4ddd24cac86c26d5cf0badc393ab08e38b07fa7a47801e36d8205c1b8ca2155", "ref_doc_id": "main_guides_subquery-indexing.md"}, "2098ea5d-be69-48df-8dd1-25540efebfd4": {"doc_hash": "c0de33d32e777766fac277d64c273eda8621cac11df2e93003ea875b9892dc3c", "ref_doc_id": "main_guides_subquery-indexing.md"}, "b465841d-c391-4b58-9050-d578d26b267a": {"doc_hash": "4d5d6f2dadf19378603ea981eeb21f0a883678429cddf7c1804006c00418c538", "ref_doc_id": "main_guides_subquery-indexing.md"}, "e7131f33-7c3a-4873-90ae-14268b30fc62": {"doc_hash": "a0680dcbcbed49d696993fb992d3e5ad12526ac388fa2f444e9ea46dc8e0652a", "ref_doc_id": "main_guides_subquery-indexing.md"}, "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231": {"doc_hash": "25cc594e714d5eeb09c0e29da3a59f2ee95f72817390444a47feac415c225996", "ref_doc_id": "main_guides_subquery-indexing.md"}, "bfddbe2b-48fe-4895-b217-6d01ae321306": {"doc_hash": "2839da2fecbb551411fd45a790dcdd1535a39b671e488dcf176c1adf8896625a", "ref_doc_id": "main_guides_subquery-indexing.md"}, "c2683698-ab71-4def-a6ad-e40f3bab6203": {"doc_hash": "9f38fae9d7e5cccda0c7ec8a5e322369ae499f1d40d8b9d3b98ce1a103da2386", "ref_doc_id": "main_guides_subquery-indexing.md"}, "157a71a7-065f-47fc-9d09-6e16182509d0": {"doc_hash": "9338c9c0f44c3661e4864061d3851b37711854c381f962c5f6ac6da21d97b1ff", "ref_doc_id": "main_guides_subquery-indexing.md"}, "5b95fa57-80e9-4282-a695-ccd9a49e4d69": {"doc_hash": "3489c12dcf60cecb5008048edc0028533140f504fc953c1a4752a7183ef3464e", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "9a50ea75-d594-4b07-bf88-00d0622ea19d": {"doc_hash": "395208b65c2698e0611945aa89b564bb3b0044c737c27415e94dd43430cbbb5b", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "536df46a-8268-41be-a569-82a3cfef7656": {"doc_hash": "db11b7893160458a8a487e7cff9b58a932364d0ac2a435202f3ec2852540d2f3", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "7e488cd2-607d-44eb-8940-9cb0ed443848": {"doc_hash": "040c5235bc0e117c632998769cc9d9c66ec2e501c00e564777ba34383c176dbe", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "0160ab76-5c23-4a8b-bb00-be2a76b1e33e": {"doc_hash": "7b232a4d9a42114098bc44542374a29a0c1b087dc4c83fc6d6ad10998d6a640a", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "38b71b14-cb13-4c12-9981-67ea7cd91aaa": {"doc_hash": "2e68738cd81e9a7f2b6bbe7632c55fcef7da89bf55125c6ca9e33d997e2b8c2f", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "37e27b3b-7fdd-4325-81bf-a425eb68b933": {"doc_hash": "7635f0667ee6b264bec17420376934c09fcef84a0ebdb1532bd4afd18c3f5aa4", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "d0a2bf66-eb5d-4491-a81e-28afcd10caff": {"doc_hash": "b0bef9c45e3a245a71988f208df229ff263384d31f7c291a384bf72d8f07db62", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "ae22187c-c600-4da2-b134-ab97da0adfb8": {"doc_hash": "89da560ff2ddc4474c2cf9faef022de7b16d9e973a3001dafc975f8478ffa812", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "e07ec439-9563-4656-b66b-548e6fc2e7da": {"doc_hash": "145c6d927afb46567227e012e2461e630d6799e28e77ffe9e41cad84fff62a12", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "23f54097-b698-400e-800b-879732b4a9ea": {"doc_hash": "f8f365bfae4ea2b21d5cf8b1f5c1a2d94c6506cd6832f0a4e898269a935ffac3", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "e2264a7d-3da8-494e-b123-d2f061f8023c": {"doc_hash": "65d19aaf5acb8e458bc7846f5cc2882245f2e9a794ef90247114b5d6663dfc81", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "441f3d0c-2948-4d30-91b1-635af77b878d": {"doc_hash": "b5da9d8b167a09d4f505844360bc95882a34cc6922d8bdeb232e325fb50f4321", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "9841f3ea-79db-487e-b17a-06403cf3a95c": {"doc_hash": "c8d9b2e1e3345324b30354126c8201f2a6ca97242d304c4339c2b8008af10874", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "bb78972b-179a-4e5a-ab2a-db637bee16c7": {"doc_hash": "37da61df339d6adb6d568317d55429813accd3592a26a4a1c9165708b8a174fb", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "9eea2320-b789-4df5-8183-22b4cea30a92": {"doc_hash": "ce65a87448a90c986fb8af597ac6d1558e68212e5b5124dfa88b009953ef0937", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "93600326-4596-47ee-9d4e-f05fffe5d563": {"doc_hash": "879a26071445d725b745368dd00dce742457e18c57792648d65a20331be33e08", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "c518f376-cafe-48d9-b3d2-a55fdae2a216": {"doc_hash": "ffabe68ef4a13d36ab0aef992a1758355826587cf48c0ca3913ca675852e4fdf", "ref_doc_id": "main_guides_agoric-cli_agd-query-tx.md"}, "eb651255-4072-4803-bd24-fd2e430524f2": {"doc_hash": "7dc854c4241e9f55286bc331a906beb26e467167b17585261cf145bb54d913bf", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "ee50d33d-f4a6-44b0-9876-04013a898564": {"doc_hash": "43e47a3363c036c6effa795ed878032e119be50b79eebb3b019695612d0bf1b2", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "ac360a1a-2faa-4a45-9b74-6dddd757f7e7": {"doc_hash": "d35c76fa425fcae331c5c7585441a56d200f60c09ea88b5920d2fd097197c150", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "225d49f5-1748-4873-8185-8992901cc3eb": {"doc_hash": "7032c3be220a8432a14c3aee651f2d22eece19adc6ddbdbf645a1c4952d10ab3", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "74b6ab25-bd2e-4780-832c-ed9e1752e987": {"doc_hash": "7a7f42cb43682574206c35b6417a6aa387e6fe2e9c9cb99fc4ccda0689912e66", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc": {"doc_hash": "07f23c12f2aff6399de45c22d03ae78f92c93069aa0d6cb171d48b6240250d04", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "15b09f4a-5911-4a9c-96a5-8301e8e35e8e": {"doc_hash": "c0842901f550800991a628e2a43798a960d2c8cb8f5a9fee870347d716eae996", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "d2870d7e-3c69-4530-9321-616e55e1de8c": {"doc_hash": "ae42bf6f02606ab2069891487c3d8e60719775654418cbd5361eec8df1e67b0c", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "d7b67f23-ae6b-4479-a468-d7fa55b73f0c": {"doc_hash": "f928edb7120cc8c4b8b57f550055238a385f06034b47bb877b47549ede827124", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "59e3bf80-82ea-4317-95b9-214db38bc30f": {"doc_hash": "6461d48c9ab67925087fda0073db8ca8b1347703ee04fa0658a3019c32077536", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "dfa93330-e59b-4171-9818-9ba3ac1b3dcf": {"doc_hash": "99bd6b97ce2243b1c0b73ae2c3f91856a0a8b9f9d3dd15acad6db043296b96aa", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "805dd3b2-8893-49a0-807e-166823c399c2": {"doc_hash": "783759f7ec5bdbeb8d44b6b2bc41865a9c79331fe1f9847aad062e0609784e36", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "b3d76a27-049a-4d6c-b705-87da438993ff": {"doc_hash": "5ea8f2d1113d972dc3fdf184d891c13dc819f38a2c6c2739a630825671e58231", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "ed663210-3d49-4326-8daa-2ced753f4859": {"doc_hash": "13df49a3116aa4db4d57499e291ef669d2e9b8be7406f95261dd2dcdecbf0258", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "dabc9d59-40a4-4d42-b045-7eb24b4992f8": {"doc_hash": "ffd35449da2b930cf906d7ccc03103d341e449e050e8949231fa3192ff82709e", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "30665d03-45fa-4bbe-b51b-00b9fd640c68": {"doc_hash": "d9fabf309df071bde11aaea2d15761aa2cacb15c639a0e9af7a42e956749912c", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "16a066ac-946b-4088-9a09-074754f573df": {"doc_hash": "b59143db1c50c5c21e2a31395fbaeb79ab8ed82e43279fd356d35b40c9c8b34f", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "ac42eff5-c57a-4cbb-b408-a713a05bb10a": {"doc_hash": "7449d47bf2a3fa15edc8920c5790aa9109746ac8d07c73369e0bc227b6a4ece3", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7": {"doc_hash": "397e521dd759643591648c3d3f9ae82d32ee26e8d17f3ae441a6170c7351a4e9", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "03dbaf87-3e51-4c2d-a884-e3fba224bfe9": {"doc_hash": "3bf92a5e09d4f2a2d001fdc237a841e221761fb2576034ca8dbd85cf95d3200f", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "7929a37a-2537-4df9-a013-ed94e9ac1205": {"doc_hash": "39851d92b1085d7f9d48bb4a1561f875d03fccfb57cf0e1ce31f80ef640c7425", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "1744ec40-603b-4a04-ac1c-59cf00758c57": {"doc_hash": "5113b8d71885b7d101cb0deb60112ee86932a581c20ef194d51b10a09c7cf8ee", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "33a4875f-68f9-4c6d-ba4c-995d7a427cc6": {"doc_hash": "6cde33cff32d690f38eee79bdb2bcb8ca53184b1b4e074354f40ad4535c44b7e", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c": {"doc_hash": "17c384af7aa59106416c512274a9549b6e2d262c94b85122344ff3915ef37df6", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "fa3eba86-2b38-4062-80bd-b02bed3517e0": {"doc_hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "7ce59e83-4c58-4a05-8154-d7ea0ac2467f": {"doc_hash": "e7259d6be20129097776e40738c9dfe56d6ecefc45419286c072df84968b7127", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "248baaa6-4df6-406e-9154-819a74f3ae6a": {"doc_hash": "39dec2e183fb625b0337e598e1e65e57d043ff47c252efd9dc495840d833ef9c", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "9728df7f-3cba-4b20-bab8-bae8e274bbeb": {"doc_hash": "f9111c8b900a761a339b42da09c1bb12807ff2e6a39a744fbff0b4ca8bce3949", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "a722bb4d-28d7-4308-94cf-ef5f01b65b0e": {"doc_hash": "db86c32c4a99b1311999c69a358e15d949c86c9f340c9b128f2da46d432d644d", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "d3366287-831b-471b-a04c-6d93d7c0c09f": {"doc_hash": "41f43c37efa7aad5f775035d5d293bbccccd13f274ea779cab4049c8b0c78cc4", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "0da57717-a68f-432a-a0c3-1713b9639121": {"doc_hash": "f5cce266736eb72da52e200546fcf0f3370bb6ff72bb7cf4feeaf48b007b007b", "ref_doc_id": "main_guides_agoric-cli_index.md"}, "6c00f136-52dd-4d78-b53f-a37e2841442a": {"doc_hash": "70839db2c8ead5eb85cee702cd5923feb4dcc0584fd6947ff63ac65b48881626", "ref_doc_id": "main_guides_assets_index.md"}, "402a6047-bd6a-419e-a2d8-fa9fa59cabc3": {"doc_hash": "c2f2d67c6a4eae724148df76cf72f481539fb3a9dede8acc1eb618673e456b3c", "ref_doc_id": "main_guides_coreeval_index.md"}, "0f29edde-99e6-47e8-8f4c-94fe90296c68": {"doc_hash": "1821cfc1e035fd8d00be9a72d0485ba91568d2add973e31937f839596b489639", "ref_doc_id": "main_guides_coreeval_index.md"}, "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267": {"doc_hash": "d9a8db394a57340cdc5d200d237c8fc916883c1f5a250ae2872fc5ec885a0298", "ref_doc_id": "main_guides_coreeval_index.md"}, "e7c80a8e-3d9c-4e0d-9169-dc5e46fd9b4c": {"doc_hash": "38db011f1a8257f961c45e636f485e443c969c78bef29f15ff1898459a5eacbe", "ref_doc_id": "main_guides_coreeval_index.md"}, "4565f00f-537a-44b5-a6ff-c415bcf63c21": {"doc_hash": "158c596b8c131781ab355ee696af6174812b59993ef2c6d320376e983cb95d23", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "992be5a0-29fe-4d0b-97c7-20d024a2f7b2": {"doc_hash": "ddae1743261b832c48d71a1ced7174df4a51f44095e9b9d80e684da737048b57", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "9a09f16f-4e1a-4f82-bda6-07dca1da22b9": {"doc_hash": "8fe21c9105e23d584822c4d6985314e66ffc07bd7642eb9216fe3bb2b4614018", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "a3c1e119-712e-4a49-a3f1-e82486e65f88": {"doc_hash": "ecbc45fa334f60de03062d291601891b071b49b2eb9b3952e607d30e74d100c8", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "1d301d5d-8f80-429e-9bc6-f157cf3867f3": {"doc_hash": "4f2c245c4b525fa0616bde6db497985b9dc0d7e8f386738d3284f0f577430af8", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "cc3f60bc-0320-48fa-aaa5-729cc65a3d51": {"doc_hash": "676144928e640d85fa6b98cf8458be6e10311b7a3451d3b5f93c3d8ad95d5263", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "7b9b8867-ee34-40c5-8823-eb745864b190": {"doc_hash": "5bdf2aec4da192b114f36bb4ff16efb2aa6a3ca0aa4c64b1087f2836fc157035", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "e4f0561f-7f3d-4d4f-a327-638bfbef6a67": {"doc_hash": "a3f4076473a7e20461bc1286c303b08081ed1f3e14cdee6141ef6e9ca25a8628", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "b33e14af-2e78-433e-aa88-3252b356ca2f": {"doc_hash": "28bc84ea648e01157aacab8621632a5865d3e8f77454cd49f07d0ef438fd19d7", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "98904c73-210c-4da3-bf5c-d7f0829d0811": {"doc_hash": "c4863da1b1eafe886c527050753d2b8a8b5b0a3daab3e730b581c2c60f5fed12", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "82257bb1-9b3e-4144-8b3e-791d0e0127c7": {"doc_hash": "d6ff30f37975d80f12477bd7559229e7107ad5e8d80f9385c464024e0380ad52", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "a18388b9-6972-4f83-a570-621a66e2617f": {"doc_hash": "f2454808905955afd9ca12775fa94cf6573cb68f83fe3ee575db14d395977a2a", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "da2e878b-aca5-497b-880a-f453edd4515d": {"doc_hash": "166ecf4cca6f465db306524ee5885f099889a432343ea1aa4230a9bf4b76a9a0", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "9607b04a-f417-4b93-82d3-75c1c997b9d7": {"doc_hash": "58e042455166cd60996eb23bffc9b09c5efd555560e7e46374e6a7c995341cd0", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "f67044c8-a87f-426e-8029-e49c4dd3cc40": {"doc_hash": "2adaeb92ee58ef336716b439b64838c2a86e381a874bc5f6f11405d41746c729", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "2116b6e4-4cdb-4cae-af08-7b06193f7525": {"doc_hash": "523d07aa6ac21c041379595d4aa089cc50f99bd967b8b19901eee72301dfd726", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "7ca15e48-743d-450f-bb87-720394163530": {"doc_hash": "c11f09551e2bb212a8f013afe80fd27b0050fa704b2a2bbeacdb7eac94b75d40", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "a87b73ed-fb5e-475e-80d2-6f2cfe058d73": {"doc_hash": "0dcca4720b9ec5715c33afb59669bef6e2d54528631a47f03f381a736bee0318", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "f578d8e4-794e-4f9c-b556-797671e6aff1": {"doc_hash": "5520205f18125d5bd116e2ca792d5714b86a3641d26c77075cb50186741d02ce", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "1d979538-c804-4db8-9803-d9557ca01b46": {"doc_hash": "ef8edf32fa4b0094880526e9f5de1ce203bc5873ccfde5ac60a3089ffab97f72", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "83334ca6-ace6-47bd-804a-65c6b6bc38de": {"doc_hash": "a1460af8666fba09c2f8b95bbc2f41fc15ba2c1c2be0347bd535b8888ff91a73", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "974578ce-ac9a-4472-9fc4-2a7be4676698": {"doc_hash": "95a007379e10983d4b7434d4aa304ed8bbd246869115ad7911525c85e9313222", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "40b1f23b-2065-4c31-b4b6-19e08588258f": {"doc_hash": "317e002b2a2ecf2a8c7b1264a5832023cb54fd4aab688225fac5e1aba2f95664", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4": {"doc_hash": "2ac66db94c1dbd024bd6fa3eb24e85a43fa68a87acd3ec6e0872d03147442df2", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "afe88ab3-beda-424d-aadc-e006b70a0920": {"doc_hash": "380bff711d42c539f0483a83f5f0caf3d780dde964a4638b08e17067800fbea2", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "8b578df7-6f5d-4191-94f6-1252d19d0613": {"doc_hash": "d034d3f0e3a2948cdda4409c32a96cbac702988fc69744d1346c06f08009c86f", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "48504be5-dc85-4c9b-a4de-6e66dfe8ab65": {"doc_hash": "92681e7f6c68195d412250c2033683b25a58db48e1bcc573bff722677159551c", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "929d50e5-8ce8-48f8-90f4-36428c1cdf1f": {"doc_hash": "3be8c90c00d0e6f28a918e325260c724acb93e50c9d0249bf6076e0a585e957b", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "fffac374-8a60-41a4-b0b1-ca2a8007b17a": {"doc_hash": "95abf25d2b6bebfe6b162d3d415101169d6124ce9000b06270c898f2c587a309", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "c062cfc5-8437-4f0f-a435-08fd2113aece": {"doc_hash": "892c8d48e93fdb7ca3605ec300a84bf6fc2648a00a829a49645b243656964d02", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "6e6dac54-1596-48a9-9ec1-33454a896588": {"doc_hash": "31c96e08eb57d5873d9c02a4b24d1503b21bf211cbc158a3f1212c37601b0136", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14": {"doc_hash": "839c65c11d9d4796bc8e5116de67dbc255965851f612767cb8f3962fc1cf3211", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "0b08591a-cdab-49bd-b5c8-b71a1000e0a8": {"doc_hash": "778a42003f27ae251496ec73aa745f09a1777c433835a2527cde06368d4bc197", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "177fdb14-d27b-455a-881d-14fa3a389052": {"doc_hash": "dd302a8b3270ee2405d989056884e841cfc657d9252adaab88a72b0e6f665a25", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "ae081631-ed78-4f86-ad5b-a942db39bf5d": {"doc_hash": "a78d236afa2d92e5bfa35b8be42e0258cfcc23ff5678826e610e96d61748c7da", "ref_doc_id": "main_guides_coreeval_local-testnet.md"}, "02a5ba2f-42ad-4e43-b5e7-f102085eda18": {"doc_hash": "62669cac289dd3cc99b84d9d3b3f671b49a21b85cfc15c06dc797069c1dd8574", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "90cffeda-466c-4783-8c18-334deabe8241": {"doc_hash": "6827853f3639992e53dbe8c8998f50c9903ca0a9e0fb430d2df38aa6e0604659", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "ebf8501e-8105-4345-84aa-8e6418571489": {"doc_hash": "f08813a0d9aa704b995095ff78a83cd3128ba54e941fdcf2b8a3fc29b39571df", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "d4244256-901f-4a14-8c9d-6ec14bd33c4a": {"doc_hash": "a07790150b966e448fb37a7ce4350c6b20cb19409d4b0f787165a9d8575efa8c", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "3aa61952-6a5b-42a8-98d1-0d3873534ee0": {"doc_hash": "3c58a7f1a5762a1420fb8c815609eaaa28f145dc3c07231259a04e1439400aa8", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "595d478d-1feb-43b2-a981-d16365a63929": {"doc_hash": "1d7d2ed216fc3af77d01b8c37c351153ad316e474e76b22618819009632a1a17", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5": {"doc_hash": "11edc00660e6f11d07283a643571649323a97263faa16fe4710376ee2e9871e7", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "380e2530-4682-449c-b742-af422b03431f": {"doc_hash": "a8d4876225a1459f4a9053912bdd00d2a5213388e3132c4dfdd17e165043c25c", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "f9fef657-d080-42eb-b2e8-6bec78a7ade3": {"doc_hash": "9fee767140e31597302f768ffb6a138a2ed0d6bd02df68150176155a7c864ff9", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "67055ff3-2584-402c-a068-22a306099574": {"doc_hash": "8cf1ce61caebbcae129acc56b39023ff8b19d0dac5d137b5d924e03bf2e53911", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "13dc74f2-2aeb-4709-baa6-f1c4082b7bf0": {"doc_hash": "4d32faf7cd38011651dd406023f98998b37429255160e1814fa0e50681a9f185", "ref_doc_id": "main_guides_coreeval_permissions.md"}, "a6717b83-1fd8-475e-8e1e-7c706e96702a": {"doc_hash": "bc5630ceffb2b3e0bead2f22a2887ea3ad4ac89926786cc77376917dc691e611", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "ef7937b9-b529-40fb-8113-0051fd8b0998": {"doc_hash": "619e77966ed8e2bc63505fe71f01473a89206fd77e505d69ba05cbc34bb711e9", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "1ea9c631-902f-467d-8f57-d9f0ece2f7e7": {"doc_hash": "dd9aaa21e9bf35136658634b9da588a3be5bef5a6ec488f823ecf7a7ede6372c", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f": {"doc_hash": "9d66fc8c8fa7c84bdf59ca6248129b278da0b2ff810e974e45b18e786fcb5224", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "44001b6d-5067-4fe3-8cbf-2a3e18217388": {"doc_hash": "56c6c683c91dda24b263508ddb9e0877dc1abae8072ba2d69dea00b93bdd2c15", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "7f4c0291-af37-463c-9957-60de8a5caec2": {"doc_hash": "5729d645ad355b32b88da6b635ef418fdc7f651236c8eb291028a6b8b742d2ec", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "4ac7c1de-f22e-4ad5-a083-15909afcd61f": {"doc_hash": "0f76a6979f1e8935f7260b81bc3047e7c24bc3e81f0ee2fc9bfe21ecb8df092d", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef": {"doc_hash": "560f0cf55a4f2a1e4e2be59d6c5bf36e3fc8d7ac8deccc387a28506da9dbbd35", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "4d519f79-f4e9-4c88-886d-d76310b43877": {"doc_hash": "da3d127644700650f9d4c5bff73a533fdf31dd17b17da08f712949fa7dfe0726", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "60d51012-ce75-4a26-bdee-7dcb36e73480": {"doc_hash": "ef22382520d9dfe3da334d4f84da074dd7eb11f489a5c7906cdf6dbdc93dede1", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4": {"doc_hash": "de33a9eaf9b7ac186cbd1c9b661457243487f8b6d059d55938010585d4553c0e", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0": {"doc_hash": "03f19daca3e98497a70cbd58361539be613c2f747470971b2bf7779adc3a759b", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "f32d6413-af32-4a52-8cde-dac749d22ddc": {"doc_hash": "b0f76e0857f85b32b7a3570ae8e2f5572d8e01f7828cda37054fd6050d3b35f5", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "4916c442-c7f3-4c43-9002-deb5d2e415fa": {"doc_hash": "c139390882a39618c017ca933ff1f4f7f5564a4d857efdc8c98c6c40fca6c160", "ref_doc_id": "main_guides_coreeval_proposal.md"}, "f4b9e08b-2506-4b0a-9563-00f8ad97df39": {"doc_hash": "623348039f4e30314e9afd5c258413d782588ec0c5b49c862e28b10382f75ff0", "ref_doc_id": "main_guides_dapps_dapp-templates.md"}, "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2": {"doc_hash": "dfe9378dca82f1cadcbb5fca25d37bc4aefc4efcda4bd92ae68a54bec6d41056", "ref_doc_id": "main_guides_dapps_dapp-templates.md"}, "9e14352f-bb88-4bcf-b3f8-6057ec6687f9": {"doc_hash": "f1247e2c93e7386c28f95397d777c6f3ba3ffb0caef0e0dec1aacdb87c0a553e", "ref_doc_id": "main_guides_dapps_dapp-templates.md"}, "dc522e63-c8d4-448b-bdc8-0b82ca6aaf36": {"doc_hash": "d41c1b899c9b6061f6de6d903f99c77c5beb5b822d450735d4105c23f7fdfea7", "ref_doc_id": "main_guides_dapps_dapp-templates.md"}, "42f0b4a3-acfb-470d-af20-c735433f1853": {"doc_hash": "315d05a14140cb57b6cc1c63f00082526a9130bd32e6d2746d1e1540d0d2207a", "ref_doc_id": "main_guides_dapps_index.md"}, "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304": {"doc_hash": "1628898037e1dbf498df09809e0f1e28c8e5160f0c5b6245b3409d57c49aef74", "ref_doc_id": "main_guides_dapps_index.md"}, "06e78dd6-19e0-4ecd-9545-53395f2045cd": {"doc_hash": "f9913cf9d9c12839d251cb4af27e579b26319572211f2111b87779cfd37771ef", "ref_doc_id": "main_guides_dapps_index.md"}, "dc22fdca-0c29-4622-bc10-f20a72a0d559": {"doc_hash": "7aaf2369478f0618dce5dff0921d9d069efbabf117ef135a0b3f4dca231d511c", "ref_doc_id": "main_guides_dapps_index.md"}, "79fb16cc-bf0a-4324-a6f5-607e82fd8bef": {"doc_hash": "12efe4fc2532e3750953785aaa2ad6af14fa850b7c61f3f127486775cfab3085", "ref_doc_id": "main_guides_dapps_index.md"}, "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b": {"doc_hash": "20a0db68d93201729ce3f759a38cc85b90031d6b58a6ef4747d4bb26f9f07ffe", "ref_doc_id": "main_guides_dapps_index.md"}, "9ae37cd7-0cbc-4f6c-a687-8e940939c7ec": {"doc_hash": "56ac843137828ab89587e124f6c91190c36ecd927a8660c46884168f22f4a73e", "ref_doc_id": "main_guides_dapps_index.md"}, "421741b5-896b-4704-bc4f-eda7a55355fd": {"doc_hash": "279ca5981bac4a540623478d16a67c9f95ae406619fbd107bf91ba4d5dbff545", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "524367bc-b7ae-44e8-bfc4-3159b1d372a8": {"doc_hash": "f070379e668b3eb5ee1324cc860198d6d263687556a4a33984d459c0391233da", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "8794f683-12ff-40c9-907a-3411c0dbbe0f": {"doc_hash": "2eb8e40e04743320189c2ef58f69f930419f4c5de03e0de53f58bcf86519c3be", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3": {"doc_hash": "4fd5e183ddd7fdf5bbb931f6746f200bd721951955ea3da593047b8846fe6120", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9": {"doc_hash": "1cbc1592b62a8cdb8f17e2bbb8ca5a06fc60d7c3bfe7a7ec059c4d9849fa8988", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "a56295f5-1996-4e92-b9bf-d051e714ddb7": {"doc_hash": "f338f14ef43d6054de74907cbc4730737a41fe6b5b00a44e99d993202e66f43e", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "6c949c44-2315-49b9-ba09-80e5a35e5bb2": {"doc_hash": "be17a78567b8a78e927fa139766663f493e34c3fc15c73fb8494430d8e33f55e", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "df9ff320-6be1-4d3b-8828-fbdccc079dab": {"doc_hash": "b82e13521fcac59038484703d33cc93a7dc8d89e4c213884a316940d8597e812", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "37a9ff48-c2aa-46b8-bc99-790b5faa2772": {"doc_hash": "30c1b38edcc47de51855d77dd58e8441a079df5f9e968cdc0053af535affb5e2", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "753a4db2-c4f9-4e09-b2ac-3aa9914635c6": {"doc_hash": "9355b7815a8177bd3b0dd61b691401d2b11cea0355919e78d9500936c14dca2f", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "24bc96a4-c981-400e-8771-8777b8bdcd9f": {"doc_hash": "18ad8557cffd93aaf7e4163f63b6084e8f16daedcccce5e6079e825108a4da93", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "8c4c9c11-4ac5-438b-8be7-b797bc1effff": {"doc_hash": "f421d54e166a5994055acc86451cdc52486e21ab8285e48f71488fef66f64e74", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "ec075498-2f8d-40fa-8892-28aa861c9e87": {"doc_hash": "2a14814ac71e52f46c37160f0059e272c0e097673f61f44209e32152af6f6386", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "ed381a68-7295-4917-b777-aa707e0639a2": {"doc_hash": "57263f4c5d6dd6be7981467b0f1a825a3eef91959008f2b47433bd5fbb8009d1", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "a485419e-d341-4a86-8693-2cfa00abb55b": {"doc_hash": "c5afea9950fc24af16c4b1847cbc96209754fed62ec08400970243f5dcd699b3", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "5644b0df-d58a-4801-a0b2-557c9b0584b7": {"doc_hash": "024678cfb913a9514c46ace2012e126a1c8db819695ffd23dac91021838c6025", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "40688c04-b9cc-43bf-996f-eafcc28e2536": {"doc_hash": "ba4273aa6286e933c30f33ace9ac42748cbc28e3130f9d5dbdb2ee6582e9ab20", "ref_doc_id": "main_guides_dapps_starting-multiuser-dapps.md"}, "10871c33-da19-49db-8d27-b9bdcb3844d8": {"doc_hash": "6848eae8d0283f36e194242c44249f518e902bf902037ea190a7e7d77f9e7b3d", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "6fca449d-4530-4ff2-af62-0d08356a4580": {"doc_hash": "a72a44f97f51294c1e88fc6500905ef28514bcdbb322277a37374d1e4da4e1c3", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "6995b1ee-cb0e-41b2-8474-bb38438b929b": {"doc_hash": "6011709589f4397a81a361d16ea85266a4d9f43ad259df30c898d3c8db63454a", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e": {"doc_hash": "1b90b49b61e5a8fc620c89f225e8e1aba02e300bf2fe849fab54bd66d84e67f6", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "3f28211c-3c10-497b-be67-369b1e853e5d": {"doc_hash": "38ac5f4ea7057d62592f2620dc318b1937620163af3ddeb8b3bf2f8d8d384512", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "f5ee96fc-1547-4dda-8449-74e3e899b79f": {"doc_hash": "80f93a8beceb437c3bef221a57d6e73f7706a22e6f95f3e92e06083f043040ed", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "aee65302-eea5-4cba-9357-c88ecf0a1794": {"doc_hash": "b96db6b4175e170d3c883b0262a79b0067b9126109b50e0a7d818b32858c029c", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "13a9b0e9-7561-497c-bc8c-4c78dcd59e61": {"doc_hash": "7fa62ba7050abb85a360d1dbe7a8eca7700ad9768965858476c6e00df34aa54a", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae": {"doc_hash": "7aaac63667edc80520381c8e32b10d069d509ff83d279d5a3d5043dd410deead", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "01e2e06e-0d99-40c4-83a6-b79ad9e18776": {"doc_hash": "70b432e3e5c4843ce8da9d2110a2a178d61f3362f75857ae367f17e7876ed44d", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "7239c255-bcd7-4d71-b854-798332a6662c": {"doc_hash": "c8dbe36e72c5493694882645199ddbaaf49fe1d70a24c8409c506a0fb6eabd1a", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "ceed0ed1-4694-41cb-acfd-23c3d80b570f": {"doc_hash": "51a279040a75ad685e48987f1a6057c0e319f75b281d657699d57287e32ccdc9", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "da214069-f851-4e0a-9d26-9bee8533a2dc": {"doc_hash": "c6084a67bb43fd62c49ba2a2b36f1e69eca21113dab67a5afd824aafb0451a0a", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "b619538c-3603-4d01-925c-eb77723ebb37": {"doc_hash": "fb4e179b4485c647e0915eae4fb8ee41d134716db1f4347f7193cec65cd5881c", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "5879be56-bfd5-4aac-8f28-0e6d053a851e": {"doc_hash": "943e7b223f0a257aeb4e4d4c78b2cf51925efe1920dccb2475f8822e1a51ab1b", "ref_doc_id": "main_guides_ertp_amount-math.md"}, "f33a94d7-a238-4d67-a282-03f217b05dfc": {"doc_hash": "bd64aae6cdffb2ed37682d2bf0ac6dd88cc896f5c96bd7bd4b9c5cf825773a76", "ref_doc_id": "main_guides_ertp_amounts.md"}, "be83c6d3-0151-40d7-a556-b47732fbe3d8": {"doc_hash": "823b6566aef277ca42a9103b484107f7acf184e66318890f436b0a92a90e93d3", "ref_doc_id": "main_guides_ertp_amounts.md"}, "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980": {"doc_hash": "ea153f3f5bdbe038928945a38fb994d3ca0f3e3d39205b5aa0f03239287affce", "ref_doc_id": "main_guides_ertp_amounts.md"}, "d4df398f-b4ac-4b55-acf3-190c6e03e3fa": {"doc_hash": "32f19d5d96edf34551d90f421e7f784aa13a38a37301d227bfaac00d9e695908", "ref_doc_id": "main_guides_ertp_amounts.md"}, "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b": {"doc_hash": "39c7bddfdb42c029c1797995a6313e85ab62f991d5be6b97e52344f8b1bd7c69", "ref_doc_id": "main_guides_ertp_amounts.md"}, "c4736734-f482-4176-997e-9082d129dcf3": {"doc_hash": "71cd1a7f31dfd34000e901e4111600fbf6f045efe4c27f50a94de83d8c73ee97", "ref_doc_id": "main_guides_ertp_amounts.md"}, "9b3503d2-ee3d-4f16-a334-0408af2d375a": {"doc_hash": "a2a7c37749a4acc41dd2e975cf0083e00188508a0ae22f679de73c13be31589e", "ref_doc_id": "main_guides_ertp_amounts.md"}, "9e1910a0-413a-462a-b70d-acf2c1ded4c0": {"doc_hash": "2a10241a5e67899dbc080eeeeffcd23b706c942a8c6cd6a3fd2ea054b093897b", "ref_doc_id": "main_guides_ertp_amounts.md"}, "88bedc9b-2b35-424f-bf4d-038f087d6eff": {"doc_hash": "e2e98a2efaa1ebd822c04a154317c5cd761ad5500217450c1eafe917f116c343", "ref_doc_id": "main_guides_ertp_amounts.md"}, "6e2c09d7-5d84-412a-891c-af1a5b30591d": {"doc_hash": "0e58d9203f3c5223310d19c5dd4611cbb7800a9602e73966482c51d3c77360dc", "ref_doc_id": "main_guides_ertp_amounts.md"}, "95b7d143-0696-4bca-930b-8847ec163444": {"doc_hash": "e68aa3ae051e8ae3d06512217bc4ce6d46efa9b306a4a51d9c4119f83869205e", "ref_doc_id": "main_guides_ertp_amounts.md"}, "97d80703-ac16-4f70-a4cf-1d563ce9b697": {"doc_hash": "dd95c84f3dcefea9f9aa46b22b06d75b75dae05df7ff88fb1a684aeff52137d5", "ref_doc_id": "main_guides_ertp_amounts.md"}, "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb": {"doc_hash": "28fba86dad4b75b4f09043a9c11d9bcd48531e0ad512544833f9c9043bcf5c47", "ref_doc_id": "main_guides_ertp_amounts.md"}, "4c897090-e00b-4ed3-a79d-068fc0080609": {"doc_hash": "a9838d76e9f934046106d4b0346b9ac3073749a26b2a36f239f588e5adac7dce", "ref_doc_id": "main_guides_ertp_amounts.md"}, "ebb0613c-5d9f-45e6-9b43-f2fe8df45788": {"doc_hash": "c1771f5bcc998bef9bd218a7797df78947f8a0e361e02c6d8781672f3b90cfdd", "ref_doc_id": "main_guides_ertp_amounts.md"}, "4ccb8b86-1e6a-4efe-a734-c217e4dbdf22": {"doc_hash": "c64be4e199f1496b9e6d2801f0535781c6a6887bf7e5ee7d869cf98c9e970409", "ref_doc_id": "main_guides_ertp_index.md"}, "b4459991-d649-49cd-87be-ac4e7426f651": {"doc_hash": "4f4d6f9ef512d74405aa26dd35576c4ed5d21922f0314f97e80dbd3f459a446a", "ref_doc_id": "main_guides_ertp_index.md"}, "b497dac6-bed4-4a94-8345-c5639deda1ab": {"doc_hash": "98fe265a7e681e315761c3f381fc642c9eb166e30697700a5a55e9874d10860e", "ref_doc_id": "main_guides_ertp_index.md"}, "1c049708-e3a8-4b33-8b95-f5d08c11d539": {"doc_hash": "02133d250c685e34766d8f4db21453e86f0b025459a56a63d682567133605ec1", "ref_doc_id": "main_guides_ertp_index.md"}, "a8df443e-be20-4278-b054-f19a57541426": {"doc_hash": "3c7e9d839679dacab3d01951c9a4caf6500cc14822e49f6d5e062ecf6efd66cc", "ref_doc_id": "main_guides_ertp_index.md"}, "edcf4254-fea7-4bd8-9224-3ad5a6e8522e": {"doc_hash": "ec630201067478208b2e7a90bec86d8b13a9ad2da17cbc84b4449e5f0a567c45", "ref_doc_id": "main_guides_ertp_index.md"}, "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0": {"doc_hash": "6c65bb6fa8945af18bb1e1e952dd67b7cf0d8e46919ec1e74ae9b377b9116be9", "ref_doc_id": "main_guides_ertp_index.md"}, "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a": {"doc_hash": "c3495c6a47fbba2e1cd1b0c5d075c6221da9ffbfc261474f26e0345ef9706557", "ref_doc_id": "main_guides_ertp_index.md"}, "dc7d04ee-9618-4331-ab38-a8c9f5813776": {"doc_hash": "a433734ff6b1578beb904910a234df5c946bb1e861a5a10ac514486c77bfc47e", "ref_doc_id": "main_guides_ertp_index.md"}, "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1": {"doc_hash": "42c644eab6f8a69010a6eb9f86fe301dabf4c0c884b5f2e42371bcb02927903b", "ref_doc_id": "main_guides_ertp_index.md"}, "525551fd-93db-4300-b2c4-ab04c736a6a7": {"doc_hash": "e079ca0a4f5d6f57ddda098eecb3bf01a74a7988f1bb85c412e45bd65e3b0ccd", "ref_doc_id": "main_guides_ertp_index.md"}, "f4682af4-446c-4e52-9bc4-0aa9c640bdab": {"doc_hash": "7ba12c9cd1473b19ae3e1951202a122b2b75ea4f2a799d40f62bf61d248578ba", "ref_doc_id": "main_guides_ertp_index.md"}, "53fac140-e073-4153-845e-5b1d5f5a63f5": {"doc_hash": "889a7cf989b7ffc773855838b0fbcf7c68f21e2bb45cbaae10a5a9601526604e", "ref_doc_id": "main_guides_ertp_index.md"}, "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490": {"doc_hash": "17b5559c5b2af97af86a870239eef0b3a7619094d9e88b4a38af001aea738671", "ref_doc_id": "main_guides_ertp_index.md"}, "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d": {"doc_hash": "0d72fcfdd4f881a9be345fd1a64ddc9bf21ce77dbe148093bf8b4d22c2d147fc", "ref_doc_id": "main_guides_ertp_index.md"}, "75abb573-ffb2-4c91-b47a-ddf781dc8222": {"doc_hash": "12bbd4e6cbd8c104687918d12580925a327a48a6566d7c84ae4af6539fa7aadd", "ref_doc_id": "main_guides_ertp_index.md"}, "9db5f350-a66e-41c8-812e-747dc1b46fa0": {"doc_hash": "13336c0d89f3b44e867de263d0776ed3d76216c6e7183476842f432bedce32e7", "ref_doc_id": "main_guides_ertp_index.md"}, "f16b178c-2e12-461b-a183-b848712624fe": {"doc_hash": "762633daffb3725a2746e2e5bd3a36335b5c23d395aa6c0205136323f57daa45", "ref_doc_id": "main_guides_ertp_index.md"}, "877196b2-4c48-4215-b8c5-99076cb17840": {"doc_hash": "99ab86c2e0b05ed813f138ffede76a0818c4ee2286fc0cd16739915931c43228", "ref_doc_id": "main_guides_ertp_index.md"}, "c0349de8-81a5-48d4-b299-2c23609db07e": {"doc_hash": "7bda15e117809a6b87f2b40a762c57cce24305faa1917c893488615e82830edd", "ref_doc_id": "main_guides_ertp_index.md"}, "d55be897-3987-44c6-beff-013354421eee": {"doc_hash": "bede5633a706823bcdc7cd35cabc4bbebbd783099965c2596a12125d225d89e0", "ref_doc_id": "main_guides_ertp_index.md"}, "ea07c262-d66d-4847-b91f-545ee5f54e0a": {"doc_hash": "153e394e7dc609db84cf55afb5a48fa18c19e7304fb8a9d91b26ac6686c74deb", "ref_doc_id": "main_guides_ertp_index.md"}, "91236bc1-20ef-44ed-a79b-44ea658d1dd1": {"doc_hash": "f92a5640c08750440c287e54565dd917ff506f0dc54d6d694f022254c72b95e4", "ref_doc_id": "main_guides_ertp_index.md"}, "99011ab1-d3cf-4052-9bc4-63d742163593": {"doc_hash": "38a683bdde2af22e316000144bcb285aa8b95d776f527a24bb112db25445b4c7", "ref_doc_id": "main_guides_ertp_index.md"}, "0ff7f3e8-3e75-41a4-b097-1160a83fd480": {"doc_hash": "602dabe3dfaf822bd4d1dfde5a4bdf21037df4c004332e3ed3a2e664795c0c68", "ref_doc_id": "main_guides_ertp_index.md"}, "658df245-b1fa-44e0-89b3-82186a2c4644": {"doc_hash": "09fe7a448995c7ac6d6db7e6f35890519e57dd8e8bf142d4e50b9ea5e3afb6cd", "ref_doc_id": "main_guides_ertp_index.md"}, "6dd60e80-730b-42f1-91be-e97a836c969e": {"doc_hash": "94e1ccc6c785dbfe1434276b86fe62a457d1cd58d6d4ea2334641dfea5b20e3c", "ref_doc_id": "main_guides_ertp_index.md"}, "7e6ac798-6fe2-4668-8e55-383c380bb34c": {"doc_hash": "f05de7f3257c79c98ba22e68b3247af305d5a7a57a3dbd8acf3e5e6dfed540eb", "ref_doc_id": "main_guides_ertp_index.md"}, "8bd11e68-ea62-4a64-a4b6-697e1d370a68": {"doc_hash": "f8943beb045c9556a3fe388f09ba200e5c1a6b833b4df9cf2b52d8bc9dc19546", "ref_doc_id": "main_guides_ertp_index.md"}, "267a445c-6f91-4c77-87ca-b674127c8090": {"doc_hash": "9a84c5d4ce34ebdf639ef5254d484b5b3eb40a380a201dd2f3883a1699673213", "ref_doc_id": "main_guides_ertp_index.md"}, "4bce849b-9e51-4e9e-8494-d58488d5f132": {"doc_hash": "d22575314535a91b86a1e568fa1835831ae33492ed5f503b640e3260968f3ba3", "ref_doc_id": "main_guides_ertp_index.md"}, "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810": {"doc_hash": "51eab4a0eaec252e0cbeccda8cee3e8c6745976ff38460922f3bedc58e5b0507", "ref_doc_id": "main_guides_ertp_index.md"}, "cf13f7e4-82bf-4412-b759-3889b916f81e": {"doc_hash": "d9dc6c82f0d610fffd1bb52487614b01ba80bf1db21605cac7efec47a6e6f8f4", "ref_doc_id": "main_guides_ertp_index.md"}, "34697399-3d0b-46bd-90b4-4cbd0a47d342": {"doc_hash": "a5eb55aa33fcf04da89d5ea0e87067ab27f60c6867fc334409f6a89e038fbf49", "ref_doc_id": "main_guides_ertp_index.md"}, "80e22212-d67d-4191-8bfb-2ff07c7508f5": {"doc_hash": "f5fd4d30d6b7dea4c8ad386deb36d0dc198ef6ff7af908aeeebe32227b0d4ecf", "ref_doc_id": "main_guides_ertp_index.md"}, "1e80cb26-25d9-4533-a73c-21030480b6c0": {"doc_hash": "2a363f4a68488574e39d18e08160053ff9586e808650d007596441b6ae529cf6", "ref_doc_id": "main_guides_ertp_index.md"}, "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d": {"doc_hash": "1e76eae8a0b91beb7f989fc6e3321ead2d1788f3e6e836bd2b7f7a5740965d0d", "ref_doc_id": "main_guides_ertp_index.md"}, "4a41ece3-192b-4060-a536-7ecb522ef4b4": {"doc_hash": "95b5ccbcc49eaa6f67b7b26690651bd81e7f24089e66f1f88aec121353feb094", "ref_doc_id": "main_guides_ertp_index.md"}, "0182a6e2-682b-404c-a08d-0c032d2be7a5": {"doc_hash": "936c49bb9eb6e24369d18ca229d29e90596bded970e388a3fa231101e78a70f1", "ref_doc_id": "main_guides_ertp_index.md"}, "0143294d-9e03-4fad-9c9a-f98729368f24": {"doc_hash": "d04cdd3fc367e5a0ddebb17fc01f4658868ebccd5be326b1ffe7ceaa4f0141de", "ref_doc_id": "main_guides_ertp_index.md"}, "ec38d657-617d-443e-9a7d-b47a695c2568": {"doc_hash": "8dad16edb7288e98a694f5a0a0afe848efc16a434a7a3056f60d071bbdca6d01", "ref_doc_id": "main_guides_ertp_index.md"}, "5e5d0d06-6e33-47ae-9813-6c27776ce69f": {"doc_hash": "4fe12ad0cfbf705ab78c0a1d0c3bf5ca32d50b6eb2ee5d3be0a6f7eb3d04833a", "ref_doc_id": "main_guides_ertp_index.md"}, "5b88ad76-505c-4125-82ab-572a461a9a64": {"doc_hash": "5ccb720f2c0c465ba60cfbdb507e32eefc2d1716cb740b61f1cdeba13cca14c7", "ref_doc_id": "main_guides_ertp_index.md"}, "baad0c41-adb7-4b23-bc42-259a3719fa0d": {"doc_hash": "9b1f6b1395d9b87aec7f84583e9017864944c126a5909ae16d76e1f4cfdfceca", "ref_doc_id": "main_guides_ertp_index.md"}, "a36beaf8-9e16-4495-86e0-4a053255ed91": {"doc_hash": "c5bab5565edaecb1181a0c9fb2f7a2f5720a79dcefd5e5d02a581ab0c2501a06", "ref_doc_id": "main_guides_ertp_index.md"}, "cace9dfc-8903-4707-9337-a0ed07b4d835": {"doc_hash": "aa8ef50b605225886535a2ef75f62e695059474f7f8ee748fd1390f3266ce852", "ref_doc_id": "main_guides_ertp_index.md"}, "d9af6eaa-d046-4124-bd29-3e2644bfd3d0": {"doc_hash": "da989083f664d4aa5d82187a6b830529b160692f19714cbf0e5f6b70af983fae", "ref_doc_id": "main_guides_ertp_index.md"}, "e5cba610-58f3-4456-893f-0035752a50ff": {"doc_hash": "2101d6c8db896b90302ad95491436f92b455f1db3a3359198076faf85fae828b", "ref_doc_id": "main_guides_ertp_index.md"}, "4db1c527-a072-4642-9cdf-bb196b6d4937": {"doc_hash": "a7e076a0e880b04220c1d913fc723b3068e832480cdc472e567453f409e71ed6", "ref_doc_id": "main_guides_ertp_index.md"}, "21979f0a-7c9c-44f6-a421-a535e05ba0ef": {"doc_hash": "6a0ff19d4266f72f8f2d4463a2c85786668aff8b6a9c174d95f6973b83c4d3c7", "ref_doc_id": "main_guides_ertp_index.md"}, "0dae4689-cd10-46b1-8bbb-b55f4dfb4d48": {"doc_hash": "43dd53b1ee3e7a6257f32744bd3bbc1fb20c007fe66e8fc9251b279c9dc2c1ca", "ref_doc_id": "main_guides_ertp_index.md"}, "d833bb26-fe1b-4d77-a436-63cd5d29c43a": {"doc_hash": "286ed42a9c451fe4d0b015c7e070ad795ae48461003237c4b0912ca5f6c79950", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "c261d881-93a5-4a57-a1e3-f1ed39c85303": {"doc_hash": "66d68549b5be0ae5620824cde00f152e1eda43396ba4827027c64525ad976457", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "4a931622-8048-4cfa-af7c-82b7c293bae2": {"doc_hash": "dd49556743db965aa5d5ff2a5ebed062feb846ecb733fe975ff91914a119755d", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48": {"doc_hash": "aa73bdc90a39be8d693692cfc2f58df1c2c959f68dc7fc959d55cbdd9f462988", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "caabaf18-21bb-4431-b239-dca110e98d3a": {"doc_hash": "35beaf95e2953b8eee2c3bbb7d95ad491b215ac772be8dd7041a71342d97925d", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "4bea1b71-9fc2-4674-86f8-ed4e3578a882": {"doc_hash": "fbc1b139dd087fa62a1574ba19a7b5f6b619a7dc9d5edc8822e9c44de7a595ca", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "85aea3dc-b83f-4526-a6a5-3f7994685445": {"doc_hash": "d074b32a7ab6972fdcfd3b449432d1ca1665160e6a1d7ceb4027108685503f12", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6": {"doc_hash": "f5bd3f93b490885fa7553e61c15b7bd5aeb0f579e8c6097d85972236823f8ba6", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "453fe2e8-559f-4868-9e7d-cfe3c4782c3a": {"doc_hash": "6357e08c4e7826f229cc4e7b5c7ed37511150470590c1f4b731d386596269e57", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "9036b57a-b627-465c-99c6-79004723ff51": {"doc_hash": "c956053a62940673971e9f6a7ccd2c0c88c839836696b7ea19285677aabe268b", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "81cca2eb-641e-4b36-922f-bc43ff084331": {"doc_hash": "99848f98f0d0fa44bf61dc7e7b843d830a63808e1f13b5307e1248ed505d77f5", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "455e243b-e6df-4833-8571-572713544b69": {"doc_hash": "9746733422f05816af3e2fdfef71c50657780ce71276f253dc18b304de97ace5", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "aab612f1-0795-4f46-91b5-bfcec3454d9a": {"doc_hash": "c04a5dc04499684a3babeeaa4fc2675ac33249c5076f51cb1a90ef91e5147a24", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "c4ff3aad-dfb9-4c62-a09a-8d00a1841866": {"doc_hash": "83b4e347ea04f6920d5ffe7cdc32349c69baef709a65e3fe5a5bf2f098beca4e", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "60ea40f0-4ffa-4df8-8763-91f46169291c": {"doc_hash": "20d9cba8f70dc7683a5e750601de9a0d2a956fa53f61480d73219e9425e25315", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "c8356eb1-7fd4-442a-9eaf-1c4d6529d470": {"doc_hash": "a2bff4403fb2838212d4add7e0490de11ca879328a2aec0b290ccdbf3c0f0b9b", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "26b07fe3-ef44-4d78-80da-2b07e6bf9c49": {"doc_hash": "7f12c4c1330cf800381d3e2b0c98b89ed747b7b98400cb79ab9e97b96048b4f0", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "3210c1aa-e3e5-49ab-9fea-f2309ec8b315": {"doc_hash": "ef9b5de1ab10cf740daf0ba7d44d90308e418e6fd57537b2f002272f21ca1a30", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "7dceb56c-adc7-4795-9c61-5923e44855ff": {"doc_hash": "b6a66af97dcc4ca226f0c84f46335c18bf18d8006c9621e77d923aecfdbd428e", "ref_doc_id": "main_guides_ertp_issuers-and-mints.md"}, "05116bc0-7f3a-461d-8d8c-7814f16bf2ae": {"doc_hash": "9ec65bea78c4acc56231c9cbddd3db65fcb28f99b2bfa0a0c5040112053c42a0", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "f5ec5e49-0126-4ad8-ac09-3152a63b734c": {"doc_hash": "45bc28e10e758add265875cae77040f4e2d050f1f22dd008f67f30977141ec04", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "cf769734-80bd-4629-8e85-13619dd5d1f0": {"doc_hash": "78cfa6bd3a3c6f7d5120ac859afc954fd3d0e1d75c7c1746c536e241abcac959", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3": {"doc_hash": "2319e24d21466ec77ea0b7b4978a1265ff739d34ba8368cebf49d703e5e1fba1", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f": {"doc_hash": "9311b3c8ccc7da9ea6ab069bf5828ee96233295c9c99f4096ad2e1afc09ca784", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9": {"doc_hash": "a10562dc29852dbba033c27746c599ebd63fd478b574e71d6dc72ee7b297c405", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "24e44527-6ae0-4661-bbcf-9c0e6a178c7b": {"doc_hash": "7e4385fbdf42f3054696bad33635fd56f2915ed1bd3e137008de55239bef4ad4", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "bb3d4c45-25d8-4351-bf79-cc8c9bf46753": {"doc_hash": "467d203b90cc40d6e7596c3cf2f436f4f0b690f456e69077e182fb77a0a7b2ce", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "64153019-8766-45ea-9d2b-f34bdd0e129e": {"doc_hash": "47448421f8764b9d575cd536b18c880a9794529aab4b2a722b9939da1fcfffd0", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "62540f69-9828-4081-8a3c-f85b84f8556d": {"doc_hash": "c3b06260f16b7dc8589777ee3c90ca43221854cacfecf63e5e0384319d726b63", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "ed2a842c-985b-44b5-afbf-b23ad6be7332": {"doc_hash": "98284887ef859f62ee439ad7a1032474e7d38f8cca411deae73bd6d0e50207fe", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "a09f3479-e4e3-4faa-b242-cbee9dde885c": {"doc_hash": "777c500be2e652c2787d077c2ed5b9e0318e9de5711a423dfbd0ec0d1f47bb1d", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "9143fb54-3728-457a-b14f-110d632011d9": {"doc_hash": "9afeff17fec05e11701e7aabacc7561aed3bfbe4a1b59104e2d66e8ae1b47074", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "7763ada7-d0c7-4a57-87f6-8a9e6782ea16": {"doc_hash": "351c694649f9384f2e30c217ed292c47f0f969e0f7bec52c111357c89114b6b6", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "bb580bb9-6e19-48b6-9543-70f168db5947": {"doc_hash": "2cd41406c28c7ad6237a522afe217a341836c96732bbbdb3b44f86c4850db447", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "e5070a39-897c-4ffc-badb-5131107dd497": {"doc_hash": "3e29e029d58e09049e142da343656dd5e88efb0adc880f490e3f2abf4e1de7f2", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "b937c616-7f08-4df4-b494-379b75426420": {"doc_hash": "170cc244ecf58c1e0ab3e0b89f7e487518ccbee38b3e48dfb4cadc0202ad83af", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "2cf2e780-6535-4fdd-b26e-920749ce7ffc": {"doc_hash": "3734d56e72c2d78ab8192ee4df7a37dda7a813199d85fc2aaa9d50ebd9967b4d", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "eb91e209-cf45-4195-899b-877ac51b2dee": {"doc_hash": "955d9c0d39f222790c61767bee7ad83adbf7a7c275500e33c852b54aa6686c0e", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "3bb18441-4e0c-4a1d-94dd-41618d85e299": {"doc_hash": "040156d86b1193bc3501652c567795376154c2b3522c538d717afd49eae92f5c", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "51e870d5-5739-4ab5-8747-34b295646d46": {"doc_hash": "ca0dc209daba128a1f8dd4d2308a98c8428c25a51734096708a3f0edf1de1e71", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "9fdb71f2-0032-405e-9f14-6cc82b661ce0": {"doc_hash": "d776e1501b7db9999310c64f28468afb99e9ceee470d20becf05019d787ae1a3", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "1650276c-e34c-402d-ac26-58741a8ed698": {"doc_hash": "6710041de17265629bdb955099bb6b05066352e88a6acd8c72f479382e694cc5", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "651cf1b7-1dfe-408c-8ed7-56e9eddae243": {"doc_hash": "979faa58501b5dc77438cc48d4587592f0b894c4a101c9d68d2bf1395807c444", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "60b9d351-92cb-48a9-93be-e2fb735f57a4": {"doc_hash": "43b6688ac402ba63dcf64dd24c717ec10ad25cea30554a027d2d45bc5253ec9b", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f": {"doc_hash": "797acf500a1e4a9e016bfd3359c3309fadbc2f8f92662fe2f731709722180cce", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "5b2217ad-2bc4-45b3-9fff-11511546f855": {"doc_hash": "0e3f3a4ff6392af4d2757ed96b626f3e26c1378e76a054f52759aef1ed872898", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87": {"doc_hash": "124354f64668ecb8b4e924db008750d321e1f6c482b174c7a34fdfc8e4713281", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "c0ff7af4-83ab-4100-9896-9a3a9747e17b": {"doc_hash": "70a1697929f48c2c85919dd9ce4ea7d1a7261e6c2f3240a5303182f977379121", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "969db249-d7f4-415a-8bd4-15bb0b71ab78": {"doc_hash": "2d285ffae467503267b9c1a88142d830d7812a2861f5e5a6b61b746306461891", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "6ac96b95-fe54-44b9-a4a6-da4d9bc046ca": {"doc_hash": "062bf7f915034063b62577127352e48509eb83a881fc8cb4c1b519e89cf90b3d", "ref_doc_id": "main_guides_ertp_purses-and-payments.md"}, "335882b9-9a22-41e2-b5c6-e39aa2b6f1b7": {"doc_hash": "0f2d0e34b437bc659f54261b95ca6fcc8d63558277ef775c1e611bbcebd56921", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "e7cd0fea-1041-4060-930e-f3fb6cbcef19": {"doc_hash": "86c845c34c17001191a63211669b14f606989ce40a5a9e28fabceec3ef80b307", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "82edb72c-4056-4bdc-9eff-0b2b4cbff55e": {"doc_hash": "27e74c863a734ec5b127a9a2015b6285d7768ab59ca0a030838578e6dab9feee", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "02489dc5-242b-48ee-84fa-2d9782b7d492": {"doc_hash": "082911fba6fbe86dad95763791ed72dcac8a8ceabbb68d4fa79ad762273b5fef", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "ad0d2202-9df6-4485-939f-c54202778cb1": {"doc_hash": "f320d80a2bcd9bd10ee5ab94cc6c6eff75b048f54f6100abc47eb310a24d7a04", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "fcdb3dac-7c09-4373-949b-16a2d75a5c47": {"doc_hash": "436f09597e3d79cbc5e319bee443ed5ad9c01a3064b6d04ac2a73c1b81a68691", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "51a42a31-de51-40d5-aaf6-2002b741e2ff": {"doc_hash": "a0f57c3fe1bc0b92c6214da0e6a2a159345d61d355cb85b5d034a33d564865c8", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "b7defbc3-8c16-4f25-a4ab-d3d9711decbf": {"doc_hash": "6f21ab29ad0481bc0d530c5b83c5b4720beea60d815adb61d4674774f2d0d5e8", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "fe8437a8-9d10-411c-bece-9271d1d48636": {"doc_hash": "f28abe546b53df577f86606077550a2916a020453c9de6404c7c290ea956bf93", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "70702526-aa27-4e32-aca1-7a5212719392": {"doc_hash": "cb33e76d04bbcefe3989aa8df3095b3e51afd502c06487509bf157dd46c1ad5a", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "0538a89b-3a07-4899-9dbd-f5190fd86c2f": {"doc_hash": "3203cba0423d5d30009952fd6f573fe101af104666844d5a127c6135c9270ff0", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "03b63d16-ab34-465d-a745-6e1fb41d1dbc": {"doc_hash": "12177c83870a9b720c9b551be92ff655423ff90f501c3da605900632e99ab0a4", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "2c348799-fa2a-420c-8bde-3379638f96cc": {"doc_hash": "5bc1e70763c45681df2d3ee1ed5da910b8a351eb5139a0e8808e656a054fa116", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "41acaedc-8d1d-4245-a827-8d97ab7be61a": {"doc_hash": "dcb3d83cb74d5f09734941d1a204403d9b6bdb83ed246e196a3ca00ea690f834", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "2ce374e3-a0c7-40f4-b26a-070d3e166f33": {"doc_hash": "74efa4290f0cd193d2c8344a3211f61d362424ec5b3e0e8f3d4353c127cdd2d7", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "f011f5cc-dea6-4973-89f4-5c30954c190b": {"doc_hash": "60b24e53e9d805d0fd00122e868127b97e92ddd881024b3391af4585cddca199", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "b3fa875d-2e26-4653-9b47-6357ccc196bb": {"doc_hash": "7efe69505c0bc9e4f4b018873a4943ed32ad0e61526902356b1e850245f9c172", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "59db4442-5a5d-45e4-ac14-4d2d0d75bb75": {"doc_hash": "253d3e89f3860c9e8ae8fd79e3545e004fa1fbc16b0cd982408ac7209eddc7b5", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "edfa931b-80d4-4dd1-950b-163decbb6de9": {"doc_hash": "1a1bbc1de0868ea35ad46e7deb276d4cad73c3500506d687e0362a93eef7dd16", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f": {"doc_hash": "c29d90b9205eb0afe191c1b421e9fb41a14f45da4ae6eba630fbcfdc66519593", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "ed243e69-d224-4342-b007-a637d6e43949": {"doc_hash": "a00b56fc116a66ba0acba137ad93c24ac7e536a2aaa3407dd567f8f45032e313", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b": {"doc_hash": "354b7ce38142d094c7333c15a54ec31cd6428fee0742c2d61439d23de5a0f923", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "f8c90aec-3349-45dc-82a1-ef7dc5052871": {"doc_hash": "d7d96bedb254ed8407fead5c4434b55a71999966bdead8006af7213c1093e99f", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "838d2060-8905-4c7b-b3f0-52ac4f013b72": {"doc_hash": "b68e2853a00def75a111112e50b98cac616cf2b32e582300f3cd3ea60c002cc6", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "43d27ebe-deb4-433c-aeee-dfcb7caf5df7": {"doc_hash": "686a4bf3aeedcb3e6dfe09ae49c646ce5f8871108b11c90cdcb0b3bcaf283c22", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "0713aca4-6e83-482c-be99-f74348d4d551": {"doc_hash": "bf94c7724501c558e5b00452e77781e34689a98dc36d60a20c359110ed04f78d", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "4ada1309-858a-405e-a67e-d309292e43c3": {"doc_hash": "d04ed461b0ee26b69f5ddf6931aa135da6b226d1920382e1b8201bf0549b8d3b", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "89ff2686-ad42-46e1-b21c-78cd11adfe13": {"doc_hash": "7f86dd675688c4d22be26885beb0b17a94c171578d44f48e285fe5eaf301890f", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "c25f4774-30f7-497b-82db-2b914c2640c2": {"doc_hash": "27e4f893bf3a73a206813873fdfcd744df278f88861d95c30e026f772f554c6f", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "fe6cb507-ef8e-454d-b83c-bd639b7c2e10": {"doc_hash": "03e4f43f8d46b5e1f3dfc020b0c7b822447828f08c8ee824a35e3f6ca34d7bf0", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6": {"doc_hash": "50e8e0419071183f7b24740c6d166c3c7f035753ab230a2f42ffb32f1231cf4e", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb": {"doc_hash": "e019ca5862c40fb5e19e4a7c7a36f4c81cd0d117163fc6e69a6886b560ae8091", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "39eda8ef-ad4b-4105-8398-dea8e1e97446": {"doc_hash": "3bc92ec228e742b3a60ea9f3613da44fe30f2141f265608435959283ba112773", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "590085d0-697a-4741-ad62-d708b31f9828": {"doc_hash": "3b3eabdaf86a763362b0980d1c27867d5043b820ac20ee0b8fa435690d7114ba", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "99c72ddc-5058-4343-bff5-e51115d58224": {"doc_hash": "66a21ade6896fdb2388f4d20c864d0af42e6aaae3bd1423723d3de9010e23b69", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "a7dd41cf-35ae-4be9-9c8b-25689dbda16c": {"doc_hash": "692562ee0fb4bb19c91a6ca0fefb226f973c5f2698bee1708ace4d9eb2adb84b", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "d48222a3-00c7-4c2e-ac0f-909b32f77c81": {"doc_hash": "b3c4e23baab754545c785411280d062124815d5ac11b4550bc4559b756dc736f", "ref_doc_id": "main_guides_getting-started_contract-rpc.md"}, "1d6126e2-fb3d-4136-9e89-8837fb880a93": {"doc_hash": "d5c3b008b23c5365fea5b9d79f2060b9c27d7231d09ea76890ca097155d2e0ee", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "9474aa26-1fb2-46ad-92d5-a9b39a2423a8": {"doc_hash": "eebb4638104965e79be6f468960760785491752f1e8bb2e9d609fb4ab33b8ec5", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "4e6a8b56-5ce4-43ab-9934-83af3496c983": {"doc_hash": "c761fc99b132e8923b34a6141d4e62721f93325957eb1455be3ac4799ca3f4e5", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2": {"doc_hash": "6f27cc1004078f8452f66e8019d1e7a96665d9ea3dd0f269a6294ecfd20d0c8a", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "940bf617-eaf8-4361-8390-06c0afaaadcf": {"doc_hash": "608f37406e3079bf3e3ccb448ad1950f64df3729d05e3d6bfccc2bf5bd3afc78", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9": {"doc_hash": "446c9c36c5cf3a127f54ab61ee794cd293e4d8bd617cd7c482fe7f812374601c", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "370a8902-de7d-4574-bcb0-1a360944586d": {"doc_hash": "9353facf3bee69865eb28f5861059197ea386d2cb868c75f7e8acc3dd7f74223", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "6bfb0178-c02e-46e5-af64-9780b466d337": {"doc_hash": "3755f323f5fe10a480b3729f7422897369eea0a03ff22c45684635f720a526b3", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "8b1fa13e-37e9-4581-8d01-32d0deb69a8d": {"doc_hash": "5f4e7a142c85e17a9a72308193a4df0cc6ebd5e6083a4f45388013c40eaee5b4", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "670bbc3a-27b3-4537-8da3-46e71ac4b7a7": {"doc_hash": "e03593418c6f161b8140e9a5b5d1c5fdba39387bd55840a7b2a922b4ff3a69be", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5": {"doc_hash": "e258f6efd116684a237f9c68e649c70b73eed51985cfb4844d73af5843f2f6d5", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "0b38fb33-b26e-42d7-8cd5-d56130368b7d": {"doc_hash": "4573f778f1eb8f6054f17b79e597c3dc001167ca2400d2ebb90b945f82aadea2", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "405a12dd-971c-4897-9c94-969070ea9346": {"doc_hash": "d6309eaa6d691127490240ebc14a29ca841efefefbe2effada526b4897451c0f", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "fb3a0a62-8dba-46dd-a78d-2c1ff37ae4c8": {"doc_hash": "2f5e5d8d57560972a321dabc4a2c1a6b8dd5a58c063889f589f5f7c852b6bd17", "ref_doc_id": "main_guides_getting-started_deploying.md"}, "3c40f2c1-c20e-434c-875a-edec18146a62": {"doc_hash": "b15d9c652b1a6934534638d452a1504e1677f091ab6dfa8e60b589ca5b47a3d5", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "42376c7a-fb8e-468e-96f4-76f80623b978": {"doc_hash": "219878d6bd69c6cb4db362c63dd64a789d808bb4bf90ef71f84ea1d982ef7821", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "00626dab-5499-4f6a-9ea6-6b7766785fc4": {"doc_hash": "7910b87619b027d9ccb37e982327afcc30b9c589c08859873db274b7e3c7cec0", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "11e3ceea-20d2-42f9-b743-caf04480e47a": {"doc_hash": "c6a137e978553e47dfb61e00e1cf6c143c8277f9b09770c92afc01bb4f8d7900", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "f4aec799-d70e-4850-83b7-bd5e07ecae8b": {"doc_hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "3ba8b9f7-ac39-473b-b4db-1f4be452ca45": {"doc_hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f": {"doc_hash": "30ac9558b93b20263866be2ef7536f0e9901dca988abb62347499f1f49975347", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "32011c16-b6d3-47ea-88b4-39d23fccb43f": {"doc_hash": "29f1c014ba900e207f69fa591aaf2d1e4b33188df13c7df75956c3c8aa160e04", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "9c444b03-20c0-4b15-881d-37ad3572a5c7": {"doc_hash": "911035840aa225351a42f920187a165eb28479fcf3200b6b5a7c46e205c0eb57", "ref_doc_id": "main_guides_getting-started_explainer-deploying-a-smart-contact.md"}, "2d8dc287-31b8-483f-a842-9f338e4b836f": {"doc_hash": "2295c39da9bf92997bb580fad1cd50476acd4f899f84ea2b5da046733224f8ec", "ref_doc_id": "main_guides_getting-started_explainer-how-to-make-an-offer.md"}, "b78d0b74-c7fe-4b25-ac3a-43211fa9f722": {"doc_hash": "cc72688fd52f686732faa22148882c0f5d018f6e6f4563b9ec663915a43a3293", "ref_doc_id": "main_guides_getting-started_explainer-how-to-make-an-offer.md"}, "39152cf1-198a-4b82-a2cf-10526a2c0ae1": {"doc_hash": "c3150b2b977b62db0e3aef4d436aff7f4f673a4a37b131421ba633abdf782fc0", "ref_doc_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md"}, "bf65f27e-651e-4d7c-90c7-7c738b69948c": {"doc_hash": "cf8e8b0f96e6d53b9dc98f6efb287b1bfbce190891eb07cf349d726a3e8817a5", "ref_doc_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md"}, "c9687f9c-2d99-48be-9a0c-5c3dc4843625": {"doc_hash": "51d2d4bb0e15d371f4114bfe29fd3f325c1bc90fe8647b4ef05d4efebb97a5c0", "ref_doc_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md"}, "40115f76-983c-424c-9cee-9711086543ee": {"doc_hash": "c9649fe61b2af72926b9e6a5c1f3b31c0074ba5abbebf1ef817eebda134c9eab", "ref_doc_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md"}, "9dc71d77-c903-4428-a7eb-c9b705940c7f": {"doc_hash": "fcca139a8fa2ab89b5b4be418c11c10b5c7d7fec3e7462950bd954465c6a3054", "ref_doc_id": "main_guides_getting-started_explainer-how-to-start-a-local-chain.md"}, "e82683b8-4d3b-4b65-8c4a-f3e447772034": {"doc_hash": "0d137221596f4391e96411cbfdb693cab97d4c0858f01e6b36e9dc847120064e", "ref_doc_id": "main_guides_getting-started_index.md"}, "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c": {"doc_hash": "03bd6b298774b30052e1e4676753a2f35ba4f829d31eaff470ffdc7be0985277", "ref_doc_id": "main_guides_getting-started_index.md"}, "ef651410-152d-4821-aaa4-e725917d2c84": {"doc_hash": "4ccb74e7ae9f7918f89266277f0521ec7e0ce55f093d3e288a9136cb482d42c7", "ref_doc_id": "main_guides_getting-started_index.md"}, "861a9900-b468-4d0f-9f0d-5de808c683e2": {"doc_hash": "476e069d80d231e678a61061c162a8d6cf3cecc064abf2dc870e17a416d61bf5", "ref_doc_id": "main_guides_getting-started_index.md"}, "85dabe70-cb12-4a53-9442-2d5d53cbc489": {"doc_hash": "978ee821cf2b735d03cb230396b993bf24368e9694a11b3994a314678f743548", "ref_doc_id": "main_guides_getting-started_index.md"}, "75dd4666-9464-4042-a19e-6dea0945adf9": {"doc_hash": "c65195458018ef41132978298c4c5efed9eaf49744fa32966cf7845ac011d5c7", "ref_doc_id": "main_guides_getting-started_index.md"}, "52edf81a-d3d1-4397-b380-019e7ef80a94": {"doc_hash": "5226857e4e8b19a2a84ccba1c776cecba7925f62981939e81ff542f551e8d3d0", "ref_doc_id": "main_guides_getting-started_index.md"}, "81a65a15-73f7-408b-a57b-b15eade8ed77": {"doc_hash": "aa20ea44287753f9906dbcb77404eb7b43faa849cb23f814995480d2e2427ec6", "ref_doc_id": "main_guides_getting-started_index.md"}, "b1d51044-a9b9-4da3-a513-c080f4564dfc": {"doc_hash": "cb81796e55149ba9d1840829b14899c00ed2ff267b5454a1d606b7cd0a48a177", "ref_doc_id": "main_guides_getting-started_index.md"}, "3c0231e3-157f-4d71-9f98-1f9b8edefcfa": {"doc_hash": "7d3c40f37f9a3e0fa3fa7767d16876ce1c5b8f1aba6c9d5f0dcb688f39629771", "ref_doc_id": "main_guides_getting-started_index.md"}, "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2": {"doc_hash": "b11945c63684f7256d94dbda3b760493a3b63833428a6188ebb96fef6e28a98e", "ref_doc_id": "main_guides_getting-started_index.md"}, "7876a1e5-cf0b-4aab-aadf-9f87cdf48085": {"doc_hash": "eb3a513b9a15e7021016e08f3b991a1f91abeed91e13f74c0de49064060345c8", "ref_doc_id": "main_guides_getting-started_index.md"}, "a30eec10-ef2f-4093-8ab8-939dc254a851": {"doc_hash": "c888b88b020a7b863c16ecd4a439732cc6b5bbedf0db85f203cb3aa12988692e", "ref_doc_id": "main_guides_getting-started_index.md"}, "a154562d-e18e-498e-92dd-c8d28aa80817": {"doc_hash": "a70c59956f7554e4e14bfaa7481ceb479c562314f4f351adfa585fd067b0b353", "ref_doc_id": "main_guides_getting-started_index.md"}, "9ee7d686-c2d8-40cd-af36-d30233be60ad": {"doc_hash": "7142d5ab06c9fe2b45e7e04acc8a8c6f7491efda45b1b6ca1004b75db4b3c4fe", "ref_doc_id": "main_guides_getting-started_index.md"}, "d54d80b2-287b-4a86-be49-b0e226a5609c": {"doc_hash": "eaa44790580ac3184f14290f6486b409a01c42704f66543246d65d555bfa44f3", "ref_doc_id": "main_guides_getting-started_index.md"}, "ab4e3684-536e-4a20-bef0-c32c119040e2": {"doc_hash": "96c2d60ef802b1b4cacd91ea4b07a16cf96c5fd8508d5afa2961db27e27e7bc6", "ref_doc_id": "main_guides_getting-started_index.md"}, "e5688753-8682-46b9-b1b8-14788d898aca": {"doc_hash": "7aa3626dc28b9861eb3d0a66b68293a837d458b34e5017bec5980683cd589996", "ref_doc_id": "main_guides_getting-started_index.md"}, "052c414f-b240-4338-9b25-3ad7dd80de84": {"doc_hash": "c2a2dfa7d2dc7bfb0d826dff5ca360e24f34c30a7bd728607cf5db91d386193e", "ref_doc_id": "main_guides_getting-started_index.md"}, "3b745b54-8b2e-4522-8527-d1829d8ab767": {"doc_hash": "2e6a8ea51dbeaf80fa68b8b7b04840d9904db1777ce60dc348950075f10ef9be", "ref_doc_id": "main_guides_getting-started_index.md"}, "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d": {"doc_hash": "6667ceb12b45eebc9a1624023270de3db708dc8fad53840e1a62f734281f3ba3", "ref_doc_id": "main_guides_getting-started_index.md"}, "726558bd-a1ce-43be-b590-33e89df18e26": {"doc_hash": "deff108264dbd161c749e5c51896ba58d0143a896568d2c9b0d18f27139a6917", "ref_doc_id": "main_guides_getting-started_index.md"}, "419184cc-f8ec-40b4-a9a9-afbfea84b9a4": {"doc_hash": "7d6833f1c814bdbfe7c78a362e672cbf52567dc976d20284b223b7875fbd18e0", "ref_doc_id": "main_guides_getting-started_index.md"}, "424e3c94-0493-4625-894a-76305d74e27d": {"doc_hash": "62225fb351fc75f37c5a31e7a1463a716b629c687dfbf5b33ab2454b3211df52", "ref_doc_id": "main_guides_getting-started_index.md"}, "4a0c3fea-7348-4e29-83e5-7b0a96c39f12": {"doc_hash": "879326e7c964ed4afdc4d35961234f82eb23c2df020b2c224f06725347d712b9", "ref_doc_id": "main_guides_getting-started_index.md"}, "7d9a423c-29f3-401e-b7d2-f5965c561534": {"doc_hash": "fc3a6d808d8228a35c4f375ed373af9ad24a829993c2c03183ef7507f760660e", "ref_doc_id": "main_guides_getting-started_index.md"}, "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f": {"doc_hash": "b36dcb37c0c018e60450b2ffb09205076e45dac4b3a4c9305995c8ba85ccadb4", "ref_doc_id": "main_guides_getting-started_index.md"}, "b825e926-90cc-457d-95ed-ab28358dd06b": {"doc_hash": "13c711df5d4394df60a2a77b5922690941b11e0c71edadb9473fb1060d2c1250", "ref_doc_id": "main_guides_getting-started_index.md"}, "44a66c9c-95d3-442f-94be-beae09268ba4": {"doc_hash": "825c35d0cac2117203d0a3810d9fe57f505356c42e7e59152402f864f90450aa", "ref_doc_id": "main_guides_getting-started_index.md"}, "a9e39cbc-1251-4e23-96dc-a7975c5275a5": {"doc_hash": "2abe6c96d85f5671b45564feed749d6e84d6d80d751aa02702ba4e7fbbc3c721", "ref_doc_id": "main_guides_getting-started_index.md"}, "7eb74756-1b7a-4023-9720-86adf280ba4c": {"doc_hash": "1fe5013f94b4692e401a25dfe129c9466d237c579fa3b8d91d5e7fb0f5cd4dba", "ref_doc_id": "main_guides_getting-started_index.md"}, "c646726c-8fea-4c9b-92f9-76df9f3c3e1b": {"doc_hash": "29e97f5afef2692e2b9707a4ae837f038f1c5d4b45077aa0db3fe42115c4d960", "ref_doc_id": "main_guides_getting-started_index.md"}, "c16da218-ab11-4d7b-98e3-f2910013a5a7": {"doc_hash": "6d8cb3b6f7f9f7ca7bc123c56b0a80f38801e16139ca9152270cc973d61498aa", "ref_doc_id": "main_guides_getting-started_index.md"}, "8157edda-377b-4731-b054-6ffbf6215442": {"doc_hash": "07f510f1486715b20ee9bc0ca71affb332228012466c238bb95fc55ef3b39961", "ref_doc_id": "main_guides_getting-started_index.md"}, "646da944-c767-4d0e-a11f-761a1eb6d6bd": {"doc_hash": "9d179868acc2d90b4f0990d590a3b0c03d9540d367afb261d9d7795e9dbbe10b", "ref_doc_id": "main_guides_getting-started_index.md"}, "784b4da7-517d-4578-bd2d-4df1eaf03dda": {"doc_hash": "c80e9d841a925acda1db6b2f0635d3789fecd516256b3a81b753f89e1f2f697c", "ref_doc_id": "main_guides_getting-started_index.md"}, "1d2ebbbc-f76e-4917-a924-dc220ef67360": {"doc_hash": "136ca832237482eef1db251a7c71456f7db30fa72bfa21b996624724f8480d7d", "ref_doc_id": "main_guides_getting-started_index.md"}, "e6314f60-952b-46ce-b56b-009869d5062f": {"doc_hash": "7f14a635df3b96e020b5a73a39fbec058e277b79c6df5d906d14cb73d1f935d6", "ref_doc_id": "main_guides_getting-started_index.md"}, "859791dc-a753-4f46-8901-0c5978a2fb5d": {"doc_hash": "0bdeb89a82cbb8328e1c298c7e4202ccc27f7375c2acca499774893377126a79", "ref_doc_id": "main_guides_getting-started_index.md"}, "33445452-9192-412a-b8ef-68a49011f165": {"doc_hash": "f6675b42f2d1eeab672a48cfd3d5dfd22b7a6e007cfc42715d5225716e42ac81", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "6625a86f-0174-4689-8411-fb4ce111d20c": {"doc_hash": "ceb9c0fce6941333f1a85b52f9afcd51adbfdd902835f8293237a5a093abc686", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "73b7d62f-7451-4b5a-89be-587a579ed0db": {"doc_hash": "7522afb15aad5dbcd497018892309f06a89cf8ed56b36215075ec1533e430b71", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "20112fba-306b-4afa-8ffa-1a0522d67ea2": {"doc_hash": "624ef62910d39813521df2b0e332b5f370a4d8106090c3c2af17f18d1928519a", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "a631d2bc-1e78-4099-ab5a-f5c845ee4407": {"doc_hash": "74638bab42a49fb1f56d44791faac04b94a8f363b0aae10faefb1954b0108e74", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "fb0048c9-436d-41f4-a1a3-1dd11a8e5006": {"doc_hash": "05a58748fc34a713ceead9021d5570d61910f178d91f463f71b62f61f311f618", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "e3b94291-1bb9-4e7d-8543-7ac11345e184": {"doc_hash": "cc69d9de89faacb77f55b74f42c980bd4cd6d5c49dff33f4524afa896e5557c3", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "5ea665b0-9e33-44a6-b4d5-b74cedc1517b": {"doc_hash": "206e803e12467128315702d86bbfe80c5a68c7de116690a926ad8600d8df127f", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "2743efa7-cdcd-4352-8da9-e27aa523f349": {"doc_hash": "cfaed8992c371fd22b01bda87798ae0b4e9a2096c72b161e782c5d54c5710bff", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "82eb1175-f168-4cbe-ab4e-d1eefe1a275c": {"doc_hash": "f358faa5335351f1cd0e1e0cd8f04ff2409928240ee26bd61d9af029e4de630c", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "3a4d68ef-6d9b-4454-9236-0f442cc02642": {"doc_hash": "770c9d21036c1acc070be31e644bd35b5aa976a6b3b9a7cc6685629b99d20382", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b": {"doc_hash": "da2a7aa08217e62a0cc77a05f2d1af7dad83c5f34b1fa59f579e42aa51ccf983", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "894948b2-76b3-4a05-b234-8c93be14887d": {"doc_hash": "3129c4aedd0f7749f7fe4d27c411ace2f0ae67c2b38c8e7e73ff51b3bad38d74", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "61943ccb-d1b0-46dc-aad6-3f490c1f808a": {"doc_hash": "92fb794ce1274c4ff37acddadbbc5df57b532ef547d8fe94f97578162eb54a22", "ref_doc_id": "main_guides_getting-started_sell-concert-tickets-contract-explainer.md"}, "d0d16abb-059a-4c13-a085-3362af2d2fa1": {"doc_hash": "bf916f006d4b9561636d282eca471d98108e7fbe72c930c08d9e6787149c18e8", "ref_doc_id": "main_guides_getting-started_start-a-project.md"}, "c766cd88-b4c9-4c3a-ad27-4b1afe20e884": {"doc_hash": "731bfdc577df41be9b5708d1d82b6bfd4064fe4ec76814091729e9980ac9ba49", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "0ff610e1-e928-4762-95ab-f546fd85d9a9": {"doc_hash": "08d91749653ab9dd584d0257fcf2b3a200bfa940934b3c6a4202b64c1d4b1f8a", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "66943d4c-fa5f-4ec4-8195-d54df6b05b09": {"doc_hash": "490c5654ad32a5cbc1d6978b43f583c85d87f973ce75596c24f36cae9b47c17c", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "d8fce5e8-3b9a-452e-af9d-3e250902f896": {"doc_hash": "34f85b40a8cac75cee34461438760521b11b88d8ee7ad57ae3d2b71da5e4d962", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "b8703925-162f-404d-8327-d30ee60ee31a": {"doc_hash": "ecc18cf881e60c2fbbf100532df3342357ed68b5ad8eae9d32da5c6a31b3827b", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "66e6816a-72d8-499c-9ca2-c728cad93617": {"doc_hash": "a6321a7ffa6a1ea94a092294dc530068622e6988400588e10db72fdd85e5b78c", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c": {"doc_hash": "de5af021a8ed6a29e106e3d322483e9f4e4524cec60b7046a09ec2bd51584122", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "7c0a8d47-17de-4a49-9d07-485c11bcfb06": {"doc_hash": "05b255690c0826e66d667a376e5791fee0e647bda39106f86f57c99e760df04c", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "358517f7-6685-43de-b634-fa43a227c44e": {"doc_hash": "1a77023ed7c566ae73466b5dff5935176712a11e39b39def9b409c7493d24e32", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1": {"doc_hash": "11a5a939a9d12cc20506d31506b07037b1504ca98b2989c1aa5590f00e150297", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "d7318216-7473-4345-87fe-3a9328e0adc0": {"doc_hash": "7e9992c954bc02141be5f867acfdd44c4a2774e2053311964937406365e746cb", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "38ed82ad-1855-4a1e-b23c-0bcc2aed5948": {"doc_hash": "23b6c0af9ef4a552c52f3f88f7b65091718d88ed813ea107dd3e1700c71c1567", "ref_doc_id": "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md"}, "75a89d88-640e-4fa9-8e47-011f5178d4a5": {"doc_hash": "d83e7347958d4b202643386682edd09d6248a973138d84a913ec46550cd9a6e2", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "3c5ff7b1-57f4-4045-aefd-6eafb1056da8": {"doc_hash": "1d82f31254ea5110d631664d7d1eae7c296de680341aa49edcb1758dce9b82c6", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "fc4e62e4-f6d4-49bc-bf30-06f410dcf962": {"doc_hash": "fbc4543d5a40bfd3e3607bac11b4a22f185ae6638a0a25d7201b7bc149de79f7", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "df40ff5c-038c-407f-a8ec-9f7ee7b15dae": {"doc_hash": "128e9b31a61e51d4f19a0f7f9686ef158db7dfe30fa065f7a803ea8f59cf62a1", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3": {"doc_hash": "4cefd0d857aef8f7cb692c3d6dbafb42f15451c6f817a744480dea67816de69e", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "2425295a-9ec1-4891-ba29-0e5269404049": {"doc_hash": "5e74a9f1d3bf259323d96af033160cb82bcfe6f0ba24a2afcda514fa1da8f190", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b": {"doc_hash": "e48ee9b20fadadff1899eeba43ffd7e36a6486f8a5785ecf6e0dcc4c68277ca8", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "449fc96f-1212-45a7-9752-7a97dc6413d2": {"doc_hash": "1f190dc38617be2776876b841ebb7fbb85421972f9eb4f479457d248c2a9fc5f", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "5740f11a-c403-48e3-bde0-1e0e03126bac": {"doc_hash": "0db707d2ef39b419900adeb870b1b65ea68391d85133378d241924c4d67ec33d", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "17988658-fba3-47ca-b33b-c77cc3ceb894": {"doc_hash": "4f7094e65f9a95b9b25a585443ee1acec3543f38a87d1cd50c9e6c1b323eb926", "ref_doc_id": "main_guides_getting-started_swaparoo-making-a-payment-explainer.md"}, "dbe8d348-b87f-4cee-8006-b2d0eebf951d": {"doc_hash": "35eecc546ea7cd4c515aad64a3036052fa0be29bd241a75104bd4d090437b7c2", "ref_doc_id": "main_guides_getting-started_syncing-up.md"}, "a4d90d2b-af5a-40e4-b6d1-bf5daee90072": {"doc_hash": "2d6dc1a94c03169f5f84c418e8d88732cdc3bf95b0c227a7c46c2a36f327f10b", "ref_doc_id": "main_guides_getting-started_syncing-up.md"}, "80a8adfa-0da8-4b63-8bd3-4ec75559fd15": {"doc_hash": "3583b7108c90cb0f80ecd3e620f2b68de958dcf0f8fe2bfd7d437b7324c4d6ae", "ref_doc_id": "main_guides_getting-started_syncing-up.md"}, "556ae03f-17fb-4e8c-8953-0e1869c13d70": {"doc_hash": "bc7008f791150fa9b67a870858eb999cab890b5fff8c9d32a79a5b958567bff3", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "0a47cd9d-4101-48c3-b668-d8b267cdbf71": {"doc_hash": "8bc07ec7a3f790fef64c1774f2a0e2dc06e1dccbd6e97581d9c8485d3d62991a", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "8826bb54-2644-4ae3-bfab-75c67700e635": {"doc_hash": "033f9e3d024ac4d422f6262cb07886b2c29402b49212acd94d0b6eb47eda14cf", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "ae6e93d1-a32a-4b08-b368-a75adf0cc55f": {"doc_hash": "9b3147186c5ce4dc70562d04a9b3903724acc15b06de3d189459bae190e87595", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "0262b87d-19a1-4821-92d6-3b5974bd623c": {"doc_hash": "25f4bbd7c822107b7513e8b5d89ba762b6e16ce154558431c96494741f4a39d0", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "107d3a52-9fc1-4ed9-872a-8f67122c95d3": {"doc_hash": "fd18c11df57706c2a6537b182b95f07b819138d4393e8b917f765adc793549a2", "ref_doc_id": "main_guides_getting-started_tutorial-dapp-agoric-basics.md"}, "7f1a2338-19e0-4066-9419-e847667dd1f1": {"doc_hash": "397c167fe7a0783613282a12f5741bacda831a673beb255a0e49e0a3631c069a", "ref_doc_id": "main_guides_getting-started_tutorial_index.md"}, "21e97b34-32d1-4c43-a739-05c5afa26f73": {"doc_hash": "6b3f4557ef6e11c386d79310955f09c68b0840afe6bc28d35ed6a6d0a17069ae", "ref_doc_id": "main_guides_getting-started_tutorial_index.md"}, "a0aa02ce-3f9d-4241-92f0-2ab508626a6b": {"doc_hash": "b5591dbbe3284b0caa6f6bfd92d1cc2d5f71459139f57e177df045c02f131531", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "9c672ad0-6d71-42b9-bb7b-758b150431d2": {"doc_hash": "4503b607f18d9ef6e82825e813149845f18f7f1aa74c8f8b41d856427d02440a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "34b2b7fd-048c-445c-9939-430f9c1bed1b": {"doc_hash": "3a8559ac56f9cf8096aeb632fc2ba4a5060d8bfa52c8de1ea250f1508075d438", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "4db77ee0-7328-410a-9b80-c97febeaeefb": {"doc_hash": "9973749f4ebe919bd62a7bea1b617a79701707edbbd90e1b812bf1f6f5c57ce7", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "11d5bd07-38ba-4743-a408-b5aea355d0cc": {"doc_hash": "f3ebbf4eee5f280c88ed66524950a3732828e82912a9779b8e937ba42f32daa5", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "e72fdb94-0ddb-4683-adde-03441b374447": {"doc_hash": "b1cdcaa19c536f742403bd3316eb1c92409188fd1a3f221f89467d3c18410400", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "19305845-c137-4acb-8267-99fa427d476d": {"doc_hash": "66ca60bb96e1b1382fd3321a11badd17fe07a81693ee490d439dc50a1a7509be", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "3ee617a9-c417-4a11-afbe-0e6f94e599a7": {"doc_hash": "97955c475cc1356a2acf47dd75c3bd344dada8bbdd285e8ab2969b9462b10a46", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "d29599e3-f958-42f3-9074-103fea6b3704": {"doc_hash": "17eec7132266835fd4ed324ecd2c6b80ec4b2edc20eb41b0c20455a09b0201d5", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "16be8308-fb05-4702-b77a-ea3692468f85": {"doc_hash": "f2caf46e7f6dde7d27bddf461fd400eac1d053ec1dfefa6d3b62d852b3869d8a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_agoric-provider.md"}, "f5a29398-83b3-486c-80cf-329d9baae6ed": {"doc_hash": "dcde57bdd73b072ab960137fd8356ab4b83d13bb514906c7be7551c6a88e0efa", "ref_doc_id": "main_guides_getting-started_ui-tutorial_conclusion.md"}, "0d2dbc40-5802-445e-89b1-90588b93874c": {"doc_hash": "a96586dab30b5987d5deeac0284b2c2dee2fefb9f700d2aeb620e460d90ab555", "ref_doc_id": "main_guides_getting-started_ui-tutorial_conclusion.md"}, "f71c639c-ae1a-48e0-a1a9-0a1dffcc1f5a": {"doc_hash": "87ee75e8d4bce0cff4603bb96cb4374bfa88cf262ba31830a0b6c14b486773af", "ref_doc_id": "main_guides_getting-started_ui-tutorial_conclusion.md"}, "9d5efb9e-d364-4ba7-b822-6855554bf978": {"doc_hash": "7d125c1a75cd132d39c14373487ef5029af8b6023121a2f6e9ffdb6da3e7d2bc", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "b8d4acbc-3689-46de-a38d-2da7b4b65850": {"doc_hash": "551de0cadb143f398a6ad0ca4eb62f47b0cd13cece4e09c4a5ed31fe83cfa11d", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc": {"doc_hash": "6d3e3b7c54dda656ecbc80e96ad43eee491204e92cde6679e0eaeb511d03c8d5", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "955f9ef9-1345-4ef3-a897-06d02001524a": {"doc_hash": "c2db14dbb63094e70959fbae800122679a77efe80f4b02d7e748b453701a8ed7", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "de7c77fb-1bbe-4f90-a4a7-54a291826c2e": {"doc_hash": "b32ba95c4cee7be5880201c743eb08153376ae5d496fcbba1c491af8f88fc1e1", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "45b77872-8feb-4838-8c3f-50d867e84e77": {"doc_hash": "b38695862ec74b28276abcf5f087e45911879ab49b8f570f02a96d2f55024cbe", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "4611ea7c-b9da-465f-88ed-53d9f0fbc632": {"doc_hash": "cb09c588e74208e2949f293d82d32d3ae64422ba3b7cad98854a45318dcdbe06", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "b58b278f-3a25-4a86-a5de-2ffd700e24c7": {"doc_hash": "fbc1c182571e7aba515e2b4d74b3d8c1bb8d3eaeec026df72aff632bd2b29293", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "606dcdee-7736-4237-a2f5-19fccd8d11d4": {"doc_hash": "79dff5560902727a21f34d84eb896126e8838cefd7d92b590b7d303ac383f5b2", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "1fb23008-5ecf-4abe-89fb-e084adae6180": {"doc_hash": "63d7bd54285ca38e72d53736a0475bb1f26bf0603d94853aa13c19bca2fc97aa", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "795ae17e-253e-46de-9f79-289c57dc4189": {"doc_hash": "32386f4bdcc678b59789efecf7de2f084122bade89a5a8c9c6edc5cb7a9d9c85", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "58466ca6-4d6c-4532-8e53-9801646f1066": {"doc_hash": "539db5f83fc9efaaa4750149620ae3132a6a20a83e1699d68f41fe0a35449ee8", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "bc661d5a-9024-48f9-8896-4f3f8800de1f": {"doc_hash": "f7281f92bd1c3c79652b37b43fcf3cd44935c223924af5fdea45e446ba4f22a0", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "a67db3d5-5bfc-47fa-bc25-4fde498fc6d1": {"doc_hash": "b179f694eab448269b18c7b0622fd4742b83b0d8b551b00c56779b1d63d98c9c", "ref_doc_id": "main_guides_getting-started_ui-tutorial_connect-wallet.md"}, "b9ae0720-3f5e-4f0b-8b9c-b0af27ebff6b": {"doc_hash": "67f0e47cb13f219fcf906ff1190c78c752f62f4d960c7744075ca3d95699ab9a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_index.md"}, "8b41caf1-7d1f-4fe7-b98f-d08c8002d848": {"doc_hash": "2d09a092f2107ffab0ddbf38ac62e9b766b6bb56d268fe942af81f8637c77c97", "ref_doc_id": "main_guides_getting-started_ui-tutorial_index.md"}, "462298fb-0cb6-43dc-aeed-237edbffbf60": {"doc_hash": "ab024150726ad60dc1e3d4c7ac2e002e158a8e35e1b97813b625b60995c627a2", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e": {"doc_hash": "8de01a5a963cc2524597c39e33106ba481e7a829d8e4f425e5e279ead31fc789", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "69d459d3-0f47-43e6-a22a-6e4da4d14a85": {"doc_hash": "467cb44f4a408b1e7d04bb2401d43eb2a1dd125f69bc916c398399e3ac8a257a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "949eb9f9-2880-4d08-9ed7-a824ef5f3534": {"doc_hash": "33de6c642e48c3007e08a7cf212044ce0b9ae0520778ee751182a3c9222c8033", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "b96232a6-b68b-4fd6-857e-aa0f73cbe171": {"doc_hash": "2c107fba97257fcf2bd1ea4b5ee6d58feaa33cf933b7176b132bd7930d513973", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "59627040-e8e6-45e3-b426-037194eff5e4": {"doc_hash": "601f4670efde4ce5baa3fc2ecb484869840e3076891fcb63b7c04831bca0df0a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "68af71e0-d7eb-4a91-a863-a2f25c116518": {"doc_hash": "6f6ed170ad8b2b30072a6a0d8df21cb42fcae216e53849c4a4154b89cca66863", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "ec7387f8-666b-46fd-8f25-88d220afb643": {"doc_hash": "8eea223abf460db643aea5bba919b61a0352906b2edaaca6c05a4f3e5a473317", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d": {"doc_hash": "f134f450fc508999e4f4d40aa79d7df7947281eb89cf33c26b4f256d1ad7873a", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "e6340a5b-8a7f-4aa2-8b14-169b747c176c": {"doc_hash": "0a7bf1bfe300e29d9f36816795e94faca11cd7b20393bffdd87c7aa7fb902d98", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "ebb8ffe8-7919-437c-a819-b022cfcd6bc4": {"doc_hash": "32f385c13e7954706c30e55d5e616dff6d03bce4f654a67737b25e45dccd8388", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "c248fca8-89f7-4a16-bcbd-74d31a03d6ef": {"doc_hash": "db04f7ca098e0f185dac31300248fda8356c5561c20c07544f25e0dce5417cd8", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39": {"doc_hash": "19e6123fbe2d486d7171a10648ca312d8254170b1b9ad502a3ecc2b9cbcd4b1e", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "5e089207-0208-4a65-b44a-d954f8e864e0": {"doc_hash": "e8b6b93eecb69af7cadcff95c0373e246ad5623872fe9fb11e25f6d745b467b7", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "ac822ae8-8653-4a38-8ec5-5dea40fb8569": {"doc_hash": "2a47bf5fd3353d0e5fa721b31bc1542cb3093c2645b363c2d47f2b2beafda979", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "7041d7b9-0398-4883-a568-4840e3d81e05": {"doc_hash": "14a87a266f8bf0d36e519dc8e960676ce34e544167eece7b988442ea33ce90e8", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "858f5f48-f44b-49d3-90ec-2fa479c85594": {"doc_hash": "4cf903666f45233ee8603135e09889204d66685617865ced10415c0a8538dfd3", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "ab21588c-fec3-4e22-b937-498f8f74cb86": {"doc_hash": "f8a55860aa349a334d17f72c515e562a02ff037bd491c1fb3f485602bc2fa191", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "c84714cc-6b1d-4812-a86e-8dbe3130fc33": {"doc_hash": "e29eb20df96b687470e66347d0cd9c6f8e85dbc6417ecf863cbb73f5c2c96df9", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "056915fd-a5bc-431b-b4c6-101c6178c6f2": {"doc_hash": "b98153799d6bbdd2777075fc3f2554d0a6919c0faaf9b136caf5145222917642", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "ef321e06-debc-49ca-b5c9-c37123f731a7": {"doc_hash": "3971cedb6f42656aebabedc6d272ed849c94dccd9e319b027f4a26f282d7d279", "ref_doc_id": "main_guides_getting-started_ui-tutorial_making-an-offer.md"}, "48dc22c0-ea71-4a84-9b48-728be15eb46b": {"doc_hash": "086bec18039b57acced450e56d6389e717370d48a3dc4ff886e087561a0e7d3b", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "2020d861-8a6f-4214-ac85-d415a6da6f11": {"doc_hash": "c4e0586d72f71e78b325c308068c327b78bb36a064699384d459657b9d560e62", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb": {"doc_hash": "c73cb9b1a7edc1551a89fca984a6c9fdf28ca3bed234b053eba028bd4356d82b", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "ad0a24d0-388b-47a0-b4db-f6756f5fb705": {"doc_hash": "e7aa98de1157c1f8bcbf5a7b546ab4e5354e39cc7f1b1c98b5960cb90c472aa5", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "a8f5f012-baa0-4a53-803d-1a004ffaa9a1": {"doc_hash": "cd3136af989f516dd52e1605894ae7419c167821bf9a1eeea212d6df0aa7e0af", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "d714400d-e581-4a79-9001-0c8f1275940e": {"doc_hash": "61a0f6180edb713cd00670f18e33b4d9b96d559286351aa7f2ff823491cf418c", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8": {"doc_hash": "8a06fd91ac47203ed640b5531e00512953551d7df259c1bba4bd9fa66648b944", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "f98303f9-b54f-4a03-8251-25eb65ede791": {"doc_hash": "e075a27687ff81beae083e3fce47baf4f045e5a1cf578d461a5c9ba37da3b480", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "877ac6be-d554-4548-bc93-5f24aeb46b7e": {"doc_hash": "124eab667ec1c84ae519d0dd2ae486f4b74b71d1e7248303189e4157b0b33de2", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "1328bb81-ce81-4006-8e05-4fd51bde87c0": {"doc_hash": "f37c40d9b1ca87016f3b6c5446fecc5bbdc03e2eced0abffe7756e959149086d", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "5fe7156e-5492-4f7f-b7e1-680c942643ea": {"doc_hash": "02b9a29b6ddc14b6c9913612fc8b06e4da2be402cd2c8bd0938213186abdd0c3", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "59ee5570-caa2-4fa9-adbb-cdc9571adf12": {"doc_hash": "d189e32be9af256a4f9baeec78affb8765ca4b2e4858047093710ef350406528", "ref_doc_id": "main_guides_getting-started_ui-tutorial_querying-vstorage.md"}, "97207e58-6fc8-4911-a363-eed0975239e2": {"doc_hash": "fd2631bae505083c486428d8662356f32c80c7e6e8b5cf399b8e3732b27fda2e", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "f77d2213-c867-44b7-8dcc-b626dcf77e3d": {"doc_hash": "afa4ea792d934089af16ff66033ee4708b8c3ac4abce4e93ab1a64378e4018a2", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "e4439264-6250-45f7-9e57-43f2fd2bbe33": {"doc_hash": "f1b611a63e722d78f6b8e8ad0e37adfb2a7f570d73dc1fb07d85d4f87f47239e", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "cc9623eb-f726-4fb8-b09a-31522d36d69e": {"doc_hash": "03f229bc87a4bdcfa319abbff53e349fd87d9c24b1d02f680f616fdbf64d9da7", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "6ed43639-6194-4f2f-9722-32bb9757e55a": {"doc_hash": "ce66e2bfa147e1b41dc191569ed1f5347640a15e3e5957cd2b137a37e303bc55", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "09bd9e87-d662-40f8-838d-86b84c9ea5d5": {"doc_hash": "94c01ccc00359727f52306f4487ab893c05072ed301526939c9acf8aea157b1f", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "839b0413-ebde-485f-bfc8-55beaf8fd99d": {"doc_hash": "8f48b999847e5d8a0d382e569959d15776c05ecdc2421c34192c824dd9b23124", "ref_doc_id": "main_guides_getting-started_ui-tutorial_starting.md"}, "fe61c055-510d-4eee-92df-e88815597b6d": {"doc_hash": "016ed92faa80d1787d3881f8be991f4c76d76d204ebf7ff62b405bfc50bdd0e0", "ref_doc_id": "main_guides_governance_index.md"}, "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef": {"doc_hash": "70b1a98dd69ebcca70c6fed95c5ca1a53385b0884a21249ea184f28790e07868", "ref_doc_id": "main_guides_governance_index.md"}, "c8ad04ca-292f-4043-96b8-fb306fe4259d": {"doc_hash": "45b614344dca46ee827eae9aff80d6c3f2c2281119946c13ce8c6a44f267e699", "ref_doc_id": "main_guides_governance_index.md"}, "3d7aee3f-d92e-40db-8b77-36f271cef6fc": {"doc_hash": "60a14bcbc9549336dc9d7fd8ae2debc107b02ea91e4b1b11200f294a1c755c9a", "ref_doc_id": "main_guides_governance_index.md"}, "e21b1c5b-b158-446b-af91-77c65a195d02": {"doc_hash": "8925182956c2b6c918e9fd59cc1996d929eed2e922ffd00145ff648bc3a8a7b1", "ref_doc_id": "main_guides_governance_index.md"}, "eb573057-cd12-4d0a-af98-1bd04f2bcf85": {"doc_hash": "bc774ae30c444a21baf1862e7967a9878ac429602ae04af74ab5a28c89bc67ec", "ref_doc_id": "main_guides_governance_index.md"}, "3a5454f8-f6f3-464b-a6d2-50779f2805d5": {"doc_hash": "5fcbecb06a635dd94c0f6a9e84a7deca6fd0adc9a815ecb83a419d141c91ed7f", "ref_doc_id": "main_guides_governance_index.md"}, "d2acaf13-4603-4bd7-a30a-3a24bf6ece42": {"doc_hash": "ecdd34dde9335f2cd12497e2bfa5ed849467f7a7e6ef5750932a47b6f8e46f7b", "ref_doc_id": "main_guides_governance_index.md"}, "3760bc5d-6549-4b36-bb82-08ea84e7e0e7": {"doc_hash": "c9640e6ad637a2d62e9effa40b999ea5a40d743e8060a09ed29defe9dcde3c87", "ref_doc_id": "main_guides_governance_index.md"}, "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed": {"doc_hash": "63672e91523f358a4610f269f7a8aca1c2e9b5075683d8866228e8efad9d9f5d", "ref_doc_id": "main_guides_governance_index.md"}, "13844e00-fd15-44ef-892e-09822bb7edbd": {"doc_hash": "c202f7cde7438e1ad0ac34fe4fd878634da5b5b53b75c291ae7030e303b000a7", "ref_doc_id": "main_guides_governance_index.md"}, "42dfa886-c5b0-4add-94fc-996f50b3c4d1": {"doc_hash": "9999aa736dfd3bf3edb14cc3ae9add227943a7858bc4ad1304607d8ab20aa742", "ref_doc_id": "main_guides_governance_index.md"}, "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a": {"doc_hash": "51775faae54aa448327d0709c4c0dcd828d6610dc62a1ded268860ac283790ec", "ref_doc_id": "main_guides_governance_index.md"}, "36930942-bae2-459e-94d7-2b786be83b9d": {"doc_hash": "2200b0995bf7af6150376a5217d9de01f68419e345ae8bfccdf26adf3f6c9ee3", "ref_doc_id": "main_guides_governance_index.md"}, "baf1adb8-b315-404e-b40c-c07226552e9e": {"doc_hash": "e453c991f7ebd807727ad6d020ce86e4d789fc207bbe35e6c55223330f8842ce", "ref_doc_id": "main_guides_governance_index.md"}, "29e87c9b-961f-49eb-a951-be1c825601cc": {"doc_hash": "b1c125daa7982354f59bc89202fd0cdcfce4073ce4a534cd79da3cb57c1b18ef", "ref_doc_id": "main_guides_governance_index.md"}, "2baa3652-5123-4a16-8058-53162438097b": {"doc_hash": "daca5f19fc34b3c5519d72e0db8cfe7b43a27cec662bf139fdd9ee1aac91b409", "ref_doc_id": "main_guides_governance_index.md"}, "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0": {"doc_hash": "1bc69c97639d2404ee5cd16f8c0e7c146cfdb4d947c952caa9c7abe78f33e6bd", "ref_doc_id": "main_guides_governance_index.md"}, "2b447232-51f0-4c15-b9f2-08d050f9e610": {"doc_hash": "62fdcfcbbdc2f4e5f74df2e2a5dba67c2e994353857202ec33f41bcfb474af9d", "ref_doc_id": "main_guides_governance_index.md"}, "11757326-3f7a-4edd-bf79-e96c465f519c": {"doc_hash": "a85bca7d3127edba3eac137c7b7f187cfdec6ecf1e7984bf431e9d4823fdccca", "ref_doc_id": "main_guides_governance_index.md"}, "dcb8aa64-e7d1-43b3-9540-9cc373af9786": {"doc_hash": "bb7c016e00a2453540af826656de08b02263754e66c01176b0b702b0cbca4c85", "ref_doc_id": "main_guides_governance_index.md"}, "31d473e2-1f64-45db-ba7a-d1bfe6910524": {"doc_hash": "7f73d7ceee4dbacb8a677ff7e806490bd5f58656abff6736c6389c25ff48dd75", "ref_doc_id": "main_guides_governance_index.md"}, "1df9c1e1-786b-4199-a5f8-f60ee5454894": {"doc_hash": "72d00f39236dd89ceee488445dce55ef38f8974e658048b7dbda223221eeaee0", "ref_doc_id": "main_guides_governance_index.md"}, "7699344f-5c05-4c7a-8574-ae25510e4eff": {"doc_hash": "9a724ab2f765decaac29558f4378a462220091307319888feb4191cc4df4414a", "ref_doc_id": "main_guides_governance_index.md"}, "83fb781f-026b-428c-b826-bcaa261c7bd2": {"doc_hash": "7ade8049c756a423ff1c4560da856c687a5f2b6f3708caf694b6d032ee2ea72d", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "64c9f321-8cad-4dcd-8eb0-357db8acd63f": {"doc_hash": "5f4e5c6955999ac96659ab5d60b6c08668443703c4f3fbf2dc3da0a7f5329701", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a": {"doc_hash": "c41493e41ae2cedc40406b5aebda44f2452bdd44076a7820d543a2dc88450a4e", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "f8c8f529-5903-498a-888f-ab287b74a7c8": {"doc_hash": "2082a14e540471f96a7b96cbf11055c7b77a6866ccb4fb0ce4707df149631c77", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "249812da-1b86-438b-8e5a-e5861685059d": {"doc_hash": "8f577f4e1ba2b553a37262493542ee7f5f5c92da808272225225ce23bd63b997", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d": {"doc_hash": "43c6334a955efecacf8a0e9a07e0bf226c00c47b35a837aab0aaf9144d056bc7", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "4a2df152-76df-47b8-bdb9-bb6f38f50599": {"doc_hash": "d0cd029116a1bd5f9b2cd7bb67b75d012f7c61fa62d4590cbd97cf6cdcb32b75", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "9359e8ef-6ea7-4324-95a2-2a693e49e854": {"doc_hash": "6b9a9b70766d44d9519f702db43a702be737da73f88eede29fdaff659bc0fcae", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "b415ee04-5a93-4372-987c-e5eae7d4dda1": {"doc_hash": "4450866d9cfff3acf81e079ca5eb6170cd45c3ef5cb029c431b38e3dca5434aa", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "5cff213e-5e64-4b0a-a630-da74697843d0": {"doc_hash": "65ac3162b108d92ed80303a16b6e6f30b02a71f75fc616f93bfaa80a0e2725eb", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "1a53520a-1ba4-48f9-8f32-cdb55e8dd7ab": {"doc_hash": "135beec274181a7eb550e9498715dc1b8f40f8ccf3e20139cc05302745bb08b8", "ref_doc_id": "main_guides_integration_chain-integration.md"}, "745e15bf-8bc8-42c6-8f89-6775e1c1f5ba": {"doc_hash": "b363a52a4fdc274c021eff0e8bceb17e5eba6e9057e7f02eecf507eb8d581c8a", "ref_doc_id": "main_guides_integration_name-services.md"}, "57e3be21-b734-4725-9bf2-f69d5a63c970": {"doc_hash": "7d9cd5be407ccde25ef78ada0f49d5d2b1002dcf7595be3460f4875b828cca3b", "ref_doc_id": "main_guides_integration_name-services.md"}, "9d937b59-fbcc-4a99-9761-dc58c622590d": {"doc_hash": "bb9ae55f68cca412141bbad219d46dfcdfefb2b023ca24a017b22cf814477206", "ref_doc_id": "main_guides_integration_name-services.md"}, "16617407-68b3-42d8-bd96-c6aea24ab4cb": {"doc_hash": "7330650f9c200e3d3b0accb30576cb86082d8019cd50fe36797ddc11a53f128e", "ref_doc_id": "main_guides_integration_name-services.md"}, "ce3923b0-dc0a-4a4b-8fd5-99df850cc612": {"doc_hash": "256eba62be3d4eda6b88326e8fa918cdac2b9f1eefbca666e1078ff66ada5e18", "ref_doc_id": "main_guides_integration_name-services.md"}, "31d1b196-68bf-4cc5-8312-bc418ee40cbd": {"doc_hash": "6d115b9adefa81f65c49ea5fb2b990f73e98ae198214ae8c6e8f559c60d52dd2", "ref_doc_id": "main_guides_integration_name-services.md"}, "a4b42692-21d3-4f27-9cc0-b540326ce066": {"doc_hash": "12024f3ef83014274307768603390aa6018ff65fc1fae9324dc32298c0254736", "ref_doc_id": "main_guides_integration_name-services.md"}, "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997": {"doc_hash": "986c70a6f0be11714d0fecd014a87ef94dc7bf4f66d6bc80499fa2c9b6d39183", "ref_doc_id": "main_guides_integration_name-services.md"}, "aebe1120-9956-478a-8410-ed1da741d97e": {"doc_hash": "8f363fbc84e9c879ab2a882a72e8d0e1c10feae5c7920e2d2f544c0489cc4781", "ref_doc_id": "main_guides_integration_name-services.md"}, "1fc2337f-f157-466a-8ad6-423681ceba7e": {"doc_hash": "1b5e02949125b3b4501a69a38ae6ce7f66702d5474d2b2c4effc639d11e25048", "ref_doc_id": "main_guides_integration_name-services.md"}, "d874c95a-0b97-47ec-83f5-eb2eeb409184": {"doc_hash": "7ca53d22408a111a3b7a095e803f960f2dd126dc9e00ee1d70648c7e95d0e44d", "ref_doc_id": "main_guides_integration_name-services.md"}, "856523bd-981e-4025-adb9-f01cd15c770b": {"doc_hash": "5281bf8b28cbc069e53ffc2d6cff69a1d42ee5d4251bef29616c774aa626b8e1", "ref_doc_id": "main_guides_integration_name-services.md"}, "09574e98-324e-4699-ba36-b86b1579fe83": {"doc_hash": "4cb7ae317bd67df5f36edf052f5c07ff5620c82833505096213216bdfef797a2", "ref_doc_id": "main_guides_integration_name-services.md"}, "d176538b-98bc-4926-a48a-1df485a2e6ef": {"doc_hash": "8a95481188bbf2afd176af88a320d7036f41574026e0a60a581c2eb17df704b7", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "b686f8b7-1ce8-4309-904c-b73e03d937c6": {"doc_hash": "d21316e32e1f9bfd53c385081c60dfcd798f26afb9f73f16bdf8ac647e82693f", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "13bcb790-5f4d-47a8-9541-181f4d31d3b6": {"doc_hash": "618554253e03ef5a13616c9b21d8151dae555c002b7d1823c51e246b00ae4361", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "37eb7342-2219-44af-934c-54861a2a3c2d": {"doc_hash": "f4a6e139204a212df9439f21d6832802869f2a7238895a0bf7eea858ee2a0f0b", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "2b24751d-8681-421c-a1a7-4210695b1a75": {"doc_hash": "9049dfdf72aa8f6a5bda62e856f7fbf3950d5d4d5cee771b7abaed818e9ba6d4", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "eb9c5545-c0ff-4d32-8a16-589b87fc998d": {"doc_hash": "bddd848652fd74da8fe8bca8b68442c40c09f03fa3b6fa26889f71c3b48c7157", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "a818dd95-8357-46fd-9855-f4a620d8919c": {"doc_hash": "b28b571334e77a4e39f1456175cedf20967e5dca94c09a1f0b1a3313090a2c0a", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "21c08268-7553-4192-8d89-2b099fee89df": {"doc_hash": "2610d7a7d233e06173d9c8317217978cec97e8a26ac7343b840ddbe71d74cc1c", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "703e13cd-d362-4577-b163-c586b977738c": {"doc_hash": "cf32486670949e69502836f110cebe4d02134b008b216c0a8b334c41905588ed", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "0af40b11-a8f4-4797-acdb-42930704e997": {"doc_hash": "7a57685eb604bbaafd2cfac20d318a681eb7f2c776fdabc7002844fff5507907", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "4f074a5c-909b-4606-8aa0-4dc7255eaa87": {"doc_hash": "f6da5001e58f857fed42350f76b699f1c2c4d37a01a3cabfdda97ca9035348e9", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "0257479f-c124-4992-9b4f-c2c568e92e85": {"doc_hash": "0aa07fa1ac9cc0b21443ed5f2dbd8a5ef70b1d3cc4bc3d3e8acb9035e78c3856", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "3423ff84-8f29-42e2-9378-1842626e1920": {"doc_hash": "52ca88cbee25b665cc044d6bb7cf9ec1bc89c48fc1c5ff29af77c63578200526", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "b8886324-df39-47ac-bd9b-a562e889dcfb": {"doc_hash": "ebf53db22aef0e22c0661afe51e61f576ce966ae30330eca1fee52c232263281", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "ded2ae2c-36a2-43ca-bead-42901af46f5e": {"doc_hash": "5edcb13b1a9a3665f317e2a3d52b91095bdc9c28b2b23fc58768fcf480dd4922", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "eb687e0a-f45f-48c6-9544-41e172c47c46": {"doc_hash": "df533549bcd330b56ded2d37516de7b78d047729104065f8d833a0a53b98a10a", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "c3d1188a-b63d-4769-9115-8ce44e0c351e": {"doc_hash": "147f810a2e47b3395deb48b015e76c94db870f1f69963df9decfacb6be196ffd", "ref_doc_id": "main_guides_js-programming_eventual-send.md"}, "0cf0b995-d455-4f2e-8bce-d54527a39905": {"doc_hash": "dfb94a41cd4c5e799c4e6fc57e86f31965ed91692e1321f60bb01febba5eaf05", "ref_doc_id": "main_guides_js-programming_far.md"}, "383dac97-684a-48bc-b432-d412ae44fbcf": {"doc_hash": "558bdae9e3751cd37be2a00cc92d8f7ccde7e71afa5e643f7d5cc98eb834f352", "ref_doc_id": "main_guides_js-programming_far.md"}, "a2cc8853-40fd-4fa4-8132-76040728afbb": {"doc_hash": "3d1eb1dfd399acbd9998a6e53cd6f092f4d579206d1bc10eff0ea494ee29a9ad", "ref_doc_id": "main_guides_js-programming_far.md"}, "081f597c-e925-44be-9cb1-7b7a3878ab0f": {"doc_hash": "cb5e5f4c0a85fafd755c26c55ebc4cc8670d1d0de428983d8077476cd37f70e1", "ref_doc_id": "main_guides_js-programming_far.md"}, "b885823f-050b-49d7-8853-4cccf0e20709": {"doc_hash": "c4fd42400db5f936299a581c5b073dec516bea6450238c932472ae1bdb6c6bcf", "ref_doc_id": "main_guides_js-programming_far.md"}, "16d8b474-f161-4f60-a1c9-615da29935b0": {"doc_hash": "2a0987d6516d00575d84a6b48d3415b43a3ac66d262cef74193b3413da1206f5", "ref_doc_id": "main_guides_js-programming_far.md"}, "11697207-298d-414e-815c-8d17abb463f9": {"doc_hash": "614a675ed8b2ebe29302d406f5e35bbe2591ba276f4e398eaeaf46d592b0b434", "ref_doc_id": "main_guides_js-programming_far.md"}, "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd": {"doc_hash": "efbcac0c0dcfc075954be3fbddf9b39dc26068eaa6eb89c20382eecde663b1e4", "ref_doc_id": "main_guides_js-programming_far.md"}, "05325b4b-3100-48e0-9a15-fae38ecad049": {"doc_hash": "7739f988768b3ccdcc72fec15a3c8b5dca929bdcf2ef1e9feb78cbc5f62fe360", "ref_doc_id": "main_guides_js-programming_far.md"}, "aa5d9726-608e-4eee-b4bb-bf296d22fb1d": {"doc_hash": "c1410663178cfee4709c3df21a22be6e34aadf62fdbd1616057e59408318f8ae", "ref_doc_id": "main_guides_js-programming_far.md"}, "e7843d44-35ef-486d-a605-312f7e620e10": {"doc_hash": "847bc931514a12162c23984193ae431ae7fdb5b723eebebdeedefff99c8db798", "ref_doc_id": "main_guides_js-programming_far.md"}, "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0": {"doc_hash": "59eb67df8b9024f3ec16192ea98a74d3c69f614c15256973042e5bd4ed4b61f6", "ref_doc_id": "main_guides_js-programming_far.md"}, "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8": {"doc_hash": "a2096aecb1e3ec15b802000f5196084b704070e9d48ef2db11e46525faecd4bc", "ref_doc_id": "main_guides_js-programming_far.md"}, "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0": {"doc_hash": "160ad082869f637d72d086c4bcc53a0528340e9d51c2c8afaf5bd4e0617a7e9a", "ref_doc_id": "main_guides_js-programming_far.md"}, "35bca308-89e0-42fd-9dc3-d355b808947d": {"doc_hash": "1bcf4d7621f16f30f1b6f06c6ac6406e79e03c1b5238527ff82d000ecbf7a232", "ref_doc_id": "main_guides_js-programming_far.md"}, "ecc7c5d4-e9a9-4c76-a724-69251751c656": {"doc_hash": "5b2869c2fe9ca3398cdec2210ae97f3db93aef4793f113a9662d7946f83531f3", "ref_doc_id": "main_guides_js-programming_far.md"}, "3e1a3ea8-2916-4e29-90bd-ebd732a959b7": {"doc_hash": "0913142c72927d1558fd7edac8f9f5e331ce323bce134428287c74df785f2d92", "ref_doc_id": "main_guides_js-programming_far.md"}, "964c32ba-0f6a-4195-85d3-6df5f4fb4810": {"doc_hash": "99a07ae39aff5fd9766889663baf7683f73bb7abb7d8e32abccd137ec5034acb", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "4e8161a5-90e6-44c9-ab0f-a9fc00dac807": {"doc_hash": "374c1d278b9052226494c3b61cea4140ca9fb0e233673af82e88e05da96eff48", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "a04b59cc-2e17-424b-8752-a44d552ee20e": {"doc_hash": "b6f2afb175431913053b14c97fe01a0cf7d4108430d8cdc1e22ab278eb205ff1", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5": {"doc_hash": "9c8c3ec652b2bbb6c3a546030c45b9829b49c49954134b360e92450672af21b8", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "35591630-b4ba-494f-aad3-786106ffcce2": {"doc_hash": "7dc1b9a0b482583218eff6d048b9abe3926677359a5280c6329a847bb60c2b8a", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a": {"doc_hash": "7a8ea08ad1756350aee21fafb0029b7533fb23e353a27c96ee6e65fe39d0f7fd", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "5d241955-a16c-46a0-a288-cd1cb0216d62": {"doc_hash": "06333bc232ca08e007f488b701d8d962e23686ceac3200bebf2d474733977459", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "9c04683d-89a7-40d1-8d1f-fdf4ca180d36": {"doc_hash": "fefe2da1d5b607c6bd638fe519dc9e4ec32dadd249df72e571c871cb218f5938", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "0d7dca4c-db14-496d-8546-8c0106f100ec": {"doc_hash": "1a9748168ee3a844fe90b00e370dab73ed1157d61d77dfe6156313f27b0163d8", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "6cf54f51-67ef-4ac4-a2a5-992536bf4aea": {"doc_hash": "4705eb24a427e6d665c01f1a601484bfc7e30a485a15b1fccbd67ba1561a2c52", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "81b88a5f-90b1-4480-b794-fdf5ad7a35ac": {"doc_hash": "e3861b942be2b8ef04fbb0bd24c265e30b5eb526bed3d218dd30f46e56755aa3", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f": {"doc_hash": "4c136e50ece82b8ac55fc9c285fbe5749d08ef4ada2e5ae7680f1a9d5c22d861", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "943f2311-d47e-4acd-a71b-80361cc5e545": {"doc_hash": "eee2d496077089447e69c31c68c4465c472798e6a1532e75b6cb6ec8fe53b11a", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "00bf2054-c613-4a31-b2ff-87f06c66fb9d": {"doc_hash": "8c2fc83523376e556b335430314e49149bcfc9b3bafcf7bdb8c8d92560af592f", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "4d9c0879-c385-4277-92f3-708484ef4dc2": {"doc_hash": "fc3e8833c955b6e973bfa4499521936003c9c9b393f8fe09fc157cece2947636", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "d9c34925-3d22-47b1-bc99-eddf65a710f5": {"doc_hash": "4680f9927bbe9a1a74d1e73a573453bdba1181593a98b460d24716ee4802e04d", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "7036695c-563f-4181-899d-04bd10ff16fb": {"doc_hash": "be3a680d6cdb0ca7fbf963998211ce9b953c1384e4ccc950433088d97840c987", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "1d8a3d7b-87ea-477c-a096-7aaad6408c79": {"doc_hash": "03496784cf7e0ccdacde4c2a2ee4b1d56541c03951f35988ccb1fc5fc63cebff", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7": {"doc_hash": "8e734a479a6003c4cca27c79e4ebf1c0eb32cc29d403091d249cc210f33a27ae", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "98f357da-935d-44f9-ab49-572e3ee12c96": {"doc_hash": "a11085923c1fb1b86c94c7a849d7ce7a48a811c26f588051bd2f0bd24f510be2", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "bd22daed-45b6-49bb-9178-836eddc80907": {"doc_hash": "f5b9d83a718b671052cdc92d15504bc3c83ab5ad8f52cd20f4b77da05bedab87", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "a85bb7c5-e39b-4d58-b877-c1c214c6e234": {"doc_hash": "69a2ad354ae7ba6ec497b6d2a1ffe6ca3b48cd95624e3c9c2a61474d0d8c756b", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "fa854798-84b2-45d6-bd88-fb52fac477b4": {"doc_hash": "07ba6ee3cf36b92e01e5213216b51ef40d65e220ed4c3ed7ad95d6183d3c2c97", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "08863d9c-34ea-4cc4-a079-0e77dead673e": {"doc_hash": "1177abbba562c754f1efe6096116c17ada5fce7c3bba93f942b8745af032f4c8", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "85ea764d-6df5-4bf3-bfa1-a62478209b1a": {"doc_hash": "c9dd477959e67c7707daeef5be84868e28dcf2a8ce8be91354ac6c3687414182", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "0dc94755-496b-4120-bbca-8b3b751ff83b": {"doc_hash": "6a5157cb445e7aebf3d9949e9f8435eb5f71a8dd3eb88f06afc8949428757b82", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "006ea161-cc5d-4cfe-b22f-9cb701efc1f3": {"doc_hash": "192a567ea5c08908904a3b60d8d641ad5b5fe4a60ea98ca35d7314833302584e", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "079887ac-e064-4120-9467-8c6791777249": {"doc_hash": "c61860771fef62128329ea5ac7c534848cf9c5f3d22f3851ec166c92ed70e0e7", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "f2dd5f9d-1f3c-4207-b61f-358153e85b51": {"doc_hash": "98972a0f197d0e6769ab6c37b48e41e301916f604c6ded111da20b92e3b2f8dc", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "30b0f2f0-9e78-469d-a830-3b79e360bc0a": {"doc_hash": "6a7c7e9b08a128c1a9fb3ef4b753ccf4e3c2634c9c79183e09cced802bc2e457", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "148e6150-d733-4190-bd67-d2c27151948b": {"doc_hash": "1cebc4205e926f11c95216f6fa0dba339fb814523fdd201b84d9a6006d1cc22f", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7": {"doc_hash": "86e528dcbecbac80497a3e8bb0fdbd31879ec76eb22fa14dea08ec7bc1e3ae49", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "938138f3-9d82-45a8-8282-7f9719c515ca": {"doc_hash": "b46b11ceddf931972451b93395f8ed423ab9ac861257f6b4fb06c941ed8901a6", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "9d218d55-4d11-4ffb-b065-81d8408aa034": {"doc_hash": "eb2287b4ead4e0950fc4f7316900191a85cb0a590d1907098bff345a93b5c205", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "48f597ec-fdb0-42eb-9158-d38a0c9e448a": {"doc_hash": "364a9f03d5a3dcc7b2b047651e5cec2b0f73ce4abc876e242c18724d1e20e204", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "ea073c46-51d5-4f89-82ee-6eff30ff80a3": {"doc_hash": "825ff5bf5ed99255351bb23c82469c04b10bf6813a001b0fb0e941e19f5ef635", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "bdc6d405-1de2-4352-8563-da7b1aa3db0b": {"doc_hash": "fb51b08509909726ec91914bcf8206d076eb0ec407b9be306f308605a7701990", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "cce97ef3-ef60-4325-aafe-6eb08aeffbf4": {"doc_hash": "4c01b1c2e6af5e3dc08793667a3c42aba67f47b20a962ffb938fe20d6038406c", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "b5bf8bbb-d54e-41ae-a8db-1a5811647b84": {"doc_hash": "d6b0201a5abef6541d0980f07759878310d90c46b06856901efc9b6208c1ca1e", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "329b817b-8a6f-4110-8468-38e27839a329": {"doc_hash": "5ec26c48f01886c7902d542075c8949c5d3eebb4879f8ac6abfc5f3e2e071860", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "e6f20bc1-972c-40d4-b722-71997a7c33e5": {"doc_hash": "7e7a592300b9a171bde7884eddfea41e87a1e139fcf12832272997185b5aaf9d", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "a7aa55c8-c831-46fb-bb08-64843c41a8c3": {"doc_hash": "bf42c34602a4dff5a37e108ef711158fc327b87247b782eaadd4d881f1990e0a", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "a6c3d1a7-77ed-4075-96af-0509bfa28b4f": {"doc_hash": "891d56ac1e39dc3cb16bfc61f00dad41ea96efb75e5ebcb6064f8aa4202c8a0a", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "5c4e9cea-cd3f-443e-83aa-d651d959e20e": {"doc_hash": "fb9299db946401280a6419ff5cc2eccc4bf574c876d59b05d9fc789ee4f38544", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578": {"doc_hash": "c7d51a704182dc537cf3951e3954715f7e8fc0a80ec2b96f40eb036b67518e2d", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "a5392703-cfb8-48e2-922b-ca90957d2bf2": {"doc_hash": "60d3fa1d85f5020e632d45082d7c7818f50f457bda384385aaa4e0fa326f2704", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "80c8008c-cfb5-420f-a820-ad31901141f7": {"doc_hash": "f5dc8e06bed8eab052e36821a9a296907ef648538446d87ee1464a80ccd92a85", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "21526eae-611a-43c5-8fa3-301bcc72642b": {"doc_hash": "822a1640424c41a433845a905f1e5f731910004ddece1a56592f21e72e988a2d", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "33887770-90b7-4306-a972-e98d30735133": {"doc_hash": "a6d58731863624da8d87e4a81c6696cef40bf20c38d7b94305e28ebb7d1f08ae", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "ec9ae4e1-5202-4085-ac6f-8770d78191bc": {"doc_hash": "63a722e3536e18aa20fdf57f4ff0c47bdde03f1bb0cd132637d6c53b3d298511", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "f6c49252-d920-4237-88e6-6db9b5b98cc2": {"doc_hash": "7e6d7339817571bbd00877f39c29e14eca8c37fe294da7aa0581b6f969dc539a", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "fcb80f84-b555-47f0-8499-73830ba30658": {"doc_hash": "16fd110e4b4a0dad3b2668294dbaff8b1487968e9250b80d21e69babd412a514", "ref_doc_id": "main_guides_js-programming_hardened-js.md"}, "19bfe4ce-11f5-4265-9891-7a65eba78603": {"doc_hash": "8b2bedbdd4f1ae0ab87afbd2e5c1f58a5aa2f9401b3cfff5e71f7d546ba4e32f", "ref_doc_id": "main_guides_js-programming_index.md"}, "c760e720-750c-400b-9f70-60f0240581b3": {"doc_hash": "6bed88a0312534a4e15e1202f4bdcd233f33e7d29464339c5bf4d023f94daee9", "ref_doc_id": "main_guides_js-programming_index.md"}, "3d49b4f0-bc42-4e2b-93de-faba42b55d1e": {"doc_hash": "10f035949570ea46b9fd3519956e4ae258c2e6a83c0d5919e7e8abdad01d6bc6", "ref_doc_id": "main_guides_js-programming_index.md"}, "1ac8b1bd-5934-4742-9329-fc03c7c13381": {"doc_hash": "b478c36404d7ecaa046da41ee1ed38b120411a1c9cfc9532652d50b907934c70", "ref_doc_id": "main_guides_js-programming_index.md"}, "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c": {"doc_hash": "363a33fa30929767145165a3272a250ef7197bea66063087c13affe097f50dbe", "ref_doc_id": "main_guides_js-programming_index.md"}, "6f5ef79d-16a8-49bd-86d6-945e0ba337d3": {"doc_hash": "a072bb8ef8bf17c18039c91044f3a45860ce5b4ab434c16257d9e8e54a814b56", "ref_doc_id": "main_guides_js-programming_index.md"}, "66f59baa-a103-45b5-920c-c75740a740cc": {"doc_hash": "e99c010b65ee51863f3aa32f5706dfd1686ee84833a2e909cfda612fe0c5bda0", "ref_doc_id": "main_guides_js-programming_index.md"}, "d3fb4e43-8b21-4eea-a6cc-c5b04d111e38": {"doc_hash": "aacdb6013022330b62499c572a6cbd98505a19d2bf62c24cae472c338047d8bf", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "34bde775-4ec6-4d7c-8f7f-d446ddba1aca": {"doc_hash": "af4bfcab330dd85caa56385461224b9949f39368070796d200a700a353f61117", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "f61bafab-a484-499a-b7da-06d5fdee12ea": {"doc_hash": "994e193096eabf50beb2e1cbf1b4f2806c45ec7b6188e4b2ab4bfeb98494b3ac", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "ac85df67-8a2b-429f-8b62-6cfcc1178fb8": {"doc_hash": "fa74e4ebdd3eca25b2fa33009b2f68bb6f621a9b28f742884496d09b72acb4fe", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "e455f629-8d39-483e-b50d-8726ba71db72": {"doc_hash": "e6f47c82c15b887ab5b7ab36929ae997020ecd9a8627bfcff90ce1ae97286c42", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "de80bc5c-d951-4e22-b50c-e67c0e71662b": {"doc_hash": "e9dfc10f4c8d4e6cd0a5a9f6a3c7b928e7c9b673cd8cd26b949e3527874ca39d", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "303e0e42-564a-49a4-a4a1-71dcea69befe": {"doc_hash": "767a17be271a907d699311be2bb44230591273617406beb1c35d55d306d5a46d", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "3945258d-fe81-4688-b365-dc83912c1980": {"doc_hash": "2725dc00420bc728131d4456690d5506b30ca104c6f8884182005ede73a05a1b", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135": {"doc_hash": "bc3a263b886a8e3f09aee6e55d0a470e65642809b77d5d660eb266e995adee15", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "d3b9d86a-1e71-4f37-9c58-93f786aeca4c": {"doc_hash": "65fb92fa016d5073f0fdfa45ec22e717104f0a0f1a1276a2c217cc8e36209268", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "3d3d2021-012d-4ab2-ac00-27e908ec331f": {"doc_hash": "0756acbd7b26c2892699ab8a8891172f6c1f400152fa07b5abc2a7b7faff83b0", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "be568b5d-d953-4ea1-a6a5-b3779324f4d4": {"doc_hash": "36d99f0c2cefb28f5d470b587c7a205782290eacdfcd44fccf5e64c67aa17ed3", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "10068e23-0bba-4198-a27c-b66aa24d8a1f": {"doc_hash": "d95f428fcbc5355ff186d58d0895bf9c1431e1dbbf905fb39445d056ab0c1676", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "d1cd3ac4-fb3a-448d-a336-168d21a481be": {"doc_hash": "ce2453eaa047eff8ca414e2d5d850f9cb8c11c63ec223f172f5e699f90bb6e72", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "2ab19971-ad1f-4193-bbf6-344a3b272b08": {"doc_hash": "bd294d8901dcab9dcf7b0a02e6eaed01ede301f17abaea352f7e5d272642275e", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "8dfad56d-6d19-49c7-ba1a-72d39f38636a": {"doc_hash": "ec3c8bbeceda1eab45546c5d886734d726884270bb29c46ba006146bb68802a4", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "4795a5b8-9e09-4127-8720-a45d40a0c021": {"doc_hash": "c27b00f72ba1bd2953b0f989ba5c1ce96cece15f0007dcad6e1856d50ebdc8a7", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "9ce3a7cd-01e6-4640-886a-380fb22e908c": {"doc_hash": "63d97bce52616550eec4886991d015a61c26c96bf30133f365ff6e6ce39983dd", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "43174536-08cb-405f-88d7-ee08c8fdeb8c": {"doc_hash": "8c3772399f73a4919798f380737c12c8b94873738d23c9b0d3d6ae3bb46af168", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "cff037cd-0ac3-4735-94b0-11ed0ec588eb": {"doc_hash": "e99268c475debc527e3aaa07cb4d019d5e1b122eb0bd9a751bb7b09c554bf760", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "d04e0abe-afea-401b-a16f-ddb09965e9d8": {"doc_hash": "5eb14d464c4e479e1765f7acf4c862ecb24b2bcd4667e88524a53e4921af16c2", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "de5c7bff-6a0f-48d7-8253-36c48b6f86b9": {"doc_hash": "3fb744601229bf21f77838eaed8c4f468026f8023d279225bc18398c35e86592", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "6743e05c-6b12-4350-8b47-74e89b5f7529": {"doc_hash": "a4500cfb7089ebdc0b3766dbbbea20622353786b58fcbb52498e71ebd1238bbb", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe": {"doc_hash": "d580f3ecee5431aedab9315fe40a7a123f0912916b0188259bcbf75cfd5fea90", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "db9852ce-49fb-4d40-ab02-f6dc0550f356": {"doc_hash": "0aac33d289b3675681230f46e11e1c57d468824e24534a716e4b74bf0d61ae15", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "4e6cd211-80da-4477-9feb-8d726cf72b93": {"doc_hash": "5e9b3e0d46257a520b2f81ac53613d6dac5c244a2577b68418b318a002d164a4", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "c83309a8-2a2d-413e-b245-807ffe71f128": {"doc_hash": "8da4c0bc76602d55d93b4d290511e26846106342a8f5468cb24b60a265c47ce5", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3": {"doc_hash": "4317fbde5d7849d6a1dee0897d33988de9791f7767e68f14f4360cce86fc3b3b", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "e37179d8-daa2-4a10-b8b4-8502ddf9455f": {"doc_hash": "251a6d77e8c6a6aefd7924010abbb8606f2810c31b4c193eb8bf0355ce762e57", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "8a0113dc-4ed8-485b-9c76-9e8a8f03d984": {"doc_hash": "b0612f4533c1a81c3fb6e9fc86e46ec7792d3e76c3701a19aabd415d091465ee", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "93078583-09de-4ba7-b1ed-08a6501032ad": {"doc_hash": "5b608437c9658be6b09294b7ef998183baba7b94986cde972683dbd31fda1bbe", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5": {"doc_hash": "1872cff3fe2499a4fbaddb5e56e53405d2f48ac286130838a18091b584ec8f36", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca": {"doc_hash": "42c598f1d0cd08899eba3f76d15bcca1f0368aed8471622d89df6dc5d6766c82", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "15ea81b7-9111-4f52-8732-e77b7393e5e3": {"doc_hash": "e53598d0497dfa3b3559b4070811d6f18af9d9c1d0a398d7de1c878f3452f14a", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "b5ed37d2-39cf-49fd-af9b-ee02e120707b": {"doc_hash": "bd67fcb5a6cda70514a9a2085ad483427ce56049fbcf0d5887784ece50a3f0ed", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "04b62962-b1e5-4a14-a2f0-fa61fd31e34c": {"doc_hash": "e0594daca7b19856658f51eae00724bdcca08161fc699562f193938479b5192b", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5": {"doc_hash": "1777dda3a6eb159b9656fb8c05e5b2fef514e701d2ceb82eeae7b2357948da44", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "a8ab42d9-0f4a-47c8-a65b-48871f81eefb": {"doc_hash": "a0c7dd4ca5fc386cddf4c37537f75b7afb63ba21dc86d0e1798e9ed602112bc3", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868": {"doc_hash": "8b309675f6a96a991cbc8db085fd4a9948eb65a640c3eedd4af9aebaab9dd063", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "7b98f997-f211-43dd-b87b-92244eeb00ca": {"doc_hash": "e1894d5890be733497a09706618499a074265232f16e1d61e486fa56ddb8ea26", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "33d4f2ee-7337-4688-b610-4acde81a7f45": {"doc_hash": "a28b989ae3fae40a3eb37fbc62c0ac391421fc4ea82334eda0d8ff6dbcfd7bd5", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f": {"doc_hash": "ca13f1f103ef1f7befbb257e3d9635e8bb6e389ba8751a62d826fb030839fa8d", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "767510d6-e55a-430d-a6d5-fe2f72b5bca2": {"doc_hash": "ba0bffe311f71a8e48e31d8ecaa082269626cb82996023c20439889608d0ae64", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "f70a270f-ae51-48a0-8860-0d367c468e80": {"doc_hash": "5241eb60c3b4eb7f89e7acfedcd7e17c8ea0bdac600037121fb6a68114b62781", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "a2052778-9914-4130-aa31-16dd7cf02b4f": {"doc_hash": "9a812cc125c50d832d7834021bfa16e37e51c43a91aa7ce70e789af6c200017e", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "6d67e802-f4ba-49ac-9dd0-c910f2581e72": {"doc_hash": "24c524323d409db2d50b62c8aae5c694ee341ab99d51ad07c39c1b0cf7f77c25", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "3eb11363-6850-47c1-897f-0cbd81a0097a": {"doc_hash": "9dbe6a3c088e1d8ddcf7d71b75433c9d65bce11ccad8a8325237197ba61584bb", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "f6015677-e4eb-441d-b9c0-a76e6adb5c85": {"doc_hash": "d8eec0b668c6c09afba1724eedf96715d78158b5ca8c9cd895bdff67015f2d6a", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "1a82138e-c263-4e38-b2d0-cea91d0f8ed0": {"doc_hash": "751a605cfc2a86a9986b1af333fae8d504b174909380f37deb8e998c97f102f3", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67": {"doc_hash": "94f1ee86d870aa6fbf4988e0a10bffbdb8fb33a51b860816b070d139d6a9cdae", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "270cb142-99b0-4936-bd4e-31035b27e5fb": {"doc_hash": "1ac35c1cd7a8a3e64d776e1a05fc3288e390d8c044abdc9ed05673891cab0d59", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "ae784611-6a63-4c6c-bb30-f0ff6d51092c": {"doc_hash": "b08fe9656c85134f1301684b3d2d589d022411c24c1a97b37839096480b2049d", "ref_doc_id": "main_guides_js-programming_notifiers.md"}, "011b5837-8aee-4d87-b94a-b647acd45385": {"doc_hash": "647dc2a84bfca2e735433eef892dddbf21ac85e10dd7afa99296398436c762ea", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "1ad0180d-b25f-4272-96a6-3f2fb7274cfd": {"doc_hash": "b49d307e83ff5f0cc595930c55aac4baed0695fa182456f575048140478c21e6", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "ffac14a7-ea09-48de-80ab-f0617964c5a7": {"doc_hash": "6b9d78146bde6069455e389868ee76b374eca55646115321aa45dd1e7c0dbf1d", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "345e1fd8-c38f-4a61-83d3-1282912a23b7": {"doc_hash": "9ae3d3296fbd4764dbaa5f6b91529ec25929e9035b2960db4a6c3462e858b01a", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "e6c66c7b-ca57-4e63-a41e-46276de54517": {"doc_hash": "5c75bf9b11d62009b8cc54e11a450b3ec431ca3fdd15efc153dc1d649800cdd6", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "5571f1ec-d1da-44a6-844b-6f8d27b9a58f": {"doc_hash": "789ac67a6f74c2a38cad99c85aafc4cd63ac0091226e275ea9d1a7895acd4dbc", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "ea253eee-2cda-4e0b-acdf-f25f8be7956a": {"doc_hash": "2787bf088fd766344b4118def6a61f985033da46fb0b390bb0185fb4dc280cc2", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "bc265ae4-4bc2-4f58-aa49-28aa0b46b705": {"doc_hash": "4f01cf69fc14d1529d610edde417e2d8573396e0be24690795186d824cf71765", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "b1a17674-a4d3-4e6d-a8d4-418133264e1e": {"doc_hash": "94c59231ee5db28216a3adcd95c270c649c4ba853b59af63dc3aaa6914111ee3", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "dc5e3470-f42a-4996-abb2-37ebf7285a0a": {"doc_hash": "47c7980cbecbd8588ba6abf62823656001a4b82d219f9f4716b022dde72ab171", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "70e3a136-949a-48b6-a5e9-d8c78212b832": {"doc_hash": "c7f5f18ca5460aae37fcb92f08db655bf250fe137c00a8015064efaca0ddc24b", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "85eaacf3-e49f-4397-a11f-9b29eea94167": {"doc_hash": "ee4d18ab11fa8fb38547c3e0093e3296278b242d8f7e7768096252f2b8e0d788", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5": {"doc_hash": "d29294e0b51b7c4727098378f5b25cbf310ce74d0039e91f7977c2f1b69b727e", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "1fa79cff-56b7-4b47-afb7-f91b1802296d": {"doc_hash": "dd0ce776ad6523dc675bf32817ae4228ec8399e9d918fb7019917b953793a0f0", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "7e070661-0f88-4293-8cb9-2a79cbc9da87": {"doc_hash": "06a219650e68717490c0c57b4b75f9205455aba905097e1f2308dc7599756dfa", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "d03a356d-6ea4-4a14-9cf5-71b8664f7f55": {"doc_hash": "48cd616dfa241dc556fd77cc09242e79c92ced9d9bca4414766cc28490dcab3f", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "f29ce82a-6c72-47ac-994f-9963b6e300da": {"doc_hash": "b770654837b5a31cf30aeacfd87d2b91f40b0379635a521edee01543dbc279d1", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4": {"doc_hash": "64f6bddde4e50786f2b4ef467969b8d48568303834345dbc1dd0a3ca6257238e", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "5910f95e-d33a-40e0-aeae-77f25325b151": {"doc_hash": "7081cd331a0bb31d7e2c28742d4c6c95064ad20db4dc80878ce946c86e3affec", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "393f510a-165a-4748-9714-a0a67873ecdc": {"doc_hash": "d8a6f18bb92d69c461f3b5fe43c6eac2069cbb6a4b18bd8710c995be15af783d", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "f7ea2337-f929-4368-b8ff-44d3eb8f76fe": {"doc_hash": "b8b48f947c3e3e86d0de0a132a3f28076567683cf306aa260c29ff0046456204", "ref_doc_id": "main_guides_orchestration_how-orch-works.md"}, "839f1e70-2978-4d82-82f2-ce298a2022d9": {"doc_hash": "d191d3e9b47a88e1a72f294342f69d7326cb2e6ab176c4c9db733ba3c09787fb", "ref_doc_id": "main_guides_orchestration_index.md"}, "ee448e97-2b39-4237-a547-6e0270bdb9fd": {"doc_hash": "23c9435d9132b8d239d0d4fffa758b38c3475243265cea819f84db91ededa760", "ref_doc_id": "main_guides_orchestration_index.md"}, "2a202496-f961-4bba-95eb-92cc84f090df": {"doc_hash": "e52222aaea9107c6a076090310cc613949d3dd4e2d65572045956ea741f8ffb2", "ref_doc_id": "main_guides_orchestration_index.md"}, "8d6a59a1-e3de-49b3-9c3c-26dc10621ada": {"doc_hash": "48c664883d871ffe9eb9a45edc2d8ac3d1843ade9b16e2c957ed28afcb9a3305", "ref_doc_id": "main_guides_orchestration_index.md"}, "7f3c8af9-3520-464b-80fc-ff2fbdc200a7": {"doc_hash": "ad57c0f729c7669466299050cd724d3b72b01cb26b6bd4f6f7688e4d34da41c4", "ref_doc_id": "main_guides_orchestration_index.md"}, "2107db0e-07a9-47bf-b46f-dd7b6ad96da3": {"doc_hash": "34bc5595384780ff990790c11c577366086926c2d026a5c7d5118c07bd6dfa28", "ref_doc_id": "main_guides_orchestration_index.md"}, "221ef628-20ba-47b7-af26-f186056671b1": {"doc_hash": "3434c1972d8553dcc0cb3abe1b69b12258b1d47beb35b8856df5a103a795c091", "ref_doc_id": "main_guides_orchestration_index.md"}, "1b8748f2-72ea-454f-9383-8b0837082fda": {"doc_hash": "b0869e4a98cafad7f5e4a1a1583b5791b8e8e8cf2f5220085f8434db9d189640", "ref_doc_id": "main_guides_orchestration_index.md"}, "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e": {"doc_hash": "fe23e551d8aa40c24c6915a9cf515d0682183ada05a94bb891b7283631b0aa5b", "ref_doc_id": "main_guides_orchestration_index.md"}, "c0249167-a2c0-47d1-af2e-7d704c70cb49": {"doc_hash": "d016b2f3aaa90ef402ecd6843e116ca76b2556b4ae96f3c6bce72a1ed2d533f7", "ref_doc_id": "main_guides_orchestration_index.md"}, "f1a875f1-4c1e-480d-a52b-1171a12010cd": {"doc_hash": "9e98ce4327fbe3c820f1d471242d7070da816c03ae431efa2498de3632dcfd34", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "d77b98ef-f772-447b-868d-d19981019a8b": {"doc_hash": "8ca4fde963541c6f37e2b5764693f136ccf6b440866143766c4f3178f02dea0a", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "6ade8609-2881-42c4-bed3-75ca043abcf2": {"doc_hash": "28343b895754d3d35cb45a4a90decda1d337575070b866c3e4ace494538d1fec", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "0151542a-1764-466f-9a6b-aa9e29437b8a": {"doc_hash": "3f44a1b03b1233accdb1fa1a041bc6e5da32ff132bf0328bc0e1c09891e2152f", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "5be49130-85e4-44bf-9052-a90c28893991": {"doc_hash": "a568bc21d2579feec4eb4076ce90994f976fb758b751d18ffcb8bd8b2e3646a5", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "2f0ffefa-ef1c-499e-a176-86998ae8449d": {"doc_hash": "ea67b46c6299a4b14f2a5d6919c96037c230a3db9a0b29600711378c5176ea6e", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "3119148a-24b3-4b2d-a564-9cdd0bbf88d8": {"doc_hash": "bc4cea7fab5bc1a88baec61821f96fa984b7454f3ac4a880688692faf0419ff9", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "0e33d199-cbdb-4af0-804d-bef3d2122616": {"doc_hash": "645faa1af13add1aa180ea733a466b1db38e99c880564dee6ccf61dc41853e76", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "8157d4b5-d011-4503-9f4a-e24d7069d7be": {"doc_hash": "58827d3d73686c34996ecb1831668f7a823fed2b723f728ba250edf7c65917a5", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "0eaee26e-bdf5-4845-9e47-73fea7271068": {"doc_hash": "fa5c0c4157e25c31eb7155b18cfc39aac47949ed8147f2b054f5d382a499f5c2", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "9e7d8bd9-dbe1-4685-9f8d-967897745cba": {"doc_hash": "c51a825d027e946249d9bc10a0e0ce3fa943f157228b4a0dc32067087a3330f7", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "ca1c392f-694d-4974-960f-9d623f0e11ec": {"doc_hash": "717d610e1ea22d6d9808bfb76a925016c3319001bd25b55da77a02569568d384", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "cef81d03-82e4-4f8b-8415-067190ed2b21": {"doc_hash": "7f38449c34ad7384476ef52274ec1565fe68200719ced9d4259d4092168c0c41", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "38fa0dde-8c29-4e93-866d-458cd068105c": {"doc_hash": "d3f35459e29c256b97aabb3a257c88d4754e4cf4690d632df3376125d9344a7a", "ref_doc_id": "main_guides_orchestration_key-concepts.md"}, "cae8ac61-e377-4aec-b255-e6bd73f2501b": {"doc_hash": "34656b756a9c43651307875f902f6f22b80f8bd0b626e2faab79b3d131e4d942", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "248fc313-d221-4188-81b5-484bbe86eb8a": {"doc_hash": "6c39c877eceefd0531889e69ed6d5701c6b6a4255bebb0dc8cef1366c9a5aae9", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21": {"doc_hash": "220252882c17ee80b58d03bf696a56141bab32428cbfce7954bf51d37b238e6f", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "b1cb45ef-085f-4acd-8e40-6baf119a72ab": {"doc_hash": "a4876dd081f40dc20c86d4a72ba1e5714d553a217b5788ebaa2051f8a1b33676", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "201c9515-f382-438e-8702-20ae64bbf963": {"doc_hash": "46a5aac33c5a2e1235deb84e1aa749953075f720f0196f5bff513dc12de04eea", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "886c5244-590b-4615-8313-e9f8e3988581": {"doc_hash": "00cbbc008eec875403c6ca5d75fae0e691e679c4c2da945d0570426df1fb47ea", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "796987b8-f691-4d03-9c55-5efa2a1274fd": {"doc_hash": "37627a826ec586f4fda925383353396bf600a4269917b70ac68d9df46bae9605", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "1e4c44fb-d636-453a-a217-312e9d715c96": {"doc_hash": "37059fd7513e1700cf88465284026a86c776b915abc21c4749a8ed10ff6017aa", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "1f808142-54fe-4380-a75f-25a12a971f1c": {"doc_hash": "0a5ffb6e296fa3f12b9d2c30fa9e976a86be17f7ea7b58615d35e502723835bf", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "6c2c9f35-bfc8-43bd-8b3c-c428243ce012": {"doc_hash": "0f0d0e854f1496fb2714407c653b58df1df1485be91abd1ef349585c6f106698", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "e6c792ca-c52f-4deb-8149-78954edcd6ca": {"doc_hash": "32efa0af4c70d30a45efe64adfccf56ee7feac1c451f97d16d0245f5adf873af", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "9a6f4773-28f9-476b-ac99-7f1da2432a22": {"doc_hash": "cbb92eed4b45b396e27199c6429e1082464082a152f90262fc8fe46d231e3f39", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7": {"doc_hash": "09a4de96705d7f4bf9bcbb3ea6cd61966ab1c79c54dd504c9d4e220777f22160", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "3f608b63-df61-4c3e-8ea7-a97cd1dfcb94": {"doc_hash": "4e5ba807a2c32a6db7862727232d6db86505d683ee244ec62617ee5c7ba0c664", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md"}, "a8e6749c-2cde-43dd-ae3c-fb5a51cd5ed9": {"doc_hash": "bd5cd42fa15daed26350f43f56ec8ec532ee43ac2a7bb02b29184a8223532699", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_index.md"}, "4daf89ab-24c4-4165-bed4-a881ea70a418": {"doc_hash": "6d732f0324a38e817e63f61ab69cbb9fec23e72ba27b891b729e747e95ba4a1f", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_index.md"}, "b2240218-cae6-4273-b8ec-2b18aa513e46": {"doc_hash": "6b9f70021f9e463f921df395a552c5b054b08b2aa7d78224cc4f621447427df9", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_index.md"}, "fd650052-4126-41a6-aa0b-52910d4460d2": {"doc_hash": "571f4117fa5495db993fc1d67121d9b8bbb9b2ec83f5073354d253474a8a93a0", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_index.md"}, "164defa3-1619-4325-ba15-2f089e173dca": {"doc_hash": "912996ff02aeaa05cba19bd4fb8950fa8c60b238018f8b29d0eefd33a9dd2140", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_index.md"}, "dc570d34-9b98-490d-a8be-2bee0b0d7fed": {"doc_hash": "a66557776a338e85c789e9ed2e2dc3dd940c938266d002da3b5611132ac6261b", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "e091e647-2f3a-40ac-8474-9886c8e6cc1f": {"doc_hash": "b0e961691afd1be946e5f14b7e28563feafbf4e8d060860fc78b1097cb90a248", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "11cc38b7-e8fe-4227-a4b3-5a9676399c43": {"doc_hash": "9802b810dfb5701fb8ffb46dd1cf8ef585cf847caf9d365dff0679fd41f8605a", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "638fc01d-1e84-4482-9e87-344c9783cb5c": {"doc_hash": "039dcb0324aff35d0721dc0f07287871eae87ab7420f7404c45cb24528139dd0", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "022001ba-445e-409c-9d53-21c52d10113e": {"doc_hash": "75d607a8ebdb7c808cb3d883113595a79ea1c2ec6dc8d29bb3dbbeacdf202dac", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "32a33295-72ba-4464-a4b3-06c7990be5ec": {"doc_hash": "a88c61b7e4ba8e3b4ad14e2bde28399a25910107258383eab7070c84cb2bc4e6", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "bd69f62a-1755-4706-8cae-0d8ac5e6de8d": {"doc_hash": "b5f0f48057f25a4dc549cec4b73ed32edc79a4150efe9a6297c4f4391ab935aa", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "3b519c80-b635-418d-a9de-d3fb7d1e4bd8": {"doc_hash": "2c01d1af79e601c352c1d2d6f89da98512a111ff3d288d471617075e80f43f8b", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "ba0e88f7-9376-4e29-bcec-3330c56b12bd": {"doc_hash": "261819f7d59134748cf6f3ccb44e0c0bc2f392884205d2a3830f6f55a8584b34", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "2795f8ff-d13f-4dda-a8a9-a7c0463a879e": {"doc_hash": "10efa31b2d5f61b6154bb9f23340271cc2fe149170a354240f814e75aa831e59", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "963e46ec-c517-451f-95f5-eb9f3b6ea541": {"doc_hash": "b19fa862e8ace8775ddd2f95ee559785ea9f77d209c4e714e679cdab4032d350", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "0af3d3da-e991-430c-9917-76c5784c0bd5": {"doc_hash": "2e2540072871a0e6d969ed10bea8af07b3dd8570d6eebc0e1cab9a0ee2b3556d", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "154784b6-ef2e-4be8-9875-5372e5e0fc76": {"doc_hash": "acae5b8d9b1fa48881608ff802c8d5f955b6dffdfdf0efee2d9ff70b6f5df9f4", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "688527b9-2914-4e7e-a6b8-e4ffe61a539d": {"doc_hash": "207fe2bc2c6ddb637515abefffa7bf12e55f880b8fd15fb3f60ede3a731f8e67", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "ee6b0591-86a7-48a8-a0d8-8841ba7740df": {"doc_hash": "f0ee6010649b3203d24aa3214d7e283f21cf6f6d643bef0a3b85f3eb8233e724", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "d54725ec-1413-4020-9c6f-87c55516eaff": {"doc_hash": "8f585eae7437795d9e182329f7d4d3938bddfff81ce8e2c09c995955dd3b6931", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "84a930b1-bb44-456a-9d93-d2576f625e48": {"doc_hash": "7ba3e73a8404835cce807c3f3bde0742aa80b832c659cba73b244f0927479d95", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "16a3144b-116f-4363-a4f6-243270e46fea": {"doc_hash": "8c2acdc435c665be5c5b5c06ff5c37f205fa88ea414e7db073a9b4309bf8545a", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab": {"doc_hash": "9c891eda7618ff3a852f41dd488b320949283018511701c4d3b2251824cea3af", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "8a6a43b3-3110-41b0-ac28-a6861cdb7f55": {"doc_hash": "b1c6a89c235bd56fb2d492481b1abf194d4573d923e681ba2de1be34266efc68", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15": {"doc_hash": "37a14181b1e55271ed4e84bee01fffe27eab181af806ccc03dc89fec882b2758", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "90fa6875-20bb-480b-9b1a-24b51ac9016f": {"doc_hash": "7dadf9fa8cf84def3ab0931d8e913442e41f6174ac8a89b81fbe6a14ab88bfa6", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "32c4612a-fc81-4fa2-9b87-cb90eef59877": {"doc_hash": "268e957c24d3c293464d7c7c8a45e0257c56e2c48cc8ad65c363e2b871df2962", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "bc702466-0697-411f-b824-97be0b1a8895": {"doc_hash": "e53c16e20591d5355055d03a83e028db3e98ec1a8363d80edf715b872966fb55", "ref_doc_id": "main_guides_orchestration_contract-walkthroughs_send-anywhere.md"}, "0982f476-fec6-440a-9fba-8235abcdbce5": {"doc_hash": "952ed7c85ef615818c6a858cb0f51fa472af353c704b5ba33c355c62c1545c18", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "e835ef50-1679-4653-b00f-d3448ad50c59": {"doc_hash": "654bf4520aa301a522ab5236e19df01a1716bf467b0c9258cc3a82c3f02df4c8", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "c7733f67-8ab6-423a-accc-ebbdced779ed": {"doc_hash": "e2ee9f76a240d2ae5fab53c3ed9484536533d3ffc890bae679f238a92819a665", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "07fd3e71-a76d-426e-9a6f-b8c3345a6c69": {"doc_hash": "fe8aa333691f4c78362f502752f0bbb47ef1db23e03a2111b1ccd4de84c7f423", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "e76dc33d-3fbd-4e0d-82ed-fef32e092446": {"doc_hash": "392bd20d84cf0c6162bed6c5574c930d263137f838bbea7a0a47bdd69f59b4dc", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "54e549b9-6cc9-46b2-8653-d10f06b36b4f": {"doc_hash": "d0455f6fb06fff01274971df1ac234724cd9ed65567aacd7c1f8a6cbbf2ba5a7", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "e527e1c4-d622-4d99-b322-e9cd07d1c851": {"doc_hash": "cbe0548e0e1fede4ce15b6720bcb190910b9d1be7d7b5f4415de6fd3f71e5f93", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "f0367f22-2a28-425f-a1c4-2e944c8c1077": {"doc_hash": "d26bd70476c1b9ad8059279c547a2db229c2c6fb34706f4ec0a8a903b81d4ee9", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "97100d53-e9dc-4c78-be25-d2ed6575232f": {"doc_hash": "678b8c5530d50c4a8521003930d40931586ad7fe130ccaa68daaa7e63b2ec7e8", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "45193ccc-0ad5-4c22-9094-552a68c0fb75": {"doc_hash": "6c67db093448b3ce3100635945647629890d78dd6f7b50136a96e73b9bba8762", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "f48db4f4-81e1-4808-b9a5-0027e10d001a": {"doc_hash": "e41012f83fddbf7ecfd608f82fa1a2becefd98aa43fa7cbbc9ea23895fb82d35", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "34a2618a-640e-47e7-8288-8fc55ea8e8fc": {"doc_hash": "abbc2110f54842b2932d7bd3d768cf4e0f17702f20bf2c58956bbfbb8746337a", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "51c1b1ac-be66-429b-a972-4c50c635a4eb": {"doc_hash": "61f6cee1e7a29b22c96bb0cb80debf4f62ae026e3da6d9e68d290caa1e2d909e", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "202e6459-4874-4355-96fa-b12df8848e1b": {"doc_hash": "ad2049e158c597ddccb8cdad7b838b8199c2ba3cf66fbbe226ab6e2135ecd893", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "275a42ca-dfee-4559-be29-e7ea2700ddd3": {"doc_hash": "ffa6abf7fc4fdc9708b5d1ef0acf164e4bf1ff5452358c7411c9efb2c174b8e7", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "65128cc5-257d-4add-b14d-315b4a1370b6": {"doc_hash": "d9337912691f62489585cd6def3182d81c6e22463fc4ed96992ee02da99155e8", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "10c8e301-176f-4257-bdcb-5ce314822cf7": {"doc_hash": "5fe5b3e986dd039505a48b79eda94a02f76895c878cbeeb00b403ca78eff2223", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "f32ee26e-2ffd-4405-bcd2-23281ed5fe67": {"doc_hash": "c7c3beb37a0d769161304f59be93d101c11f507c540c25d07e287b31602b7c60", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "5b86b294-92f0-4e06-a5ea-c57ae76355a3": {"doc_hash": "1c57ab519576f340ef7a49d242fe426400dc87d43204e0c64b63302f47b75104", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "aaf00975-11c7-4868-841c-f2d2e9ad53c7": {"doc_hash": "ce30a47415be5044fbeb79c851ec252c7e11aa0067f83bd29fab75547937892c", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "efa28d29-36e3-4e0d-80d6-84c51cced792": {"doc_hash": "52562871a8ab40b22b34902cde991aebfe442f01e9f37c5c46772a0d8962c5c4", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "50dbbfcd-bf01-45bc-8cac-124da20ef3af": {"doc_hash": "da2ce1335fa5024f52bc97e040d18423a8dd5f9df75a06fc263bddd3c778d3a9", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "444a2d07-6dcf-44e3-8040-1d714f437c9e": {"doc_hash": "06f557b062c0b84420e1fbe642fd7d59e2442398ca60d2e6416fac3ed830a4c9", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "5485bba2-8106-4fa2-9eac-b9bb4223e9f3": {"doc_hash": "10d596546d96d8e8d31170f34db39f1c30f2f93ff81d1b159f0d22e6940c8cac", "ref_doc_id": "main_guides_orchestration_orchestration-basics_contract.md"}, "7d7119dd-fa3f-4da9-9359-b2f57e437fd3": {"doc_hash": "7347d325133b4a7f01781ca49c5bf6cd9eec40021ca87ab632933cab1b60c6d7", "ref_doc_id": "main_guides_orchestration_orchestration-basics_index.md"}, "479fd83d-4d08-41c2-9ac8-17263addf6c6": {"doc_hash": "39cfe519fdc1d999221efd60d8bf7d1a17803182f222982c069a05d8d0283ccd", "ref_doc_id": "main_guides_orchestration_orchestration-basics_index.md"}, "9646f24c-5a80-4d47-9924-488eaaff08e9": {"doc_hash": "8c99125017eaf5e150edcd676430256eaea34245109b82554b4590d6625fb918", "ref_doc_id": "main_guides_orchestration_orchestration-basics_installation.md"}, "dc0696b0-e874-4d10-8720-450c4f990e5f": {"doc_hash": "ecc63581b9470a854a0310b5ed6dd4f44852de5fe013887211dde2e70ebbeb74", "ref_doc_id": "main_guides_orchestration_orchestration-basics_installation.md"}, "8657e00f-f537-4b39-8073-41999c819d3e": {"doc_hash": "954df16c4dfbff33e9dbaf17048817c5bc5e5d5f0ffc241a49ca67c7ee7e1212", "ref_doc_id": "main_guides_orchestration_orchestration-basics_installation.md"}, "bc4d02c1-08c2-4a9c-bfd2-ea516f4dcbe6": {"doc_hash": "d6ebc88d114cc11c63774a67998f0be8f1b02c4a8af7a495eae29ed596d45bf6", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5": {"doc_hash": "d1e34ff3cc243561fbd4eba590ffec3ab34fddc6bcd83879c55475fcd1890dcf", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "175d825e-7a99-4fca-bb5b-2dce57d80e7e": {"doc_hash": "b038104e9be29dec95c23b5bd6e6e9186d331990a74d79af04ab679cbc276fb1", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "54749b79-a593-471c-8eff-e7fbf907ebdf": {"doc_hash": "c56af887620cac9036bdd275e37f497b9567a91b9f91201b3671c8a2ad885511", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1": {"doc_hash": "c19faa24c77be3ca889833cb31f1196856ce49329b56ad59f1adbd2c50559543", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "9955afec-f6d4-4727-b6ce-28cfac920fe4": {"doc_hash": "24fbce5db4018dbb3d8517464558a4aa9036e71715480cf89829774ebdf05a97", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "c238d4d9-a43f-4780-ac5a-f424807afba8": {"doc_hash": "b19d7377bb3a9afe19039163473d748b8b208951a5c6de928438573061dc08e1", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "4f59cc60-8807-4475-b304-0b1f3591187d": {"doc_hash": "4c701c2aec07e05f72bb2e46346a362a625c5e876e73c7e74c9e2c3bc779aff4", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "7d09bbc1-c879-45f3-81aa-97b22b361455": {"doc_hash": "fce8af5677d31767b7edca38e2010173a177bb160fcf1f3531d1b1ffbeebfbcf", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "83699ad1-f57e-4447-84ab-7c04999e0b2c": {"doc_hash": "a2a27ead4c5a8e8977bcb69c40e07d403c6ddb88644849062c2d85a95c138644", "ref_doc_id": "main_guides_orchestration_orchestration-basics_ui.md"}, "56c35670-7d74-46b4-8620-7877b0e20db7": {"doc_hash": "e5720ced7d25434bc61b0162e9ed7bd44bc188a328e4e01efe1587a9376b2ff4", "ref_doc_id": "main_guides_platform_index.md"}, "458bee02-8966-40de-9fb6-1d782afcd0c9": {"doc_hash": "cf73840df2f9f671ae098f217302366bc7142ec467cc76765fd859f6cb2ee76a", "ref_doc_id": "main_guides_platform_index.md"}, "eb9f8522-6743-4771-90cd-ea510df130e0": {"doc_hash": "cf5208cd637750c576dbbc37a72efc988f04f72ed6f453824f84dfc7604ec810", "ref_doc_id": "main_guides_platform_index.md"}, "7699642f-8c8a-4100-ba05-b201bef27774": {"doc_hash": "aa2bdc5b77e8ff5c274ddcbba99ec247ba4a0a5e3f931f162ac75e6fc244d6ff", "ref_doc_id": "main_guides_platform_index.md"}, "ffb6df95-69bd-47ce-91b3-ef8364d3b465": {"doc_hash": "1940b657f398231c428caff8eb1277ec6029f62524fd24d63c914d9b56ee4a7c", "ref_doc_id": "main_guides_platform_index.md"}, "6aea1100-b2d2-45d2-8932-c90c67a83743": {"doc_hash": "280e45c0f373967629c5a75969bedfea8b7f872eba6936a921a65a90a37840b3", "ref_doc_id": "main_guides_platform_index.md"}, "64361966-d6e2-436e-8756-da1577e30f30": {"doc_hash": "893ae1e2ec2be2aa83ce3a357af2d12eb571705b206a945dd54886193371a97e", "ref_doc_id": "main_guides_platform_index.md"}, "783fbc4b-ea41-4daf-be8b-f4856d811e9d": {"doc_hash": "938fb2ec2a837639e58a8545dfa694c4c4c79aef676466cdb7087c4f37d0bdfb", "ref_doc_id": "main_guides_platform_index.md"}, "c2d0581f-3542-4ec8-800c-410b4f24ec39": {"doc_hash": "7ba2ed2abc990200be73fff027a03710477ba001620fd7c5730af99c96ba717e", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "4fa6797c-5db8-440f-9093-58f61b264e7a": {"doc_hash": "db3025642a75701de73bd338f3a05e47f7dadf4dbab162bf5bcc0cc0522b3720", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "dc2e1861-4f42-4d3d-bfb6-672badc4295d": {"doc_hash": "a1e7a15e78024a77cc91ef5fa3be9ad2501fce4450670b017bc6bedb6780eb34", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "7b692a6c-8436-4dcd-995a-fc378516ba43": {"doc_hash": "85b252b9beebe982cb41be00c44dbb7f05b9cbcdfbbe58dcd05fba96065b9f9a", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "2890915b-4346-4261-96c0-4474c6703d4c": {"doc_hash": "b3c643bd4bcd992e0869336dba09b475ccdc01f787b0469d23c66b0e35185005", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742": {"doc_hash": "b87395b7720145bdcd9c11a3f423043157df3a16c366a0ee26510fff4ba48f28", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "785131bc-1171-413f-ac3a-3a73af849a85": {"doc_hash": "b8e63f881276bfbdaabde266dab9a11d8b7ca4cb028c6086d9be71bd5c3d3d71", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "54a216a2-0479-48ac-827a-a15d1a8bd915": {"doc_hash": "21a837b81dc3604ab1d3596d5c8c668d4017b10574385a8e7066f3eaa1e80e8b", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e": {"doc_hash": "8c55e47100f6514e76e1e850083d363c0b29fb158d49c384aece1ebd33a5b94e", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "4bf2ca6e-1835-424a-89fc-62ec339170e5": {"doc_hash": "dc35bea7b9f46dac3fce3ae69ec1f37e839b39b3126d2c97bf12d812e8066375", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "c95889ff-4b12-419d-b72a-8f1e95c7e48d": {"doc_hash": "a12c93dc493ec2736206e67d433a50502daf407ce44f0534a91bf2c78ef2af5a", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "580b6f9e-2929-45da-9e57-7a366161b8a7": {"doc_hash": "be7d166dd272c6569e4f24db518bb7190092b7bb9254b43a57ddd5e1302d6a44", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f": {"doc_hash": "b5387f44b1d5f51e14684da0dc9b2b435f81add31e24bb0a885441a0823e6521", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "589e2845-9027-48a4-845e-cc47e7d984e7": {"doc_hash": "7ffb1ac8e2d3930e4ac30505cac01a001acbca1bd78ecadedd2e5f3ba8960385", "ref_doc_id": "main_guides_UIComponentLibrary_index.md"}, "78af4c77-a795-44f3-82a2-8a2ac9c75b21": {"doc_hash": "c8a44eaf35c3f5a656eb5c3fe0af469aed62fa609e83ea5658ebd30acda8b35a", "ref_doc_id": "main_guides_wallet_index.md"}, "ced04e23-e88d-458c-9b89-513053012874": {"doc_hash": "08e9d19b85f35c584d1644d31ae91bb61ad17fdf0e680348e8b98aa380ca6094", "ref_doc_id": "main_guides_wallet_index.md"}, "c814bf64-0875-42c4-b09d-52c6ab32aa3e": {"doc_hash": "a39cb8764401281aae7f22f4ea800ad6b0b10ae7fd404d9643081c3412567e30", "ref_doc_id": "main_guides_wallet_index.md"}, "f39ae275-8674-4d50-8665-6b83a9244b4e": {"doc_hash": "dfeb9b3db6a0c1487d4c524df2edfa131158c2ee884a1b06446f981fad506e95", "ref_doc_id": "main_guides_wallet_index.md"}, "e8d73ce5-965d-41c6-adef-8436878056ff": {"doc_hash": "2ee4718f8272e10a28bbb71692852d452dc35b7d90693ddd318ad0ef9d7f2bcc", "ref_doc_id": "main_guides_wallet_index.md"}, "8e3bdc20-a7da-4577-9257-ece401b475bc": {"doc_hash": "b1f1e0efcf12820bfbe65f275e96a1a59dc0a798b4bf820482e467a872f03543", "ref_doc_id": "main_guides_wallet_index.md"}, "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8": {"doc_hash": "7f3e0169fab2636cb5e5b10c4e3ffd909678acb20af46a3ed84cdf5d5acb21f7", "ref_doc_id": "main_guides_wallet_index.md"}, "1cf6f85e-2012-4459-becf-8c6e5b71f54c": {"doc_hash": "bc574bc2a07759ed8e9d3746d624cb737e7abda051b934491ac3fb590d687e2d", "ref_doc_id": "main_guides_wallet_index.md"}, "d1523f74-6366-49f6-8f29-e0519050a686": {"doc_hash": "d44e4460d7f41add4a2f1426e4394aca0544163c800f65983176e4582bbcc439", "ref_doc_id": "main_guides_wallet_index.md"}, "8152a3ec-2b06-4d89-aeca-6e97cb20dadd": {"doc_hash": "501622d95c633cab0c64d7176507cd0a23475fbc448bf5f36352f4e3c193748c", "ref_doc_id": "main_guides_wallet_index.md"}, "425e8a91-7726-41d1-8efd-cf99cfb6e587": {"doc_hash": "6517cb3444047eeba64d0ee398193bd9e2ef69bbd37093ada705a602cd27e6cf", "ref_doc_id": "main_guides_wallet_index.md"}, "bbf5b954-9d5a-4c82-a948-458903e02f2b": {"doc_hash": "7da3fc79560d0c25733a214b4bc6b4f044ee1f25c9ad8a50d843e4591ade26f4", "ref_doc_id": "main_guides_wallet_index.md"}, "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7": {"doc_hash": "d99ec84d8649c2053796a31a7a263505c82df978392f464c1dc1cf2da0c97678", "ref_doc_id": "main_guides_wallet_index.md"}, "0a7b3576-87e1-47c1-8562-b9a95fc1b95b": {"doc_hash": "69b514a42de5b849933001a0467c48d95c9e0ec26a97cbeb71f0544af14f9b43", "ref_doc_id": "main_guides_wallet_index.md"}, "3145a487-f4ab-4dd7-983d-55762b4652b4": {"doc_hash": "fcc0da7d8a1f219687b57cb15a6266495e05db96f0bf2e08b62ac3da65703758", "ref_doc_id": "main_guides_wallet_index.md"}, "790848c7-b0d8-430c-95d3-4cb73d1cf206": {"doc_hash": "84090f7cbdd58e3b75c9627308a32ab14e6706dcbd7d63c1831d147a9c27d1c8", "ref_doc_id": "main_guides_wallet_index.md"}, "bfc93d3c-c529-4802-b687-77f00c0765d3": {"doc_hash": "272a981762daf8e8bcd1d6ae8a43c5f8723ce039ed90372b58f9d2c1fefce2c1", "ref_doc_id": "main_guides_wallet_ui.md"}, "fa358715-ddcd-4c85-9989-fed57c7a1cea": {"doc_hash": "3d8ab82125cee1c170360cf1b450eb1a1ad4258a65a95e2873d23d4a3e901130", "ref_doc_id": "main_guides_wallet_ui.md"}, "09dcf02a-8376-4ee2-8f2e-aabdab565afc": {"doc_hash": "24a15a6bfe9ac335aef1975a7ff922f654f72922f73fc64f88244f8c5ba7a090", "ref_doc_id": "main_guides_wallet_ui.md"}, "0af8fbba-37c5-4e03-8647-3f1692c185e8": {"doc_hash": "23965c8a0b7fcaceee2358fb89a1c1c5cb959b129ee7137236a60b81679a6de4", "ref_doc_id": "main_guides_wallet_ui.md"}, "1cb7790b-f133-47de-aa86-19949a93decc": {"doc_hash": "6f975902973a8a1236f2502268a93c9664eb7906323cefbbfdee3dea3aba0bdd", "ref_doc_id": "main_guides_wallet_ui.md"}, "c2250e5c-ad76-433e-94e6-af3d44826d48": {"doc_hash": "80003770ea51fc2d5f308f6b121d7c6924977d78312c0f687236ca6959a78006", "ref_doc_id": "main_guides_wallet_ui.md"}, "b1790c2a-13a2-45df-b63a-b46cbb64b457": {"doc_hash": "df20d72ae523efd7170b4a5137f815c70942c34c17e4b99a95669a37500f58ab", "ref_doc_id": "main_guides_wallet_ui.md"}, "e86d2b7b-4c81-40e6-ab72-5011698238c9": {"doc_hash": "a7a754ae24247aa2a7060feafbe9b2238ab624bf6b73aee6ec80ed2c28185618", "ref_doc_id": "main_guides_wallet_ui.md"}, "27542914-a587-43a4-8952-9f71de34166e": {"doc_hash": "1235b4aaca273c87d48f3f5b3b10aacbf1146afacd08fa9ded759aaee209f145", "ref_doc_id": "main_guides_wallet_ui.md"}, "41745386-d96b-457f-aa53-a8f4532cb644": {"doc_hash": "bcd88e419914cd87f20b46ecdea3aa4d6b5fc6163ce5a05e64cc2d62d246169c", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "51050da0-421a-4073-bb57-400f90553a51": {"doc_hash": "aac186909a299e3ff4b5a06b5416e0835c6429b2c9c534cee43af9cb3f9bb349", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "00c877f2-628f-4560-b412-1c9197190ceb": {"doc_hash": "64bb0edff1c16bed24ec9f40235bf2d143cdf9d054828b40b03778f844eb99ba", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "e65c53ac-e71c-44cf-a0c2-7f0ec990f899": {"doc_hash": "04fdde0201b4f0d108415c0a8f6a91971232091b8bc76a34c8c74f0a63d5e618", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "82cae29c-c767-493a-b5f2-1c129473ab96": {"doc_hash": "f7a0c68cf0a8931b6f0a6ad20962ea37882154059d3161eddf60b31eebbf9ac3", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "3b26ca27-626d-44a1-b2bb-7eaec7351ced": {"doc_hash": "cacae390544aeef8a06f0041c0b81a763844b619378eeff8db98e46bc4cdf813", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3": {"doc_hash": "a27621a6e7fb1b0d323007b6eaf9305117766ac3285cfd3248b21e1d376c9fcc", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "b189c568-d524-43c3-9506-ebb9e734b0b4": {"doc_hash": "95ed87612ddf86bfc2d439c30497889b0f3b30ae2af31e98b58320d712011ed4", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "58fcc06c-bf82-4066-b51d-7ccaa1f415f4": {"doc_hash": "80d5545a3da6bb8b1d58dd057ca97b31d3767566cd469f6c0aef48eca1fb6636", "ref_doc_id": "main_guides_zoe_contract-access-control.md"}, "d506b960-0110-4df8-8f9d-356b9f26ef73": {"doc_hash": "7f9e299252850bc4c73999171225a7a5129e8fa816f79a4dbb1ed9780d415e9f", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "d6bfab0f-3406-498a-9242-a9dfa03b8d29": {"doc_hash": "c85b1e9ca7affb8c3b80977bbd8aa31a56589a990610e4e9b8fbd7a8dc1dcc89", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "a626448b-298a-47fd-8977-1f02292ff843": {"doc_hash": "281783e11ec44670836904837ed61a57032b2fd80aa86f9a684305fd254ac65d", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "bc7b261d-c8c6-4305-a050-cd5d7fe2697a": {"doc_hash": "19d6b7247914e506a84a11b46c10843a5b0182414e6c52fb1d68dd03e7bf13bf", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "dc23e134-f11f-45dc-b480-ceb499148113": {"doc_hash": "c73db4678a1748e0dccd657177466b22b71d4c76269b038b2ddf2fdfd80a2cbc", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "b632d194-3f6b-4e5c-83b2-0c10bd3dcfca": {"doc_hash": "4f0786d9ee7a6bf13895844ae67bec24da7f25790eeda8af3c5ba47df6660ca6", "ref_doc_id": "main_guides_zoe_contract-basics.md"}, "b8c56c7b-1e1a-4df1-89a5-5b270640e62c": {"doc_hash": "29244258fc12c6d881d797a727e2906d08ccaca94c127836335c772e09a6eb53", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "33de0ab2-090b-44d5-b335-5ee18c6acd20": {"doc_hash": "51de335646809675b9a79f7db9a2429b8940535f17c0bc8f2bafee09b2a8e6b9", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "542cc243-e4d4-4b08-9839-b2d124184caf": {"doc_hash": "6ff30ae0b01303320e06976802b0a3f417862e27204ccded06dd9bf160a60982", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee": {"doc_hash": "3b98aa38f3bbc30d9e453eda663ef7f5ed8d376676756c3e2b858ede6aa481e9", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "09c2e092-8034-4be4-84fe-3aa196b9320c": {"doc_hash": "da2dbfa948cd3cff7c920fd8d5f6dfe5c533fbdca92f63ac2d48a878cb1fb34a", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "54927b82-4f1e-4b68-96b2-fc531e8099dc": {"doc_hash": "200552bc8e2563aaa131111e4e066b8a4cbc13c47964373e8824c02f1427c5f3", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "f8ff539c-6244-4fef-966a-2e91a084ab82": {"doc_hash": "62b685a886272197ed8ecda012c467e9a426c9d44fff5cac19d7418e9eda20bd", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "34a020b6-766e-4f31-a18a-4db5f66441b9": {"doc_hash": "2b041ad20c3c1ee2816350f526948bfd47087cae02ac433b0f2bdfaa6ed0abe2", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e": {"doc_hash": "a3493a55cddc2c5d2f4858a35411ff59dc6b4aaa2622b668698a8931478db35b", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "1ebb6620-193e-4b1d-8981-09cb15946180": {"doc_hash": "66c5417d722791307ffaa8670cb5bc2676e995b45a26dca08d8e7bf7edef0e38", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "4df3c633-23b5-41f9-89d7-f8df9fc30236": {"doc_hash": "225ef9f0ec4e592cde97ba78811ffa97ce1a6c4c041653f1588d5fcbd68cf50a", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "27f32658-accc-443c-96b6-efd3706cea72": {"doc_hash": "dcb0e935b663c779a0d285b63b0cc642004b672d07bf9ff6103f7ced95c3dc8e", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "1603918d-ce1b-4938-8028-1cca1570970f": {"doc_hash": "d00b0f965198d7e55e9b09d2ea3cf329d72ff375f8814683bb303a07724a2694", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "452258fe-741c-4125-b966-74a200480ec1": {"doc_hash": "251885035f9df95a48f084ce855bef360b93c4284c872f95581638b7429ba961", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "4799cd63-5431-44b0-9bae-1ee415fdfb36": {"doc_hash": "b8fb4de07ea0ca5e4bb6a830e18549fa52ef500441469394e274deaf13a10653", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "809453a0-e465-4c84-84dc-2d6d79d93580": {"doc_hash": "fe1f6276853f4ac8ab2ddb9a60c18ea7e9e3dccc9bb6cded7703d2431a8e276d", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "c25009ca-89e3-45eb-9e41-97874166d396": {"doc_hash": "ecf4d7cd03f2cc15ec8ec227ad32faabc4a4acde2e8d92d67babdaf71cc82822", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3": {"doc_hash": "724b5c5d2599bdb286a8f17442bcda22629c44e4b11db5ef9b8e9230536af193", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c": {"doc_hash": "0cae17ca1487e55d7a3a6767ef7063f4557f37b7015e29cdf9f8ace976d6fddd", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "2b12b5e7-cd56-4c84-9c74-c602c74ad489": {"doc_hash": "98f0ceeb7fea39c367f1f2c1d96ff0594421b9554f78fb1e2d5edddb0c2b7a4a", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "7643f9a3-0a3d-4777-a289-e0657b09c71b": {"doc_hash": "63857e9e9a2cc6d61e352ecce4161ebf735ed70da7114e45d09107cee4dcb10e", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "e624b34d-1fbd-425a-b11a-f20246515e8b": {"doc_hash": "74789fde558094e69cd13bb377f72d4998bd717f6e0175d4ee0090f4f61e46b9", "ref_doc_id": "main_guides_zoe_contract-details.md"}, "e7afc97d-37cb-4c78-a94f-108ceaa68d8e": {"doc_hash": "a77a192da4a3f49a5023b89d1126f2600217b28c24fc3553e28f3d128d0916d3", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a": {"doc_hash": "aa7af22316040b1a947745dd571add43117c88ec97d5d1520d165357320c8e8c", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2": {"doc_hash": "eb651667715f043c2d5162257ec4e3fb77e06083e65d08b3cd07aa505648d65a", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "3f1ca97f-d384-4915-81c2-eb9e7a376021": {"doc_hash": "87466c89b2e8775a4badec7d70e3165cca5304a428bf891ee44f974d3602392d", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "6b6200ef-c8a1-4de2-bd4a-b93309842646": {"doc_hash": "4d78c77f18b26535de15273956306c6a7b0772c11a78134b1f97bae95383eb07", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "2e36a584-39b4-4015-b0c6-dd548c8ef532": {"doc_hash": "0034c1650509925d8e81f4180e74f0754ce6f322b367eda0c24aaffe1991dc51", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83": {"doc_hash": "5ef0372783f3e140c6abbaf64b96885e04c0256bf7bdcba83a5b65c8e06953f2", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "307a6503-144b-419b-add4-033fea470b50": {"doc_hash": "1e80cd6620aff9a2b1dd1c383b2054604b1b31c24df70eaa9273056b8549a51b", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "78578ec8-bf88-4769-a2a2-e27139a68f33": {"doc_hash": "0c49e0e84535ee2dd68884da37fcabe1907256675ab0ff2e584ad0479bc8bc61", "ref_doc_id": "main_guides_zoe_contract-hello.md"}, "3986fc4d-36d0-49a2-b922-12287a0c9b64": {"doc_hash": "fe3500fdf12dc338ca2369115394eb37abaa84300991cd4dc3b5552afb6ba02f", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "a323ac27-986e-4059-9193-e53df6fead00": {"doc_hash": "c761ad7a41d5ccaff85b6df76dfecd2e1c8663bb68e4e6b07383c9c5ddefe5e9", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "1850b0e8-bd6a-43e0-b369-74275f2b39cd": {"doc_hash": "46677dc01390b68a12e2c09d37583d56b3e445b33e4f822243fd7b5d6285496b", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "fd7ef474-3afb-4e60-a7d5-07e3532304a0": {"doc_hash": "ebc47081bb11079afd87a505ba84be946bd103556ea986b814bbbe91421ded7f", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "09909dd4-e8f4-407a-9ad1-821417b36003": {"doc_hash": "d8d098b16afdf3ca22f16e2376b611e87997a75e2f7ccb4df9b9f9a563e819f6", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "9499c368-c7ce-4194-bc38-fb3556e7e9cf": {"doc_hash": "53fadafffba2805a3e722160386b870cbf1c8266531a4a7b8738bdc037980197", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "f412e368-6474-4c2a-b100-2cb9604bee9a": {"doc_hash": "7e8329e61ec4f58f552a42f2881f00b931fdeb6c3972df7e328c7bbe361eda56", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "ccb66049-d0fc-4a08-8153-f27bddd019ec": {"doc_hash": "0f791d0d6654387f5df34c841d36650d97b5ac4a67e40ad1c2be1d7b759c9b4a", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa": {"doc_hash": "075cc90f62635b18c26743c9b337da06bb211fb76949ea78d360350c08299088", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "e89d62e4-47d7-4b7d-8402-7755a35792f4": {"doc_hash": "948f109f914f986e2363e38df57afce2e4148e2a7ebf96fae21080cc498f333a", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "393b77b0-aa2a-4ca3-a337-d8722508017c": {"doc_hash": "c73a32db3d3ed86519df6185254d4849bde59bac27d92d4a00e7b9a0c1c701b5", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "247f7b99-15d4-405f-a258-c01676734f58": {"doc_hash": "103396d8141db42303b9e8fa572b4d602e371c450856ae133187fe4f666dbfbf", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "d9f9ea62-e1b4-4c61-8a59-cca7b251c991": {"doc_hash": "936061d8c6d1760726db93d40519062bd3c0e40251b93f2cdbd4efa8dff901b0", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "c2b480b0-e336-4ab2-9f6d-e5d47601271c": {"doc_hash": "3cd9a3f91338bc86931d3c39f442cea4e2a15f033588041b7d3e94bba5d7fd99", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "19fc4757-a999-4131-bec9-f54f177036be": {"doc_hash": "08b841726196ee81238896d14906d681eebe3bb9eb052ca40448c6233485f499", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "8c112258-1b2f-4600-b820-9f9eb3524393": {"doc_hash": "9060c9d9e3c3c50aaec3da29e047d81b0fbabc4ab27801ebed1c2f350bd5f967", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "0ec84829-5ca9-44e6-84ad-5dd962b69ce9": {"doc_hash": "6680d9481e3be81890e13d677c985b8698e2bf6607a60f989402a40b93741db0", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "c1f0be40-ddfe-4644-b694-df11b4f3df1d": {"doc_hash": "3a1b25d86391d02d8e076df2e2d3686ea5002f4bc42f2ffcd1d5412f893bc035", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "f473db88-2002-44c1-be89-9ce2a457b2ff": {"doc_hash": "1e25035970b15be0a1c337050ed1c22ace85e9d79a25080f51b92156e2529a80", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "fd3f6c59-491e-4308-ad9a-4f018355a2d9": {"doc_hash": "1ed680e400b9269e3b375c194f8989375a9aa40970929abe2948092c3ff1424e", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "a6328f06-fbad-40dd-8eed-bd9d2eebe28b": {"doc_hash": "9cbd5253840668aabff52bb055dea86889e03dba152f3eb170aa440e62be8444", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "0fbb5be9-f608-43d1-a6a5-66be80c844df": {"doc_hash": "9af1b0447101bbd36634cfdd04eac21460a4cd794cab436fa9dabd253317463f", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "b90b6d2a-086c-4530-87f9-a5629bc5821f": {"doc_hash": "9922682ea08db784712d22b6c32019c681972437a6b68bad21650071a8742502", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "088be608-a832-4e31-8dc1-b20eaafe5af2": {"doc_hash": "df58ee5a3733435494bec593920ffd4a2d1c4c98560a47a322ee6431650aa31f", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "7102c9a5-33b7-4490-aad7-8c841a32a475": {"doc_hash": "d84de0c2783267aa298d247b33c78a6507085b09e6b2b8ce482a37452003fe52", "ref_doc_id": "main_guides_zoe_contract-requirements.md"}, "3032798d-0b1f-4867-9da3-0ddb896c50c0": {"doc_hash": "b06ab5ba5994bf5a0e41a696de240aafe460f964c1056249296c20b7190282ea", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "8f043428-a6f0-49ca-9885-dd6baa6c1440": {"doc_hash": "de0bb2a307134f7688bac7d002178342fe9895174c52c2e1333a6f9e3d5376bc", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "3448a719-17ab-4cdf-a273-62c52e5f3732": {"doc_hash": "d9f62cd3e931318b20b67da3652e9d962cad800fa88173eb675c5c35b6cc88d5", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "1783f7f3-9054-4a04-b02b-1ddcd002a31b": {"doc_hash": "3c9ac18107dc1eeb39d4419fed6355513da5658c0cc2e72bb755b7f420026358", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "f7e41fa6-4a9a-4401-a622-14ce19f13366": {"doc_hash": "72d7510ddb7ce119ddf27c16aa36897ef5dc113beb193908720f73828d65e2c6", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "b1c63fc1-15af-41df-a132-9cf1be926b5a": {"doc_hash": "551359ff694ed727ee88071e13ba4eeeeede94304203a4674311d0e6b336fc4d", "ref_doc_id": "main_guides_zoe_contract-state.md"}, "5ac54280-deeb-4b71-8bb3-8695116788d8": {"doc_hash": "9fac3dc192561a7d1c2f6a2696e6cc2a9e4650b53765b101f0731677fef6ce98", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "4ebdc93b-0829-40d6-8ea5-ce540587b78b": {"doc_hash": "4f52226453d4cd86d1cd8be4a359455a908429be6ba9a89e021b522ecefb784d", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137": {"doc_hash": "dc2ce5d2d4c8d4cc016f754b55b604f82d4b4fa50239a24fc919ada7bf02b31c", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "867d9661-df9a-420f-a2af-6b4996fbfc4c": {"doc_hash": "0c3d586ce0f6ac33c8797f3a847d1f9f8d29794e91633014fc564012190b0087", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "740d3fcf-c737-4eea-993e-9137b9f552d0": {"doc_hash": "e5bf99dc57c072184eb6e6fa6889b86a55bdbf0bf110e7970b03149a61c4f2ec", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "bf5e2b31-def6-4759-a35d-2659e41cc628": {"doc_hash": "10b4c43f1ab649b2a4d264dbca46f7b1456f6f19b488217f4191f721b176f9ff", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "a1d23916-15c5-45c0-9002-a84925f4bcb7": {"doc_hash": "b0387cfdefb7b193745c96e33ea045b6d0d90b5b478d32f0a04f5571faf275e1", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "477975e5-a478-47ef-86ff-9281733a66c6": {"doc_hash": "583a8137e61b451d8e19fccc48ff7ac42ba42336f20321cac14df26be55dabb0", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "b2580e8e-eed2-4609-a448-3cb39362447b": {"doc_hash": "32c714fc3fcb4c57bfc6cae0a20ff7b4a8d850a6a199d7aefafc64656569fe4e", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb": {"doc_hash": "3b7616c0a60a6d65f5bc87a27b7cc891f1fb49ab40a49667ea855b3ac04fc511", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "aabd6d0e-b859-4b08-bb57-5263bc97ad43": {"doc_hash": "3b08b15139a3f5052257f892ab4a8876a77091bf872fc332a723b163b85c87c1", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "60e68dd7-3b13-42ca-9017-2991721ef6c9": {"doc_hash": "d317b8e66d3646d32ab33ddef8e03d0e64901dffb351446f6f039ba11b074c26", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068": {"doc_hash": "c289aaaf948db99f0aa1ee5f475c81e4213f473c1b518aab3d202e6682813997", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "a44ed04e-eeb0-4061-8b2c-24fb7b156d55": {"doc_hash": "2ada9d74057c8a25445a7c012a4e2e2f40b8922a89513e7a0ab79869246ba71e", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "d592d7c7-9ac1-4a02-ab77-78ef4848c250": {"doc_hash": "c1be58a4bc12c67ba0488ac2a40922e4c0b5472a7393c9ff54f3087f339b1c40", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a": {"doc_hash": "75360cd75602e60dbec330f8d846e1bde7022907d07f424110820ceb631708ab", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "4b100f9a-0df6-429c-bae8-4a422cc84844": {"doc_hash": "9161c61e77a5b348f0e1a4d35cadac16ae114f7c44434f7bf748c4d402936168", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1": {"doc_hash": "dc4062da9c743a3ac2cd4d0683bdf9777a566f38428e88b481069a6f48ee8eb5", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "900aa10e-d39e-4fbd-92b8-eed65f1ddc06": {"doc_hash": "b1b245bac34416bf99c16c552404d42a9452cde20be2b9d7f175fed6aef6acf5", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "9dcc50d4-2618-4a2b-aa07-7186a32189bf": {"doc_hash": "af66a9f30e58b6eb05115e2568d163da6f6d362c91100de5174844131deabae2", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "5c4ad7f2-92ac-4de3-817e-559dfc43c957": {"doc_hash": "f369b2024f762d96d8a0d9bf427773f0d95e2b6e4b4716f3912c6b3e37ce7903", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee": {"doc_hash": "b24f1012c2e63a2a71d908da9cd048e16155651f02e435727721383a64172f90", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "64abe725-8752-4f74-96d3-e595a66444c3": {"doc_hash": "ef1a6ae3e618a5575e95d6fada6c2c2e90cbcb82a73dcec399933504663ebb3b", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "5155a395-aa0c-4d8a-a9b4-f7d483395791": {"doc_hash": "8f6e5450f51efb64b27bfa8a056be430e735b5db0eec0d5fa02e96a9775084b9", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "ec575abb-6920-434f-995f-0be660aec0b9": {"doc_hash": "6605beaa69f0baf11ef28d363dce96d72e4520e376a7e1d7dc9ce54ce8d2cc8d", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "622ba776-1512-4cbb-9804-9c0158ffb33d": {"doc_hash": "f2b2062d889e99a47cb9f044d614674dc3ef6ac0bfa990921fe753b0bc42ec1d", "ref_doc_id": "main_guides_zoe_contract-upgrade.md"}, "6583085a-b98b-47f4-bd09-1e71adfb68d9": {"doc_hash": "538caecb4f30840e5feb57a874b61d7c51dbf5be3f09a7f633be8b3311f43748", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "acdec986-b84a-41b8-a0ae-b61f43a7b1df": {"doc_hash": "bde53896dba90ca204ca682f5ddfff3a12f5841b9e3e4f2ba4914b7b5ae509c4", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "3f174d7c-0eef-41ac-8cfa-d7f210cab09d": {"doc_hash": "500017ef5a92175f6526d7dba413c0566f2da32b378a887d7d09503ae380de2b", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "24ff8a87-cb71-4317-b071-c470c7d1aed5": {"doc_hash": "b09c314efccd4d22af4358909493bf6a9665a8945602c573b276094316fa4592", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "c94d7037-2f91-45be-a825-49d80fc9c8b8": {"doc_hash": "862f179ac6af8db4b3b906870dcc20d9ed41dff694e99c45eb21f5534701176b", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "8664b83f-b796-4e86-aa5e-452a4854975a": {"doc_hash": "924be366004e26d29d3e918bd69780da4631ad954a291091f6cd04a7bdda9204", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "70ac8def-4fe9-4819-8cae-01ced0a0ba29": {"doc_hash": "30bf6dd942764e117f5070f92212519f0928372388587712368ff25fa723eaf4", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "800c9c35-63d0-4130-94f4-a637f2f01d98": {"doc_hash": "8ccf095deb28f721801b0e66b1686970f174ecd60962b8503e9e643957181d8b", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "d310c77f-0b52-4d0e-bcce-6b22ab7f68db": {"doc_hash": "66db67adc4cc165fa8540a755355d36508db0e37a69c9d67cfdc588489d13a8c", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "a145b6b0-a8af-4294-9632-5ab661114000": {"doc_hash": "ee963cc72ac05027672aa727d6bc22c5728f5a870a5a67def3eeb66d5d50885f", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "c14030dc-ff3e-413e-a4b4-aad219d4b422": {"doc_hash": "93648cadac564625b2a99187d82d7c9414bd965efa1764bbf6c9f1bbd9f7b9b3", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "09002ee7-a056-43b6-8ced-9b645d231895": {"doc_hash": "602dfaa8c67d7dc6a214dc29418614b3a88e5ea63b1c1b791654870513ce7ecd", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "51be263e-6373-4098-97f2-104e54f6ed0b": {"doc_hash": "eaa2427a8e9ab879e46a855975c37d4a8cc50ccbdc566e7e4644ea09e7820c92", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "02babf16-ec5b-4863-9f99-d3f9300af04b": {"doc_hash": "c8370f1b3d5ad586e90aa217c81b95c5b7faa2c4855302dbd38a5fe8d02c5eba", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa": {"doc_hash": "b6dabe4d74ef0543dd6d7c35588623d6b0a4b60e2ed00496d0815b6905915500", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "f830b152-903c-4132-b657-6e8ebef8a1c2": {"doc_hash": "3de977bda834dd70c220ac9767f593828d25cd22f4338119f023cc74428dc592", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "042dfcac-ac34-4d63-a569-50927e3a7944": {"doc_hash": "c45621b4a515eebd6463d20ebb5ecb7f9e6749445d7411e2106086ea0024e23d", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2": {"doc_hash": "820f566a433ee6fe919d03907accf6854c366e95ee3067bebdced048d7d56f98", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193": {"doc_hash": "205c68cb15816e159c6e9e9996f9bb94700f39f8115614bc8dc05f2d1633e5a4", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "157eac4b-61cc-4e14-a072-0f524e86b5d7": {"doc_hash": "0ed73971b14aa9086b386b5633b0324d7ccaf863651fe6899b78879584406bf9", "ref_doc_id": "main_guides_zoe_contract-walkthru.md"}, "2efda485-4d91-49f9-8e65-a6a72ef9bb1d": {"doc_hash": "d79b7fdf8eed9bd9621afd309246fe578c59e695ca29930918114d7c4d067ebe", "ref_doc_id": "main_guides_zoe_index.md"}, "23989c15-da83-46da-9aab-0751647e1f24": {"doc_hash": "56ec8cbe7dd3fdf3c429f3b3ffd5f02fdad40c2d96736af4aa3afa81c29260f5", "ref_doc_id": "main_guides_zoe_index.md"}, "62fa7bec-3c79-444e-841e-672589e55419": {"doc_hash": "87b8022fb1563d494da5843042e84d1f83bfe82e8f6b92af9447ba0cfd49049a", "ref_doc_id": "main_guides_zoe_index.md"}, "f8ee671e-b888-4096-a6e6-ff48ad56cf0a": {"doc_hash": "a85502e5df4aafc625db6048ece0d81c6ca9fb4ba357e190f55cfd8bcfd76df2", "ref_doc_id": "main_guides_zoe_index.md"}, "7f6f3676-c2d5-45a2-aea8-36df26f54e27": {"doc_hash": "eb2e31d9b831a442eca7e3bd2add174c0d8260765edeacc9c4e6b701952b4800", "ref_doc_id": "main_guides_zoe_index.md"}, "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18": {"doc_hash": "f5c545c8771cad8ea0c881cf3dc12c2a0cb92bb7446512289c792b78dd702109", "ref_doc_id": "main_guides_zoe_index.md"}, "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196": {"doc_hash": "0f4f3a6b40958d6daa1cbc3786904300f908219a8200f33d9e20a06d402de219", "ref_doc_id": "main_guides_zoe_index.md"}, "54c790d4-859d-4e6b-9b58-37fc31fcde29": {"doc_hash": "7f7122d2fce7d42880b527ae0cb2ab1ba59ef67213c2fd9bcb88a442308d7db2", "ref_doc_id": "main_guides_zoe_index.md"}, "fa51d138-2aeb-474f-aa6e-71c76db38d4b": {"doc_hash": "abc0441298dac1251b5a7ef15c961f86b6360dbbbe0420d14ca628c9b8622aea", "ref_doc_id": "main_guides_zoe_index.md"}, "b465d9fe-d550-4b4c-bc4e-db073acb91c1": {"doc_hash": "c86774999804fc9a7cd2cf0d0cc4a08f773333bbc1642855d2dc6ba377b8a2d3", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f": {"doc_hash": "8c4206a2016f68148f7e5547e23e5f29e2daf022936cb70e87761dfa941b0886", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "0cd627df-337c-4875-8844-7bb3cc4bfa88": {"doc_hash": "8859276c8d0bb3b4978fe7e7c9446bcd649769507328fe98bfe077be0b22ff25", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "1693c152-5014-49bd-a3d8-79f0746443dc": {"doc_hash": "68a7b2eb0d41b1e765c1f75266bb7d7c79673c0b06ded12a81188ac7fc6826eb", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "95fbd3a7-0594-4c25-acfe-62262032bb0d": {"doc_hash": "8a74fb3cee7f97dbdeae3ba91cdab20eab40a9e04f30231d2f6453544aecb406", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "53c06484-5bed-484d-a532-a0661f2d6df0": {"doc_hash": "5b47439f741c91a53d3419415e5b061a2c5cc3a58e494a2d2ed03f4e6e87d466", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b": {"doc_hash": "22810ec996d416c58e357db921732355556869b9eda97493bdf3b158a61076e6", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "c506e0c5-2b8e-45f5-868f-b21810f5369b": {"doc_hash": "eb2d5d1ef3098cc3676c4ba76b4ff955534ccd538cefc927413a8ab114ace609", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6": {"doc_hash": "668b15b72cb64e1ec0db86e0b79a7b5ba0ff704bea71485b0453785e88f94529", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "8da273f0-3d3f-4585-8d88-c43a8b00087f": {"doc_hash": "51e4bfd3212ade5e05683283d0c42a3195770b63f3fba87c91190fdbb53473b5", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "450d3fad-1b08-4ddb-965f-5680f10b704c": {"doc_hash": "d636988bc57bb0b4a65e6f9fc6f4d07ef31cc1f597ba0314c129bd242fa42c3c", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "381f35b7-3cf1-40de-a66b-fe11b87042a1": {"doc_hash": "adbc593a8ab80e64b948c2ce681efe043fc7e9531e9b22b32bc6333bc4ceab93", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "b8475be6-6641-4345-a6cb-859f0ade7d5f": {"doc_hash": "f519a13edfd9ad688cfa5e0d13d2426ef899a53c82563cd21a9883a03bc9c41a", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "07c4a197-1cdd-437c-9efe-f74582c3ab89": {"doc_hash": "ecb5573b3d96f33d48ecd10e66bc5dd7834ba36fd2bfae860a6efa247342a63c", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "be9ef972-1d24-4b97-b096-583569ce0e7a": {"doc_hash": "03d1643fdbaed953d751da98e2b7d21a916e926f23b237910339f840185f85d8", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "2ac3a771-ca83-467e-93a1-3935361adb06": {"doc_hash": "61637fe09704cc8b201238ec05ccc90a3e9780e1c35c768ce6fa0d9cc74221da", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "d53f23c2-295b-4578-a73c-a38c9abcc133": {"doc_hash": "05dbb3db4946c912db305a9e438340e41b622fa5f547553b32ec022a81ec22a7", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "a83814c3-6c71-45c8-bafb-f9a96b91296c": {"doc_hash": "9ec7af1f171855cb7c4ba819c876cdee7a5197a0671298294ef57f2cdec211c1", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "762f351f-2880-41de-8cc6-0ccdd23378e1": {"doc_hash": "420294ed201732480f6fed2c82356a64058a3fda783646538b0b75b4e8e17ba4", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "d8b81047-0ec6-4885-b096-ece47af967a8": {"doc_hash": "599a5b4702ee39d7eb2c593818af78eee043b5060cad1f928dd4232493663c0e", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "687c99cf-92e4-4196-ad34-ed1b12f2bd2c": {"doc_hash": "456580a97d142615a2322dbbbda732f367eda5a04ff07cde1153c8c3121a40fd", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "688a4573-9cfa-49eb-9534-41acf24cc55c": {"doc_hash": "12e1ab0e381b0b46c26d727cdeaf8ac2afd88531fe75b5690068a2165ec77900", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "a0f61d47-94ad-4a5a-8951-fe8ca8054521": {"doc_hash": "6dffbf797d475732bae610083e5ed207f54eb92ce174ad7327ab9845c955fa87", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "448d7264-c132-4fc2-87e4-5856c7c10140": {"doc_hash": "a94cf9fcd32320e970597fc5ac62b0a68463dd371809edf5a3a97d5ef3d8c3e5", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "3d3da71a-04fb-4db1-ac22-580d26d9cef8": {"doc_hash": "a7b09f67e6445ff4e17a816b5180af5b27566bb2ee5697c5ab65b49c86b71fa1", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "72127efb-dcbd-489a-b14d-6a0e0db8f85f": {"doc_hash": "27b0fec841399c35b34eecbe75610a088ab760d03715bb55b73b661af2466ba0", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "a90f6e31-8a84-404a-9f53-8c13dc01c554": {"doc_hash": "c137f5596ae26778c1c01ed6bb7a72a3e9902da84044067572eac4aebbd22afe", "ref_doc_id": "main_guides_zoe_offer-enforcement.md"}, "e94c3105-a396-4949-b1a3-e7878c1465ad": {"doc_hash": "839251628cfbec18d516546a6f2e74aa7cae36519a0a9d1e430997208ec93ebf", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "8f3d2ffb-6224-47a8-b4ee-8474afbac32e": {"doc_hash": "f225aa665a64193a98bc7dc4834222f38151e4d0712475b305283bbe23f145f0", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "044bee6b-feba-45d9-a0d9-03bc8fc83f0f": {"doc_hash": "2d27c8cf90c39571e8f6102858b1b4eb28aaa41f2f962ccca979a81c70e957cb", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "25db8f96-531f-497d-904f-5e93195c291f": {"doc_hash": "cef7bf778a05e2e48f9b1f09baf9aaed77fc8b9aeff997261468b7d6c459e51d", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "80529836-4e08-47b9-8cb0-238bff0e63e1": {"doc_hash": "d1359aeb4fe48c9b2c5a6b99819f893bed27717f22b363f68a1ac5d96568d7b4", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "dfc3bf37-05ee-4a91-b322-28063cde25f4": {"doc_hash": "006af6da7649fd133d246045526effc483fd082a383b83ed2d1bb9c45bebbf16", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "8c639921-d9dd-47d4-814c-3c84ba39bed8": {"doc_hash": "989b45beb1ce9783459d426b3d2ab7fccf1c89f4c403502188f2bdeef346bf22", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "205d4bdd-4b29-4f55-99dd-1295f6a0b939": {"doc_hash": "d772a2aa2f089092f16e84476a810a5fe0b034ccad38df2511266934a9810cba", "ref_doc_id": "main_guides_zoe_offer-safety.md"}, "7c7589d9-09a3-4048-b001-1a8d9af01bce": {"doc_hash": "0920d7a66fde083ad5cf04d3673929190558b05b34b0714d8d39e603b7cccd0e", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "246cdf7f-abd1-4acd-8c0b-7701e27af148": {"doc_hash": "b1165e2b3c3405704bbfdf1ed5eada58b1bf9036de0f183e97ac0f5758084bd8", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "64a8354a-899c-449d-9f81-b15f1b78b194": {"doc_hash": "11d3f34f735d16eab14121332d0525a3b3efb0b5659f8e24867069b67e7d14ec", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "d5178c68-178b-404a-8887-24f007836afe": {"doc_hash": "b2f1671eda45059e06cfa909598f841ae06e1b3ceb8801a429f84f67b38c0ede", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "6e8310db-7894-48b4-9f84-2a1b53a95d8d": {"doc_hash": "23ac5fdec678cc8564acfafd73ae3a47de85ea66b91701a16e2f235d78314ebe", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "5d6322b4-926d-4a68-bc4b-98afeb8f83a4": {"doc_hash": "97fa05b658ba817b30fe2dc08e26a2e7dd9058d9e79039819c86bb2f1aef2706", "ref_doc_id": "main_guides_zoe_price-authority.md"}, "edd0d2b7-cf6f-42d6-85e9-8223e2da1382": {"doc_hash": "df0583188a933e0a805f50317fb454887c49c57ec47f3496181a5eb9e429b542", "ref_doc_id": "main_guides_zoe_proposal.md"}, "b77caf91-e102-48b4-9874-cd7e358422fb": {"doc_hash": "844e03ce225e4b9cacf218b65a8d5d342be9ce66217d5d6c03589bf0ffeb0224", "ref_doc_id": "main_guides_zoe_proposal.md"}, "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b": {"doc_hash": "ed2dbf99965a6a05e31bd92b6f047e91f09eb48b1d2dba7bc73ac7474c773936", "ref_doc_id": "main_guides_zoe_proposal.md"}, "689d4a26-d2c9-4837-9510-c4b34706fd37": {"doc_hash": "96c8a768cc6b2429898ef80c00e233e639d3e4b958d9b5997d0d8375e7595fbc", "ref_doc_id": "main_guides_zoe_proposal.md"}, "9b4b2684-92ce-4f55-916f-126bafc130c1": {"doc_hash": "9093566a763f0a46068fbab47f59d720bed7701296c94e1d2d476b16749e588f", "ref_doc_id": "main_guides_zoe_proposal.md"}, "9536fd22-2ff4-4b29-a6e3-d048ebef8616": {"doc_hash": "8834f5643babfe19f172841364222f546e927c32486028750b213f3c33e59cba", "ref_doc_id": "main_guides_zoe_proposal.md"}, "64264200-f916-4b40-b173-2eda571743d0": {"doc_hash": "7d35cbd25d5a9ddcb43674fee3a61d21183bb0eb2944b98f738eb29d7594f000", "ref_doc_id": "main_guides_zoe_proposal.md"}, "1409fcfb-389e-4f8b-b691-38c6236d338d": {"doc_hash": "c01605e380471725799d2bcdf38a83c87ed369bd81d85fa6b8cbf21f56cb3e05", "ref_doc_id": "main_guides_zoe_proposal.md"}, "187014a5-2bd6-4952-bd1f-6ed5b09168de": {"doc_hash": "c7d1fc6fd7b5c60e9208f35f00263b0dee8bdfa1243a4337539b2fc03bcb68ba", "ref_doc_id": "main_guides_zoe_proposal.md"}, "9548336b-2e1e-4ea1-8f8b-ecb9235b3359": {"doc_hash": "0b4961159a20c767d36a4c2215d5b487643c21f5293c57fc39ae8b0f421dae72", "ref_doc_id": "main_guides_zoe_proposal.md"}, "b4f40d72-7f03-4671-913c-02622c52889f": {"doc_hash": "6b969ae7c1f1c32c496f5616ec8d3cf34aedba9192855a791eb8126c64ebdb0b", "ref_doc_id": "main_guides_zoe_proposal.md"}, "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c": {"doc_hash": "881372e34765dc3303792827d3ba50fd135c47b36621963fe7d1e9f41ae8e4d1", "ref_doc_id": "main_guides_zoe_proposal.md"}, "ecc0d59e-129c-49d1-82f9-67cd95431555": {"doc_hash": "5cda0838c5f016b4c0c62d22db3a0ec60b6e68b1e3c0389cd5a19185dab4cdd9", "ref_doc_id": "main_guides_zoe_proposal.md"}, "e6ac5f46-2774-4bb2-a824-4d3959f7aaf4": {"doc_hash": "02847596b259c0b204ca01364cc3bc3de52eda8f006d8e130fb5e47bd604e8f7", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "0f1283b8-96d3-431f-a2b1-d939db5a31a6": {"doc_hash": "fef603c31709f4079c6016922876c1085e1f6d148e3f68bba7f6e22d64af7fcf", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "ac7a3503-e2b5-4197-90ae-a352a12a09dd": {"doc_hash": "1bf9f66b7d0f058281378839b70493da5d5bc5b312752b562ce75b1e3f71ffbf", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "64d2cc9c-8d52-453b-acb1-1b129c3e49a8": {"doc_hash": "890064bcab7bc7ca3650e3bdabaf88d60de78b5e414d207792b9e16dcdfc1ed0", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c": {"doc_hash": "3c470bfc419e113ff6abba349cef5dacdbe5c33afa32bcabc6ac25ba513c8b1e", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "cb5bba8a-ace2-4253-aee6-ce48f1991a64": {"doc_hash": "d98cf698863e336ed22538abb7035493602aed5fd69ae4cb97caccf2dfce9282", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "e40d6e18-8036-47e6-942c-ed09b1a22a65": {"doc_hash": "39c4c6017e6f91c5fa93be151b4ee49a05e22d771b6292475957a79d594b6427", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "07efedaa-a5ba-4035-98ee-a79386446c9e": {"doc_hash": "096e38d85789f146b386220c44e8793d776899e1522ce2008ca5846e58cd9926", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "a7f51be4-aff2-433a-97f7-8d566a40100f": {"doc_hash": "4e3984e31aa5948cf70d0c2b29dd8d88ecb25333e4861b8ebb7a54e272798644", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "4582780d-dda8-4757-b147-efcbd332a744": {"doc_hash": "ab2e30780d8935a5411bfe9f967ffb65ebed5dcf0bfd837c67eb311ea7ea22fd", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c": {"doc_hash": "5b07cb8f637f8ccd115557e735c7a15e07c615846ebc164150fd874c85f20c7d", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "c021aa2d-f094-4db4-b4ed-1661a63b2036": {"doc_hash": "ff924b0271918c7dfdb908fa39928c54537a6fa650b2969e4f9996ff71220a6c", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad": {"doc_hash": "c85cd1131b40068aa531365210d5c3a8a350a765fb43de80d3b6aaa7dd9b468f", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "51327a8a-f060-4642-b85e-0183bef2a412": {"doc_hash": "6a119fc82491a9e089183cbfd6bb2701818a6e940634459edf1e94f3d1145c39", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "229421a8-22c0-47ba-a5e9-a95669b26a7b": {"doc_hash": "149da0e7600130d338098aaaa79ac8004a6e2eaa61dca458f84fb4d73e77df92", "ref_doc_id": "main_guides_zoe_pub-to-storage.md"}, "800fcd38-a17f-4e3e-a4ee-daff24f517be": {"doc_hash": "cb004e978fab9d454342bffc99b9d06116f4af31317bda64827dab21d7b73021", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "71129f3e-2431-4e33-884b-66ab7779a34a": {"doc_hash": "4503873576fe2bfd8f7980766dac408bc632793d086a9e3eb99c66acbb0a5c6d", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "ce365aeb-e6c1-4528-96ed-9db99a5f198e": {"doc_hash": "7428a2502cefa73d7e4e6b20b758fdbbfeaa3c68710cf98ba18f20a5e354245b", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "a20f0460-d23b-4772-a956-3805be784e55": {"doc_hash": "4ea2264a4bdb1c6d9284cbd061027ed688a99452b79db196b17099d873da22bc", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "67566902-de6d-4d0f-b8f4-d7001b3eb389": {"doc_hash": "72596096b4ad0379d228559ed556e3afc8f51e83f6663abebdd560f6c9dddf93", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "b2e6e495-bc00-430e-b8b7-48bf9756f477": {"doc_hash": "d8c1d2485326f600116ba7f1cd6a2c841a3327d0b85e570944c6675de40b92e8", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "c54a7d82-b094-425b-a882-6a889d3379dd": {"doc_hash": "d7e3e49692fb4cf7cb4b964a201e39a89fbe18c1003ac884c3edd4bb063bfc5e", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "3e93cf64-fcbe-48b6-a6f7-f5381b863497": {"doc_hash": "bea19b28b1c7d1bc69e361701533605e98cd2c1560b4642714dcbd1ef45f1b14", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "b3b77662-6745-4e9b-ad66-c8dd781f13fc": {"doc_hash": "ecc26b12b88281d06cf9602ecb388d8bd531dc2814a186927a97efd6bd9922eb", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "3916d525-94a6-49cb-8264-44fbf8f67092": {"doc_hash": "36607eed800d375b1707c124a31b637fd8cea3b348d711aa3f406a4151d0a27d", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e": {"doc_hash": "7166c0192697b8494ffe62014e9f632baf4881ea2a6358430fa901de9cc5e59a", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "e9181861-d639-4b05-827d-b13c1af9ea85": {"doc_hash": "e97411c9aee581dfe833ea9fd13c77b11db9ee66ced5dfd73d9467170278b47a", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "ecbd568a-35e9-4fe4-ae4c-920437e24191": {"doc_hash": "f747f1369830f00d712f1dd314e0763e7af974ab3f00c947b692733cbc7a690c", "ref_doc_id": "main_guides_zoe_actual-contracts_index.md"}, "74b39792-f398-466c-8839-bfffa9e060ba": {"doc_hash": "be4e8a5101cf8f96e30b88dfe69d6808dccf9038c48e5e5c81b00d3d6a37f3f8", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "c6230462-b827-4246-95f1-f329ad4ab5f5": {"doc_hash": "590bd976379a8d2d5195a67664281fc0bc2f5ff2b98fe2cb3cdb850c9f36f8f8", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "1abf9c70-4515-4097-8bf4-78eb89e0b46f": {"doc_hash": "9422b3640618eb9aa50c1dab851134a6452c1e4eafd10ded7140d7810510d81c", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "1d62fb75-e0db-4029-9c9a-d7781d62269e": {"doc_hash": "6b12db714872dfe90799ad27ef1b3b2f89bdd74cf900601771b47b5a0ed2634e", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "7b09f046-cab0-4483-8775-694006952cbb": {"doc_hash": "c53a271f94bb48394ca788ad5c93d248935d60d074805f0cd51545dd09db3fa1", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "e34d8971-e18d-41b8-abbd-8adbc95b0f58": {"doc_hash": "8cdf059892c1f10a08e1c419d5d919a1b4cc1badf23d2d0b51ec710b6d182e01", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257": {"doc_hash": "44b12caca87f44c0c14a603777ccfa6b424a83949ea6c5c32a338e84842a6c6c", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "5f5d8694-87ca-45ca-8388-813699441302": {"doc_hash": "4b1567c7e7e01868b2a4c8cf3a48f7103a9a9a4d9d2ad9cfad30990ca1f59fdd", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "04ecab38-f089-4e9b-8f12-06fc84814aac": {"doc_hash": "e57e35fd6cc8004d1f5c6dff6d74cb147547372eb6a4fc11b6ce74ee4c57c30d", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "f40a0200-145f-4c79-99a0-d3e2c1a14baf": {"doc_hash": "fc3c4c9ffdac38756f3a80e6fbfb66e92b32055702c94ed414673ae0a596a94b", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "5747a033-5240-4f72-9aae-b80cb6424734": {"doc_hash": "cf9757d8e413165cf5960132a3072d86cd8485843c7facded0412496720380c6", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "7c8e374e-d445-4ee2-a305-e8fa52a17998": {"doc_hash": "5118c51a6566d07eb1ac4d46af2704ea57db113a6d29926cafff50f073fdd0dc", "ref_doc_id": "main_guides_zoe_actual-contracts_PSM.md"}, "34026042-91ca-4144-a120-f6a5768574f5": {"doc_hash": "348a65e1ca60348b3ee41e5c192faba18467e3a7c076c18965b0b7bea4808c45", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "57089aad-3126-43f7-8556-5366b146f914": {"doc_hash": "7005c0d105cc1e1b079600434687ff70c287a3f26d40be972723139898c14f89", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "80210bfe-784d-4699-8afb-17058c35063b": {"doc_hash": "f94e92bc1452fa4a3112907ea3e75e5291259a0ba0b4628c4b7d16a9722436ea", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a": {"doc_hash": "b1924ac49f84d9541d2ac80c92a32f1289ba707af1c63886327f0e32790bff74", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "9b3bdd1c-6af3-43f2-86fd-4f542644768e": {"doc_hash": "ad36e8f4dcbdd6b71bfc6626d3314a1772a3c0d61a66c4227ee092978bbfc5f0", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "bb07cfda-c0ab-4090-b980-8e2909c625e3": {"doc_hash": "54523b94fc44869aa440e3e99092fe138efc8274501b3bf1cef76f94e70dae83", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "466f97aa-130f-43cd-9cf2-5dcffda623f6": {"doc_hash": "4c91796154767b09df63135613632817262f7f0d793ca5da5fe78ed273ede727", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "ab396034-e347-4a95-bfa3-ddb5267f9506": {"doc_hash": "e11de9cfd5a94a4586e587e1c12022b19917e10e4ffea565874d7f202eb297cc", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1": {"doc_hash": "3135ecf0efc665e25806eb9bf24cfdd603034a34637fcbb33d006e25017a7785", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "4e27c004-ac2d-49c0-ac47-230eb90d7d82": {"doc_hash": "917348a43acadfcc9682870c6e695e3e396cd8d09154476763302b12dcb9ec80", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "40663f9d-3792-4620-bbd3-3357b4ba34b2": {"doc_hash": "ae83d8356f768486b92586a74e7c8c76bb2d41b94a557a797a0e72928ef6b044", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "408c07d0-c24e-4713-8de0-576781f65b9d": {"doc_hash": "e1216d1d70ed83327fb9cea95c5d277dc13c9f70d2240eb51786d80014f7e196", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "e7220566-12e3-4db3-a61a-72e1c96b206b": {"doc_hash": "35bdb345f669d11022606f97faf31d807340424ebc46ac88b662c22d6abec9c4", "ref_doc_id": "main_guides_zoe_contracts_atomic-swap.md"}, "8343a08c-95f4-47f7-8cd8-f8f045eba1ec": {"doc_hash": "e60c086ff26aa7e33eb748d24c57a322946ae4fdc539c018d38567e2f765c287", "ref_doc_id": "main_guides_zoe_contracts_automatic-refund.md"}, "04e63339-adc3-40f3-81f7-3f35afce4cb3": {"doc_hash": "c9e8c7f4899acbd4c6db8a515f2dbb98448450229de4cb83ec47bbb27f7d0254", "ref_doc_id": "main_guides_zoe_contracts_automatic-refund.md"}, "e80c0345-da68-46c8-bf8d-1624c324c4c2": {"doc_hash": "f766662266b2ea882c0a007c40796d85bee5101a7ad21c312a88413940687c4c", "ref_doc_id": "main_guides_zoe_contracts_barter-exchange.md"}, "edde4510-9302-4286-aec1-cad5a4e9e9d6": {"doc_hash": "823c4620cb6b1be29eb4013eda63056639d9ef1dfd64c7748214065a9290e5dc", "ref_doc_id": "main_guides_zoe_contracts_barter-exchange.md"}, "dcb8d305-5862-44a4-8cce-8f2d06804f73": {"doc_hash": "53411e483331425b7a4d4b55bedb7828d8eae33da0180b1f3d08756af1ae790c", "ref_doc_id": "main_guides_zoe_contracts_barter-exchange.md"}, "653107d7-6468-4e27-93d3-f9546c1bea8e": {"doc_hash": "a0ea61013273d32a9ab5a00a6ee7ff93cb8ccb683df0d345db66a35c69dd4123", "ref_doc_id": "main_guides_zoe_contracts_barter-exchange.md"}, "be0756c1-bdfd-4af5-b633-7604b70e92aa": {"doc_hash": "f3e2f4a8c4be66f1b0f9e5e468707d5708a915d8ff3308bcb0088911536fb61e", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "94a837e1-b42f-48e6-929a-19fb9e4914ab": {"doc_hash": "1b39b8debd4e8ceeb83c04dbc0499e4d30dff8bf15755650b1baf2f4111af231", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "8c1f6a99-f08a-4f82-9019-013585ab24f0": {"doc_hash": "5a6ee403f3b4a262fbc1ef2562610867fbd2561af448e6e3592e59de9cf179fa", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "0054035f-40dd-4543-bbfb-1a7df1fde45c": {"doc_hash": "750b1f72639932e09f1e1f73fa83e855603eb9023195257c7f250bc7f45f1b75", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "32a0331e-18ff-4a7e-a515-231792da9460": {"doc_hash": "de45414b989d094ed8ba5707b5d52bea1a190ba3dc07c594f5495700292febde", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "ff36d66c-db64-4242-a7c0-6bbc83051271": {"doc_hash": "ff75fc40a2ba06382aa70984b91fac676fd3fbba622998a88b5544ca2e091732", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b": {"doc_hash": "8f8c1ffd28cf517d685af8d94413acc4337badea48df721f6d9fe47c4dda15d5", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "e9eb1c1e-5c5b-433f-8255-c6492582a250": {"doc_hash": "361e7b7b8b68dd5cb355dc45ab3ac06204e4cdf011920e272cdae00cb6c54160", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0": {"doc_hash": "e5353f567b4d4033ae291949b1fbf973b1f38ff61952dc111575481be68f6bc2", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "b6093a66-e2bd-4ebb-9392-d95c5b0a2804": {"doc_hash": "795f46b2f83402e898e02e8bbefa1d534a91f49dfd6ae595150caa18d425e275", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "c77125c0-01a9-4163-bbe1-9bb314bb6090": {"doc_hash": "428c323de1d859a59b7a24c8394a8340c666d39901c0678877b64d2ff356a496", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "fd7be30a-9cb0-41d7-a769-4f22e8051848": {"doc_hash": "7186c50b3e582ce6005b9e91675410cb0058e43db8ab7046e15215850e8ae367", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "eb6a9c28-7688-48b1-a903-49bb1cbc0c49": {"doc_hash": "fe95b112d0cbb6d82ab74bda0c30f9ab2102f954466ced2e1ceaa1fcd9915e9b", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "81749b7e-74c7-4931-92ab-76ad0f0c7a67": {"doc_hash": "d1f4348a7570cacd9242064355fe5f33b73b46d451c00227432fea70cb8d4403", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "e65dfb64-d591-4171-8512-fac90d5c8d09": {"doc_hash": "18c1208a1455c3f755f4d9155f4cc87ff9f64746b9cbe22aa09cd5a952f5cb70", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "fd943579-6e25-424f-9faf-4332f4c5cbdc": {"doc_hash": "33ffeb77b30530b2785e13d6a3ef7d8a5a901cc4a6843ebff6ef4a16e2875e39", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "00765cbb-04ce-42fc-835e-ba98244f4ae8": {"doc_hash": "7d857263b04badc74bf1bc39b0a048841cde21cce46743bff51e496d46a58e21", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "d53fc42f-cc02-4317-b85d-5e0f46fedecd": {"doc_hash": "c67ac040b749cbc033ebce065aae2d3ed37b8c7d8b9a874bb30288de2a64ccbc", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "0deba041-2b98-4b07-9b3d-58078062076e": {"doc_hash": "58a63d43487a53623d472dc1143aeb82deb3e42b86acbb0fe8d0de2156d281c5", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "2bbd63bc-1917-4d4c-be36-b18977d56015": {"doc_hash": "a041fb0df13043467fedf5f3214beb4282e89c76e47d615c2ae8e966e797fbed", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "7b9b630e-b5cc-49d0-9b90-8ff464210acf": {"doc_hash": "2ff1a1faaa84082b663b6fc72a8da7886d6b4f6075237e66a7c5145a10acda60", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "4f771985-c748-4e7f-a026-bfc79f8a8d3a": {"doc_hash": "e13061e18e1e7dd904ed5540c8cc72c654e109777fe47516c9d5c84fe26a7638", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "8f571ed5-e033-4175-86e8-2dcf2e121e78": {"doc_hash": "0d8f6ea274906c6f938091d2abb5c7c8c41303bd749393ec30bc82d315b8b58c", "ref_doc_id": "main_guides_zoe_contracts_constantProductAMM.md"}, "5528ba75-4289-4f92-be98-0eb21fb4f846": {"doc_hash": "f37b1a320c55e38ea82e8fb7b32f189d55c20dfcbfb7a2a710f09ad215e6ed1a", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "6bedf040-8104-4a0a-a530-56ae747f98ca": {"doc_hash": "b0759644a93647778e6a85f2ee2cac699bdbc9c56e2f496f6cdb27f7ee76ec8d", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "4ab0a6a0-2829-4608-96d3-a84bf9acd77b": {"doc_hash": "fee8b4104ffe03cdf89c5c99e2ffa4ee10a2afeeea7e2c27f20fec78554b191d", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa": {"doc_hash": "f11a1215e636c6c8b59c1ce132beed3794ffb5879d4ff2701ab819817592f0be", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "bf89735f-afb2-4048-a751-593d8f82ed96": {"doc_hash": "5d547f5cfef0d719de7ef9c58f58c214baa23df4339100ee2e264daf98eb08da", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "c00ef53e-31d3-47b7-b75a-5ac7ee936e51": {"doc_hash": "44a5ecec3d1b520680eeb8cf198f1adc522fe0b09f52e80d837ac4d7d489f9bc", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "7bd2a3e6-ea95-4043-877a-63292b2fc3cc": {"doc_hash": "d4af0b6f0b9787a698c866013e5c77f20d61fd8ef0407ead3c379e1a7e77e5db", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "c918542d-7260-4db5-86dc-3ecee4a5d2c3": {"doc_hash": "dbd76ce4c677611796f41ad518b2624d322261e4303a76604f168dad65d44fc7", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "1da01393-8e2f-4d88-bcdc-1b92a10aebb3": {"doc_hash": "7706e149a04de818d4109069da15577e5ffab18b9c0e43e2bf7afebc5ee7caeb", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "49c2611c-d176-4860-acb9-1df178fe68b5": {"doc_hash": "15ff29a279109016af33e1ec35f38ddcd2164b62ec2cdec523c617f55c456dad", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "7896cacb-99ca-46e7-863d-ca5875908abf": {"doc_hash": "cfbf30fcac5731f392812564d293e358b1e55efa2422fbdd4580aaed33e4603f", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b": {"doc_hash": "4d8e743b8f702e3c62ee112c448913fe25a8dbdcdc2115228a5fb7f63eb8ad4f", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "aa978545-c42d-41e6-8148-e9ecf86205a1": {"doc_hash": "602f426f6269a0103b1b718d37996ba70e3fdde06320cb9090c51303b4393a47", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "55c29ab7-0801-4377-a1c1-26792937ecb8": {"doc_hash": "38bf4d6c5d9479cfb39dde64e072f555bc4578c8acbe9b2e58da3c90a593ad5b", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "8e32e14f-fe7f-4490-b15a-dfdc3a505af1": {"doc_hash": "97bfb1fe830a7324eeb8f6335096d39b069fdfe7533d9940ff218121d0619449", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "e9917bde-1fd2-475b-91b3-1b473c88651d": {"doc_hash": "265bbf92c48049a629255958087a3bf7d0234db8b6e73d3c66b9e9609089d5b7", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "5697ba6b-aade-48ba-8168-0ff5e515c440": {"doc_hash": "58ad7e42b1f687e8f915f04c13f645e1ee9fba791372c151ce06b8ed80d43ade", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "a6ba7017-3719-4e86-a827-6c0734ce356f": {"doc_hash": "9cd42650f25754fccf940dd94e47e66733fd53ab2a6072fe2261c4d84f303c10", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "2cca375a-8f6c-4582-8347-e26704f51c8f": {"doc_hash": "eb504b463546af34eecdd0514380c574715ad782fe20e6675b06ddfe18eee50b", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "b2551d14-d9cb-47db-985d-b7593d1b43d8": {"doc_hash": "0b1885702dfbf0dd5c8cde44c9833ff463839512121693efd3e8adb269f87266", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "203556ab-06a6-406f-bba4-ff870102f3b7": {"doc_hash": "fae6228e27faaeded8c2eb7fa13f6526716ecf282186ac96613135d45eec6feb", "ref_doc_id": "main_guides_zoe_contracts_covered-call.md"}, "808040a7-49bd-4ba7-b500-490d99240e49": {"doc_hash": "f72e5638a970d3eedd0ddcd975effd3355ef44d5dc15218bef61cb17027bbe80", "ref_doc_id": "main_guides_zoe_contracts_escrow-to-vote.md"}, "e5823a99-d9ba-4e27-b9f0-8ebf8779f804": {"doc_hash": "a2bedf62ca4fde11ba1c31f9970a43f3f86917982e930ce3d1b973d55316c333", "ref_doc_id": "main_guides_zoe_contracts_escrow-to-vote.md"}, "b3e7ab5c-0f7d-420c-ae21-adae4500abbc": {"doc_hash": "784eeee6058e97898071581c43e1462602183b51d175aa2fac92136754e204c6", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "56178aad-5c4c-4b7f-a96b-7624e1288e22": {"doc_hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "75653472-ed21-4a1c-95fb-547ed4590110": {"doc_hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "d27f3e25-2993-41e5-bf66-9eacfeccb060": {"doc_hash": "aa2ae77f7300d5cbd691bca996b6bf5d46816a73c1dc91de27c827187a074519", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4": {"doc_hash": "3c3ceb04e97af42836b2ac38bc5635a7e0224f4570c8a7717a87e10bd1001374", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "8ed538d4-ea2c-4486-9bb6-a7795e0f5472": {"doc_hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "b2905762-b558-4951-b33d-a9d65b9f8756": {"doc_hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f": {"doc_hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "7e9d9586-9336-4f14-b259-1bbf838814dd": {"doc_hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "22eef47b-59bb-4a7f-ba88-90731f72a5cf": {"doc_hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "7a3bc5a7-c869-49c4-8ffb-e573c923e297": {"doc_hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "3078f058-81c8-4ce7-a448-055ff161b282": {"doc_hash": "777fa25a179f2272bc19cc8c18cc16e1d25dc14d82a4b22f6c17e6087d9690e8", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "f56f8130-999f-460a-b021-f4efa789e3bc": {"doc_hash": "517fa6e5044b1de9f364c633dbd5ec8586d335dcc475e67e3907b653ccf9ad26", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "195c9ee9-c6b2-4786-b7a2-b7698136842b": {"doc_hash": "abd090f49c90f191bd26d698e71b943300080fb4178b75916ea3bfb69c322dae", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "21b79135-8141-41d4-ba9d-7e4792adf897": {"doc_hash": "d5c3457aa951f33c1baff35c48268ce4f87e5942f2ae1e8d9ecc35d776617f84", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "d79f6f3d-d55c-4d07-8ddb-d7db38d902da": {"doc_hash": "2ed54c80fafee4bc523dd354970345a9aceb96c9f2fc61b6d1883129fdd6112f", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "2cb27a14-39a6-462d-b60a-c271226e6cd6": {"doc_hash": "b3f9176064a429ab4c44306e49f91948440b6d706bdd5c04f1b3ccaf0151f1c6", "ref_doc_id": "main_guides_zoe_contracts_fundedCallSpread.md"}, "ff46ed0a-6a2d-484b-aa34-3dd3f54865c2": {"doc_hash": "bf34ef75645ebcb2f787cc15433e2929c4616f1398fd81cf571f9fa39dd72fb6", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "ce1cbec8-2232-4bc8-b845-84e891a136c0": {"doc_hash": "93f56a31093002cbcd9546c911c29fd5e7d09895d54e0cdf00105d38158a1a9d", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "0faea553-65eb-4f30-a7f2-cc2f161bf21e": {"doc_hash": "4b5c2cda61223a7ee628e6d28b11654b89ba6ccba4c9f66673cb901b869b4273", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "c9612500-f561-47c1-8d07-18ab4264e307": {"doc_hash": "dcdac75e507b7c96f8dd81ead03ce07b379f02f9e4a30d1b56ab507e984fb4a4", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "2c63f985-24cd-49e0-985d-6640e5a099e5": {"doc_hash": "8fbe98e73717ee8b2ef766fe8357ac96e80dde364badfae483cb7ab0df26c2a4", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "68cb18b2-4326-4988-94c9-46da3fdd16b4": {"doc_hash": "76d20da658c81ad6dbd9c9653356f56a9a089d1f0c2b792502f7a8a5c23ad7af", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "311edd6e-cf97-455b-b4c7-903cf38014d4": {"doc_hash": "6ee51bf016a5c7bf6cbc10126aa9c22e58577f60d900caf6c0e57f1016d50d03", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "fc8a1475-248f-4ae3-9b89-733f3efe34c1": {"doc_hash": "f51eb3514c00e9f6c1be8dfccda38245066b8dbee1ae5e924b99e20fda91e07a", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "01b9eb8f-5150-46bc-8001-ae2d7e0fa132": {"doc_hash": "a3dee7f2adf056e90aa20fca4d6c327aa9a89ce8dcfa804073cfd461db6e6049", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "2d172f9b-d05f-495d-a2ce-5e145c97eaba": {"doc_hash": "bac95cbd5748dfd3bf0f994bd85d54463aeb496368c87b834d2f98c441cfe87a", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "044bd892-0028-4881-a951-7a5e3ad321c8": {"doc_hash": "0a2532828762dc874403c8caffd38eef06e3c286dfa29c50c12fa6ddc8479ca3", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "dcb5ecee-134b-4493-ab05-9b5c1fe476ae": {"doc_hash": "a5b935c491646bee40a46d7856a701ab84c3124bcb725e2cc41daa8ddc5fffac", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "76e48a48-c6f8-4943-bf3a-ecd803a5e835": {"doc_hash": "9aea42471a203c7383e372d8918957fc03838683f7cf245c13b4143ff3e2f8a0", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c": {"doc_hash": "014a2bbb3ba6bff86ff75fbbd56e73f7305fb7b2fdb0422ecf5aad17a8c96ada", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "e49a7b40-1d1e-4adc-b42f-96b41b156160": {"doc_hash": "b15f5386c5cd4b8c9849219bd5a20b0c07cc0d5781b02f2f555887da39ab6701", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "fdb12170-732d-421e-aca6-2349db6900e7": {"doc_hash": "2d05803819fb465c2a90f2d3dcc59a3e3cd46ef83fdb0dfc19e1ddc3d6e8aa47", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b": {"doc_hash": "8566be034701f636c32a94eb21e1cbb33037a882df6163427d6e502033883829", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "a74232e7-5df6-42e0-94db-184db249dd4f": {"doc_hash": "92a00b6f3cd625a35403dbbd27d1ef00d681f450a7fbfbdab2e1d1b3a5dc64ca", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "098c978a-3c61-4951-86a6-79b0d58b75a5": {"doc_hash": "a5fdc744726c1cf52f9dca82decbd80e03f25fa940989402dc7b58c31edfbcc8", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "b65b881e-6752-4d94-a964-c750e73fdcaa": {"doc_hash": "93ad9d26862f77dd8bf8acafc4bfde7cc2397e103df22f340db3d7251339dc8a", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "c8cff053-c01a-4754-99b1-359faafc4f6e": {"doc_hash": "2626d3f4ff8f57705c57121869839734f48875924d65133104f46e12105b0ecb", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "d027edc2-734d-45fa-b79b-9460cba74748": {"doc_hash": "1bb2a35165d4f72a69da5525950b37a247afba2864cc1bc7708a64f21df539a3", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "7c7c05ee-721a-407d-82ba-cf2ab84c3841": {"doc_hash": "f76bdb191f041b1c050c66591cde550da28846e6f4be65cfcb2ebb4e28421c65", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "44b2f995-f555-494e-afe2-113038e152d6": {"doc_hash": "ba69dde2738a4bf744a2cacd785057cefa7fb84506bcf69e104d658bc9e421f0", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "71651906-5549-42ec-bc2a-57ecbf05ae19": {"doc_hash": "fe301e9ad0e4c07fc0175515b2cf7ccc8636796cec9c85525a25457910c17a4d", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "ba2cd297-2833-435b-a560-0a609f583cf1": {"doc_hash": "85412a218ed3f87ef0fa90d3e4e970a5c61d327686c0aca9dd830b6b9968dced", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "80e7c181-e67e-4ef6-be38-c865f737a055": {"doc_hash": "4ca31d4d7a73a7a92f61c96f6d37789474eaf79312b1d93cee2aca9590c531c3", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "70e92f09-dfaf-42d6-a466-2c3830b5b56e": {"doc_hash": "a5b7243659b92c1e5c0f50f7c3c0940566672cb316e8a9b7523dad16e2583831", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "d7bc2531-fe41-4370-adee-a225c180c443": {"doc_hash": "77e4b6269a38541cc9f083eb5b966dbdca282c0fc8d687b78a8a5f12c55a51c8", "ref_doc_id": "main_guides_zoe_contracts_index.md"}, "50c252e9-b13d-43d7-8004-79688394c142": {"doc_hash": "a84cd682dc53cfbfb34843d47a3e8d9b58512d95a7237abcefa868fe77ceb390", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "51b26995-073f-4e51-b6ab-b3bc0450b44b": {"doc_hash": "efa71768f66d34563375ef6b18ffadbb676f58e3bb2f7ea0f59ee7a5d30a7cb4", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5": {"doc_hash": "4d000a93e0cd1151ff95d56cacda774ce069659b15fa49ba0b5be06340c29510", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "4e1c54cd-089d-44ed-9270-25f1b4b9fc29": {"doc_hash": "e5000b6d219099ea59c77ca8ff1a141c1f3db9f18c3dd1f8c08be5872033c5f4", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "6819f3a0-2afc-4d2b-b995-a70719cf7a60": {"doc_hash": "698b382643462fb84d4675f49e3136cfb45ede1f407f394f75d26660efde6335", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "f4b96ec6-8966-479c-a828-1b57660e5caf": {"doc_hash": "61d1e8785e3ca4039d20841fe07fae21f42fb068b882b28b3f20b9dc1d69ef90", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "22dff48d-07f8-4bba-a71b-290e191e2646": {"doc_hash": "d8a158cb4a691c5c38473c1d27d0e14bedf504194ed4f24baaeb3f22a6e1f739", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "e0f8b8e1-03bb-479f-afa2-fccb135f56a2": {"doc_hash": "d6a38a711d3d7ceaefa1da102a1df10799a94b4b2d794615fa428bea7613a5db", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "43530b1e-31b9-4855-9c82-51c3e2e49271": {"doc_hash": "84ec942da17739b999685a60e2ecf7b394c29a1aecbe05c453b82210a598824b", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "18822bea-53e7-46e4-b27d-6719fd2b6b1c": {"doc_hash": "67b0926636c2d98238be548c44dab8ff2677eca02b71530aba52d307e242afa5", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "3c2ccf9e-a37c-40f4-80c4-889ab77e90db": {"doc_hash": "6f594cb3f65f184f3033c33e2e08a86827778d831677a7d591bc7928f5e3d9c4", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "df15afd5-a501-4e7d-9300-7d95e4f8b23b": {"doc_hash": "8add0b58db05f9978e03c21ae082eb8fb419a8f05a59f1bcdb9f6087bfbee18c", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "99780e45-f5a3-41a8-ad39-35fd5345eb93": {"doc_hash": "26783482abdbd5ba09b7361bee37c2deed9cf42801f5673abb09d4fae226af1d", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1": {"doc_hash": "47b8c36091a83ed1e6afca39ceb29c8989a2778be6526a3cb3df92f2fbf1fd0b", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "fb33402e-a041-4748-9dff-098de29ce753": {"doc_hash": "5769a1947d6f3eb8afc84bb264b7c6359a754d3365d04b7686c655b0c447d59e", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "2ea39821-ded0-4464-a798-a7abaaafe784": {"doc_hash": "ce2b4a5d11cde5da1601bfe2cd6c33dfc20df9b5aa693a9d7a2b25eebeb8f275", "ref_doc_id": "main_guides_zoe_contracts_loan.md"}, "204b6927-2f91-40bd-b70b-6f953b89135a": {"doc_hash": "440482b6654ea49f1abbdf097ff464da5bca6745a2f76de1a95654fbd113c900", "ref_doc_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md"}, "0213c790-69a8-45bf-95af-29ada6b1d4e3": {"doc_hash": "fdf4263fbc22f2696ce57a3d2a8e551eb29b1671520cd448e435ce67db400d81", "ref_doc_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md"}, "d9057436-354a-4829-97dc-3048c1f28b7d": {"doc_hash": "0cac6605214db5bdef1852044746491f838f9a2983ce0466f5648a43f57819cb", "ref_doc_id": "main_guides_zoe_contracts_mint-and-sell-nfts.md"}, "65d809ed-344c-463e-b4c3-1e277f904a03": {"doc_hash": "bb776ce7c09711de956181bd89131a5bb5d224648fbfea7379186844bffdc809", "ref_doc_id": "main_guides_zoe_contracts_mint-payments.md"}, "9a5016fa-c2af-426d-a3ed-12aa27677363": {"doc_hash": "10e0002166c4d87acd2a0d581764cb0276f8cb8c50f0615d914f98386e4c480c", "ref_doc_id": "main_guides_zoe_contracts_mint-payments.md"}, "03eac781-8fed-4de9-b74f-169b60ba76e8": {"doc_hash": "a0d1085b535b2b26775b9cb0fa89ec07710e93d314fe21aa1fca0e0ba9236e5a", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a": {"doc_hash": "fbedd5c3f8ae6f557dc41932dbda5abe80bc953830c645907f7b36f3f4faaac2", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "960949a9-59e0-4ca3-a09e-c05d7ce54a25": {"doc_hash": "a5d207b91b9f85a38633ecd581b50eaaa0ddb8d88c7ac5e7fb071060f2c08ff5", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "41da9c62-7c68-4f73-9b69-1e07ac76e78a": {"doc_hash": "9edd2f396e7dd9dde8b1417490f719082539a33cf70062c25cfc3d94e6347574", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "cc4e481b-7f68-4b42-85d4-7e50e512444d": {"doc_hash": "615ca16d7992ba7ff91aa88735b57e8202bb4c32e2a7fcb19ed069890ba7af97", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "c11728fa-d09d-44d1-9a12-26b33663a2ea": {"doc_hash": "845417640bf5afa567bab2eb39a156d0fad72043e6589cdb174b35cfbb516014", "ref_doc_id": "main_guides_zoe_contracts_oracle.md"}, "3415eb27-e730-4561-9338-a65def74c750": {"doc_hash": "862bf3354549f0973bb891acfe5ac595879a0b682fe73aa55e554fc8e997603f", "ref_doc_id": "main_guides_zoe_contracts_otc-desk.md"}, "cbd3ec65-1600-4050-bfb7-55c306caf390": {"doc_hash": "9bc08f2e28df3c827d3e62453f93bcaa958195f6bef53ffe87877ce1141df81d", "ref_doc_id": "main_guides_zoe_contracts_otc-desk.md"}, "dfeaea52-7c8f-4005-b932-6a47a6e1016c": {"doc_hash": "688a04af569fa4b3a62a84b9f62863dd7d1d97e375901e16a3963f35c31ed5e5", "ref_doc_id": "main_guides_zoe_contracts_otc-desk.md"}, "341d50f2-f3c4-4b9e-ad19-fe072eeba605": {"doc_hash": "33a1c70a831aedce33b9bbbaa94f6b9b72df1359ad524a38a1e55067102a9740", "ref_doc_id": "main_guides_zoe_contracts_otc-desk.md"}, "ec389590-e450-4066-b625-d852574ec304": {"doc_hash": "6e03e8f71798b3e570781c3cf2949da7a0dccae1b59be2344baa651161d59aaf", "ref_doc_id": "main_guides_zoe_contracts_otc-desk.md"}, "0f9c38cf-e2b1-40cb-9590-9ced2bad9134": {"doc_hash": "57a34fd63a0cc2d7f4cab7ed04322f44bcf651a9c5cd97e39493f98ff09698f1", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "a7a26abc-89c9-468e-9e26-a1b6eefb615c": {"doc_hash": "b9a44607715803d4f39746405e2bca98e80ed0d91c0c280ea0f888f1ac803391", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "96f2a5ae-918f-4a7f-92e2-f1231793f5b0": {"doc_hash": "8145ffc941a7d5306ffd8b60265adcd31e0ad072833ee7e126a184d824a13bf4", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "63cfa5a0-5495-4b8f-928d-d6acf060ece4": {"doc_hash": "baf397337423e5ea1d687dd7583068d70932db9c611bb55c0641ab01a348adc7", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d": {"doc_hash": "677e2fdfee4c74be2678648476eb359c36df267bd32f5c6de5bc48d99becc26d", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "2c293e91-f608-489f-a548-a58c8f2421d2": {"doc_hash": "d4f31b2b39278da6f41bc3211ee55d2fa64cc845cdcc0f8d2a25ee8da57b05a8", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "841aa9de-4adc-43ec-b290-d02086312745": {"doc_hash": "0f47c5fb91a9e93462d9b1a4169952b3c391f8feb2fbfb7a32a9b3137a34a3b3", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "99d843f7-6578-42dd-bfcd-986db746a59f": {"doc_hash": "cbe483906a739f265b7ac6aaa5e4d9f357980d77b2b5e191d606cac7318c4ef3", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "26b26366-72db-4be2-a9bf-47736de57990": {"doc_hash": "a78b330c506a1490287184621e70868f07fbbb8a4c7ad278ac23d404cf1ba2dd", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "276de356-d3a9-458c-ad47-e7ba2ae7a4dc": {"doc_hash": "d7b958b3ed664b2c3aaba4ef613749dad51a62ad2a81bb35c5cbf7dda6ece43e", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "e343d824-9c51-43e3-9aff-05982c7e99d6": {"doc_hash": "62545d80724e1011dc2b5424328821cabff2379b741a4bb07d583501ac17ad9b", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0": {"doc_hash": "932a03d6a7ea1a3e4560e5d48a29bf3c07ba9f947feaf989827c32a432929032", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "17cf157b-6b1c-4430-ae26-a3046296ca11": {"doc_hash": "76b14addf120e409bf9425c6cd813d5b00442f9c69b93f35b591cf1de61306dc", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "319ebe45-cf47-47f4-a665-3d16a97ab6d8": {"doc_hash": "c69d5c7add4a37fc0bd9c7873ff7a44b0df563c34accb23c04ab8c4c6ba810e4", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "7f267970-849a-4790-afd9-2c57e224c53d": {"doc_hash": "7d09f9526b1a9881faf99a6488091b46029c3a94709af7acb4684e57cca8a988", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "6e6b557d-3420-44d4-ab2b-8ce3607ba49e": {"doc_hash": "a5225a0d6b6a49686f2b07405228f5cf682e294e24fef977749235940d754714", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "0bf2de8d-6c1b-4565-b1fb-4070a401b0f6": {"doc_hash": "cf1ec30066f27ca86617b8ef31234e1c69ff23fb30ccfeb76b6b0a9a4fea6eb5", "ref_doc_id": "main_guides_zoe_contracts_pricedCallSpread.md"}, "e1c61780-5f10-4816-ba82-49d29ac0f1cf": {"doc_hash": "f78ef0d09d1e0ec5c8942f7b524fd1a75f673d3d8a9d1b654b559bf631d71336", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9": {"doc_hash": "1ce21f7ea28011e0482aa09c29b869ed5540655176dd12d61e64c612fef7575a", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "bf39aabe-07bf-4490-8fba-9b4608817860": {"doc_hash": "fe407519847458809679bc89a064a838b492b80bb7af3d66039fcdbc71d30e2f", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "6a06641d-0815-42a8-8745-64244e6fd65e": {"doc_hash": "975ad471d19e117b7ae7f139e66c0aedaa1f067b7f1b963be3a323184691fcf1", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "d2e91a25-ff1d-49c1-af89-790452ed7339": {"doc_hash": "b0f4757290cdf1f56709c0a2f1c4c660649e93d47d0904acd13d40c10b6c14e3", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "36d1dd8d-4582-4bae-9f6d-d004f44cae12": {"doc_hash": "d161955b12bb05cf38061756263a66688fe1cdaa7d73c20e8e71f33febcabddc", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "983f76cc-4b88-4120-9f6a-e3923e6687c4": {"doc_hash": "c3780c6e4cf07d89e0c9b8ac8e58ff7cdab9d6059b1f9657f4b5c5aba92cdffb", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9": {"doc_hash": "e343c449a45bbfd3f913fcd32ce4c68b4c1e60d5afd1c40412cf523d22672c5f", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "c2719ab7-5550-45d5-abab-617ca93a5373": {"doc_hash": "3b608edf896ee4a1447e6def98df8b5ff686a0b7f91f31ec187570ea21796641", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "37218f79-4af1-4e5e-b459-c825071aa3b8": {"doc_hash": "c10f9f923fb40858b3f0c7b9f2f3c50ff14029e6bf65b7b465ade63840e16109", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "bb974237-f848-48c4-acec-9ed963d8274c": {"doc_hash": "9351d325030ceed6beb13a5097c794f2fa660cf2470566c7c24b9ff6b80fe5db", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "3644e8ba-4f81-4168-8d64-962f67930335": {"doc_hash": "19c40729deb08cb372922eea5f958114ec5480f37a9a25303d7efd4aaecfd7ba", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "906c49db-7499-49db-826d-cec593e0117f": {"doc_hash": "5bbb37ee23cd6a8ec3ecc39961206b9bde3b318075b98dcb4581062c420f9cd1", "ref_doc_id": "main_guides_zoe_contracts_second-price-auction.md"}, "23447c2b-c10d-49f5-9461-be753e45f9db": {"doc_hash": "bf6f37908903baf103e3f07b3616fdef4acf8500efd6fd802cda5775ca02251d", "ref_doc_id": "main_guides_zoe_contracts_sell-items.md"}, "1d89ed29-a668-4300-9bc1-0ccc33282a16": {"doc_hash": "5150310a381eaf151edb540d7685f73b8495be57c166da76d28b7921a7a8beb1", "ref_doc_id": "main_guides_zoe_contracts_sell-items.md"}, "e17584d6-1e30-421c-a75b-d7dc30fab19e": {"doc_hash": "25562c4c6219bc25e27c703ecd083421058fc53e96b878ba6918d3ca5cb540ac", "ref_doc_id": "main_guides_zoe_contracts_sell-items.md"}, "d6bea975-6494-46d1-a6dd-ad77149bbea2": {"doc_hash": "96583d470fd8789e0ce839f0e80103c7ab6a63307d115e3de7ecc7c7be3ceefe", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "8a9a06bf-95c0-4349-be2e-888130dc1a2d": {"doc_hash": "10a62cae2e0f96269ece171fb3de1a9038cb958dd45a3bee63428da2bb8e4ab1", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "4ddd38a1-890a-4392-b82f-e894d27cd180": {"doc_hash": "e77ea9a1244bc43e4106d7e30b85bed3386afa78d7a5d101a11a1fec9bdd3de2", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "9780231e-4d63-4e0b-beac-49fedb952501": {"doc_hash": "bc8611912065f39c0afaed08c58a79513b0d61df056523956e951bb9e8e95616", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "3ba47921-f294-4961-b1ae-1c9a14f23885": {"doc_hash": "c3da1c750be26dad7d7fcc91c9bafba9b6ec8414668460b72957baf823dd0bb1", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "74dcf7d1-8da7-4ff5-8189-f4fea9801171": {"doc_hash": "cff96e198319e949e072043c093a927523b2e0e8f6abbc7e7ca78aa1661bdf5f", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40": {"doc_hash": "2b4b957da3b6c32c44dd374a0ca34178f49db163e1ca869de12179d3a1ccebe8", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "745547d4-01da-4117-aa6d-ee0c10dee422": {"doc_hash": "6368cb67570af59749e797a819251bcfa15749be2265750bd8dd3ca5a51f7a1d", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97": {"doc_hash": "14499b11b3e73e82bd9d70396d47f49cc2e2a945921fa8a74416c157e11b94a9", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162": {"doc_hash": "57bad8d014de2726c89582142f72d51340a73bd14d1ecc6eb2666b2004a1ece7", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "8c6e1f2d-6e49-4fde-a275-77a71c4563e8": {"doc_hash": "239d0625814083580d762dcdee28e6c0048e9c199c96edaa5bb27160dfae0ce8", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "bf5de0dd-511e-4280-8f8d-cc0786afb2c0": {"doc_hash": "bc40d9956b0e560a4085bf7280ca1095955f3e377cf12420f5020fc1ce7d3fde", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "a4cc30a8-3253-412e-b35d-24d8d64e55e7": {"doc_hash": "f800c67be8ecdb2ceafbe4e8f0e53c46b0eb3901be03c8feb32d251e0bf6d42e", "ref_doc_id": "main_guides_zoe_contracts_simple-exchange.md"}, "113bd1cd-1979-4781-a25b-a9a91f25f95e": {"doc_hash": "fd6017eccc350bf86c23dec441e1001a60ba4db3ba289475322c857ccfd16f1b", "ref_doc_id": "main_guides_zoe_contracts_use-obj-example.md"}, "d28314a6-5ed9-49c6-bac9-96cb927e22e6": {"doc_hash": "ff608bb9273e03d5af1a8dfae4926a027c23ac27a32b83a0b81a1003af5cf329", "ref_doc_id": "main_guides_zoe_contracts_use-obj-example.md"}, "4db25c5a-9164-47e4-a2e0-09ead616c49e": {"doc_hash": "889deea33790a584a7d7a21a58e3674a823ee0cd3ea23a97bfadac7d021036b2", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "c6fb5626-f8f1-469e-8a7b-ba59567c3933": {"doc_hash": "ea73eca0f76c4b9e2775e1221f2fa3b6ea075b1a221dd5bcaea9fc071534c479", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "f621117f-c372-4634-9274-61659f7fda6d": {"doc_hash": "340d7480ff72a2d8b691e410ad794011e7e8099cb2b9da1bdceb6e8aec1fb526", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "2960a8b5-b4f4-44d1-87a3-905c0d929256": {"doc_hash": "69100fb48ab9e5ca71c4c4207605ec7c1f9bf18f0f22b5f22d1af42114b002e8", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "cf43aa35-c360-4292-85f1-4e56c58db502": {"doc_hash": "05213520c86a243e491def3f84165618c6db8f4c6aa1cb1e90d7d89d4d15c994", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "a17e04b9-7a58-4b35-9e76-fccc8c945ef9": {"doc_hash": "36cf4dd4a995000e43672867223a0a907cffcbfaf39a4ee0a784dc85a94cd668", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "0204222b-e741-48a5-843a-0b7f01352943": {"doc_hash": "b20d3664abd6ccb023c4cd17981fac6ba2e822ce12594a8f5958341d3e018040", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb": {"doc_hash": "8ae8798f17faf756d0f91bb791aeea6f1a0951cd43688642c4aaff553d7ff23a", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "735d0d24-7772-4f60-9cbb-76b8ffeb3676": {"doc_hash": "96a976d389a1a4135fb0815f386a6a7d3807e8a1f154a2ded70ec314f987bfbf", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "52fe2b3e-7b58-4d9d-8327-95d36672bcf4": {"doc_hash": "ccb8f891a75c3f8dcc33ff7236bf4528d255a3080896c30e6afeb27fe3b01f08", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "5a0f3428-0c06-494a-b559-5e9a8b902589": {"doc_hash": "ba5b57fdfa7a3677aa5fcf0a5d30a35db1f054ed88d83ad8282c1fd20681aa61", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "dd8c165a-2c55-49d0-99e6-66f304eb7c46": {"doc_hash": "c5b449cee0b9a7bbd359c55dfa176d3668f6a01b616251a756743243e26b9cd9", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "fc51c628-35c0-4e77-ab0c-927c64e8b003": {"doc_hash": "3941d1ed3eee3f8b469f26e6df005d09ddbe283ae7e1972e5b54a90927f6c8db", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "6d9a9209-01f0-439d-bd7d-41b5e40e4933": {"doc_hash": "78232ed7d6c0dbbec8a721e6ec2d29ce39d1bd235733431fefaa6cfc9726fb6a", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "7e650292-7468-425e-832d-07a6b530fce6": {"doc_hash": "2d8cc6f5ccc726348f9e8946ccdb86f0f384da632a402562c6bdb05ef60dc253", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "4e442158-2cdf-4126-9538-782d478967c5": {"doc_hash": "035750f9cfbccf07503e40da50adbb04683f94a85e894eee3cd5c382eb61c42d", "ref_doc_id": "main_guides_zoe_contracts_vault.md"}, "b40e6e96-737c-4b56-8563-fbebdba057d8": {"doc_hash": "8d351d00db99fe8cd4dac280c248cc511539e6bd9e48985c7f52c2956f268309", "ref_doc_id": "main_reference_vstorage-ref.md"}, "37856f6d-1b49-4e53-b763-8be318b6e4b9": {"doc_hash": "e388fbc65dbcdd5b9a867a7122821a1644e9341af5a9c4af1f6efcb835311b30", "ref_doc_id": "main_reference_vstorage-ref.md"}, "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161": {"doc_hash": "9d1474da3f1237783ea7e3df7195ae0367010ee14779c9787c729ffe8a38e216", "ref_doc_id": "main_reference_vstorage-ref.md"}, "2e354ce0-6022-4526-bc43-b1c0925e1660": {"doc_hash": "92ea4657717f2e123a29bd65856fbc6a8e5b00bb8212b316f17b36006b6a2014", "ref_doc_id": "main_reference_vstorage-ref.md"}, "d4fd2456-c57e-4119-b8c0-03db9a14bd69": {"doc_hash": "a9d9e4bd7126a9c7c901ae2c4d9b8c16f6d45a46408e0ae3c05e9eb9131b1d72", "ref_doc_id": "main_reference_vstorage-ref.md"}, "ad7d17c7-d09f-40e1-8e3b-092618dce637": {"doc_hash": "ec46c207b7e5517931138d70d8f95db753346dc0e8d1448ed0cee4031513f16a", "ref_doc_id": "main_reference_vstorage-ref.md"}, "de4b319b-389a-4db2-82c9-37b44c7b69ae": {"doc_hash": "34913fe2ea880e1bbc1b444261c979bbc6b4f555cdf0c4ac439569e9c940f958", "ref_doc_id": "main_reference_vstorage-ref.md"}, "4cc8f9c9-df41-4baa-9b2f-15ba46551e50": {"doc_hash": "a44d033ec97b8cb101cdddd9e290d30b6f93818fe964f7d0714d19d301f7c96a", "ref_doc_id": "main_reference_vstorage-ref.md"}, "1a36d5b9-46f0-4fa7-b118-4090c7c6202d": {"doc_hash": "dc98cf3f76943be652bda65e63f7bcadfd2cca680c4024b5858dbdf2e984b941", "ref_doc_id": "main_reference_vstorage-ref.md"}, "6ad83664-60e9-49d7-95f2-88f2684405de": {"doc_hash": "477dcf2c864ddf4da61dfe817e061c4506641c2433c95fff46798ce0b0b7b54c", "ref_doc_id": "main_reference_vstorage-ref.md"}, "4f56de17-39dc-4ad3-a0f1-c942d26e5616": {"doc_hash": "2d62599b6f55282b17a6ac5b99e0d33937b9f1599737056ad4e29e6ea2d5a2d7", "ref_doc_id": "main_reference_vstorage-ref.md"}, "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245": {"doc_hash": "267a04d4980386b3817d657fcfffeb052e4a2854da79fe3613af85ca09b1baa7", "ref_doc_id": "main_reference_vstorage-ref.md"}, "3e3b2933-8d4b-4bda-addc-97b8b76a1ced": {"doc_hash": "abee28c90bc2211fe332e2355c580d3c0ed772d7b58fd543ec813b5fd045257e", "ref_doc_id": "main_reference_vstorage-ref.md"}, "5c1c1db4-dcf8-4273-afb8-f227cb59a772": {"doc_hash": "fc67b27b0e1bf91945cc45ef6ce967214a9c733e1a4317784a0d2667c1123474", "ref_doc_id": "main_reference_vstorage-ref.md"}, "f0984af3-8757-489a-98ab-4f06d49ff980": {"doc_hash": "789576833b8c26b511b1558902ec60a33d6875b7124870e6015c88d594d183da", "ref_doc_id": "main_reference_vstorage-ref.md"}, "0aa53712-717d-4550-a30c-346505fe1eaf": {"doc_hash": "cc332a5dfe54521c6767f2dccf28f4122becd4b9a85a140f89f0b9a5ae528606", "ref_doc_id": "main_reference_vstorage-ref.md"}, "c9277695-27eb-44f6-bca0-c535752b5295": {"doc_hash": "de61079065f8452710c50df5dc9a3252c175dd0ab7a93cb14263524fa65260c9", "ref_doc_id": "main_reference_vstorage-ref.md"}, "a607224d-e269-46bb-b5fb-9616a34d9a20": {"doc_hash": "25f2d98efcccae7a8656f1e9d9cfe916adaf9d7c3cbb0a685c0f42ff8110f28c", "ref_doc_id": "main_reference_vstorage-ref.md"}, "bd2f6658-de00-4277-b6a3-3700c2b57252": {"doc_hash": "92ad44770f146498374d6a25d37e453b088a2fc979720a5a85ea8a5328b3be71", "ref_doc_id": "main_reference_vstorage-ref.md"}, "342bc2d6-9ff8-4d97-a404-ad3bf0581fef": {"doc_hash": "0ad5a7716604abbe41f74f211d4670dbcec9a50bdd360cb1ffac67d9f15b3488", "ref_doc_id": "main_reference_vstorage-ref.md"}, "528d860f-7245-40cb-9dc8-65f7c7d18f5b": {"doc_hash": "d6569b1e502038c51fed44b731df08243d8454507a569612907286b49e358fc3", "ref_doc_id": "main_reference_vstorage-ref.md"}, "f6c21f70-0bf6-4f5e-a944-b2a701a881f3": {"doc_hash": "ffd463d09b874ad7c401244b2ef4b84442aca671e6c5b81dc7aae691ab3e0a75", "ref_doc_id": "main_reference_vstorage-ref.md"}, "c7886f90-d51e-4895-81a6-b14efb24b450": {"doc_hash": "92e2d402e849024863147b4a314b07170ef3dd5a03f9c9819fa9e37565b577c4", "ref_doc_id": "main_reference_vstorage-ref.md"}, "bb125fed-89c0-4ffa-8d8a-f9eb2082938e": {"doc_hash": "d2b5debc3376fef04ddc2bf797215c885d201cae25eba5cf2c2864c84e8da9ce", "ref_doc_id": "main_reference_vstorage-ref.md"}, "69e09aff-a76f-496a-a69e-175a5f24c2b6": {"doc_hash": "6359564ba15da32d94e29cc626a794992994ae0144937b6250907eec8970ce4d", "ref_doc_id": "main_reference_vstorage-ref.md"}, "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c": {"doc_hash": "f314ada26c3349aceacd22ce005a72b7fdac774ae150525393b9a2226f50dca0", "ref_doc_id": "main_reference_vstorage-ref.md"}, "107e2baf-7a3d-4ed5-803d-513fe7a9a681": {"doc_hash": "a8340678b0157216915b92c948872992a8e8719112d060b394297050bf17ea00", "ref_doc_id": "main_reference_vstorage-ref.md"}, "620ce043-a20f-4ffe-bc62-cb3f2ebb496f": {"doc_hash": "fb0b9490a8a60aec55505979ded1c227f77b71c01f7cc334310d1f90f5073743", "ref_doc_id": "main_reference_vstorage-ref.md"}, "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50": {"doc_hash": "44ceaf91b7fdae63fbc2d46bb8cae8ef97eda2a75d8ec0cbcf550f5243181dd8", "ref_doc_id": "main_reference_vstorage-ref.md"}, "1757b5de-0b13-43f7-aa81-c0616f742dc3": {"doc_hash": "9ae79c483644d5347ee836b8f1c705cae47f23ebde2dfe1e42a445dc996583e2", "ref_doc_id": "main_reference_vstorage-ref.md"}, "f7153725-b2b1-4016-8634-d24c9915b0f5": {"doc_hash": "07cac66d2a94ce54eca62d70fb6d44ff3f618b150fb5c2ed87c4b8dd34ee9313", "ref_doc_id": "main_reference_vstorage-ref.md"}, "bcf65c94-cc9d-451a-931f-283f6c8819cc": {"doc_hash": "1fb6db0e24b4a29481bdfb47fbc3d42738bd15d1d37ef20a5c70a98ded4646ad", "ref_doc_id": "main_reference_vstorage-ref.md"}, "ffad30d3-bae1-44ba-ae3f-f327ce03acee": {"doc_hash": "8310e189d1ade7b3bda9ba0cf123d42b6491d96250ca24dce9ba6b735ebd68b2", "ref_doc_id": "main_reference_vstorage-ref.md"}, "9d201e2a-e171-44a4-8afc-c17a68f95f0f": {"doc_hash": "a4465fc770f602a55f5b8098b9d50d105fc76bb8d9fad1435857a400a9766265", "ref_doc_id": "main_reference_vstorage-ref.md"}, "aa254422-7345-4984-b4e9-97bbadc641cf": {"doc_hash": "5bb9ba97d6fe3b7c55fa1ce64b8b2e59f0db8ecd3a7832fadd2b4ca7d57a6b9b", "ref_doc_id": "main_reference_vstorage-ref.md"}, "53e44bfb-2668-42d3-b418-f657f22a8a87": {"doc_hash": "314f2104859493e2cdb8dc8fbccca4659b8d6a943ca52181a7f75d80b099692c", "ref_doc_id": "main_reference_vstorage-ref.md"}, "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300": {"doc_hash": "547053d4689d753a08c6ac1a9593bf3c29ff82f0b1b5111fc92730b6f6ff6ba4", "ref_doc_id": "main_reference_vstorage-ref.md"}, "84dc6385-6428-4cca-9248-5e32abcd4de2": {"doc_hash": "d2b8f9c93e9b23dda3dea4fe75a0819cf0ab24b0b5d03dca126b97ec486775a9", "ref_doc_id": "main_reference_vstorage-ref.md"}, "5498d3e8-7809-4ffe-9f81-e47f34ef8c47": {"doc_hash": "e90b76ee9113836986bf41665b11af50fad7317c4a0d2471a9fcf8455ac0cdde", "ref_doc_id": "main_reference_vstorage-ref.md"}, "109b4b15-37f3-492d-81c6-745cf8a7b4be": {"doc_hash": "70839db2c8ead5eb85cee702cd5923feb4dcc0584fd6947ff63ac65b48881626", "ref_doc_id": "main_reference_assets_index.md"}, "a4e5b88a-86ea-44e0-ba0f-3e72e1af992b": {"doc_hash": "a97059ba4c95b0105d10495f5df9487d970ce3e77580df4ce590db2271fa81cc", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "c5d10ba3-4126-491c-9fa9-b54c46cc1827": {"doc_hash": "8282a8f81b9829a6f3e73870d884dd9e94466bd5dbb09a7935aefe3aae055ae0", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "43e9dfd4-b906-4ddc-83ab-e019463375b7": {"doc_hash": "f5ce5714657ae573da7a46fa7f11705428d89913ec7f4f60bf3e5568fa47e0db", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "b3d53e8f-f0ff-468d-8750-2fad35125b52": {"doc_hash": "56ff70909851efd826c035441d586ae35d36de0388e237a5c8f30596329aeddb", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f": {"doc_hash": "db5fbd95b313422888b4aff528f7f16af0699729e5529031729f407658e455d5", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "f957095d-915f-4265-aef3-c012b6b70976": {"doc_hash": "29e4eafe9375881fb4cb96b8a04a61a1444950c6e1f78d5e5c869c5ea173eee8", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "fc1995ad-9381-4687-8bc0-32e8353fc47f": {"doc_hash": "4a5820caff2058e9e7f6809b5e0ca896457ab14d788c5ff894f049b40f45ff44", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "ca07d778-0566-48df-806f-63497a410ce9": {"doc_hash": "7ae0ccee6de798eaa6ec094b00266bd81993394211b2775dac18284ca8c393ed", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2": {"doc_hash": "7310b2a7a4ab9f70ac48c58ca9ca9b76736cca0f117b1a08f1e66df32579bd0e", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "8c53a33d-e144-4d5a-ad37-55165a82439a": {"doc_hash": "a39762b4078e28bc63e17161ee478919cf70a247130eed70a4f29902325a937c", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "02f50183-c9d1-4c68-bfe1-2dcacae83cd1": {"doc_hash": "c506f6b35033a5daf306541f6a5648ead48c62a93eabe1d7369f70d6cb7fdf7c", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "4d86002d-9b6a-41f0-9882-a3806128ec1c": {"doc_hash": "46be2dbd8fe5fa43b8471352cb307c7199ee2f89e99b2e6ccad09641efad7282", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "9eb65053-c5a9-450c-bc03-df2bbfa052fc": {"doc_hash": "ab1c2af7bdc7951aa15a52182bb4540161c288d0c36cb2e8b1c7cf46c8037e28", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "803a240f-1876-4f8a-a7ee-29e6b71c9bcf": {"doc_hash": "d96eac6d016f330a01d54462c9424f7f969cb43846bbcb1ce605c66c21102f4e", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "e9fb420f-334b-4407-a95c-019676de92d5": {"doc_hash": "37c1f8faa60b9c0d8eb64ea14380969250b2e0c8ca6e3e9edebe2114a6a66f51", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "2ab5be3a-0481-46a3-872c-f021a681c354": {"doc_hash": "854defe291924cc4f330382b52ee24c2dce160be8385b5686cfb13bd40896be4", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "c1bddeb9-c27d-454d-a31d-4c1f3be85763": {"doc_hash": "892e63d3dccc0d2ec33711228ce9a4e2482852bb0100c23f1362cd5210faaf52", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "fb5e2455-2c61-41a3-b603-692537a9b9f7": {"doc_hash": "46a8c87c0854870a7c5913f65520765fc9c392e22ff59eb78f50b863bea586ce", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "83f91f8b-ab0e-4f92-8156-756dc3ae02f7": {"doc_hash": "5d18b8d3fb3298d9896c1df598ef0488d9e8d8f91ab7883e884e9fb9fc671f70", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b": {"doc_hash": "be1626b0c0252c774a1e3d51e8f840a1eb00879e40a30b2d8db3b1adcc7aae71", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "d80d1400-4cf3-45e1-b97f-326c1ad85cb8": {"doc_hash": "4d0f7e40fbb3d7ae4f09090881b332bdb2be6ce65fab2e5711a90ca264300a62", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "11fea41a-db4d-44c5-a4ef-952a777d97c1": {"doc_hash": "5b9f2dac168aa5bc8c56b2401ec7e8d5febb75aee2e684ffae52aba9e5b6bd38", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "feb18aa4-325c-47ac-add0-fd1faad0ebab": {"doc_hash": "d34cfe66508c3b8b15f58b1e3d6a04449513077e438df9f93651565ed2be94c1", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "46df1488-dff0-4f9a-aafd-e401d6d95645": {"doc_hash": "af3d89899c484594856bb784f1bf7f013a69c1ff9b37a5c99a7f8ddf3ad67886", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "046f09b7-938c-4e60-8cde-fbfd5e167b2e": {"doc_hash": "8659729012e3ab15a6325e6771d4fe9fe9c1aaea951cbedd5c0d875b5027d417", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "395f97ae-6dc8-4dcb-88b8-fac39641706c": {"doc_hash": "49b05fab73d1921f18c8b612156842bd6345e052af47d7adc01ab18d330af1a5", "ref_doc_id": "main_reference_ertp-api_amount-math.md"}, "4e936563-9b29-48d0-ae08-77c763c0f231": {"doc_hash": "ee842ef7d6c11eb9be2f9a56cd8b0459545b40111eaf2da9789c9fbe8b20bd15", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "812db3ae-cc41-48e1-9ddb-d5314d10d1f7": {"doc_hash": "2e4f6beccde16448dd2015fd0b7aed978dc5a7b90e7b2935b42827154df15960", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "7bd8a8f7-9b91-42cb-8a4c-befa22db6888": {"doc_hash": "f9d4fd0dae423f37107926e6fb28990c49bd753440132c266a849047578e7763", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff": {"doc_hash": "21998ad2d5de9c68e2171c5d9565956e7bb7d7c5eef1f257e4154e1a654aae3c", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "2234eedc-5c91-4e7d-914a-8a2b82957c88": {"doc_hash": "9d423abc4dc0ee653ce3ab1377b40789d2843086c92a266e674778346cc4d9f4", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "d54176e4-4f78-4ca0-8197-1c0e78881a7b": {"doc_hash": "b18f4b0e0e9b0cf0232abd50be46e80aa47f9011279b15d51c10d367e332f4cc", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "47ce5ed9-4a45-44fa-bd90-715db6233862": {"doc_hash": "998568d15716355156c056e5c9093853f48c3219ee7bacc061ca5e5b4a0c040f", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "48d2d1ff-2c05-4b2f-be0a-5538c88e7b19": {"doc_hash": "071c4fdc2401ba1570f0d65dc5e3ab5699fdb04ed53a73f2315d3911199d6a0a", "ref_doc_id": "main_reference_ertp-api_brand.md"}, "47fb7ae9-680e-4711-bd6e-9203be6b137f": {"doc_hash": "7e1e4b5b93dbad5a50dc10ceab6d32bb871cc97e911a50edd4e95d551b663ccf", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "0cbe8eec-f5af-461b-b07b-4e6f2edb267c": {"doc_hash": "4762d6efaecb0762bd1de2baef511ad742f9aef07a4f92dd8dbccbc2563d0050", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "105d11f6-833a-4b52-84c7-77b03d963ea1": {"doc_hash": "7844e3c4d80e1e843bc38b5c59666f26bcbf6855e84f3f3896fece3d5c1fcc33", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "779e2fa6-cd48-464b-abce-0af09bef6aae": {"doc_hash": "227bd0c4e1480f5aa6144614890b348d8fd7843193ceaa242f9622de4242f953", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "29bdcd5b-9f0e-4689-8864-d12420fbd724": {"doc_hash": "3bb48e91b9ac520e90659f1d0fe00575d3317eb7558aa4aad69666434f8c724e", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f": {"doc_hash": "879d20388fe63da43f968cff645e29686bd8b820bac972513900e850cb6347c5", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528": {"doc_hash": "2e8ca50801c74aa9cfcb6b9d94b5e800875f4cde7f7a82a7e3cd24236125aa66", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "6ce73118-f7a8-49df-8430-4967b1190a37": {"doc_hash": "71f9f475f66eea6c006367d5bcd4ddd93daed4003ef236a91bc0a6ffa9e1670e", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "d876c074-40d1-4fba-994d-14328281696c": {"doc_hash": "ae902e28e1f7947ed7581b0094328efb850eb8720e96726d40fdf7901c61fe7d", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "5129c471-0e47-472a-ba00-374e9d7e3369": {"doc_hash": "699771093fc83d66a434c39b413227ac252f73dfc63e45790bbc3a1538876794", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "401e8de0-d6af-49bc-bcf2-0a1d793e599a": {"doc_hash": "791b25bb745f8494f3f8cb9c9cc77abf6930175faf9796d569443f0865fa5fe3", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "0649127c-7b38-4630-8171-ec3746ddc357": {"doc_hash": "b947a2f47bfbe8690bd7cac716700c2016b6e34293aa0cf4c55839a1286fe6f8", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "9894338e-ca2d-4b42-9766-dbbd92f78748": {"doc_hash": "005f2018719c28f9290f4dd04b1848297f2ac1d4d03b9c8fdfdb1cd3f1a047f1", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "ec5543a7-7626-49f2-9100-1779300f2d48": {"doc_hash": "b92475268190f71f4bc8b6f6dafa6d26df97e762d1b03e001a808ee1b3bffb4a", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "4e5c7702-941b-46a1-ac08-e52f4b6fea4d": {"doc_hash": "0b2a47fbe41d86ad7642108d2688be39179ecee440c101419c551e84f7afd442", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "76cabb2b-78b7-4977-8023-4af2f3dd4b63": {"doc_hash": "b1504e5d119a24fe282c071384f6204277f601e3cdc3f60ebc6a3836de27d2ad", "ref_doc_id": "main_reference_ertp-api_ertp-data-types.md"}, "33fd3d6a-35ad-48ff-9993-9b848960ec42": {"doc_hash": "460625fcb28eccfb9e02b70a40a97b644407d6879aa5af13e18c04a957cc1a6d", "ref_doc_id": "main_reference_ertp-api_index.md"}, "270a3f18-55e2-4d8e-961c-989a6f8f9651": {"doc_hash": "6de1b3505479f3d2b4e000e3702c847ca41a7abc9365f912fd1b7c58f13f74e1", "ref_doc_id": "main_reference_ertp-api_index.md"}, "fa94c686-b4c4-4688-a278-1b66344090cb": {"doc_hash": "59ef708ffc73e9ba47fca5a9c0978f384192586479575a22695ba68c5668a833", "ref_doc_id": "main_reference_ertp-api_index.md"}, "f1d45dbd-0526-4572-82ea-e330a08393da": {"doc_hash": "95481879e25163b19bd48b9c2c1fbce10b519c9de3e756eb2bf4b4c570418d8e", "ref_doc_id": "main_reference_ertp-api_index.md"}, "e9518db0-fe0e-436e-a74e-53752052cc86": {"doc_hash": "f87c598354f07939d8f743b4050536c242be8752a075c8198df3b7a904f3073d", "ref_doc_id": "main_reference_ertp-api_index.md"}, "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7": {"doc_hash": "9e1ae42e99c7f267ce711b0e5708a3f0b33041d26808f0bfe031c11cea7cf0e4", "ref_doc_id": "main_reference_ertp-api_index.md"}, "b8671286-7e76-456a-89dc-ea84941bd8ec": {"doc_hash": "5eaa300f9cd196464a3fb039a627fb55e74ea057d10241951304272a3a7430b4", "ref_doc_id": "main_reference_ertp-api_index.md"}, "dd7311a9-d8df-4338-925a-7ba2c340fb00": {"doc_hash": "7d8bea336fa5f2482153bd208a4626c180783761f3b065994e2310d715909061", "ref_doc_id": "main_reference_ertp-api_index.md"}, "3f0b96d8-dcdf-4042-9e0a-451c01569a4e": {"doc_hash": "b745fe538aad08ac15c41d9422c9c8fb299982e38f659f11b70319cc4bc67eb3", "ref_doc_id": "main_reference_ertp-api_index.md"}, "5583c32a-218b-4f1d-9773-23b2641e8cc8": {"doc_hash": "62a42061e0adfa101e236d4cc0a11e8906b8b4933d4deffb04e9554a3cb957e1", "ref_doc_id": "main_reference_ertp-api_index.md"}, "ad40a0b5-6d4c-47f8-95c1-efdb7bb00ebc": {"doc_hash": "de2026e9c3edee9e165c3baa8369542ae45b74e951b35f3d4e2c9777d98ac63b", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "e322281c-f338-4706-b3f9-22dbfbb94c1d": {"doc_hash": "99f12db843c91f2d70f69318cc23f9d2966d2d0ea35439cfb5e5e60ad3a46d83", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579": {"doc_hash": "e91a1c88ca2ac984802e58de36d666b908a564c554ab0d0f7f2308b658ccc677", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "b7040993-e512-4580-81c5-43f7e5c531ff": {"doc_hash": "8b41ee46fc1ca259e217f56c4eb93afb8111c4c6d1918fc2c190fb21b6750a03", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "9ae03bed-6bc6-484a-9230-7c0b0306648b": {"doc_hash": "e0dabbed2aefa9b13df8eeddffc4d57bb9dd48632f62aaba63226b1f78178aa2", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "79998596-8353-4db2-9cb3-242b10bc1d10": {"doc_hash": "383082a547ba92a1e08d45d7cf94e2d2842657be9211b64e621596b4a5264555", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9": {"doc_hash": "b470c9ab51064cd64d6a01b34a1113f6eda70e6b3cd6ccddd5201de9b7353859", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "1f881670-a56e-4373-b342-7fb3dcae1162": {"doc_hash": "8dd810966bac6b9560629aaf5efdfdd04c7f5cfebe1b08658ea4590b088b7f39", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "d48c27db-da33-40ba-8ea7-cbdbfbb53df4": {"doc_hash": "7828cf0d5eb60a49c70f0c8c86698546534a5a3da1052cc6aee855cc8418e357", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "7a55e34e-db15-482e-b5ab-2c9496ef314f": {"doc_hash": "8a64dd31492adb529b6abf78dae3b90bd7314aceccdee8a851d9f3dea648ab10", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "879cd568-b96a-4b27-b0f9-179f60afc54e": {"doc_hash": "aed90e158b8f83621101d54f5580584e018b479f72f2b7004f951aac46d87a18", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "7920d228-89b3-4482-b0d9-8222e801efcf": {"doc_hash": "12b88691a5bdea51206d4d68f07dbe98c372b6cd2d1e1cc19ebe84e93cb60655", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833": {"doc_hash": "a60958e2bb21a76a8b2175b159c1dd8ae7541c9a127a2759e56b6d33228fb4ff", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "49b9d9a9-550b-4364-8d78-eebe3d074d6f": {"doc_hash": "8ac21701ed60a44c3c4359979270e78f196446125350e34f2b54aee2cb2831d3", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "c068195c-ec72-4a97-a8ca-0911b33422bb": {"doc_hash": "d01deacadc57fc4ff64982106039fc047619f6366b61a7827922afee54384c1d", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "aa2fb6f4-644f-4104-aed9-8110e132bcfc": {"doc_hash": "ee3123442f11dcd60d27010343abfa374654bf40ce6b3affeef35600fe7ef51e", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "7a06188f-9a72-4a51-9467-a185ef0cdf95": {"doc_hash": "ed8e973f3b01e95246984f6687e355a049ade0807171daf78b115d11ecdadeb1", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "f830a3c5-5023-43ee-9302-7652d8f33c67": {"doc_hash": "c776813c5ac68c26a7c60370f61ed4f6f384fafbbc2d5ffbd3ee322d7298beac", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "a10654b6-5001-4f35-92d7-b8d163e6d4a6": {"doc_hash": "9fc89d0757b01d1db3bdd137f4d7590c66d0ad63dad4ef2173d19665c2131b35", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "956768b8-37f1-4246-b3e4-2827d0796feb": {"doc_hash": "b42bbc554a6dbd9746f0ad1396fb8962cac397a4835420653e58622874fde92f", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "f0730f64-7f92-4d52-a44b-22ebf892501f": {"doc_hash": "13e3c2116476d5342307ccf64008e273a72c2b364b1714155ef9fbaa32d1a26b", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "58ac20fe-382e-4d66-bb47-0d20d065cbf5": {"doc_hash": "3fb2e81ff513d7fb45cff400d03fc198dd29fd80026be0f5ebf5d7ca543a9f12", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "d2071abe-87c2-4c8d-a568-b9d41434cd7f": {"doc_hash": "63b734dda7a6de44787ed6ffbd8f7f8f59f0af6af4011a7cbe21707d75553baf", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "7b713518-b26d-4d10-8423-74893ffc47a5": {"doc_hash": "af4a6bdccbaa76966c835db5f0b2a8bd68db83bec5ef392c36f42fa5a4b4e92c", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "73ce437e-4ffe-43b7-b7b0-a250ba573a1a": {"doc_hash": "85872b5b94c2f21c4b28d0db5e8d36a30bca32052d8ec17a898151dbde932ba1", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "6b84edc4-a40d-442c-87d8-30af09ce32d8": {"doc_hash": "a8a9c4a3105e66fa1145939245eacdec23462cc14728dc093ba6c30896822f54", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "aa1659d9-beca-48a8-a4e2-94bf297d79f2": {"doc_hash": "5ede99f07a05e26a669cd695e6fbd9467640736fbf812cc7b9c1941aa281bf23", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "2caa9c7f-e941-414d-bc17-36b6e7f32c62": {"doc_hash": "a9cff91a74f9f300aabcbf5af0e35570b3156e85433bb685836cd2a418bca97e", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "9f9b945f-9c86-4f9d-881b-4f8e80231d37": {"doc_hash": "79d3c9783a775eb34c408a394aef07fb7d77d695739c77f375732b39bd805a75", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "63ac4489-ceb2-4bbd-99b9-97dade405046": {"doc_hash": "367bdfa5dd25a1ead00635a15db24fc71d7c869546c404582e083195faf1dd2c", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6": {"doc_hash": "e036bdc58129b30d8d745c733d1111fe49cc7517a60d616cc8ecbf38b54df62a", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "26a5d5a8-61c8-4754-9f9f-516f10acc000": {"doc_hash": "5387ef5eedd1268fab234c61747fec6c9e14601c5b45b784b0cf960b293e13a2", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "58663666-1ff0-4ba6-951f-5829fe3f929d": {"doc_hash": "97a189300aea3fc35042ca03fcb3af6e513f19f6a66e242c54917383e97fe438", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "54f9dfdb-bd38-4531-8fd5-693087813e1f": {"doc_hash": "2b0822f765874a7e69c44c1b87d752a62009a177cfbe64c642da1921cec3d045", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "044f77d1-a435-433f-ae03-193f1b167365": {"doc_hash": "3fad23bf51dd35f308e5dbfe6037a34b732c0181f4d614bd91b6ef0e4fb9770e", "ref_doc_id": "main_reference_ertp-api_issuer.md"}, "ed6d66f4-4606-4b0d-bb13-33d783479928": {"doc_hash": "bea0c3fc11612630496b6f9bce28292b39e0d6f9e2793f7c31cf9fa5665f2d82", "ref_doc_id": "main_reference_ertp-api_mint.md"}, "2873dfcf-f4fa-4441-b94d-4f9e8366a71e": {"doc_hash": "060db1b09b9bf79ce577f0b106cbb520e4301c2fe95f1a1f7224da1d1a86bedb", "ref_doc_id": "main_reference_ertp-api_mint.md"}, "0e89fa3a-4d79-4678-8218-30fa5adbee49": {"doc_hash": "58dc6500cdc997ca64a48eab8e81969c9e6bd22d61bb02eb82d565d25f645f58", "ref_doc_id": "main_reference_ertp-api_mint.md"}, "b8ee34e8-b07c-4555-9d86-0c7d832ead85": {"doc_hash": "e0c8264332f4f0446fd59723de139782f158a9512d856cce7fe23850e61d33dc", "ref_doc_id": "main_reference_ertp-api_mint.md"}, "f2302b80-82cf-49b4-b011-ddc709324c0d": {"doc_hash": "e47bf7b33fb542a0c99d4ea762501e6e37dcf3b3fdad290d95bc016726545865", "ref_doc_id": "main_reference_ertp-api_mint.md"}, "71e82b88-67eb-42b7-92c2-9c15ee4187b1": {"doc_hash": "a7158eae694a004276573996219b2db2c70479e6000dee7e85f2d0f89618e0e7", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "5146a2c3-8fd3-45be-bcf3-00114b6a50be": {"doc_hash": "ab5bbf19781a70f7254542f00a24830dd2240573f8342ba9345cfd31da979169", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "4ba55439-2bc1-4a26-b054-dc15a9cc99ca": {"doc_hash": "69e9cbe25e8384a74fccc00f4c3694046dca1a4531c8215e4aee5ce3a0fbafe8", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf": {"doc_hash": "973a01c79c210333d8f65ed951c9fe795f7f824a73050cf2ca4c3148bf3b64ca", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "3a28e369-586b-4ba7-81fb-8c40f678a30a": {"doc_hash": "e9f98ff4255378706d396123905b1a7b01170a3d2a2387fb4cf99b42cd5e65b2", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "66ce1dd5-0286-49dc-a424-ff5671eadf10": {"doc_hash": "8d643187b0c75c066baca2006162cc8508dbd263e3ceac6f8842177702261ccb", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "86be667e-6394-4631-9168-f60298d16334": {"doc_hash": "8fa1607c77d5767be6c670980a1eb4a972681185017182af7fafe216b2f3a515", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "1cb86112-0a6b-4fae-8bc6-2d01baad6232": {"doc_hash": "0b9598b3eb797457093e5ab24f1a28d2dbc25cb321873298f3fb6ffa7a0561f1", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "0896aa7d-6174-4886-b4ca-331f7d7d8433": {"doc_hash": "82afac15c275728a6f2983efd1eb153adab0c99f96d1420e89203bb9fbd63af1", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "a672c776-69fc-4be7-94f2-d1ff0200fe0d": {"doc_hash": "cf73ee10a69edf2dc9b92cdb69c34c9715eb4c294b5c9a9fa1b808e66daec277", "ref_doc_id": "main_reference_ertp-api_payment.md"}, "5d480d50-678f-484a-83c4-2af8fc7201a0": {"doc_hash": "5856065c2604f9b134628711735d4fa9570dfe78c740d77a60bd5cd5c2166297", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "2216a443-8d9f-4d55-81ec-2832f81b9f3e": {"doc_hash": "6881aaddc55e646d186613360b4b12c9792e62551e98ccdbda9166b5ff6b2c82", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "b7ef2996-807f-40c4-b89c-5de9f9f456f0": {"doc_hash": "3769d37b4390091f1e472bf6f1d7594af8cb7fa655c056a0040839ed90d44781", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "9ffb4bed-434b-4eaf-a303-6b96b7e78039": {"doc_hash": "76862ea15bc4e867295edb450390fc2dee69e0f4cffa2ca630036df842402324", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "1615f4ed-fc45-42fb-ac64-cafae346192d": {"doc_hash": "5fcca957305a50372fa0e59819316da5983011be40ac600e78ba92d6537be7d9", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "1f7a1382-a339-4a29-bcd6-be96354f641e": {"doc_hash": "3167c0caae060086314a03bf421374aafe5b6071235cbbb20f5ad56c00a6987e", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "36151848-d1fb-4d4c-a0fa-724a90fd8254": {"doc_hash": "d837ed124ecbdb00f823d9479f27d7a51ef20a754d39b3bcaf688d6e05985f26", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8": {"doc_hash": "85083bf51d6b2bb44dcfa76d7151ec0e26ddd84041c14620899363574515e410", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f": {"doc_hash": "51012ffc5a271a33d80e3f2e52ecebde0e0f4338c7685885694e652c8661a6cd", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9": {"doc_hash": "2ac251821a268299387859dc1edcf73785172ff51488d6d4ac4dda2d1bb6683d", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "8917bc5d-118a-43ed-b4ff-69f13654b5a4": {"doc_hash": "e624b8462988f2cf8de7fb315f7549de76a0bccc3c21fb80aa703a1650531f06", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "6a105609-25d8-418c-b339-5b39e82510a9": {"doc_hash": "922e2ccd7ad698c43a04cb4fe5d18158bb645f328d654a69e009c9f349496e3c", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "268be0f3-0d9c-4fec-b928-01e41478f1f6": {"doc_hash": "ff4c0cb9d583bcb7456f24bcac05baf6c8cc5b5246dad102d444ef304daa7661", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "e77753a8-8741-4f08-87a8-79b73c4d5869": {"doc_hash": "bbd14c51349ff65056fa3d5a9b5305716541c5d94cccffadcd2d3534b3f8ff5d", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5": {"doc_hash": "6359890254283b9e27ef8a461104a7d801af2dd8173b9411ff811cc517b093d2", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816": {"doc_hash": "b51689ba9bd13289692fd1a5f5df91e5044aa35e6fbf616304df7742fe396a3d", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "2822b78d-c957-4809-b9cd-35d9a4007db4": {"doc_hash": "fe41ee1e09cae81a9c86008b25d76a4f1d729c5ecc8400ec9d235d7c27a32564", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "03a4cd58-dba7-45bd-afcc-b6d55673e4e7": {"doc_hash": "c5752e5e19a0a44c30e5d74425137ab5550d95f248972006175ce06d89aa6cdf", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "55d9fc5a-77e9-4160-bd88-4bae4425dafb": {"doc_hash": "cc4ef37355bd5de4130e1cb8c0b05d55fb280aac542466c69e29153d44461420", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059": {"doc_hash": "e47a526ec359e9b90a8efb113d5fbf7f73cbe65b26950f8a7db7b50d4cd0f3a6", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "5e9ebb64-61a9-4c45-ac59-496c6715e839": {"doc_hash": "c4522c4559cf2edb6e50c3bd90400878f572190ee381ccbfc010301797efe31a", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "85addacd-b4ce-4770-92cc-7831705b3030": {"doc_hash": "161e0cf04d7bc5a12a638b4736235ed20dfd274fc947e799d2d3e7a547c15551", "ref_doc_id": "main_reference_ertp-api_purse.md"}, "ad438393-5411-4aec-9d7c-bdeafa99d500": {"doc_hash": "01f08f002862332182377f04c8cb82dbbecee782d75a6403f654e224bc4d1425", "ref_doc_id": "main_reference_repl_board.md"}, "359c0fed-619c-4ec3-875a-a87788c72fdd": {"doc_hash": "651096eabcef574bfb08b14c3d718d24c0bf0f70bf02cde2d50a65c7b51488fa", "ref_doc_id": "main_reference_repl_index.md"}, "87809273-97c8-4b30-be11-5d9440e257a6": {"doc_hash": "2fdbf6a336d14db0908ce15091255d60e889a283e6ba4de7d196268735217db3", "ref_doc_id": "main_reference_repl_index.md"}, "63800a1b-e425-4b0c-94e0-5385f740c188": {"doc_hash": "6a86f64d04f373892ee6fc53846c3d0aeccf7f10d59d3bd173f0c5f2263e0973", "ref_doc_id": "main_reference_repl_index.md"}, "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a": {"doc_hash": "80e553010e8cb968f4a10248a54b7942619800df4ef6a933a36a4fba501eca89", "ref_doc_id": "main_reference_repl_index.md"}, "ed69e001-e126-4b6b-9ca1-c76e953bab3d": {"doc_hash": "8df991112fbdb7ce2357712446945c7d7fd0df7956db9bce3d08a9e57800c2fd", "ref_doc_id": "main_reference_repl_index.md"}, "253f97e6-dc1f-4024-8d92-b312a850763f": {"doc_hash": "a2ba795826d60a2de85d7fcff811a9c8ecd0d69f9dc2e3c68ee861ff4c789b47", "ref_doc_id": "main_reference_repl_index.md"}, "cd59ecb8-0f55-4d01-9550-db2c72669c93": {"doc_hash": "6f23f17325a7bae12a11aeaa4b2258dde3c2c87b23c085ff2471fbb01dd31c4f", "ref_doc_id": "main_reference_repl_index.md"}, "01a3e93a-5e34-44bd-84f2-29d97212ef59": {"doc_hash": "346c5129db28f9e4bc587df92e5c429235b3f326cc7a0e6ab5bece72ae5fcb7d", "ref_doc_id": "main_reference_repl_index.md"}, "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e": {"doc_hash": "b8a0eef87d18ed630f0150fe6480cd14dfd6d52e99cbf8cbae1ea71451099ca4", "ref_doc_id": "main_reference_repl_index.md"}, "11122904-8000-4a1b-864e-9626db5fc73b": {"doc_hash": "1b589b13be40bdc1143dcd746207495fcad322ea78b4870a0b996fea4c2747a2", "ref_doc_id": "main_reference_repl_index.md"}, "c09b844e-33a0-4905-aaf5-e30e175d1d6e": {"doc_hash": "bad53086afa20ea5ee7e195fbc094bc29db6b8732a61c9ab967589855959004b", "ref_doc_id": "main_reference_repl_index.md"}, "974b70f5-76ca-4528-9225-b1ccf39da033": {"doc_hash": "74d1a2f37d1b411834f529260a4bfe3f23b102730cde055cdd62b5e80103789b", "ref_doc_id": "main_reference_repl_index.md"}, "e884a0f3-2ab5-43df-8178-0c00080c3ad3": {"doc_hash": "9af02c4fc67c2518a43afe13db688422b6ab1d9acd5412b165a9ed9d7775b78f", "ref_doc_id": "main_reference_repl_index.md"}, "5f19d628-eeda-46bc-86d3-8dc73f097696": {"doc_hash": "833e3a0b7fd27d615c633f6ae6a4891ea5587742fad3fd8c4df317f94944f518", "ref_doc_id": "main_reference_repl_index.md"}, "48ca2205-3c90-4486-b90d-1af6b39b2f2b": {"doc_hash": "4754a486058e4f2a8645c8ac564fc4fd6ec3d05f8b00a2708032eae4306eac31", "ref_doc_id": "main_reference_repl_index.md"}, "7cff4a08-25a0-49bd-b250-0844c6b09341": {"doc_hash": "5faa0274dd984f1892587dc14cfa0c7260f798c8aa9b6d4365f6f7b0ef4f8d07", "ref_doc_id": "main_reference_repl_index.md"}, "fb3cb326-a902-41c7-994c-1f6ab2f2747e": {"doc_hash": "872ecf9a2e07975483844a91e82d2ffea85f7a78d175117f1ceeedf13435ed04", "ref_doc_id": "main_reference_repl_index.md"}, "2a8d0790-dc1b-4d24-8b70-61d4951b9021": {"doc_hash": "075307f6d8a7d75fe15b313635ea83f8da6e476c69c391f33f9885e6dc1d1969", "ref_doc_id": "main_reference_repl_index.md"}, "f03adbf6-b4ec-4832-9426-2870bd848f26": {"doc_hash": "68cae65e75c0f7d752b3f673e0fbe6068f8d1af8d9682376bc37a94e28bc0cd0", "ref_doc_id": "main_reference_repl_networking.md"}, "9b067cf1-f9a9-4b78-b728-7e51cb14acd0": {"doc_hash": "604e7a11abcc6d3a0650782edceb1f40f06f741291e502e5ecd00093e42afd61", "ref_doc_id": "main_reference_repl_networking.md"}, "0df37420-4a90-4839-9531-ac90ba30b40e": {"doc_hash": "0516d4694ac853d9304666251c30e44905246f548d99de25b46e9d4a3ca9231e", "ref_doc_id": "main_reference_repl_networking.md"}, "0f63d176-944e-49a4-a91c-f2bc2abab1be": {"doc_hash": "3239d5ea84c4fc8088e57eaa9a26d8544da882b099de88ef8c16495c70232577", "ref_doc_id": "main_reference_repl_networking.md"}, "a072bf8f-5a01-4cb2-bc2b-15349345fdbd": {"doc_hash": "75d842f20467485dd25030225a50ffbae81e72a17105ac4953cb6fd8a2efd019", "ref_doc_id": "main_reference_repl_networking.md"}, "27fab5fb-3a02-4356-b6ad-897204228736": {"doc_hash": "af77abead3ece94411a0d3f31c18d419555e4523c35183058c962d559630422a", "ref_doc_id": "main_reference_repl_networking.md"}, "2e387d72-4856-4e5e-9ad7-39c2b90f98d3": {"doc_hash": "5d469db1ded40c56cdd567ac0143e6a9f569b6b6db6d02fd21419ab64f9d4f31", "ref_doc_id": "main_reference_repl_networking.md"}, "a9edfc92-fdbd-4651-8adb-ee7561319d57": {"doc_hash": "ff73a078815c6d3b2555b4a23c4b7632b63d4e2053e197cd772171442d75407e", "ref_doc_id": "main_reference_repl_networking.md"}, "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e": {"doc_hash": "f7a755b135b393d16e63eef5c714eb25288d640e6e103325d13aefb4f83fe88b", "ref_doc_id": "main_reference_repl_networking.md"}, "9d89637a-56c7-4769-8a79-89ef093e1256": {"doc_hash": "8ab3675428240193af1d667c33b84efad6ca290ae7d58a431f329b728401e8b3", "ref_doc_id": "main_reference_repl_networking.md"}, "5fee9754-fc7d-4345-98e5-776382323606": {"doc_hash": "66feebbc6ffa4d6c3e42c03061e12d7dfdc9c25a31d900c8dc70c4a73c7dab9b", "ref_doc_id": "main_reference_repl_networking.md"}, "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509": {"doc_hash": "5aa92a88feccb9ac534fcba115428bfdbcf0641882854425d27211f0b04f755d", "ref_doc_id": "main_reference_repl_networking.md"}, "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe": {"doc_hash": "1768c0652129dddce547c5def47e370f63e55dc137edb7e7044c9d94f03a267b", "ref_doc_id": "main_reference_repl_networking.md"}, "f8f34e52-c0a3-40af-8682-50facd40ee5d": {"doc_hash": "adc1ba6decb1e9ea1ee8942f0f4c256851973a90c834e1cdfbff39df91c8be99", "ref_doc_id": "main_reference_repl_networking.md"}, "b3d92984-33c1-4757-a6ab-8993802145e2": {"doc_hash": "b1f1bd542b64e955b3c156fee36d46d93d42982f279d2d2fc524343685b5b795", "ref_doc_id": "main_reference_repl_networking.md"}, "232fb147-f8a3-4807-8ec5-9b027e235c99": {"doc_hash": "8504cad7c98f5d5b216097d979c9721556aa714e9cef1123aadc721c3049b747", "ref_doc_id": "main_reference_repl_networking.md"}, "51feaa59-d638-467f-87f7-1ed8fbf70492": {"doc_hash": "8ac19419d58a55787b6dde87b091e5ab959f5a1fc40ef7767bd53cc747c3d511", "ref_doc_id": "main_reference_repl_networking.md"}, "d6b73e3a-cf10-45cf-bce7-abd9996b3347": {"doc_hash": "7cf53d4fa0f115ce5c4c4e66f8d4df751a530e08f1d6a05da1480848ea5bda26", "ref_doc_id": "main_reference_repl_networking.md"}, "c2c5a93a-d58f-481c-9be6-b1608fc25462": {"doc_hash": "66222cd80d55b00835dc710901ff2eddcb15ed5d57b5842704d9df9908d3ce8e", "ref_doc_id": "main_reference_repl_networking.md"}, "cf8b9087-17e0-47c8-962c-027196ea1ce1": {"doc_hash": "2fea9fe9d74e00808aef0fc4a771a498e470087e72a8a9755050d34249634123", "ref_doc_id": "main_reference_repl_networking.md"}, "b2da8b47-88d7-4416-add7-74a585f26de9": {"doc_hash": "78f44971fcbbe1d6c7392d83feeb4ae6c042701bb23015a73da3a02e0ad02202", "ref_doc_id": "main_reference_repl_networking.md"}, "ca3aeb0d-facc-4214-901b-066e65706835": {"doc_hash": "46b5756a46905235d179940f5075974fc8bc68bdab3fc4a0444391d68e4da415", "ref_doc_id": "main_reference_repl_networking.md"}, "546fbc69-6dbd-4d0a-919d-561570fab94b": {"doc_hash": "01f0844e25c86d69ccee70fe534453ab84af50c56a12c17e376c2b309eca6253", "ref_doc_id": "main_reference_repl_networking.md"}, "814da12f-84cc-4044-89bf-a415fe8b4f44": {"doc_hash": "934f39441fa3b9c363a64b49e5f9fd00f62e0a0b73e24ac172228d4ebd7cd8c1", "ref_doc_id": "main_reference_repl_networking.md"}, "3645f012-36a5-49e0-a4a1-a36fb918583e": {"doc_hash": "ef65096f90c391599ede6f939d05c61604061918b84dcabcdf317be2a12325fa", "ref_doc_id": "main_reference_repl_networking.md"}, "971039f0-35de-4ca6-b7f2-c170593fa162": {"doc_hash": "cc953a81c1a6cf640fd84741c78696036d612f78d4a3e0f7475b05b5c05850d3", "ref_doc_id": "main_reference_repl_networking.md"}, "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e": {"doc_hash": "d53619d927494c88ca157a148bc930b8baa2a39c114f38f86be644b39830821e", "ref_doc_id": "main_reference_repl_networking.md"}, "e53cb834-ed36-45fd-9fba-607d5f090a34": {"doc_hash": "fa25dc3e93db0a871b8941d7980985bd724b6df23fa329eea98f17b118c5da55", "ref_doc_id": "main_reference_repl_networking.md"}, "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf": {"doc_hash": "1697ddba32214b65d6ee503a1c7def8ceba5bbf98dc5b90acf728282c95579c3", "ref_doc_id": "main_reference_repl_networking.md"}, "ddd73aad-19ef-4135-88b4-fd29af9fe8f4": {"doc_hash": "2aa637b54b8ac0dce2b620f167de498b416cf7c194429a9775a5bdfb15af4fd5", "ref_doc_id": "main_reference_repl_networking.md"}, "508294e5-bb7b-4a2a-80ee-729192238bdd": {"doc_hash": "8bdcce1e10e0ab35e9d0a21261c740a5000013ac90bdc7ae6324be6e62f4892a", "ref_doc_id": "main_reference_repl_networking.md"}, "c1852214-e31f-4aa7-829d-7f502592c2cc": {"doc_hash": "7b03db3cb47a70769d79475fff5fd793db697afa6454056591190eddf3888859", "ref_doc_id": "main_reference_repl_networking.md"}, "879cb766-e368-4c38-9e4a-fcc5dfd02c1e": {"doc_hash": "659b2f57710f9ca0572bd16b593a12b6998359d9da1f89765ff86e6edd9fe727", "ref_doc_id": "main_reference_repl_networking.md"}, "907e7d26-9ea5-4b32-b5b4-4a72343176ab": {"doc_hash": "8581c201206279137429f9fb02f593e7bcddc333f75354bdb94dac29f3ea8a91", "ref_doc_id": "main_reference_repl_priceAuthority.md"}, "72662a33-8696-41e5-86f1-1c617abb8480": {"doc_hash": "6c0db90987911cdc85d01f96fabd5f7ea042c99255ce87f85d8a3969ce50f0f9", "ref_doc_id": "main_reference_repl_scratch.md"}, "b1e9b122-3555-4cb8-b447-78c10fb8b1c1": {"doc_hash": "cb6dbbce3eee6f83241f39d9ebc80b455d621a68a63a43e229e93a9814b37e46", "ref_doc_id": "main_reference_repl_scratch.md"}, "3d5f45d9-4be1-432b-a02a-3d38b6296db5": {"doc_hash": "7bedbd0df2c5ad20397a035c08b26bb86475b5953499be1918b281c764fe8492", "ref_doc_id": "main_reference_repl_scratch.md"}, "84be469c-e2ae-4296-8d7a-39396c0a6b8e": {"doc_hash": "d9dbd9f5c663acfc4fb0df22e3b44522523416b0a673a5e60987574c65d1e18d", "ref_doc_id": "main_reference_repl_timerServices.md"}, "5c3e4853-9103-405d-9756-9a0ab78c4ac5": {"doc_hash": "78e0d5701ec40b72f8b6264586fadf6e5ec1dd052b966258bf698d7d21d10751", "ref_doc_id": "main_reference_wallet-api_index.md"}, "b1250f2f-a805-4cbf-918f-a3d673f0e431": {"doc_hash": "80797230f344ff63fc0e7222d515dd9eb176158550161098b947cdfda60013a4", "ref_doc_id": "main_reference_wallet-api_index.md"}, "afba586e-f144-49e9-93c4-f17a5c4fd12c": {"doc_hash": "1202f7b1fcb1899c38827b9b95d486998da392083f32d3b4c6efe94c936e80be", "ref_doc_id": "main_reference_wallet-api_index.md"}, "8b438b43-d390-4423-a8b8-7cf1dadeb60e": {"doc_hash": "99598cd70550fb81c03690a9b615f50fea177a64618a6b5fc5b9b036bd599481", "ref_doc_id": "main_reference_wallet-api_wallet-bridge.md"}, "b0754994-a9e6-419e-8362-f16a2a3634f9": {"doc_hash": "c8f4c54b0fc60d1b7bad8b5b19ae9362f00c671575ef095cb7586548a207eb21", "ref_doc_id": "main_reference_wallet-api_wallet-bridge.md"}, "dee8b471-5189-4180-bbc1-59bd63f3f019": {"doc_hash": "967f852934a34f9d3f1567dbd32dd71c3d5ae2bb8fbb9f7d60ee52fa11a396ed", "ref_doc_id": "main_reference_wallet-api_wallet-bridge.md"}, "5d4b8ae5-f268-4643-9138-7aac4f91e9cd": {"doc_hash": "5fc81fda800c60776611f80d41ed8cfda85bc462291cd48a097f48ccc120b3a6", "ref_doc_id": "main_reference_wallet-api_wallet-bridge.md"}, "d53fb613-73d6-4535-a061-c37c6b036904": {"doc_hash": "15db3c6518fd96834485e219123886794530f77c7a34a6ca6b13a2634d1449e4", "ref_doc_id": "main_reference_wallet-api_wallet-commands.md"}, "2f455844-25e6-4fa3-8d76-8068cea91bc4": {"doc_hash": "e5542da71fe8ba53380e208504bc0f6343360e3e6ae857804f8a9983583a495a", "ref_doc_id": "main_reference_wallet-api_wallet-commands.md"}, "f01eae45-0904-4087-bdf2-49493eb9ac38": {"doc_hash": "8f7f14d5098e9d96679911acf85c3687bb94e4dc9ad4d4b3cb6da25a994768bc", "ref_doc_id": "main_reference_wallet-api_wallet-commands.md"}, "e57f8613-2de4-42d2-85a2-ade35207dfc4": {"doc_hash": "3da0bc89a8fa10ae38f003731b8bff9856d4a7dc0738164abbac6eb4b8ebd55f", "ref_doc_id": "main_reference_wallet-api_wallet-commands.md"}, "d1b503a7-b188-4763-b986-a379874fb178": {"doc_hash": "e50c0433517e0ab1e1f33859398e3fca277516de924c6010e15cc582241861a0", "ref_doc_id": "main_reference_zoe-api_index.md"}, "631f096c-16d6-4a80-a013-07dc8f5af1d6": {"doc_hash": "21f3a9b5a5f535517ace9f06c17f85903e12799cb8d98e5f7a5f86aff09b925c", "ref_doc_id": "main_reference_zoe-api_index.md"}, "9d5edabe-8650-41b0-9884-9e6a6cac2c11": {"doc_hash": "8b3a3cace30e8c7b73349fa15d2f45165bf2587caf77a79d8bc3fecf818232a6", "ref_doc_id": "main_reference_zoe-api_index.md"}, "584efdc5-419c-4757-9edf-327c99370148": {"doc_hash": "83cb96763a481c22c85d37a5c696230380ebe9905c7e2476d81ea0add99b224a", "ref_doc_id": "main_reference_zoe-api_index.md"}, "bdcf027a-f67c-47ac-af16-38fc79c57f75": {"doc_hash": "09a2f41f4e2d068de16b0881e801e742a762eefd8983e09fa537c38416dbfb57", "ref_doc_id": "main_reference_zoe-api_index.md"}, "7fff91de-8e25-4d3d-9cfd-ab51cf990de3": {"doc_hash": "6eb2d784b1be024a2f752ecb1b1728705fdcad82c17caa377784a1fabb676ba9", "ref_doc_id": "main_reference_zoe-api_index.md"}, "1c16aa3e-6706-453a-b8a2-1c345c4c1151": {"doc_hash": "f5ed3aa506b85ff836e316273c1d0f80d1d1d8e6c7eab9d90eef451e80f26f33", "ref_doc_id": "main_reference_zoe-api_index.md"}, "1c51c36c-d142-4a51-a48a-1589f5e4a483": {"doc_hash": "f3a4e01b1239f182bb47677b492071e87dae9a11670f68310f35bb2a4f4543e0", "ref_doc_id": "main_reference_zoe-api_index.md"}, "f20eb75f-1947-4041-bd99-9dff5e12c271": {"doc_hash": "39b317a3470af13d0d0c023ed291d26fe3847b8e40e8f8d8e3cbd563a5c93cd8", "ref_doc_id": "main_reference_zoe-api_index.md"}, "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d": {"doc_hash": "79fafc7648bb88dc48ff9fa02b271021eb33dc451a785f9b8f8f6f2630c7d17f", "ref_doc_id": "main_reference_zoe-api_index.md"}, "95f933f2-6cea-4879-b67a-f33968a2567d": {"doc_hash": "585040588666ddf2f1b149851dd724372900fd2c943aee53539cb5bf190df9ed", "ref_doc_id": "main_reference_zoe-api_index.md"}, "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4": {"doc_hash": "34781091354512680ef8f5eaaf3e1dacecc00d9999c00f493831b748b04e2bc4", "ref_doc_id": "main_reference_zoe-api_index.md"}, "d1795752-b0a6-4cff-893d-754d90cc3ba9": {"doc_hash": "64b4607634fcfa436efb07834b1e1e6747eca673082c2338779905f1b2d8db9c", "ref_doc_id": "main_reference_zoe-api_index.md"}, "3b541d11-c176-433e-bd3f-8c69fcee85e7": {"doc_hash": "ed626b9192db08df4a8fce9083f6759978a8561ded418a939d929f025bcf20bb", "ref_doc_id": "main_reference_zoe-api_index.md"}, "0034c606-88fe-4fc9-9053-1aed771c794e": {"doc_hash": "6926ffb938e249a97bc3dab3fab05984ded35f778adda1da046afc6586d43dcd", "ref_doc_id": "main_reference_zoe-api_index.md"}, "81244a86-0435-45e4-9a54-25a9bf48b392": {"doc_hash": "72c678ae7dbdb459189eba3beb69824eac6914d9678016daa083e425dc15c72b", "ref_doc_id": "main_reference_zoe-api_index.md"}, "395e1f9b-7342-4445-a2b5-5e1c610592ca": {"doc_hash": "5791200bd419653a3ecac3b26bdba4dc09741b81921ba42e18e7cd9eb1ae23b5", "ref_doc_id": "main_reference_zoe-api_index.md"}, "8be19f70-2c03-41e2-8d30-7d0056abe8a2": {"doc_hash": "68bdbe52b8faa54dbb318b3a0f300c0b25d90f71175ac35c5d38c1ff0bbf923e", "ref_doc_id": "main_reference_zoe-api_index.md"}, "688dc657-5f98-4a54-a62a-0293f0a65745": {"doc_hash": "c4e93f2f397d04125fe7c11bc2cdd83702e6fafbc030c3704ad5349e7b4bcf33", "ref_doc_id": "main_reference_zoe-api_index.md"}, "868bd997-f84a-4a2e-b50b-2e6a133d315d": {"doc_hash": "42dd31c374e61ca3886d13e662f69f8aabe479d0ebb0b3b47807c59c55179ae6", "ref_doc_id": "main_reference_zoe-api_mutable-quote.md"}, "b862a9b2-e939-4268-9964-7766c9e76080": {"doc_hash": "b84bb7b3e82e5177cd8447273e4b990d93ea3f712181ab0837f4e3834780b1d3", "ref_doc_id": "main_reference_zoe-api_mutable-quote.md"}, "c98b3d63-58e8-43a1-a41c-c55f0042f0df": {"doc_hash": "553873a533241cbece010e885fe9703b59a821d58450d4789542160666cfb825", "ref_doc_id": "main_reference_zoe-api_mutable-quote.md"}, "9d5a9db5-ddd5-48ba-a50a-676c38ff6dd9": {"doc_hash": "5d3bae56eec883b6a073e22dd4082d4ecb0e30d4353676a65ebe94ab9fd39a59", "ref_doc_id": "main_reference_zoe-api_price-authority-admin.md"}, "ef6373db-674d-4d38-a28a-e902510cd65f": {"doc_hash": "5e765e2df488cdb0fab40080ebc9a69220b93148678126c26a047e98adb842bd", "ref_doc_id": "main_reference_zoe-api_price-authority-admin.md"}, "cfdce8e5-a2de-4c8f-8b20-3643dbf191fd": {"doc_hash": "f36727a351732091d5a2f9e3bf76caf683ea955f64937eb2c603d542ae6ad748", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "5812cff1-9f03-4d21-934d-bc1c6efaec80": {"doc_hash": "ace6a59cf4ced42ba4d7740adc2a59b11233384137b6570ba48fc98e182ef26d", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "1d4b98fa-5b46-404e-8c32-eeb94b632b04": {"doc_hash": "0b1e3abea4163c1a9aec866a1aeb50adfcdc60d59f29cab669e9a2a84d6de1f1", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c": {"doc_hash": "b06eb94b82576f635a06a1ebba1a01732b50d8024021d014406cdfeddd0707b0", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "456d04c5-779a-4840-8451-e6d2f63e7f75": {"doc_hash": "37b38c7ae2b708f664733f3ce9b694d7b8f4028a18eb4c6111cb223fce6249a5", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "ef20ddcf-de03-4051-bb21-94484f6ef5b5": {"doc_hash": "784acfd0cf7550aa231351b9ad79f5ced84882d9b19fef40a8154b85dbb582cc", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "3455549d-f28c-45a9-9baf-93f185fa8338": {"doc_hash": "2d5723a8feb91eddb2c5a64d30baf1c2d05587309030159311a00698eee06c90", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "3b9d150d-b9e8-41c2-922b-6716df827837": {"doc_hash": "ef74f228398341a224b755d620a17339ba5f702779046283db1ef74863db81df", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "bbffb93a-c612-489f-97b1-22efc935c77e": {"doc_hash": "42430fc2cc37a19b18e0106a7ee8b8b0ffec1573ab460102bfe099bbf4d90899", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "03a9eb2d-1ecb-4148-ab3f-701681c4f089": {"doc_hash": "5d26da6a4c84a0842a202e99d965a6c639980d0f5ea17aaaea9bcdf2499f2bfa", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "96982d35-6c07-4209-b484-c511128660dc": {"doc_hash": "03236a2d631c405b2b00bf647d13251be4e550acfc0a4d8397f943354f44db57", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "0b894f9e-15c5-4c32-874c-cd255f2e6417": {"doc_hash": "16979b738323f77e4521ec28ee7693415455a0acb39c57177d95ad0a909c5a89", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "562e2eaa-1d2e-4e98-ac79-9a670c222277": {"doc_hash": "e9ff4b431c7f4acf8954cd071bf2d79daeb8d6423f62e98d807e3efc2fd845f9", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "126310b5-b1c1-4ed4-9751-2b1f1e52b760": {"doc_hash": "68c3f12af72cf493b91584ea0bb0bcfdddd654d6750e91d8924cb58a3bebe451", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "c5406b19-e121-4e99-b208-68599970c8ce": {"doc_hash": "8b9f5cd8cd9a00778601c1e3ac41bf605b8c638d9d398668a8aab657dc39304b", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "f0573b45-150e-4885-a5ec-40f1550f19fa": {"doc_hash": "c9ff2e17522f2c1718f90f60757d9b9c3f6ff728a9fe0a1b20967267aedf86ed", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78": {"doc_hash": "978365e8357853ed5fbf1a4942898e9a30ebae0c726f126ff1bb14ceddc13bbd", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "34f9df45-4bc3-4660-8772-bd6b9b3ee73b": {"doc_hash": "b1030d42e46e1ab25514403fbfa8d1f5c77c0771a19231a232b1f158074af8cd", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "5d08bb50-f548-4ca4-be6e-7510e0b10c4f": {"doc_hash": "d809f20444e9b9974f1d68f8d172ba73969b93c4ba9ba7f3dff37e57bd146941", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "2561e202-1bab-4901-927c-0c4ca186b12c": {"doc_hash": "ec1ebf3c9f08c842ab1ad97e9ede55fa8f8c3f89cc8c219c9e23c3e769166cfe", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "6cf4cc70-0418-4718-b75c-118cfc7b5048": {"doc_hash": "d97c5c534e778af4fe9939e745477dbc32e5c69ff77629f2d3e944d7b4b23ed4", "ref_doc_id": "main_reference_zoe-api_price-authority.md"}, "176b2fab-51c2-4cc8-911c-895bf0706c08": {"doc_hash": "95f3c257d2bb77f753cb2a73884ae51d59d4ff0956734a03cd3ee85824f7eaf3", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "c9efd59b-4d23-4c2d-b56b-73197265083e": {"doc_hash": "8009a9925ea3bcf90ac0e565abb46c7ab5f1d60f69894efe65227abd12136bd8", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "a30dee1e-8825-4a7a-802a-df7f70e55e59": {"doc_hash": "accdeae0b6ac882821bfca80da820bbcea1524d45a801d5724bdf3b2de08554c", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31": {"doc_hash": "d40f4b4e279490d3842f1efcf5647f3e3d8c72c560e3ae725471d1b1d077d549", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5": {"doc_hash": "220b6bc47d2fb413f7e4427d268928328357f75ef6066a462e4503a810479fcb", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "1b9f5343-7882-4d60-9da3-4a7b121c52df": {"doc_hash": "4234dd5f7d1b3b57e549febf2d5f1953d314e1486fd1fb3645b2b45e3feb5cee", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "b921781b-f8a0-4b4f-b950-df248b5427db": {"doc_hash": "186bc756f508d7f2d4d53b8c3d0a9787792c27801b41c30db1cf2bbaf58e5328", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "2c11f23c-5b6f-414e-9a74-f90874cb5f31": {"doc_hash": "b85d89046a2ab7e230f08a715f37040f1382568724c8c6ec5fc67679424deaf0", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "9484c566-490c-41a5-89df-2f604858c9c9": {"doc_hash": "de9da650ac299be51782455b367c02c4ee2504880ff65e47d3ef0da10bde90a4", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "6be391e5-9b5f-4fc3-9f67-334592758f1b": {"doc_hash": "c8af5c4f1a0af6d076503751e4b16978a496ca96dfc8ab82a9110d734fae5e34", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "e602b352-6a7f-4228-a976-8f028b401164": {"doc_hash": "c3d45a1e18140e40400e3f5374208f644ae723d061a8d2be4e5e453465d605dc", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "cc041423-ad69-42ed-9381-32f45e2c82b0": {"doc_hash": "ebdb41e6d6c6204ef71a7f51aaf82e59091a084e4267241e3b0f914cd6cd15f8", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "2f8f492f-5032-451b-919c-44e8d347f4d0": {"doc_hash": "4dd60051455c479cb7cd0228a4ef0060960176d50accd81d99b6cdd33be685b2", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "6e701e34-b211-4106-9ce0-f35bc767bfae": {"doc_hash": "73f936ea15318469cc8c2fec2ce958e2e7a9e451c5a919d9e0da52497458e40b", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176": {"doc_hash": "84b9e300ef77944b6888f0eb8865a0b5c5c3425b6a6aca80bf68126a4fcafa0f", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "3dcd1c22-2dc5-4683-8c8b-db59bac537d9": {"doc_hash": "996eb812bf88a9c5ecbc666b494c08c8813224e02e26ed091d95b4da8dfaa9ad", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "496e0df3-a138-4b87-a114-0b7d37d73d4d": {"doc_hash": "e89c28b2859427ffa59b79716866165f3b57aefa47cc42f6378ddc8a9364f3db", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "4cebf3be-c41d-4f78-8940-33d0f61e2474": {"doc_hash": "a50576a73b85ef91c77b0c389076172a43973535c149db450db6419c9c2a8eb2", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "74b53960-32b5-475c-b65b-f274a582f722": {"doc_hash": "adba1fc66bf9b04eabde2249e0a09606372ad9f882c38c331be585ff9329987a", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "c3da5602-00ff-4987-aff3-0ff557cb73aa": {"doc_hash": "dcbadde7e142a52d6ba4c9d64462f8ed2da4b085b5dee7745154128b98c995da", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f": {"doc_hash": "294ea8d7f5c3b137848f4c899a2fbf9d8687da01928b23fb647214c1e4d91119", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "034beb18-7d94-4daf-b839-a04e4b622cc1": {"doc_hash": "ef00d4f3fc0815527450d1ff771da6c48c1dd61a3ddf206f6d5d35cacaaba917", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "5875d24a-5b24-4904-8ac8-e3b9fbe1c713": {"doc_hash": "e7a9650b9b7806c9044acd93597c050750f94bd5d58082125445b6ed0d47a8d8", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "6cbc9f09-3790-4639-b6c1-d77fe26e4d81": {"doc_hash": "12621e2c33cffffa01e25af13a67c562f0765af296dc30a08a8bc5beaf920313", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc": {"doc_hash": "05d09273896caa29a9f65fb61813ca45a8df3073856a5a43bc55f7a0ac8cbda5", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "f6af7c9e-7568-435d-841e-add9f033389d": {"doc_hash": "78cf9b81483fea7f0515a11727b671596e8166883cd4a7061a2acdcd2c80004c", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "8a79d54a-4840-4949-8766-6438e3f993c5": {"doc_hash": "f79094d002d74370e38467bff19788f19101b4815353b629e27437f242c5fd60", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b": {"doc_hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "3b102bd7-50c8-4406-9e58-e023d27e567d": {"doc_hash": "fdb4540d9970251f5d98b4c12bb524cd8b504f6a7b113f5a11fa80f3497c90fe", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "7b688279-c190-4409-865f-23b9635ec480": {"doc_hash": "1710f4831b19ee10d129dfe29e25688d65d4ed227813a253e50896c1d7603d07", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "0e0ec446-40eb-4846-855f-0fdb00459b6f": {"doc_hash": "a662ea605b4b72986b113f20176beb2fd0489dc0bf1c1c11f79e6a7dd5f8f84e", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "46e65229-9f44-4f19-b145-c1cd1a7d5877": {"doc_hash": "849a38bead87e7accf9505236b156809c871abadcae615b8f9587aa6b128b64f", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "d366aafd-6a28-4a2d-bee6-8ef946e14aa8": {"doc_hash": "b22955b27a661cec7580e096b203ce39043c7ba0dc5fddc24c2d5ad7181b19dd", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a": {"doc_hash": "64c249bb492f73420e52031c33c5ad92e6a33c1422545eb504743ff35d30b4d2", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "166c4685-0c88-4e3e-a3a5-5434557e4b2d": {"doc_hash": "03708048b6ee3cdedcb3ec517ec38f9a570cfc2b7758ddd2331c13a4caab2bcc", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "77455358-6a7c-4e79-a230-a271fadc5e46": {"doc_hash": "8021d70b5928dd6b3e4440d6742f18c445a2dd2c10867dea539a1851042c820f", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "d193bf99-9749-4c0a-8295-622a1c054c1d": {"doc_hash": "b260f4ceac75325ed3b50a620e00999d0a87169bc3e801e4b2d5353d816f2c26", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "8734f9ee-79b1-40af-9d09-a7d16c051d3d": {"doc_hash": "86f5b121ec1107de87fe57658b2583a8e51ab6421de35af038525ed3d07b81ef", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "a727e192-7b65-447c-af9f-aea52bc83629": {"doc_hash": "90c378c17c2ffbae041693bdea9470429f704cbd8f6a8c181315a740e287c634", "ref_doc_id": "main_reference_zoe-api_ratio-math.md"}, "f5dfd582-6e9c-4483-bd1c-2e41228dd077": {"doc_hash": "612881e822f864ac13c6933eeab150493993ad092aacd25bf62989d1efa9d4f2", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "18a08a27-5e4f-41b2-831f-70b761b637b2": {"doc_hash": "19294985840f70ddb702a0466399c7e1c508f4856fc5f44ade8419b239110eb3", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "229f6e77-8553-4753-8b4c-0a321328b1a0": {"doc_hash": "38e132757cfbbae0f3073925554ee495ce2b892897a8285b65c6e6e87cd8fdcc", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "15af6a7f-e766-40f7-8ec1-5539e78aa6ca": {"doc_hash": "2166055a8b18b681317250f6fdd470d7a10033deab8cdaffffdce9656f15d152", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2": {"doc_hash": "b86f1feb7ef8e446c0e54ce550b817ed0cd8b53ca71d643719ce92c09bd54fcb", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "9acd3be6-50b0-4305-8b14-3d5148977c3c": {"doc_hash": "556f2a3268ea6b6377865f92919c540189a4ebf6e863ec038c0128073257c7fa", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "1d0f210c-f265-40f1-97f2-92d5b9287c64": {"doc_hash": "78f398965655e7e3a51741acaada898bcda768fb6efb15a882576ee6a6c10c00", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "0b1c90ad-dfb4-405b-bf95-f65b5db907c0": {"doc_hash": "14b9466933b8a0ea92a573cf54e76cae5e185cc10d218dd8e06ef0cedd129f0d", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "12f25b05-f98f-49a6-bb38-cc63d7214129": {"doc_hash": "458ee4fd90796878be74372630511da011017fb2e00462c02f0c342806425330", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "af1bd818-4145-465d-ada9-9a57a955e36d": {"doc_hash": "aed3eafcb1891e932f47a3b12ddcef8c6122970f8c5990ff0e1f39b314de6ac2", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "c4064c16-0384-4af8-9016-af808dd68a04": {"doc_hash": "ba44a83d0278c3021b13c31865545031d8c3dd9f9ba21857c860d46dd5fdc826", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "bd7756f6-3f49-4687-bf39-4843de7e068e": {"doc_hash": "517dcb6b5f7747607b709017ffbcc459e556f0dfabe84051c324d979b952467d", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "920fb742-0525-4546-a363-f33fbf6b0676": {"doc_hash": "f340085355cb4ca552c91871c96443cc3f5fdd9a7342177e84f97c8e80df4457", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "3c538f1f-61f6-485a-8235-1778c487bb81": {"doc_hash": "c32636e3c54e519bb89ec59849871543a5153ab48b9b95353b54bebfadb84466", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "78c094e5-c717-4d37-a9d5-aa8678b82b0d": {"doc_hash": "f8b25980cb43140aa6ab933ff745e73c021865eba4085538c776f613be27cfeb", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "df8e8e7c-8103-4e56-97b9-d2ea21449d25": {"doc_hash": "02b5a9d8c04411f032d8ef48357d1b17ae8b7e60cbfe61dffeaec47a1c7d7679", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "094ff33b-ec22-4b2f-9145-76255d9c5d86": {"doc_hash": "f7e22dee5207e2ffcc0c664caabd685d7df63fa024fb0bebb919e5f5ef814c07", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "163886e6-60e5-4786-8bd8-8b4441aff54e": {"doc_hash": "0d3c4117a19e91c308c7a49374aa801c93bb6754c142ea74d9183a536e44c670", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "768d53f9-5962-4a72-8037-1421e9dbab3f": {"doc_hash": "745e83ce2975f5f4abfd0bcadb0751ef632011eec22748d064893af59fe24ca4", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "d209a822-02f5-409e-b348-74fdf5f471a7": {"doc_hash": "0627078dbe9cba51eae699cb0fc658522520c9d5a15e6ae0b125522e6e9b4102", "ref_doc_id": "main_reference_zoe-api_user-seat.md"}, "507655e6-0116-4a68-8789-9fe7ab1ac23a": {"doc_hash": "8f7210f09961aa8495c7c40d1347fd9946f932f021a2b029be3cdcc7a22c9cdf", "ref_doc_id": "main_reference_zoe-api_zcfmint.md"}, "6b060d2d-6ced-4a4b-8cd7-19a774d76dac": {"doc_hash": "403dbf7ea1a7228bd5fe76c9682ee5470350c4428c11a457ce2bdc667701261a", "ref_doc_id": "main_reference_zoe-api_zcfmint.md"}, "e14cc516-0ab9-4d12-bda9-8f02f02f84ac": {"doc_hash": "ce4879250df61c864a9231a87495693491f385b5957531f60cc36aa15510aa08", "ref_doc_id": "main_reference_zoe-api_zcfmint.md"}, "fe49fc9e-b6eb-4405-b57e-b9a35f107013": {"doc_hash": "2f379e3482201d6852b917d3d9e060906941a806668737e36bb8dab6eb855769", "ref_doc_id": "main_reference_zoe-api_zcfmint.md"}, "77c17476-4707-4814-be0e-8fa48a4b2da0": {"doc_hash": "9184b95d99a0b054681e73a86b79aab9260370fe4d8324411bfcf6061e1bded9", "ref_doc_id": "main_reference_zoe-api_zcfmint.md"}, "9d11636f-1f01-4d57-a63a-cd2e3ed83750": {"doc_hash": "4489bed722ef437a6c0df2a887da526eca86d6f1f647f58b026e51cb09dc8156", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60": {"doc_hash": "50036f893e169fd938dd0a0680c0eeefe70020441b6a45f1197cc8a22403fa80", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "7b44113e-1f24-4cb0-ab01-e566f2962f3d": {"doc_hash": "ce00aa730b2054c4991524f8c20fda56929ab80624c25a70016efd8f51afd032", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "f447f9c9-3f70-48a6-8706-e8c85112072d": {"doc_hash": "6ad6a291e2bc4b9a68e6ea2d534338ddba213a69aada2bb8806ab6390679c7b1", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "10bb00d5-7a01-4015-9d51-a6500899b27d": {"doc_hash": "66672d16845fe3e9c7237796f493e04149682d670e171b878f2ec7a0534feb02", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "0c08f434-0e1b-4b0f-8158-42610e59cdea": {"doc_hash": "f45783911fb1c42d29cd67fd9f30fc40cd5827dae419f06bcec10043670e71cd", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827": {"doc_hash": "78ee2694f12bc0485ac9a9b45ec7c02dd6803244954244854b64a5ffb0bacf9c", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf": {"doc_hash": "6b905dd455bcf0b2a869b81b57105e98cdb46c2a02df2a25a50de8e67fe13bfb", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "2827a890-94ca-44fe-ab47-241a03e09f7f": {"doc_hash": "5abd39dc8f5f9d2e486b41a56209c8ab51694df20fd31b8fd6fa8dd6f50024ff", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "faa69621-4e74-4f09-a550-48563091ffe3": {"doc_hash": "066e2876dbdf132971b6273d631305104d73409a79f39a6551e17925e630e895", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "79a36fa9-259c-40db-bccd-a86fb486eaaf": {"doc_hash": "26259617e43d5afe5bc2aae60cd058360481fbb764da2397df756e809c5c3b8b", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "985d008c-16e5-4649-b52e-bc5b7b0350e8": {"doc_hash": "8a0986f6f45400eb5fa4f9cfc7e23d52bab2862b476a9dd67278990328068f56", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "f561039b-42ab-46b6-ba55-b46755f33fc3": {"doc_hash": "2032262add55faa2e63635b137c09c670b1b3e44eb0164be54af312cb475fcac", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "72e6809a-45b7-41d8-84d0-0ddca9edc184": {"doc_hash": "ff2d2ded1ea839e8284756e68dd1c4ed83adda047475fb95dd82dcd202e4d3c2", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "d59534f4-6311-4b0e-a743-e143d2566df9": {"doc_hash": "da311b7997ec7df3b6084d80b6ae9f9c16bf0f0d62c0c4581459ed5f9d231b60", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "78bae0eb-0efc-47d7-b2b1-dad51a140ac5": {"doc_hash": "e2ad97f41f111f6cdbd52ab46e2f33699f9a47c0c719b11bb3769169de8829e6", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "83b468cb-18c0-4008-aa82-6ac7cc3a0b04": {"doc_hash": "3ff4385b216482d054c4bd289fca29be9b9850f68d4e8c010ef5d096394b3fe0", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "1804d37d-492f-40ea-ad50-b7ddd7f53fb3": {"doc_hash": "3cef2d0f8b514736a843418be4c2e78983795218f471ac7adf2e64a91df78e61", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "a1c966fa-843c-44e6-867b-92f49fb76f4a": {"doc_hash": "3e51bd32c3a9db5a4ca507a2233d563966f8e3f5b0fdf4f895ac369d81da1932", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "0272bf36-d8ee-400c-a5bf-105377d1245f": {"doc_hash": "9f5d42a4c540865e588cdc4f7301bb7c6a3402783c7cb210414578b8f25a7786", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "e9dd1b78-9476-4802-a430-197776dc99ba": {"doc_hash": "50593c1d748d8e1b9575f83c8a0de9cdf0c9b3103f707d29368dc8acf7aeeab5", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1": {"doc_hash": "c737f2327b0694994d91926750bb26ac04005c5791200bf66a26d1f811468aea", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "36c1e7c5-2440-4792-8666-3a37ca44497f": {"doc_hash": "58b8cce410a86bea479c57a28c00d74b639fc8e9aa2a3a6801f251ae4a8afaa8", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "b58ad44f-f800-4d2f-9800-2486c77df8ac": {"doc_hash": "18ab5045b7fc5e57972ced9e5df93924c4a27330cc18a1096726e5c4a7f378a1", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9": {"doc_hash": "5b6c4b53ac4d750d72ba8553122e6a065814b766507e240e37c27a2c4fd0add4", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "71dc7d12-7442-4cf3-aa7c-891dcbde34ce": {"doc_hash": "3ba17d6783796b4a0425d73e5a636a98386f550c6f703e18a907b759dfcd35d6", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "5e4a4ef1-d782-4e3b-8132-dd7847d4c895": {"doc_hash": "d4d237f5bd8050ec7eb15276bb48c43e458e35a972e637256559c8ab09eb8d42", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "7991d951-8b81-42bb-9385-197799a345f4": {"doc_hash": "c8d41428098bd28a7c7fa9d1aabee5dafa93929bbb5d9a087b2bc54ea80a1261", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "f78d295b-189b-465c-b44b-0daab9030453": {"doc_hash": "c2bb85c08f50e8afad41bf0f76c13eb79916eca23a8cc1b7add264a42ddbb32b", "ref_doc_id": "main_reference_zoe-api_zcfseat.md"}, "394dcad8-d165-499e-96f8-de179a6eeaaa": {"doc_hash": "c6d0d7e1b5df2d598469510718520d1b3ec0b4f36bf72f7c6226fc25a3f2ae31", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "753d946f-f407-4e25-8b49-ba890e516e02": {"doc_hash": "e0046e0a65010028a8c2b7ac0862a66af49e7c0e98d3c342092bafae2d5c6210", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "a3489153-e598-4949-8eb1-be1aa9a16af5": {"doc_hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "cffeb22c-c446-4ec9-aa81-28b29e4a0d37": {"doc_hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "6b97b380-b502-432f-9da6-316aeec8359f": {"doc_hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "e32a56ed-d543-45e8-b904-ed7ff8490efa": {"doc_hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "86e533a3-a20c-4f60-ab75-a2a191d842c7": {"doc_hash": "4edf03b55c855b578f312d086191911792f76433c796967e9fa62448456567a7", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "5ec268f4-b77e-4116-b48b-738980a5ea79": {"doc_hash": "afe8491dbf705079902ca06d27906ccb5ac14d8395887a51f56c3fbcbf4e0493", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "7753c0ea-6951-4800-b3cc-3cab5719081a": {"doc_hash": "bfcd5b49ea531b494bcbfa1fb9295e4d8b2beb4ff6949b0f4338d65bc505c380", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "9e145ea7-4041-428a-856a-d9da3590d2a1": {"doc_hash": "b30970c5ff8e7b885c6016c280ac1bf7934062d33c528141c747f43391a9d4b9", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "6bd911dd-1dd6-4073-9ed3-fceced04dcf4": {"doc_hash": "4247c7a81e4c6b77f163e72c9129aab5be75ab5a1f2e17b0a4fb4d124f950a8e", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "9624c528-ffce-41d6-be13-6855d7d7afa0": {"doc_hash": "a92a651217c9c6d768b76bb2375c621fa1913fc00730fff356d9389ef711fc9e", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "f42db2e7-f7f8-4fd2-9c00-fd123385b84a": {"doc_hash": "09dbd15744a38a5470e6c3670b57a3769b3a87f4ba54470c5d6681539ed1e806", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05": {"doc_hash": "13ec7f4ee5ecc10195086fb5a17e63382dc4c885322672d1abde449660d682cd", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e": {"doc_hash": "0e7474081db75421c5a56ec66b65ffc1ef337bfb5538989727457012c31cb116", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "10c09f27-6912-4282-9a17-1ad91e9c2690": {"doc_hash": "006bbcde5d442d110f562754f3aefc519a78a15547ca3d8a5577f4bb53143b30", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "ec53a38c-70ed-4039-84dd-e242f5c1be85": {"doc_hash": "5792cf1888e37f8b843ce733a0015802ba1688013e83a239b5d8b2f5654b66dd", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "6c3612af-da8c-41da-a29b-5ce8e6430fce": {"doc_hash": "ffb9130979dd0807164da103079821795707f9412aca7c2ef5ad0925f58ca550", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0": {"doc_hash": "175e13a56cf0e1e738b194440569d002c7d1b87ea2d5f8306e05d233de0a6b4f", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "525b66de-dd33-47c4-822e-0903a759e0b0": {"doc_hash": "e9583b7f8b166210a050b358cc0a0ceac1ca274f46fba8e7d62251f56990acaa", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb": {"doc_hash": "cb115782e4f126300661a75d1a7e461154699d8777a2538253cb0ed7d0775517", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "27c119ab-3e62-45b8-8fb0-a4ab8242c95d": {"doc_hash": "8e88847818407cde596aa8e85e87b48256915b9e05b0fdd18ceeb4b53752df1e", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "b25c6c6b-9ff5-43bb-ad57-9fea59776ece": {"doc_hash": "748df86d61ef5b28037846c64b186637444290e992c93b549ff09ed20c9e1b17", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "349883ad-3701-48b6-9e3a-4bb8756348f5": {"doc_hash": "d77898c0fc0a971f5c29033261be1b4d13128fca1a1242c91b099869bd162ee4", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "579790a1-9007-434f-b325-2fb04d6bf6d3": {"doc_hash": "1717e517ac685b86d7a9550a6bcd8ec405fddbe28304ae6dff1d39405c5c1e04", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "02491069-b70a-4118-92ce-3fe6dd8a85ea": {"doc_hash": "df6fb3e2aa0cf810cefa68de36ec23eea49944e74a3a8be903213cc291689e11", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "19454e34-af09-4a84-aa88-8543bb4cd22a": {"doc_hash": "1e7c3de9202adabe63adc182f9e564db4da4e198c7b6411e599154b821164428", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "d62ad2ee-c4ca-4a96-a31d-6fa73768126a": {"doc_hash": "96b3e27e3801efa19468075ce35a78799ed674dd1c3cca156836d5bb71748b23", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "02756ea4-392c-4303-b5fe-c5c31b5708b0": {"doc_hash": "a9cda11da4cc046017b7f146d0d8e74aba5f8d057ed782b42bd5dfe029b53b9a", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "84328755-4f0a-4659-9975-1947cad2422b": {"doc_hash": "ff5f3e56717850a96f2a902e7cc707c172c153410a8fcbcc965aa2b692bd4240", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "d3854786-ba35-46a1-8e09-63acbb6ffb1e": {"doc_hash": "53d2a965ddfbd2b1d6d64fb830e77e2d628171d4462dd1ee15077dd50b8fb40b", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "d53392bc-6985-473c-b085-afa7617f92f7": {"doc_hash": "ce3208c3c8c5653ad18baf57c471179a6de92e4b51a70d8283a9d5d1e54958e6", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "047d5c13-cfb0-4f32-8188-575a558dadfe": {"doc_hash": "12830fd3f23636e491d4ae6f6e9b878cd1fc721b55bf103f745efc8cc7fbb9e0", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "2af35305-5330-4c2c-885d-167a626b1176": {"doc_hash": "54989ad634e0e6ef16aa60f80ddabb69ac810784684bba5095385d192d20bbe9", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "e037c1f0-03e9-4d1f-81f1-edba9d8549f2": {"doc_hash": "4713c5100273d6a8a353cba31f6188fe4d3f7bad8929230c63877329972b03a4", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d": {"doc_hash": "0e740ef1fad011f922b6d1ddca18133296d5a7caf14930a526dd44aaa85d9f68", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "20c534f1-2602-4ec6-8519-f8d5fde0d74b": {"doc_hash": "bfedce3aab58c9414ad723780b6aaf495fbdf19cd75ee6572dfe8811edc632d0", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "a7f56897-24ab-46af-88a2-cd4ba8fa7d10": {"doc_hash": "2da776ff5d92530569cdbe1c29fc9c3eecdbdbc7b1bac4392e6bba8db431a34f", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d": {"doc_hash": "c11b89ee03a03ebd7ce0c9ecbdc7aa6d57286766e44dae15741beecd873346f5", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "56e3c7e7-eafd-486c-88fa-90f641b51239": {"doc_hash": "7be290719de9e4c71121be072f1e06928e3a11a9b8f1f276331265073d32e77e", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "c45cc69e-c86f-443e-934f-dc54dda7b4f3": {"doc_hash": "da55284993bbb5785470c4aecaf15ae9403fecdcd2340225640656a025441390", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "b712c677-bf05-4a76-8151-d68880764872": {"doc_hash": "3666b00ad76bcf0fe32ff36970adeaf5f15d413940c7096357b7ce63859e0b96", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "91daca1c-2720-4089-bc94-1b26627434af": {"doc_hash": "0f040302511b056562316831034ffbc450551c03eeaeaac08a0a140ad5e02f7d", "ref_doc_id": "main_reference_zoe-api_zoe-contract-facet.md"}, "e4761fcc-3b95-4766-ac1d-b78ef7b6a430": {"doc_hash": "20f80eec8e924ee47a11def7b5d5c77f7270cd023e5045d8f759f33cb958f798", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "36d394fb-49fd-47cb-81f9-ab2e6542f546": {"doc_hash": "c70e04fcad2daa50d2becb7bf8039b9ab1224679dd47a33dd116b82f3a7b67d1", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "34480ea1-9e2a-48f6-a35d-6d1e20068a14": {"doc_hash": "0bcec248beed451df0f3139c1f93982053189b4a426714b73d8c61b0c2a211b6", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9": {"doc_hash": "6a58b8288b5c6a2d06179bc7d2bd94da1e2d497be39ab02af3f34cfd1777b9c9", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "a6f49309-1fd9-4eaa-aa8a-887f5e519a47": {"doc_hash": "95aadaafa48e52a3bbee70d0cefe4815eb09bc490394555d76f085ecf845c60f", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "1b8e0cef-7b92-460c-b516-9394cf8a99a4": {"doc_hash": "23659ac005e1debfdafdfb60d5a4e2a5b863a96d0261a8447cd30601f583b27d", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "87d35163-0675-4e22-b2bd-f8da2e95b7be": {"doc_hash": "cdc66939dd4c3e97b5e1fbd654be292183e9be3db1e9b47e542bb5d1744042e4", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "7729e7aa-2c72-4524-bb67-e4df0a14bcff": {"doc_hash": "617a6ec006d4569ccfe4a1c2aa4f1dc51dd7580a420cb5dc854e4f9b171524fc", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a": {"doc_hash": "51f9d27eb931728516a9227c61652567cb45f24fa7e63da1f907ce2674b300ee", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "c194e683-5e0e-43c0-9060-eed4ac8afe0d": {"doc_hash": "dab4d7e6330a3f114a792b6233f47ec5fbda7ab779d8d280f44967987307f13a", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "92b8ba1b-1236-409e-bef5-bab644ea2ac1": {"doc_hash": "050100c7aa4099470af643a8d5b4f991f5bd55884b900e727003f9f29ade8813", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "2f95656b-9a1f-4b55-a815-9a2666cdf865": {"doc_hash": "449b94432cc58fc266f9e4d1596510034152f695cdbe85930d73f2d8bf5dec7c", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "70540470-ddf1-4add-9953-8fe27b807efa": {"doc_hash": "4342b925a59ecd020e7ec348aab7dc3d6b67428d98d039109be530236013d479", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979": {"doc_hash": "a1c0b84345af74abd097ee8085ed3d23368b238732db444700d08f303ba9a3e8", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "6a1f0023-4051-4212-b480-c112fead71cf": {"doc_hash": "58ccc4220130c09963d3ec28b98545c56f985f5e1b2d8154cff14280b2bcbdc8", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "d5b40086-2a89-474d-9015-9f48a9c8df22": {"doc_hash": "cfbf7170a9afce94e3248921b88eb224ecf4a964158ebde0bad016395dc3e339", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "ec49b791-54c1-4ddc-a287-c41aa74da1dc": {"doc_hash": "efc5177e040a5fac38daaa7efb8314fe28bca8723c1fceb5f9fbe173cacaa87d", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "0f365d0f-f051-469d-8cf2-4074bcb92d61": {"doc_hash": "09fc4b41e7e2a29e5cb2561bf7057aa1a4a345dba480e7218464e5bdafdef3a5", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "0ff944d4-304d-4665-938d-3569ecb4ffa1": {"doc_hash": "1e3cc0c56d81036e620c4d0a2e4a5dcfb90cecf0e4fcfc89ecbb16775543fb56", "ref_doc_id": "main_reference_zoe-api_zoe-data-types.md"}, "dba51709-bd69-4e7d-abbd-fad45f30793e": {"doc_hash": "b0419d7758584a0f2a5f3ce93aa387e018946ae1b1c8c42f56e17d696428d3e9", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "5110d15f-432f-4f8d-af20-7b29e0bed3b1": {"doc_hash": "9060662ae5a4ae817a0d797683acb9bf9b8f9c85c98fe3e605c30c69f4d6f47f", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "23cf50df-7956-4a80-a7ed-98ab665181c3": {"doc_hash": "e3e84b7ce281685ecf5a9270db62c4400dfd7934f9a03e91c25c5f4a407566cd", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "1f1134ee-e5fe-495d-90a5-6846e6656d0b": {"doc_hash": "bf62e0797e7b8b1eb705fd574366b2bc38e176e95804ecfd2ffbb1bc9e80d436", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "4b278f8d-e6d8-4af9-95c5-2f246a771c3a": {"doc_hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "a6a7111b-48d8-4fed-aee8-3c2c4ad76964": {"doc_hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "99756241-b063-4c22-a583-dfcb96a6258c": {"doc_hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "80f765a9-af98-47f2-9697-09ee724fc62e": {"doc_hash": "64b8582a3ca0ba5572fc290a6be0657e3ba28942d5110fd6c8c107d0c558d2d6", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "c7e6cbf3-e650-4160-b62f-d202f0d68547": {"doc_hash": "596424cafdd73971b48747ddb58360cc4e600e61b203ebaab1ec7aa9e272aa2e", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "9cc205c0-b7ad-413b-85f2-e2c1087bb169": {"doc_hash": "f677fe47ed5ae34a07a85067a0b26773cca1e92d196fb4d272e6fc8d0749b41e", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9": {"doc_hash": "8b253f2b4e6c56903127cef67c5e763319e675ab255820eb0b392f31ad6fdca0", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "3bd43ba4-a2e7-475b-88b5-68b49e626281": {"doc_hash": "785834f08911b86fcab0fa9007a032ef9833ba9d82f6202dc474707fd7e55c98", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "7b5f438e-dc02-4d03-b20d-20f3f41a49cf": {"doc_hash": "d0874c86ffa135e911504566b9f6739cf622b248638b390c81f88f026343e191", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209": {"doc_hash": "3e05650f83b3d25d5fcc42df2f3b9a19513454c7a2f6bf899ed7bcfc4f9a2d9e", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "4d856a7b-2eb6-4615-be4c-41f39ea6f538": {"doc_hash": "6154c263c7d7299948e53c1c5e1b817d5bd210a16acc10603a9cbc09ed0eb374", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "03eef8f8-9193-46a0-aa18-d5c1654d2432": {"doc_hash": "76d7429a8d114637875b559a4c3cff5d459c2ce2b18d40b2b201c3d37b770739", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3": {"doc_hash": "a2e427ad7feb816efe5cc1e3bede7c686e65e5bd51f7eaf333a22093eb8b5f8d", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "aa40b134-620f-4a3b-b1a0-f18d7afee458": {"doc_hash": "843f042fe446b6ca1d99d09a5046df1ffba33a0e95a33ca146a9ed23cb1ce840", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "3edd22ed-1326-4213-b4c2-eaddde0a4576": {"doc_hash": "09a3feda875937469a2f58b033deb10f42c2313d9203c0a84ce3a1d1b8ae35d4", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "5ad34693-30e1-4982-8901-394a632af16b": {"doc_hash": "be90c36b7c9bdf2bae8a8e6a5bda96489dffc58f37703b9a16f730de76554708", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "52b725cb-c657-440f-8a55-3693fbec2c06": {"doc_hash": "e3017f692c575188631bcdae9c06db6bbc84e01e6d16e982a86d51b02f3c3fe6", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "85c0f5cf-f126-42a9-8e9b-57dc8c253a35": {"doc_hash": "d9f74c0f888c9e5f1e0b2e315dd50b2854e9d7a2b8753973a750e7eb61e044e4", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "462891e8-984d-414c-b6a2-5e07f8435b64": {"doc_hash": "caf15029f8b7c2925f991264e0a48aa81e6a856772e3521977b1b1a1a6cfc357", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "6ebc441a-ac82-4f40-ac2a-4f50f8082041": {"doc_hash": "a43f7f31f6283711c023608d3728f36c4116af7eb5e979b7d052c0586876522a", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "36738d28-b1b9-4cde-a273-8f47af46768a": {"doc_hash": "0cb4ff25df5b7c8c303f78b136a5a2d74f107e16a23af72efd34d8ef4c746274", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "e535a283-c88d-4b01-85f9-9e1d83eb7d51": {"doc_hash": "9269c5730cac0fc4d6fb50873dd26568750bfc75265d096c03b69f42f847c373", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "0bad6ddf-0f53-4ca7-a968-1f9c43355b53": {"doc_hash": "ba9643c93a688654826485c5da01c4d0b37ea507cf3cdca7f78d79b92ceb9683", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "bb900323-27e2-461f-8f1e-87735239cb2b": {"doc_hash": "c11d8d1c8df2478f799b1aafabdb9982a98aea84ec7b19f88c095c489af9ee37", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431": {"doc_hash": "a02add6f1b2e3897ef45920db60788ae5bd635d2525f85cb721246fb112e4798", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "4e405efc-8d72-46f0-92bd-92925250c46f": {"doc_hash": "c706d682295d06b328a190025707e6aece4028e5d72a2f3d1de84e38f86b41d8", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e": {"doc_hash": "199a3aaaa09a138fe72095b70422caf033f9cb6cd0c863b60c62e32cbd23b31d", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "bd186799-78b0-47b6-bad4-b53d092be8b9": {"doc_hash": "3f1eaa483335a2b689cbf4118f94236caaab7f8b9de84ff53485a6057e8baf9d", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "699d17eb-bd6a-4fba-a114-7f9bd15f4616": {"doc_hash": "29f484a2d915f44895bc0499c11108addb26b1a281aaf768321d2baf2c8217dc", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2": {"doc_hash": "8250b47cf33a07c668c53344d27817709192d259b09daefcf0e0b012cedc6a47", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "ebf9035d-a2df-4c90-ba58-159d65c2b63d": {"doc_hash": "fb50f1b1fcd47df2d866197cafd71932277d1703551edaba8e7940649323aad2", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "2f1b6f6b-77fc-4602-b7f5-b036580d478a": {"doc_hash": "9a48fc923c4880cc0218e91e55485ba3cc99b982410cb6b5eeb4ecc460a0dc4c", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "8f744e79-6ba3-4532-8401-1e0ea71142c5": {"doc_hash": "4661ed802b5d48d80d33bcb326b6e03b3674880bbc6b2ca52cd8a34a5e47bc45", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "b1c31795-74b7-499a-b3f9-386332845e0c": {"doc_hash": "b17bf54f6034ed0ab9d525f2de4904da0fe0fcf1be5a8e0fb05c210218d7f210", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "400603cb-4242-4736-8c8e-8ed96d935a8b": {"doc_hash": "5e00797f0d79a83dee5d1090c57a800b121f3efcab17690758571ee7c77e8ad2", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "f6fd6ede-66fc-4527-9c66-ac981610f2d6": {"doc_hash": "74b4df0ebb48cb52d75f933e730ad5400a4a197101783d32e4985050c01f1e0d", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "2057a89f-c8ea-4179-8300-525442084df7": {"doc_hash": "ade053a8147bbe2260821df8a744dfe9f439a02532538b44595aa613ff0506fb", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9": {"doc_hash": "31207a358acb2845f3305aa158711ed010e7a806aeea4a1b439091142effb02f", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "e14b12d3-5837-42c6-ac1f-81073397b449": {"doc_hash": "8fa230378cfe3cf7cb12cfbb12942c139338eafff769eaca181cca2a6bbaa481", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "ae6c5943-2cee-414d-abfd-c09114107756": {"doc_hash": "3990310a6836d41b8e68be3d2c7a7b79f74014dc1db9b9e54ab6a3f49d7c963a", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "b4b46f3b-c101-4952-be3f-adfc414fc9e5": {"doc_hash": "36f5a335878f5911bbaf6ddea2a33ec301db99ca8e0b61a0086de29e071168e3", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "350ac398-5e3d-4496-865c-d119015f0044": {"doc_hash": "ee0f59f92f582ab87d7699f45250028dc058110416a19c908b1d9688a917793e", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "b1968e7b-3550-4b26-b2af-32f38ba2fde4": {"doc_hash": "fe3828349019edb1df4e233898eb94effd4d2a5364f3306d16bc3b515c983f57", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "e753d91d-9342-433d-a1ce-b823c1d6b569": {"doc_hash": "9e2b05bcc595dc163357a4af0bcd203743c6aa0398a07b2af8156cc5cc4dc501", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "b732e90c-98ac-4190-bc16-cf493468eeaf": {"doc_hash": "a5e28b2a34ea5ec4bf8dd91f18fe202ccc3143c9229dd3cdadcd605fe3e9ffc7", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "9cf30aa1-3a35-4542-94ea-2dc1754fef2e": {"doc_hash": "cd9e549d05150e2828ea07485f7536f3ba958e76119f2095c4bb89ef31c8a9bc", "ref_doc_id": "main_reference_zoe-api_zoe-helpers.md"}, "08589e1b-45c2-420c-bde9-b2c9d99972ae": {"doc_hash": "601364bbfc74b95204d810cb07edc064cdc8fcbd60fa64b76826b56a58e566d2", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "357584b3-9cfb-4123-9bcf-9527bb997dc1": {"doc_hash": "3ec36ccfbb933c10bed58980ce15cfebd736f4f2b14e90ecd597512bb9ffb80c", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d": {"doc_hash": "4b1648b7e5eba9e1a7558c6115030b03741673b7728f05186561737902b6ffc0", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "c98ea8d8-4171-4984-b22b-8bc6650c507a": {"doc_hash": "ed1c7c96aa54d43967974ff7e437b3dcfd18f243839c779602ce2c633f1fa43d", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "99148ab4-d319-4e19-8b73-e5c294e9aafc": {"doc_hash": "62eb7f8907951383c120a075622669b52fb729b8295e9b4aa8b3d60a3e204a03", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "cfedd131-8c26-464c-b86a-44c3b786f87b": {"doc_hash": "5f1604649c34a0351998d34b9b8dde946d8bd60719a6f812802209fb2bebbd1b", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "e51f744a-4cdd-4e90-9c80-3a074688ef80": {"doc_hash": "786337bf11005cffd5d7c3920018829e31b169f068aec89086d2cea51a0b9f34", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc": {"doc_hash": "63043c4c115b8f9a22ca33b46b5115c4f36e513f522da42e98c3986032b1dede", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "cc4aae1b-d952-4af8-b897-bf560928ddf8": {"doc_hash": "738beaf2fc25eb7c9274a4037a99f7af41df03c0b0f3c232eca97bce7a2598e1", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "16b08e3a-8221-41fc-bc30-927b1f051d4e": {"doc_hash": "18b03189d909a7af19ff094d12316ad27c1ccc0db5bdd6b23bea61436350f8c4", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "8233c4ab-e57e-4838-baee-9177894b9120": {"doc_hash": "615824033d016eb1d8c94f31f3d8f9249c8b4b13d17c8bdf74fc8c1187ade16e", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "ea376711-964f-4baa-a36a-385b7527d1e9": {"doc_hash": "e5a953dba2b7b2411e9b9d411c24e07eb774cc705ee63f36cf4a64d4cbb2cd45", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "6d0f3383-895e-4c34-8cfc-9350cd1dce56": {"doc_hash": "60740d26d149f7182589b0be387808edd536eba061fabfe5ce6e9fce3c373931", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "44415bc6-ffc8-427d-a849-c09c5e8f0a29": {"doc_hash": "fa93e6dfb37a741104d9196edb1d02db8fe5097b86b4852c7cf73d97519ef83b", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "4b70846e-0bfb-410f-92c6-e2ea1c72179e": {"doc_hash": "dfc00cc2d775da9004da61a758ee27d27e9324370e60e62b534907f63b8f8d59", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "3dc9f18a-4715-4aa1-8717-455896f5cbc9": {"doc_hash": "56267c2509862b6c38683857af37c29222b606fe5caec039ca3a4af1c3a1d46b", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "da19eb58-2669-424f-a4f1-61cee82bfc3c": {"doc_hash": "9f00c15f8fab52c02b8ee7d6c8f9aca4412f0f72b37879d6aad01096537f8999", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb": {"doc_hash": "1b9fc672e437851af2669f876ef0d9783feb197fdf949608d1302b8e4c6a3204", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "e2ac9834-1292-4db5-a418-19b5eb568e2c": {"doc_hash": "70240c716a786b88607e3e64227f68083f02d19825fdbe140c2a3a3e9104a020", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7": {"doc_hash": "68460d6717964f08460490d7786268142736f766f4c33af7411b5661a3087629", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4": {"doc_hash": "4c2e7da06f9f78a061a394e7e1b565fe9da2f5216912f49f10dcec72b899f920", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "b346044b-f4c0-4c43-8e06-cf9fb34de3e7": {"doc_hash": "6a5e6191fb6862bcafbccc41809744c4f216b17c54a6e27cfb5163607d4ea2a6", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "769c5365-9f7e-4f43-bb21-323d801a810a": {"doc_hash": "f930939b54eb25e1c789fd6ed88996d2ab0a224b2b2b64271953ea0581dc2ee9", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "7e9c0254-7672-46cd-9aea-3fd29695c6b8": {"doc_hash": "01913926622758b7193d81b63889d2a25be11fcd354495a00d1e59641ec0a905", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "e24afae1-db9f-4792-bede-721eeabd7c38": {"doc_hash": "dea88285e1d66753bbb516a82abbee8b319125caaf5d7b81707594611a4cef04", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "8565155d-6a67-4565-8b58-244a1db45172": {"doc_hash": "158e916841de802821eec5d338386a52fc539f1302739f6acccba256d71f4efd", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "956bd800-0ae4-4f2c-8610-b2000780ab63": {"doc_hash": "b3a66ca3f18bbb665048f165ca908ad132cc209f60c1c0e2e1c7f5a375efba1b", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "f5bb452e-5061-4a2d-acbc-e2a55dd900df": {"doc_hash": "41e2ad1ed72503b688a1c79d6f835b5a071399fbb1feeaacbc001e5de7329857", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "8c978617-153c-4701-b241-a850eb1f3de2": {"doc_hash": "6942f66578d44b956c27a4bef4157327ce32f7936fbaaed9870d99181246f2bf", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "07964871-7474-4158-a60c-bf3cbe97f093": {"doc_hash": "ff410d3ff7e201a66082f8755a459e417231e41854eb235999fc09dc674ba078", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6": {"doc_hash": "265fa5dc1aa0b11a658f6d2e346673e1382b12e5fa467f199776acd3a67455e1", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "40f72c95-d82f-45b4-b9c5-1f1dc227d713": {"doc_hash": "a2e3d6e562779eeea686727c0cb1b4835430f95fcddf92319f1a2634f5c44744", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "fd05e706-7d5b-4b8b-a5cf-ecbe31889532": {"doc_hash": "95d42868efa9aca5575d1b264327436409c1d634bcad9fad5afafb9c70979c50", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c": {"doc_hash": "d0b53161b81ee83df8c0b580965b80e91fb1a68206ae2746827ffef79b15e49e", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "bbfe9ff6-b408-48f7-a7ea-d045057d39f1": {"doc_hash": "6da90373c3c4744d929cb5fb014c933c63e8a3557680e83fd6d9ebb907e69a30", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "9d0899fd-1b51-423c-84b9-dc197db98f40": {"doc_hash": "40c9eacf9f9f0b0892a43e038a089374a89c1b3b4f3879243947cc58ee296d27", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "6004dc60-534b-42ef-993b-cb882b4797ea": {"doc_hash": "729f089602285a8275034df455f79d64bc3f45dcfa2da5e6757f6756d83e13dd", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6": {"doc_hash": "171b670e784ef5efb5b6b5201d6ff51ffff94d27a322fab0ca5248c9842c4965", "ref_doc_id": "main_reference_zoe-api_zoe.md"}, "cfeb5023-1636-47e3-8f18-c32bd5ec730f": {"doc_hash": "1460589e346ea9c79bda392dce0c2c22fbf40c528abff18ca3de599b415505ba", "ref_doc_id": "main_reference_zoe-api_zoe.md"}}, "docstore/ref_doc_info": {"main_e2e-testing.md": {"node_ids": ["7df91806-7929-41a3-b79e-704e77b4fbc5", "bbeed959-19df-4772-aa09-91c45a98391b", "67480952-3ef3-4660-ad84-be0fc44139d2", "92a0962b-213c-4b8d-9155-bc6bcbd93abc", "77d1f3d6-b121-4489-88b4-0a5d1ca921a3", "394cdea8-0b0c-431d-bccd-6a9de6996303", "0041759f-acaf-410a-9d26-ae81a60574ae", "c04d91fa-03d7-434b-b229-f341bf6a4abb", "02c677d6-b7ff-42bd-afe8-6b8076a8c6fa", "49205a50-8f01-41f7-b71c-5ed2c4ff6942", "b73db82a-af6f-460f-938b-b35625d4e9af", "3bdeead0-2b85-416d-a108-3d21f20b93cb", "bc2f2e7e-c510-4a6d-a95e-2267ce680fd4", "625e9c00-10f4-425d-b38b-528c802bf39b", "44bfad9b-a550-4158-9914-89f095dcc2fe", "e7933593-0aae-4fbf-a47c-40120122c8f5", "30fe353f-fbeb-4c35-a6cc-c7d36438e40f", "bd773573-843c-44d1-bc02-53a3e146fad0", "1ad56aa0-df9c-45d9-a31e-8dfd80546b03", "8373015e-3a30-412e-aeca-83f71eebf235", "bb3a1e90-003c-4324-847d-327f1ea0250c", "cdb7007b-c7ab-4f90-af25-62090434e8bd", "15a43e86-240a-463d-9e3a-fd13642ed6cc", "6270ed94-c253-4fca-aa18-9858f62956c0", "d3a142a7-5ff9-44f2-8f1c-40baf5e4041a", "4db0c86a-9276-4382-92fe-fc7652dedcf9"], "metadata": {}}, "main_index.md": {"node_ids": ["ecfe11b7-60f6-4491-b06c-a55e51372777", "1956d6bf-914c-47a6-977c-f8c35a47a2c6", "888564db-93fb-4eeb-a7ce-3d7fe030e83b", "6f98130d-39a3-463b-b8e4-4cd1d3add03c", "c2b6e77c-12c8-4aab-8646-7ed6876d88c4", "0ea2ed53-6816-4b07-a78e-f1abe2fac07d"], "metadata": {}}, "main_what-is-agoric.md": {"node_ids": ["22bbfe55-e9f2-4e8d-8ae2-939dcb6ab0d9", "75eaea8d-3116-4b8a-8270-596746bf75e4", "13d5ea56-5b6a-4be3-98aa-ea5bd886275e", "0f4ba7df-4036-4dc1-9626-16b79a8e7fcd", "570fc89c-19d5-4c13-88a9-2acc59f45ea2"], "metadata": {}}, "main_glossary_index.md": {"node_ids": ["1402ca6c-941f-4dfa-9f32-9913b68438c5", "b8f713c1-22b5-45f4-a0c9-533178a7d4a9", "ad428229-1650-4d07-bf00-bbc5095eb6cc", "5cbda961-6e55-482b-a1a6-64d565e66e2e", "0cafe8d5-668c-4237-a8d4-f8b6e1526812", "1e4ed967-807c-406b-b8ae-8964a70d1710", "dea2ee06-df27-48d2-9668-57016b79e200", "109504d6-86c4-4cf4-b907-8197d072d511", "55e8243f-c760-431d-826d-fd3f0b93ac56", "60729b3b-2648-4fa3-9580-1c9dc321a45f", "216e5849-af92-4eae-b170-b4cbe444b4b0", "7fa9e3ea-765c-4684-be8a-8681370c797c", "d4796b6b-88bc-4027-b909-3044f636e8cf", "61d8c8f2-96c3-4658-b650-8fbf26e515f0", "a5f270dd-dc8b-431b-ae12-85662cbc113b", "021805c8-e8ed-4aef-b0a0-25179659b4a1", "14ad8ab4-7ebf-41f8-8d8d-be0f7a8c092c", "2066be5b-b36f-4aea-9be0-9225889c3f36", "16d4fea1-219a-4e29-9235-e232f5c3dbfb", "d7d3c8a0-49ae-4c8e-93e2-99b7ba959ba8", "ffa4d15c-3010-4451-a901-74c6c647ddb2", "4c8728a5-d95e-437b-9d93-7413fab31327", "defe437c-5fa0-4d7a-bcc8-bacf2a86f46a", "62e79afd-828c-42b0-a158-6caae2fb113d", "d8f6246c-eff6-40bb-b06e-f72fdf938c83", "cbb88ca6-bfc7-4e79-9c2e-c92bbcc0fea3", "31babf25-57a9-471d-8916-3f46f260fb17", "9309cf0a-a7b1-4eb9-aba3-a2c2a50881d7", "9d4ea8ae-c745-4444-957d-d4276c9839c5", "97140f40-b9c4-4e09-93aa-f86f2a1b8345", "4bf3dc36-238f-4fea-afa5-af8d089f7616", "552da849-a0a9-4b36-848c-22f1ab83a0c8", "12ecfe58-2bad-4c79-83ae-d459c2d365aa", "c8f792fa-e5a0-41a3-881f-381f0321c017", "b5c39875-baf0-4e01-b493-90a909501702", "974356d5-94a3-4d51-bfea-f1f80d94d206", "5d563b3b-ca0b-4f5b-b963-d7c51d7d3736", "79451cf1-1a07-4cbd-b91b-f5e51503bc08", "855bf9f2-cf83-4cca-9ec1-dca1b2f596f2", "e8e58ae8-d038-4383-9e86-d530f8a76c76", "51bfaba8-2c88-4489-9d57-2fbee54f4100", "b56645f1-f516-4018-a113-9bec70b6d6b3", "8af97c82-fb2e-4dc3-8f81-785a3e6db16a", "a0d00453-d0b2-4ef6-b420-4323bc503b7e", "f763b8e6-200a-41df-a7c5-8cba5ced845c", "43ad6506-a813-4508-b88f-eb7d29ec4392", "203c5b7f-916d-4eb5-89c9-95b3f891ad21", "1a048a40-df1c-4a0d-9615-0b293ebfc74a", "f36c4a4a-3594-4a44-9e94-d1ac14a95f6b", "d34e89aa-72a1-4707-8c83-087d5f6961d9", "6d9ba3dc-21f6-4582-9ac4-e6857a24d63c", "c385dac4-cb89-4d26-b44c-b47bc17bf629", "475ed658-6e95-4734-b74f-8fd2599bfd95", "94d9772c-c6db-41d7-9819-2f91db5bf3b5", "ac147761-b92f-4820-b2a6-94b19762b43a", "83475700-619d-4004-a7a5-af96b87af83e", "16b0870b-6936-4811-9f41-0c229440daac", "7c8c016e-222d-47b0-9a8b-4c0a4614fc4f", "995b01e8-3865-4767-b669-23cea91b0898", "ab112447-8fd8-4194-af97-470add9bc483", "db685fb7-50ad-4b79-836d-55d67ba05546", "15cb455e-0ea9-4b86-8c46-50cdc04af8ef", "007a1963-19bc-42ed-919b-c41dd2e33dfd", "4d94257e-6511-40b1-8abe-654ff32d3fd1", "df4e2f71-5da8-4d7a-a5f4-0c04f96365b2", "e8ac5c3e-c334-43bf-be99-8a4d3a8ae910", "c5118a26-3baa-4af0-bab5-a68e8adb2e69", "daab7363-2c3d-4792-9635-6849f4a430d9", "9010bcf1-c75e-4046-a517-4674f5c266f7", "30a1f1cc-bc1b-48ad-a1ae-54b5ed92f6f0", "d760f539-07d7-42c2-b60b-e2d86c50fc4c", "68bf8e09-1bed-43f3-a602-5952890c30be", "8ff16f70-720d-4896-91ec-fbb8e6ba392b", "1920e19c-61d4-4f4a-9614-bc6c093a808b", "621de3c5-08bd-4507-9e01-093153e92c0c", "9f70d633-79cd-45a9-b13c-c1b5df27836d", "b53a19d9-986c-454a-aae1-867e9632c8eb", "163f1355-3af8-49c0-8dcc-bc0cbbd10383", "16c7850f-f07d-4c67-80cd-a07159a8ccea", "6a04371b-80f7-4dd3-96d0-72760242cac3", "0d0cfcbb-7213-45a0-bc9f-0765592f3f7e", "cbd72bdc-d820-46b9-b987-2f3b4bf57796", "78e75182-8e1f-486c-9434-173a8d8a9b80", "6b61df57-d759-4f6d-85e2-984a6f261373", "f198c1d8-f63e-4c3e-8786-2366abc50833", "1c49c6e4-0051-40af-8112-715dff8c1e80", "ef18dcb0-60c2-47a3-b396-f9a56c60d71d", "02a34f66-8b09-4746-9ff5-b6189d4efd51", "8f036865-6783-4d63-a057-f1587deec6f7", "dd97167a-3eea-4a96-a953-ada055f34071", "bbf9560f-f803-4e07-81d7-9d7e68409808", "62d74454-cb4f-4e06-ab46-376c1f954e44", "c9f14453-34d5-487f-8b8b-dec6f260b2c0", "5c5529d2-515d-4bbc-a360-fe25e3128401", "0c725368-f3d5-48bc-8bca-7ff10382fda8", "7b6aa85f-0d70-4c98-9f4c-6beef9956de7", "3e46a4e3-7d7c-4174-8bc1-9b9bcec1b1a6", "7113224a-24bd-473f-8bfd-864c590a37bb", "c57cefdd-ffbf-4806-abe8-cc9de9927260", "1cf9642c-89a1-4772-9a3f-aa973c2af612", "d12d27fe-b142-4f41-b591-2f0ad9f14aa2", "7c8bca3c-4a85-4505-a822-6b6044159374", "1a96121f-659e-4549-9d09-aa8a303cebdd", "1291dc64-e9d9-464a-aba6-bde852af764c", "8855523d-e78a-43b0-8403-f3389f9c4e6b", "e782d97d-8cab-4559-8606-3547af44472d"], "metadata": {}}, "main_guides_chainlink-integration.md": {"node_ids": ["7f86571a-18ab-49e9-ad39-53e83535d71a"], "metadata": {}}, "main_guides_index.md": {"node_ids": ["e5dcd91a-fe74-4d8b-bf2c-87c6a09e7137"], "metadata": {}}, "main_guides_subquery-indexing.md": {"node_ids": ["d65da903-2c7a-48bd-b9c8-03f5b8d2177d", "a43a7238-5c00-4982-89d1-8c245d2888e7", "2098ea5d-be69-48df-8dd1-25540efebfd4", "b465841d-c391-4b58-9050-d578d26b267a", "e7131f33-7c3a-4873-90ae-14268b30fc62", "f341fac9-2b3e-4b6b-bfbc-bbd7ca7aa231", "bfddbe2b-48fe-4895-b217-6d01ae321306", "c2683698-ab71-4def-a6ad-e40f3bab6203", "157a71a7-065f-47fc-9d09-6e16182509d0"], "metadata": {}}, "main_guides_agoric-cli_agd-query-tx.md": {"node_ids": ["5b95fa57-80e9-4282-a695-ccd9a49e4d69", "9a50ea75-d594-4b07-bf88-00d0622ea19d", "536df46a-8268-41be-a569-82a3cfef7656", "7e488cd2-607d-44eb-8940-9cb0ed443848", "0160ab76-5c23-4a8b-bb00-be2a76b1e33e", "38b71b14-cb13-4c12-9981-67ea7cd91aaa", "37e27b3b-7fdd-4325-81bf-a425eb68b933", "d0a2bf66-eb5d-4491-a81e-28afcd10caff", "ae22187c-c600-4da2-b134-ab97da0adfb8", "e07ec439-9563-4656-b66b-548e6fc2e7da", "23f54097-b698-400e-800b-879732b4a9ea", "e2264a7d-3da8-494e-b123-d2f061f8023c", "441f3d0c-2948-4d30-91b1-635af77b878d", "9841f3ea-79db-487e-b17a-06403cf3a95c", "bb78972b-179a-4e5a-ab2a-db637bee16c7", "9eea2320-b789-4df5-8183-22b4cea30a92", "93600326-4596-47ee-9d4e-f05fffe5d563", "c518f376-cafe-48d9-b3d2-a55fdae2a216"], "metadata": {}}, "main_guides_agoric-cli_index.md": {"node_ids": ["eb651255-4072-4803-bd24-fd2e430524f2", "ee50d33d-f4a6-44b0-9876-04013a898564", "ac360a1a-2faa-4a45-9b74-6dddd757f7e7", "225d49f5-1748-4873-8185-8992901cc3eb", "74b6ab25-bd2e-4780-832c-ed9e1752e987", "f7cf5709-9fc3-4ea8-830c-121c49e8e0bc", "15b09f4a-5911-4a9c-96a5-8301e8e35e8e", "d2870d7e-3c69-4530-9321-616e55e1de8c", "d7b67f23-ae6b-4479-a468-d7fa55b73f0c", "59e3bf80-82ea-4317-95b9-214db38bc30f", "dfa93330-e59b-4171-9818-9ba3ac1b3dcf", "805dd3b2-8893-49a0-807e-166823c399c2", "b3d76a27-049a-4d6c-b705-87da438993ff", "ed663210-3d49-4326-8daa-2ced753f4859", "dabc9d59-40a4-4d42-b045-7eb24b4992f8", "30665d03-45fa-4bbe-b51b-00b9fd640c68", "16a066ac-946b-4088-9a09-074754f573df", "ac42eff5-c57a-4cbb-b408-a713a05bb10a", "7fd8a270-c03e-4a6e-af5f-d8de5e9796d7", "03dbaf87-3e51-4c2d-a884-e3fba224bfe9", "7929a37a-2537-4df9-a013-ed94e9ac1205", "1744ec40-603b-4a04-ac1c-59cf00758c57", "33a4875f-68f9-4c6d-ba4c-995d7a427cc6", "41332b4b-a2e8-4393-a1cb-1fbef0c7c11c", "fa3eba86-2b38-4062-80bd-b02bed3517e0", "7ce59e83-4c58-4a05-8154-d7ea0ac2467f", "248baaa6-4df6-406e-9154-819a74f3ae6a", "9728df7f-3cba-4b20-bab8-bae8e274bbeb", "a722bb4d-28d7-4308-94cf-ef5f01b65b0e", "d3366287-831b-471b-a04c-6d93d7c0c09f", "0da57717-a68f-432a-a0c3-1713b9639121"], "metadata": {}}, "main_guides_assets_index.md": {"node_ids": ["6c00f136-52dd-4d78-b53f-a37e2841442a"], "metadata": {}}, "main_guides_coreeval_index.md": {"node_ids": ["402a6047-bd6a-419e-a2d8-fa9fa59cabc3", "0f29edde-99e6-47e8-8f4c-94fe90296c68", "b58e5eae-a8d8-41cb-b12f-8b7ba0ea8267", "e7c80a8e-3d9c-4e0d-9169-dc5e46fd9b4c"], "metadata": {}}, "main_guides_coreeval_local-testnet.md": {"node_ids": ["4565f00f-537a-44b5-a6ff-c415bcf63c21", "992be5a0-29fe-4d0b-97c7-20d024a2f7b2", "9a09f16f-4e1a-4f82-bda6-07dca1da22b9", "a3c1e119-712e-4a49-a3f1-e82486e65f88", "1d301d5d-8f80-429e-9bc6-f157cf3867f3", "cc3f60bc-0320-48fa-aaa5-729cc65a3d51", "7b9b8867-ee34-40c5-8823-eb745864b190", "e4f0561f-7f3d-4d4f-a327-638bfbef6a67", "b33e14af-2e78-433e-aa88-3252b356ca2f", "98904c73-210c-4da3-bf5c-d7f0829d0811", "82257bb1-9b3e-4144-8b3e-791d0e0127c7", "a18388b9-6972-4f83-a570-621a66e2617f", "da2e878b-aca5-497b-880a-f453edd4515d", "9607b04a-f417-4b93-82d3-75c1c997b9d7", "f67044c8-a87f-426e-8029-e49c4dd3cc40", "2116b6e4-4cdb-4cae-af08-7b06193f7525", "7ca15e48-743d-450f-bb87-720394163530", "a87b73ed-fb5e-475e-80d2-6f2cfe058d73", "f578d8e4-794e-4f9c-b556-797671e6aff1", "1d979538-c804-4db8-9803-d9557ca01b46", "83334ca6-ace6-47bd-804a-65c6b6bc38de", "974578ce-ac9a-4472-9fc4-2a7be4676698", "40b1f23b-2065-4c31-b4b6-19e08588258f", "7fc2c715-8269-4f95-8e71-7d48f9ceb7f4", "afe88ab3-beda-424d-aadc-e006b70a0920", "8b578df7-6f5d-4191-94f6-1252d19d0613", "48504be5-dc85-4c9b-a4de-6e66dfe8ab65", "929d50e5-8ce8-48f8-90f4-36428c1cdf1f", "fffac374-8a60-41a4-b0b1-ca2a8007b17a", "c062cfc5-8437-4f0f-a435-08fd2113aece", "6e6dac54-1596-48a9-9ec1-33454a896588", "4e7e47f8-ee65-4c20-a1c5-d56676f1cd14", "0b08591a-cdab-49bd-b5c8-b71a1000e0a8", "177fdb14-d27b-455a-881d-14fa3a389052", "ae081631-ed78-4f86-ad5b-a942db39bf5d"], "metadata": {}}, "main_guides_coreeval_permissions.md": {"node_ids": ["02a5ba2f-42ad-4e43-b5e7-f102085eda18", "90cffeda-466c-4783-8c18-334deabe8241", "ebf8501e-8105-4345-84aa-8e6418571489", "d4244256-901f-4a14-8c9d-6ec14bd33c4a", "3aa61952-6a5b-42a8-98d1-0d3873534ee0", "595d478d-1feb-43b2-a981-d16365a63929", "ddc8bfa9-6dca-4775-a9fd-60b561cc19b5", "380e2530-4682-449c-b742-af422b03431f", "f9fef657-d080-42eb-b2e8-6bec78a7ade3", "67055ff3-2584-402c-a068-22a306099574", "13dc74f2-2aeb-4709-baa6-f1c4082b7bf0"], "metadata": {}}, "main_guides_coreeval_proposal.md": {"node_ids": ["a6717b83-1fd8-475e-8e1e-7c706e96702a", "ef7937b9-b529-40fb-8113-0051fd8b0998", "1ea9c631-902f-467d-8f57-d9f0ece2f7e7", "5698f8aa-d194-44a8-bd67-6f8e56bf4d7f", "44001b6d-5067-4fe3-8cbf-2a3e18217388", "7f4c0291-af37-463c-9957-60de8a5caec2", "4ac7c1de-f22e-4ad5-a083-15909afcd61f", "c24050cc-47fe-4e2a-81d8-8b6cf6eac5ef", "4d519f79-f4e9-4c88-886d-d76310b43877", "60d51012-ce75-4a26-bdee-7dcb36e73480", "a137cfdd-c7ac-4e06-b8aa-a6441c60ddd4", "8aa87aa7-214c-4fd2-8897-cf3525e6a6f0", "f32d6413-af32-4a52-8cde-dac749d22ddc", "4916c442-c7f3-4c43-9002-deb5d2e415fa"], "metadata": {}}, "main_guides_dapps_dapp-templates.md": {"node_ids": ["f4b9e08b-2506-4b0a-9563-00f8ad97df39", "d56a982b-d80e-4bd2-ac4e-6f2f295fe2a2", "9e14352f-bb88-4bcf-b3f8-6057ec6687f9", "dc522e63-c8d4-448b-bdc8-0b82ca6aaf36"], "metadata": {}}, "main_guides_dapps_index.md": {"node_ids": ["42f0b4a3-acfb-470d-af20-c735433f1853", "cfdbfffa-5c4e-4fd0-9617-fde63a2cb304", "06e78dd6-19e0-4ecd-9545-53395f2045cd", "dc22fdca-0c29-4622-bc10-f20a72a0d559", "79fb16cc-bf0a-4324-a6f5-607e82fd8bef", "267a5aa8-ac5d-4fbb-b1dd-8ce0a5af680b", "9ae37cd7-0cbc-4f6c-a687-8e940939c7ec"], "metadata": {}}, "main_guides_dapps_starting-multiuser-dapps.md": {"node_ids": ["421741b5-896b-4704-bc4f-eda7a55355fd", "524367bc-b7ae-44e8-bfc4-3159b1d372a8", "8794f683-12ff-40c9-907a-3411c0dbbe0f", "0eef9b83-cd2a-464c-9aa0-4120a4ca00f3", "5b3e0c83-b256-4791-a5f2-0a54c21ad3d9", "a56295f5-1996-4e92-b9bf-d051e714ddb7", "6c949c44-2315-49b9-ba09-80e5a35e5bb2", "df9ff320-6be1-4d3b-8828-fbdccc079dab", "37a9ff48-c2aa-46b8-bc99-790b5faa2772", "753a4db2-c4f9-4e09-b2ac-3aa9914635c6", "24bc96a4-c981-400e-8771-8777b8bdcd9f", "8c4c9c11-4ac5-438b-8be7-b797bc1effff", "ec075498-2f8d-40fa-8892-28aa861c9e87", "ed381a68-7295-4917-b777-aa707e0639a2", "a485419e-d341-4a86-8693-2cfa00abb55b", "5644b0df-d58a-4801-a0b2-557c9b0584b7", "40688c04-b9cc-43bf-996f-eafcc28e2536"], "metadata": {}}, "main_guides_ertp_amount-math.md": {"node_ids": ["10871c33-da19-49db-8d27-b9bdcb3844d8", "6fca449d-4530-4ff2-af62-0d08356a4580", "6995b1ee-cb0e-41b2-8474-bb38438b929b", "6a4049f3-9183-4f8a-bf8f-9152e6e6ca1e", "3f28211c-3c10-497b-be67-369b1e853e5d", "f5ee96fc-1547-4dda-8449-74e3e899b79f", "aee65302-eea5-4cba-9357-c88ecf0a1794", "13a9b0e9-7561-497c-bc8c-4c78dcd59e61", "afafa9c3-75a2-48ae-87be-bb5ae0d8e9ae", "01e2e06e-0d99-40c4-83a6-b79ad9e18776", "7239c255-bcd7-4d71-b854-798332a6662c", "ceed0ed1-4694-41cb-acfd-23c3d80b570f", "da214069-f851-4e0a-9d26-9bee8533a2dc", "b619538c-3603-4d01-925c-eb77723ebb37", "5879be56-bfd5-4aac-8f28-0e6d053a851e"], "metadata": {}}, "main_guides_ertp_amounts.md": {"node_ids": ["f33a94d7-a238-4d67-a282-03f217b05dfc", "be83c6d3-0151-40d7-a556-b47732fbe3d8", "1ed0b3f9-4cf0-45f7-a95b-9c02b74fe980", "d4df398f-b4ac-4b55-acf3-190c6e03e3fa", "ebb6ea63-ffa2-4673-b6d3-9bf3926a264b", "c4736734-f482-4176-997e-9082d129dcf3", "9b3503d2-ee3d-4f16-a334-0408af2d375a", "9e1910a0-413a-462a-b70d-acf2c1ded4c0", "88bedc9b-2b35-424f-bf4d-038f087d6eff", "6e2c09d7-5d84-412a-891c-af1a5b30591d", "95b7d143-0696-4bca-930b-8847ec163444", "97d80703-ac16-4f70-a4cf-1d563ce9b697", "5d30b5c6-d5b7-4ee0-916a-3f94a478b5bb", "4c897090-e00b-4ed3-a79d-068fc0080609", "ebb0613c-5d9f-45e6-9b43-f2fe8df45788"], "metadata": {}}, "main_guides_ertp_index.md": {"node_ids": ["4ccb8b86-1e6a-4efe-a734-c217e4dbdf22", "b4459991-d649-49cd-87be-ac4e7426f651", "b497dac6-bed4-4a94-8345-c5639deda1ab", "1c049708-e3a8-4b33-8b95-f5d08c11d539", "a8df443e-be20-4278-b054-f19a57541426", "edcf4254-fea7-4bd8-9224-3ad5a6e8522e", "1626aca1-7b4c-4754-86bd-f1ffd1e0cfa0", "d4e0b4ca-e17e-4237-ac32-8b88fc7ec82a", "dc7d04ee-9618-4331-ab38-a8c9f5813776", "1f4a8c2f-dbe6-466c-93a5-75f351f07cf1", "525551fd-93db-4300-b2c4-ab04c736a6a7", "f4682af4-446c-4e52-9bc4-0aa9c640bdab", "53fac140-e073-4153-845e-5b1d5f5a63f5", "9a5c3d63-e27f-41ff-8f33-4a24ed4ff490", "efac7875-7f11-4c9f-a1af-5dfc0c59dd9d", "75abb573-ffb2-4c91-b47a-ddf781dc8222", "9db5f350-a66e-41c8-812e-747dc1b46fa0", "f16b178c-2e12-461b-a183-b848712624fe", "877196b2-4c48-4215-b8c5-99076cb17840", "c0349de8-81a5-48d4-b299-2c23609db07e", "d55be897-3987-44c6-beff-013354421eee", "ea07c262-d66d-4847-b91f-545ee5f54e0a", "91236bc1-20ef-44ed-a79b-44ea658d1dd1", "99011ab1-d3cf-4052-9bc4-63d742163593", "0ff7f3e8-3e75-41a4-b097-1160a83fd480", "658df245-b1fa-44e0-89b3-82186a2c4644", "6dd60e80-730b-42f1-91be-e97a836c969e", "7e6ac798-6fe2-4668-8e55-383c380bb34c", "8bd11e68-ea62-4a64-a4b6-697e1d370a68", "267a445c-6f91-4c77-87ca-b674127c8090", "4bce849b-9e51-4e9e-8494-d58488d5f132", "2ce48f57-1f6c-40ca-a1d8-2d23ef6a9810", "cf13f7e4-82bf-4412-b759-3889b916f81e", "34697399-3d0b-46bd-90b4-4cbd0a47d342", "80e22212-d67d-4191-8bfb-2ff07c7508f5", "1e80cb26-25d9-4533-a73c-21030480b6c0", "11c0aa9a-b1f9-4ea2-a75f-8ad86d2d5e3d", "4a41ece3-192b-4060-a536-7ecb522ef4b4", "0182a6e2-682b-404c-a08d-0c032d2be7a5", "0143294d-9e03-4fad-9c9a-f98729368f24", "ec38d657-617d-443e-9a7d-b47a695c2568", "5e5d0d06-6e33-47ae-9813-6c27776ce69f", "5b88ad76-505c-4125-82ab-572a461a9a64", "baad0c41-adb7-4b23-bc42-259a3719fa0d", "a36beaf8-9e16-4495-86e0-4a053255ed91", "cace9dfc-8903-4707-9337-a0ed07b4d835", "d9af6eaa-d046-4124-bd29-3e2644bfd3d0", "e5cba610-58f3-4456-893f-0035752a50ff", "4db1c527-a072-4642-9cdf-bb196b6d4937", "21979f0a-7c9c-44f6-a421-a535e05ba0ef", "0dae4689-cd10-46b1-8bbb-b55f4dfb4d48"], "metadata": {}}, "main_guides_ertp_issuers-and-mints.md": {"node_ids": ["d833bb26-fe1b-4d77-a436-63cd5d29c43a", "c261d881-93a5-4a57-a1e3-f1ed39c85303", "4a931622-8048-4cfa-af7c-82b7c293bae2", "b3fd5da8-6ba9-4176-a7f5-f2d88e320a48", "caabaf18-21bb-4431-b239-dca110e98d3a", "4bea1b71-9fc2-4674-86f8-ed4e3578a882", "85aea3dc-b83f-4526-a6a5-3f7994685445", "952c4adb-3bd8-42de-95db-1d4c1cc3bbe6", "453fe2e8-559f-4868-9e7d-cfe3c4782c3a", "9036b57a-b627-465c-99c6-79004723ff51", "81cca2eb-641e-4b36-922f-bc43ff084331", "455e243b-e6df-4833-8571-572713544b69", "aab612f1-0795-4f46-91b5-bfcec3454d9a", "c4ff3aad-dfb9-4c62-a09a-8d00a1841866", "60ea40f0-4ffa-4df8-8763-91f46169291c", "c8356eb1-7fd4-442a-9eaf-1c4d6529d470", "26b07fe3-ef44-4d78-80da-2b07e6bf9c49", "3210c1aa-e3e5-49ab-9fea-f2309ec8b315", "7dceb56c-adc7-4795-9c61-5923e44855ff"], "metadata": {}}, "main_guides_ertp_purses-and-payments.md": {"node_ids": ["05116bc0-7f3a-461d-8d8c-7814f16bf2ae", "f5ec5e49-0126-4ad8-ac09-3152a63b734c", "cf769734-80bd-4629-8e85-13619dd5d1f0", "abb9fe6f-fbd6-42a3-905e-f7ae3ed97dd3", "53d98f5d-cc70-4f25-9a91-7ddf5be93e8f", "bc34d131-e4a7-46b3-9b3e-0cdcd13a0ba9", "24e44527-6ae0-4661-bbcf-9c0e6a178c7b", "bb3d4c45-25d8-4351-bf79-cc8c9bf46753", "64153019-8766-45ea-9d2b-f34bdd0e129e", "62540f69-9828-4081-8a3c-f85b84f8556d", "ed2a842c-985b-44b5-afbf-b23ad6be7332", "a09f3479-e4e3-4faa-b242-cbee9dde885c", "9143fb54-3728-457a-b14f-110d632011d9", "7763ada7-d0c7-4a57-87f6-8a9e6782ea16", "bb580bb9-6e19-48b6-9543-70f168db5947", "e5070a39-897c-4ffc-badb-5131107dd497", "b937c616-7f08-4df4-b494-379b75426420", "2cf2e780-6535-4fdd-b26e-920749ce7ffc", "eb91e209-cf45-4195-899b-877ac51b2dee", "3bb18441-4e0c-4a1d-94dd-41618d85e299", "51e870d5-5739-4ab5-8747-34b295646d46", "9fdb71f2-0032-405e-9f14-6cc82b661ce0", "1650276c-e34c-402d-ac26-58741a8ed698", "651cf1b7-1dfe-408c-8ed7-56e9eddae243", "60b9d351-92cb-48a9-93be-e2fb735f57a4", "21f96cd6-da5c-4b66-aa4e-0ddc8c43035f", "5b2217ad-2bc4-45b3-9fff-11511546f855", "efb5a1c3-7ed0-41e6-88fc-da71bc23ce87", "c0ff7af4-83ab-4100-9896-9a3a9747e17b", "969db249-d7f4-415a-8bd4-15bb0b71ab78", "6ac96b95-fe54-44b9-a4a6-da4d9bc046ca"], "metadata": {}}, "main_guides_getting-started_contract-rpc.md": {"node_ids": ["335882b9-9a22-41e2-b5c6-e39aa2b6f1b7", "e7cd0fea-1041-4060-930e-f3fb6cbcef19", "82edb72c-4056-4bdc-9eff-0b2b4cbff55e", "02489dc5-242b-48ee-84fa-2d9782b7d492", "ad0d2202-9df6-4485-939f-c54202778cb1", "fcdb3dac-7c09-4373-949b-16a2d75a5c47", "51a42a31-de51-40d5-aaf6-2002b741e2ff", "b7defbc3-8c16-4f25-a4ab-d3d9711decbf", "fe8437a8-9d10-411c-bece-9271d1d48636", "70702526-aa27-4e32-aca1-7a5212719392", "0538a89b-3a07-4899-9dbd-f5190fd86c2f", "03b63d16-ab34-465d-a745-6e1fb41d1dbc", "2c348799-fa2a-420c-8bde-3379638f96cc", "41acaedc-8d1d-4245-a827-8d97ab7be61a", "2ce374e3-a0c7-40f4-b26a-070d3e166f33", "f011f5cc-dea6-4973-89f4-5c30954c190b", "b3fa875d-2e26-4653-9b47-6357ccc196bb", "59db4442-5a5d-45e4-ac14-4d2d0d75bb75", "edfa931b-80d4-4dd1-950b-163decbb6de9", "e51c5fb0-5001-4adb-9fe1-1d6d7173cf3f", "ed243e69-d224-4342-b007-a637d6e43949", "f0cd7f3c-1c30-4020-9b99-63a2c642ce7b", "f8c90aec-3349-45dc-82a1-ef7dc5052871", "838d2060-8905-4c7b-b3f0-52ac4f013b72", "43d27ebe-deb4-433c-aeee-dfcb7caf5df7", "0713aca4-6e83-482c-be99-f74348d4d551", "4ada1309-858a-405e-a67e-d309292e43c3", "89ff2686-ad42-46e1-b21c-78cd11adfe13", "c25f4774-30f7-497b-82db-2b914c2640c2", "fe6cb507-ef8e-454d-b83c-bd639b7c2e10", "d07d2d9c-1584-46d1-b9d0-b19d76d8f9b6", "2342c9cf-7fa7-4d98-a662-574fb3dc2aeb", "39eda8ef-ad4b-4105-8398-dea8e1e97446", "590085d0-697a-4741-ad62-d708b31f9828", "99c72ddc-5058-4343-bff5-e51115d58224", "a7dd41cf-35ae-4be9-9c8b-25689dbda16c", "d48222a3-00c7-4c2e-ac0f-909b32f77c81"], "metadata": {}}, "main_guides_getting-started_deploying.md": {"node_ids": ["1d6126e2-fb3d-4136-9e89-8837fb880a93", "9474aa26-1fb2-46ad-92d5-a9b39a2423a8", "4e6a8b56-5ce4-43ab-9934-83af3496c983", "7714d5ee-633d-4bf4-a8ed-7b75751ef2e2", "940bf617-eaf8-4361-8390-06c0afaaadcf", "4cbd8099-c1cc-4091-9d37-78f1ae51b6b9", "370a8902-de7d-4574-bcb0-1a360944586d", "6bfb0178-c02e-46e5-af64-9780b466d337", "8b1fa13e-37e9-4581-8d01-32d0deb69a8d", "670bbc3a-27b3-4537-8da3-46e71ac4b7a7", "e31e3842-4ab1-42f6-b7ab-bbb0d9221ec5", "0b38fb33-b26e-42d7-8cd5-d56130368b7d", "405a12dd-971c-4897-9c94-969070ea9346", "fb3a0a62-8dba-46dd-a78d-2c1ff37ae4c8"], "metadata": {}}, "main_guides_getting-started_explainer-deploying-a-smart-contact.md": {"node_ids": ["3c40f2c1-c20e-434c-875a-edec18146a62", "42376c7a-fb8e-468e-96f4-76f80623b978", "00626dab-5499-4f6a-9ea6-6b7766785fc4", "11e3ceea-20d2-42f9-b743-caf04480e47a", "f4aec799-d70e-4850-83b7-bd5e07ecae8b", "3ba8b9f7-ac39-473b-b4db-1f4be452ca45", "629edc41-bfef-4f2f-ae8b-2e6b08b99c5f", "32011c16-b6d3-47ea-88b4-39d23fccb43f", "9c444b03-20c0-4b15-881d-37ad3572a5c7"], "metadata": {}}, "main_guides_getting-started_explainer-how-to-make-an-offer.md": {"node_ids": ["2d8dc287-31b8-483f-a842-9f338e4b836f", "b78d0b74-c7fe-4b25-ac3a-43211fa9f722"], "metadata": {}}, "main_guides_getting-started_explainer-how-to-start-a-local-chain.md": {"node_ids": ["39152cf1-198a-4b82-a2cf-10526a2c0ae1", "bf65f27e-651e-4d7c-90c7-7c738b69948c", "c9687f9c-2d99-48be-9a0c-5c3dc4843625", "40115f76-983c-424c-9cee-9711086543ee", "9dc71d77-c903-4428-a7eb-c9b705940c7f"], "metadata": {}}, "main_guides_getting-started_index.md": {"node_ids": ["e82683b8-4d3b-4b65-8c4a-f3e447772034", "85cbc00e-48fd-4c3e-9e56-fa0dfcdfa64c", "ef651410-152d-4821-aaa4-e725917d2c84", "861a9900-b468-4d0f-9f0d-5de808c683e2", "85dabe70-cb12-4a53-9442-2d5d53cbc489", "75dd4666-9464-4042-a19e-6dea0945adf9", "52edf81a-d3d1-4397-b380-019e7ef80a94", "81a65a15-73f7-408b-a57b-b15eade8ed77", "b1d51044-a9b9-4da3-a513-c080f4564dfc", "3c0231e3-157f-4d71-9f98-1f9b8edefcfa", "1ad1f1bb-c0c0-41ff-a4f1-bc8ed2206ce2", "7876a1e5-cf0b-4aab-aadf-9f87cdf48085", "a30eec10-ef2f-4093-8ab8-939dc254a851", "a154562d-e18e-498e-92dd-c8d28aa80817", "9ee7d686-c2d8-40cd-af36-d30233be60ad", "d54d80b2-287b-4a86-be49-b0e226a5609c", "ab4e3684-536e-4a20-bef0-c32c119040e2", "e5688753-8682-46b9-b1b8-14788d898aca", "052c414f-b240-4338-9b25-3ad7dd80de84", "3b745b54-8b2e-4522-8527-d1829d8ab767", "eef5945b-164e-4c94-9d1f-0d9d0c9d4a3d", "726558bd-a1ce-43be-b590-33e89df18e26", "419184cc-f8ec-40b4-a9a9-afbfea84b9a4", "424e3c94-0493-4625-894a-76305d74e27d", "4a0c3fea-7348-4e29-83e5-7b0a96c39f12", "7d9a423c-29f3-401e-b7d2-f5965c561534", "f0cfbd48-8cbb-4fc7-800f-05f5b38f429f", "b825e926-90cc-457d-95ed-ab28358dd06b", "44a66c9c-95d3-442f-94be-beae09268ba4", "a9e39cbc-1251-4e23-96dc-a7975c5275a5", "7eb74756-1b7a-4023-9720-86adf280ba4c", "c646726c-8fea-4c9b-92f9-76df9f3c3e1b", "c16da218-ab11-4d7b-98e3-f2910013a5a7", "8157edda-377b-4731-b054-6ffbf6215442", "646da944-c767-4d0e-a11f-761a1eb6d6bd", "784b4da7-517d-4578-bd2d-4df1eaf03dda", "1d2ebbbc-f76e-4917-a924-dc220ef67360", "e6314f60-952b-46ce-b56b-009869d5062f", "859791dc-a753-4f46-8901-0c5978a2fb5d"], "metadata": {}}, "main_guides_getting-started_sell-concert-tickets-contract-explainer.md": {"node_ids": ["33445452-9192-412a-b8ef-68a49011f165", "6625a86f-0174-4689-8411-fb4ce111d20c", "73b7d62f-7451-4b5a-89be-587a579ed0db", "20112fba-306b-4afa-8ffa-1a0522d67ea2", "a631d2bc-1e78-4099-ab5a-f5c845ee4407", "fb0048c9-436d-41f4-a1a3-1dd11a8e5006", "e3b94291-1bb9-4e7d-8543-7ac11345e184", "5ea665b0-9e33-44a6-b4d5-b74cedc1517b", "2743efa7-cdcd-4352-8da9-e27aa523f349", "82eb1175-f168-4cbe-ab4e-d1eefe1a275c", "3a4d68ef-6d9b-4454-9236-0f442cc02642", "c52fc34c-3ede-40f2-acc7-e7c5ccfee69b", "894948b2-76b3-4a05-b234-8c93be14887d", "61943ccb-d1b0-46dc-aad6-3f490c1f808a"], "metadata": {}}, "main_guides_getting-started_start-a-project.md": {"node_ids": ["d0d16abb-059a-4c13-a085-3362af2d2fa1"], "metadata": {}}, "main_guides_getting-started_swaparoo-how-to-swap-assets-explainer.md": {"node_ids": ["c766cd88-b4c9-4c3a-ad27-4b1afe20e884", "0ff610e1-e928-4762-95ab-f546fd85d9a9", "66943d4c-fa5f-4ec4-8195-d54df6b05b09", "d8fce5e8-3b9a-452e-af9d-3e250902f896", "b8703925-162f-404d-8327-d30ee60ee31a", "66e6816a-72d8-499c-9ca2-c728cad93617", "7a4eea5d-b9bd-4ac5-85b9-caee8b8cd87c", "7c0a8d47-17de-4a49-9d07-485c11bcfb06", "358517f7-6685-43de-b634-fa43a227c44e", "f8d834d1-e99b-4dea-bc2f-b41f21b0b0a1", "d7318216-7473-4345-87fe-3a9328e0adc0", "38ed82ad-1855-4a1e-b23c-0bcc2aed5948"], "metadata": {}}, "main_guides_getting-started_swaparoo-making-a-payment-explainer.md": {"node_ids": ["75a89d88-640e-4fa9-8e47-011f5178d4a5", "3c5ff7b1-57f4-4045-aefd-6eafb1056da8", "fc4e62e4-f6d4-49bc-bf30-06f410dcf962", "df40ff5c-038c-407f-a8ec-9f7ee7b15dae", "f1ff97f5-19b1-46e9-8f73-2b52ceaf17b3", "2425295a-9ec1-4891-ba29-0e5269404049", "f2ff4f22-0e9e-4b7a-a4f0-801dda33305b", "449fc96f-1212-45a7-9752-7a97dc6413d2", "5740f11a-c403-48e3-bde0-1e0e03126bac", "17988658-fba3-47ca-b33b-c77cc3ceb894"], "metadata": {}}, "main_guides_getting-started_syncing-up.md": {"node_ids": ["dbe8d348-b87f-4cee-8006-b2d0eebf951d", "a4d90d2b-af5a-40e4-b6d1-bf5daee90072", "80a8adfa-0da8-4b63-8bd3-4ec75559fd15"], "metadata": {}}, "main_guides_getting-started_tutorial-dapp-agoric-basics.md": {"node_ids": ["556ae03f-17fb-4e8c-8953-0e1869c13d70", "0a47cd9d-4101-48c3-b668-d8b267cdbf71", "8826bb54-2644-4ae3-bfab-75c67700e635", "ae6e93d1-a32a-4b08-b368-a75adf0cc55f", "0262b87d-19a1-4821-92d6-3b5974bd623c", "107d3a52-9fc1-4ed9-872a-8f67122c95d3"], "metadata": {}}, "main_guides_getting-started_tutorial_index.md": {"node_ids": ["7f1a2338-19e0-4066-9419-e847667dd1f1", "21e97b34-32d1-4c43-a739-05c5afa26f73"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_agoric-provider.md": {"node_ids": ["a0aa02ce-3f9d-4241-92f0-2ab508626a6b", "9c672ad0-6d71-42b9-bb7b-758b150431d2", "34b2b7fd-048c-445c-9939-430f9c1bed1b", "4db77ee0-7328-410a-9b80-c97febeaeefb", "11d5bd07-38ba-4743-a408-b5aea355d0cc", "e72fdb94-0ddb-4683-adde-03441b374447", "19305845-c137-4acb-8267-99fa427d476d", "3ee617a9-c417-4a11-afbe-0e6f94e599a7", "d29599e3-f958-42f3-9074-103fea6b3704", "16be8308-fb05-4702-b77a-ea3692468f85"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_conclusion.md": {"node_ids": ["f5a29398-83b3-486c-80cf-329d9baae6ed", "0d2dbc40-5802-445e-89b1-90588b93874c", "f71c639c-ae1a-48e0-a1a9-0a1dffcc1f5a"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_connect-wallet.md": {"node_ids": ["9d5efb9e-d364-4ba7-b822-6855554bf978", "b8d4acbc-3689-46de-a38d-2da7b4b65850", "9382e47b-7e2a-4b8a-a21d-40a53bc1d6dc", "955f9ef9-1345-4ef3-a897-06d02001524a", "de7c77fb-1bbe-4f90-a4a7-54a291826c2e", "45b77872-8feb-4838-8c3f-50d867e84e77", "4611ea7c-b9da-465f-88ed-53d9f0fbc632", "b58b278f-3a25-4a86-a5de-2ffd700e24c7", "606dcdee-7736-4237-a2f5-19fccd8d11d4", "1fb23008-5ecf-4abe-89fb-e084adae6180", "795ae17e-253e-46de-9f79-289c57dc4189", "58466ca6-4d6c-4532-8e53-9801646f1066", "bc661d5a-9024-48f9-8896-4f3f8800de1f", "a67db3d5-5bfc-47fa-bc25-4fde498fc6d1"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_index.md": {"node_ids": ["b9ae0720-3f5e-4f0b-8b9c-b0af27ebff6b", "8b41caf1-7d1f-4fe7-b98f-d08c8002d848"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_making-an-offer.md": {"node_ids": ["462298fb-0cb6-43dc-aeed-237edbffbf60", "bcf0a5b1-3b38-437e-9d6e-1fc5527cfe4e", "69d459d3-0f47-43e6-a22a-6e4da4d14a85", "949eb9f9-2880-4d08-9ed7-a824ef5f3534", "b96232a6-b68b-4fd6-857e-aa0f73cbe171", "59627040-e8e6-45e3-b426-037194eff5e4", "68af71e0-d7eb-4a91-a863-a2f25c116518", "ec7387f8-666b-46fd-8f25-88d220afb643", "51d6d55b-4b0d-4edc-a268-0bef3ada7d3d", "e6340a5b-8a7f-4aa2-8b14-169b747c176c", "ebb8ffe8-7919-437c-a819-b022cfcd6bc4", "c248fca8-89f7-4a16-bcbd-74d31a03d6ef", "a18c9269-ce60-4ab8-a0ba-ef4d74cafe39", "5e089207-0208-4a65-b44a-d954f8e864e0", "ac822ae8-8653-4a38-8ec5-5dea40fb8569", "7041d7b9-0398-4883-a568-4840e3d81e05", "858f5f48-f44b-49d3-90ec-2fa479c85594", "ab21588c-fec3-4e22-b937-498f8f74cb86", "c84714cc-6b1d-4812-a86e-8dbe3130fc33", "056915fd-a5bc-431b-b4c6-101c6178c6f2", "ef321e06-debc-49ca-b5c9-c37123f731a7"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_querying-vstorage.md": {"node_ids": ["48dc22c0-ea71-4a84-9b48-728be15eb46b", "2020d861-8a6f-4214-ac85-d415a6da6f11", "9cf45d2c-78f7-40ac-ac9e-2aa6a938b1fb", "ad0a24d0-388b-47a0-b4db-f6756f5fb705", "a8f5f012-baa0-4a53-803d-1a004ffaa9a1", "d714400d-e581-4a79-9001-0c8f1275940e", "0b204ac3-ae3f-4b20-b2ef-61f2f820fbb8", "f98303f9-b54f-4a03-8251-25eb65ede791", "877ac6be-d554-4548-bc93-5f24aeb46b7e", "1328bb81-ce81-4006-8e05-4fd51bde87c0", "5fe7156e-5492-4f7f-b7e1-680c942643ea", "59ee5570-caa2-4fa9-adbb-cdc9571adf12"], "metadata": {}}, "main_guides_getting-started_ui-tutorial_starting.md": {"node_ids": ["97207e58-6fc8-4911-a363-eed0975239e2", "f77d2213-c867-44b7-8dcc-b626dcf77e3d", "e4439264-6250-45f7-9e57-43f2fd2bbe33", "cc9623eb-f726-4fb8-b09a-31522d36d69e", "6ed43639-6194-4f2f-9722-32bb9757e55a", "09bd9e87-d662-40f8-838d-86b84c9ea5d5", "839b0413-ebde-485f-bfc8-55beaf8fd99d"], "metadata": {}}, "main_guides_governance_index.md": {"node_ids": ["fe61c055-510d-4eee-92df-e88815597b6d", "a0e30dc5-311b-4d5e-9dd1-b777a85ab2ef", "c8ad04ca-292f-4043-96b8-fb306fe4259d", "3d7aee3f-d92e-40db-8b77-36f271cef6fc", "e21b1c5b-b158-446b-af91-77c65a195d02", "eb573057-cd12-4d0a-af98-1bd04f2bcf85", "3a5454f8-f6f3-464b-a6d2-50779f2805d5", "d2acaf13-4603-4bd7-a30a-3a24bf6ece42", "3760bc5d-6549-4b36-bb82-08ea84e7e0e7", "8dadc7aa-eccd-4be4-ad03-c99d3ca279ed", "13844e00-fd15-44ef-892e-09822bb7edbd", "42dfa886-c5b0-4add-94fc-996f50b3c4d1", "0a5fdf9a-5a9b-4eed-a36f-bc7078895f9a", "36930942-bae2-459e-94d7-2b786be83b9d", "baf1adb8-b315-404e-b40c-c07226552e9e", "29e87c9b-961f-49eb-a951-be1c825601cc", "2baa3652-5123-4a16-8058-53162438097b", "20b03bf8-a4c7-49a9-b8c3-e8dca2a50ba0", "2b447232-51f0-4c15-b9f2-08d050f9e610", "11757326-3f7a-4edd-bf79-e96c465f519c", "dcb8aa64-e7d1-43b3-9540-9cc373af9786", "31d473e2-1f64-45db-ba7a-d1bfe6910524", "1df9c1e1-786b-4199-a5f8-f60ee5454894", "7699344f-5c05-4c7a-8574-ae25510e4eff"], "metadata": {}}, "main_guides_integration_chain-integration.md": {"node_ids": ["83fb781f-026b-428c-b826-bcaa261c7bd2", "64c9f321-8cad-4dcd-8eb0-357db8acd63f", "8423ab6c-a7ff-4b6c-a7cb-24fc9b3d4a2a", "f8c8f529-5903-498a-888f-ab287b74a7c8", "249812da-1b86-438b-8e5a-e5861685059d", "ca28ed92-30f6-456e-bf66-aa6bc19f4e5d", "4a2df152-76df-47b8-bdb9-bb6f38f50599", "9359e8ef-6ea7-4324-95a2-2a693e49e854", "b415ee04-5a93-4372-987c-e5eae7d4dda1", "5cff213e-5e64-4b0a-a630-da74697843d0", "1a53520a-1ba4-48f9-8f32-cdb55e8dd7ab"], "metadata": {}}, "main_guides_integration_name-services.md": {"node_ids": ["745e15bf-8bc8-42c6-8f89-6775e1c1f5ba", "57e3be21-b734-4725-9bf2-f69d5a63c970", "9d937b59-fbcc-4a99-9761-dc58c622590d", "16617407-68b3-42d8-bd96-c6aea24ab4cb", "ce3923b0-dc0a-4a4b-8fd5-99df850cc612", "31d1b196-68bf-4cc5-8312-bc418ee40cbd", "a4b42692-21d3-4f27-9cc0-b540326ce066", "fb35ac5e-8dbf-4e1b-a6d6-d61fe24ab997", "aebe1120-9956-478a-8410-ed1da741d97e", "1fc2337f-f157-466a-8ad6-423681ceba7e", "d874c95a-0b97-47ec-83f5-eb2eeb409184", "856523bd-981e-4025-adb9-f01cd15c770b", "09574e98-324e-4699-ba36-b86b1579fe83"], "metadata": {}}, "main_guides_js-programming_eventual-send.md": {"node_ids": ["d176538b-98bc-4926-a48a-1df485a2e6ef", "b686f8b7-1ce8-4309-904c-b73e03d937c6", "13bcb790-5f4d-47a8-9541-181f4d31d3b6", "37eb7342-2219-44af-934c-54861a2a3c2d", "2b24751d-8681-421c-a1a7-4210695b1a75", "eb9c5545-c0ff-4d32-8a16-589b87fc998d", "a818dd95-8357-46fd-9855-f4a620d8919c", "21c08268-7553-4192-8d89-2b099fee89df", "703e13cd-d362-4577-b163-c586b977738c", "0af40b11-a8f4-4797-acdb-42930704e997", "4f074a5c-909b-4606-8aa0-4dc7255eaa87", "0257479f-c124-4992-9b4f-c2c568e92e85", "3423ff84-8f29-42e2-9378-1842626e1920", "b8886324-df39-47ac-bd9b-a562e889dcfb", "ded2ae2c-36a2-43ca-bead-42901af46f5e", "eb687e0a-f45f-48c6-9544-41e172c47c46", "c3d1188a-b63d-4769-9115-8ce44e0c351e"], "metadata": {}}, "main_guides_js-programming_far.md": {"node_ids": ["0cf0b995-d455-4f2e-8bce-d54527a39905", "383dac97-684a-48bc-b432-d412ae44fbcf", "a2cc8853-40fd-4fa4-8132-76040728afbb", "081f597c-e925-44be-9cb1-7b7a3878ab0f", "b885823f-050b-49d7-8853-4cccf0e20709", "16d8b474-f161-4f60-a1c9-615da29935b0", "11697207-298d-414e-815c-8d17abb463f9", "f82d77a2-6bfc-46a0-af03-0f2c7e9690fd", "05325b4b-3100-48e0-9a15-fae38ecad049", "aa5d9726-608e-4eee-b4bb-bf296d22fb1d", "e7843d44-35ef-486d-a605-312f7e620e10", "844e3764-23d2-4cbf-a1a8-c9c02a8ad1a0", "6d8448cf-2ec4-4b14-a09d-f7603c8bc4d8", "85fc3e25-c327-47cc-ac6f-4d019a5e7ae0", "35bca308-89e0-42fd-9dc3-d355b808947d", "ecc7c5d4-e9a9-4c76-a724-69251751c656", "3e1a3ea8-2916-4e29-90bd-ebd732a959b7"], "metadata": {}}, "main_guides_js-programming_hardened-js.md": {"node_ids": ["964c32ba-0f6a-4195-85d3-6df5f4fb4810", "4e8161a5-90e6-44c9-ab0f-a9fc00dac807", "a04b59cc-2e17-424b-8752-a44d552ee20e", "cfb483fa-f82f-4dc8-b24d-338bcdcec7e5", "35591630-b4ba-494f-aad3-786106ffcce2", "1a4e4a76-9f3c-4894-b2bd-c758242fcd1a", "5d241955-a16c-46a0-a288-cd1cb0216d62", "9c04683d-89a7-40d1-8d1f-fdf4ca180d36", "0d7dca4c-db14-496d-8546-8c0106f100ec", "6cf54f51-67ef-4ac4-a2a5-992536bf4aea", "81b88a5f-90b1-4480-b794-fdf5ad7a35ac", "fdaa3d5f-7e20-4a21-b17f-bc96ca9abd7f", "943f2311-d47e-4acd-a71b-80361cc5e545", "00bf2054-c613-4a31-b2ff-87f06c66fb9d", "4d9c0879-c385-4277-92f3-708484ef4dc2", "d9c34925-3d22-47b1-bc99-eddf65a710f5", "7036695c-563f-4181-899d-04bd10ff16fb", "1d8a3d7b-87ea-477c-a096-7aaad6408c79", "340b7fd1-c1fa-443d-b5ae-4cc023f0c1c7", "98f357da-935d-44f9-ab49-572e3ee12c96", "bd22daed-45b6-49bb-9178-836eddc80907", "a85bb7c5-e39b-4d58-b877-c1c214c6e234", "fa854798-84b2-45d6-bd88-fb52fac477b4", "08863d9c-34ea-4cc4-a079-0e77dead673e", "85ea764d-6df5-4bf3-bfa1-a62478209b1a", "0dc94755-496b-4120-bbca-8b3b751ff83b", "006ea161-cc5d-4cfe-b22f-9cb701efc1f3", "079887ac-e064-4120-9467-8c6791777249", "f2dd5f9d-1f3c-4207-b61f-358153e85b51", "30b0f2f0-9e78-469d-a830-3b79e360bc0a", "148e6150-d733-4190-bd67-d2c27151948b", "4b27a9c1-5da2-40a5-b9b8-0965ecff9db7", "938138f3-9d82-45a8-8282-7f9719c515ca", "9d218d55-4d11-4ffb-b065-81d8408aa034", "48f597ec-fdb0-42eb-9158-d38a0c9e448a", "ea073c46-51d5-4f89-82ee-6eff30ff80a3", "bdc6d405-1de2-4352-8563-da7b1aa3db0b", "cce97ef3-ef60-4325-aafe-6eb08aeffbf4", "b5bf8bbb-d54e-41ae-a8db-1a5811647b84", "329b817b-8a6f-4110-8468-38e27839a329", "e6f20bc1-972c-40d4-b722-71997a7c33e5", "a7aa55c8-c831-46fb-bb08-64843c41a8c3", "a6c3d1a7-77ed-4075-96af-0509bfa28b4f", "5c4e9cea-cd3f-443e-83aa-d651d959e20e", "b4aa56ce-ce4d-4fe1-a5ea-90d6b7f14578", "a5392703-cfb8-48e2-922b-ca90957d2bf2", "80c8008c-cfb5-420f-a820-ad31901141f7", "21526eae-611a-43c5-8fa3-301bcc72642b", "33887770-90b7-4306-a972-e98d30735133", "ec9ae4e1-5202-4085-ac6f-8770d78191bc", "f6c49252-d920-4237-88e6-6db9b5b98cc2", "fcb80f84-b555-47f0-8499-73830ba30658"], "metadata": {}}, "main_guides_js-programming_index.md": {"node_ids": ["19bfe4ce-11f5-4265-9891-7a65eba78603", "c760e720-750c-400b-9f70-60f0240581b3", "3d49b4f0-bc42-4e2b-93de-faba42b55d1e", "1ac8b1bd-5934-4742-9329-fc03c7c13381", "8cf1b9af-a45b-4b1b-bc62-2761e10cc53c", "6f5ef79d-16a8-49bd-86d6-945e0ba337d3", "66f59baa-a103-45b5-920c-c75740a740cc"], "metadata": {}}, "main_guides_js-programming_notifiers.md": {"node_ids": ["d3fb4e43-8b21-4eea-a6cc-c5b04d111e38", "34bde775-4ec6-4d7c-8f7f-d446ddba1aca", "f61bafab-a484-499a-b7da-06d5fdee12ea", "ac85df67-8a2b-429f-8b62-6cfcc1178fb8", "e455f629-8d39-483e-b50d-8726ba71db72", "de80bc5c-d951-4e22-b50c-e67c0e71662b", "303e0e42-564a-49a4-a4a1-71dcea69befe", "3945258d-fe81-4688-b365-dc83912c1980", "0ff4f99c-acbf-4ce5-a780-d7d66b9d0135", "d3b9d86a-1e71-4f37-9c58-93f786aeca4c", "3d3d2021-012d-4ab2-ac00-27e908ec331f", "be568b5d-d953-4ea1-a6a5-b3779324f4d4", "10068e23-0bba-4198-a27c-b66aa24d8a1f", "d1cd3ac4-fb3a-448d-a336-168d21a481be", "2ab19971-ad1f-4193-bbf6-344a3b272b08", "8dfad56d-6d19-49c7-ba1a-72d39f38636a", "4795a5b8-9e09-4127-8720-a45d40a0c021", "9ce3a7cd-01e6-4640-886a-380fb22e908c", "43174536-08cb-405f-88d7-ee08c8fdeb8c", "cff037cd-0ac3-4735-94b0-11ed0ec588eb", "d04e0abe-afea-401b-a16f-ddb09965e9d8", "de5c7bff-6a0f-48d7-8253-36c48b6f86b9", "6743e05c-6b12-4350-8b47-74e89b5f7529", "c9744fd6-d6bb-45e2-98f4-5df6f6f2f4fe", "db9852ce-49fb-4d40-ab02-f6dc0550f356", "4e6cd211-80da-4477-9feb-8d726cf72b93", "c83309a8-2a2d-413e-b245-807ffe71f128", "eea615c7-8f4c-4380-97e1-d8bfebe4f5a3", "e37179d8-daa2-4a10-b8b4-8502ddf9455f", "8a0113dc-4ed8-485b-9c76-9e8a8f03d984", "93078583-09de-4ba7-b1ed-08a6501032ad", "d6f57556-ed9d-4d92-9d4e-cd38b611bcb5", "7d4dfa59-14c5-49f3-aa9c-cccca75d54ca", "15ea81b7-9111-4f52-8732-e77b7393e5e3", "b5ed37d2-39cf-49fd-af9b-ee02e120707b", "04b62962-b1e5-4a14-a2f0-fa61fd31e34c", "3247ad1c-52d1-44e9-8737-b0cbbd6c59c5", "a8ab42d9-0f4a-47c8-a65b-48871f81eefb", "e737fa3e-b07c-4d12-b46c-a7ac3a5e8868", "7b98f997-f211-43dd-b87b-92244eeb00ca", "33d4f2ee-7337-4688-b610-4acde81a7f45", "fd2f1a00-fae3-41a2-9dc8-499a74b72a7f", "767510d6-e55a-430d-a6d5-fe2f72b5bca2", "f70a270f-ae51-48a0-8860-0d367c468e80", "a2052778-9914-4130-aa31-16dd7cf02b4f", "6d67e802-f4ba-49ac-9dd0-c910f2581e72", "3eb11363-6850-47c1-897f-0cbd81a0097a", "f6015677-e4eb-441d-b9c0-a76e6adb5c85", "1a82138e-c263-4e38-b2d0-cea91d0f8ed0", "75b8f70b-2d5e-4a11-ab14-bd8a73ec9d67", "270cb142-99b0-4936-bd4e-31035b27e5fb", "ae784611-6a63-4c6c-bb30-f0ff6d51092c"], "metadata": {}}, "main_guides_orchestration_how-orch-works.md": {"node_ids": ["011b5837-8aee-4d87-b94a-b647acd45385", "1ad0180d-b25f-4272-96a6-3f2fb7274cfd", "ffac14a7-ea09-48de-80ab-f0617964c5a7", "345e1fd8-c38f-4a61-83d3-1282912a23b7", "e6c66c7b-ca57-4e63-a41e-46276de54517", "5571f1ec-d1da-44a6-844b-6f8d27b9a58f", "ea253eee-2cda-4e0b-acdf-f25f8be7956a", "bc265ae4-4bc2-4f58-aa49-28aa0b46b705", "b1a17674-a4d3-4e6d-a8d4-418133264e1e", "dc5e3470-f42a-4996-abb2-37ebf7285a0a", "70e3a136-949a-48b6-a5e9-d8c78212b832", "85eaacf3-e49f-4397-a11f-9b29eea94167", "8fe5df8d-c0bb-4682-9f9b-7ec0d1c1f0e5", "1fa79cff-56b7-4b47-afb7-f91b1802296d", "7e070661-0f88-4293-8cb9-2a79cbc9da87", "d03a356d-6ea4-4a14-9cf5-71b8664f7f55", "f29ce82a-6c72-47ac-994f-9963b6e300da", "76b9cfbd-75ab-4a4e-b17a-4e6fadd295d4", "5910f95e-d33a-40e0-aeae-77f25325b151", "393f510a-165a-4748-9714-a0a67873ecdc", "f7ea2337-f929-4368-b8ff-44d3eb8f76fe"], "metadata": {}}, "main_guides_orchestration_index.md": {"node_ids": ["839f1e70-2978-4d82-82f2-ce298a2022d9", "ee448e97-2b39-4237-a547-6e0270bdb9fd", "2a202496-f961-4bba-95eb-92cc84f090df", "8d6a59a1-e3de-49b3-9c3c-26dc10621ada", "7f3c8af9-3520-464b-80fc-ff2fbdc200a7", "2107db0e-07a9-47bf-b46f-dd7b6ad96da3", "221ef628-20ba-47b7-af26-f186056671b1", "1b8748f2-72ea-454f-9383-8b0837082fda", "a0506f11-14f4-4f2f-905d-c5aa3fa8be9e", "c0249167-a2c0-47d1-af2e-7d704c70cb49"], "metadata": {}}, "main_guides_orchestration_key-concepts.md": {"node_ids": ["f1a875f1-4c1e-480d-a52b-1171a12010cd", "d77b98ef-f772-447b-868d-d19981019a8b", "6ade8609-2881-42c4-bed3-75ca043abcf2", "0151542a-1764-466f-9a6b-aa9e29437b8a", "5be49130-85e4-44bf-9052-a90c28893991", "2f0ffefa-ef1c-499e-a176-86998ae8449d", "3119148a-24b3-4b2d-a564-9cdd0bbf88d8", "0e33d199-cbdb-4af0-804d-bef3d2122616", "8157d4b5-d011-4503-9f4a-e24d7069d7be", "0eaee26e-bdf5-4845-9e47-73fea7271068", "9e7d8bd9-dbe1-4685-9f8d-967897745cba", "ca1c392f-694d-4974-960f-9d623f0e11ec", "cef81d03-82e4-4f8b-8415-067190ed2b21", "38fa0dde-8c29-4e93-866d-458cd068105c"], "metadata": {}}, "main_guides_orchestration_contract-walkthroughs_cross-chain-unbond.md": {"node_ids": ["cae8ac61-e377-4aec-b255-e6bd73f2501b", "248fc313-d221-4188-81b5-484bbe86eb8a", "6dfd44dd-f7ec-41a1-ad31-8700c4ea9b21", "b1cb45ef-085f-4acd-8e40-6baf119a72ab", "201c9515-f382-438e-8702-20ae64bbf963", "886c5244-590b-4615-8313-e9f8e3988581", "796987b8-f691-4d03-9c55-5efa2a1274fd", "1e4c44fb-d636-453a-a217-312e9d715c96", "1f808142-54fe-4380-a75f-25a12a971f1c", "6c2c9f35-bfc8-43bd-8b3c-c428243ce012", "e6c792ca-c52f-4deb-8149-78954edcd6ca", "9a6f4773-28f9-476b-ac99-7f1da2432a22", "d079462b-d3e0-4d2d-a748-7d2a2f66ffe7", "3f608b63-df61-4c3e-8ea7-a97cd1dfcb94"], "metadata": {}}, "main_guides_orchestration_contract-walkthroughs_index.md": {"node_ids": ["a8e6749c-2cde-43dd-ae3c-fb5a51cd5ed9", "4daf89ab-24c4-4165-bed4-a881ea70a418", "b2240218-cae6-4273-b8ec-2b18aa513e46", "fd650052-4126-41a6-aa0b-52910d4460d2", "164defa3-1619-4325-ba15-2f089e173dca"], "metadata": {}}, "main_guides_orchestration_contract-walkthroughs_send-anywhere.md": {"node_ids": ["dc570d34-9b98-490d-a8be-2bee0b0d7fed", "e091e647-2f3a-40ac-8474-9886c8e6cc1f", "11cc38b7-e8fe-4227-a4b3-5a9676399c43", "638fc01d-1e84-4482-9e87-344c9783cb5c", "022001ba-445e-409c-9d53-21c52d10113e", "32a33295-72ba-4464-a4b3-06c7990be5ec", "bd69f62a-1755-4706-8cae-0d8ac5e6de8d", "3b519c80-b635-418d-a9de-d3fb7d1e4bd8", "ba0e88f7-9376-4e29-bcec-3330c56b12bd", "2795f8ff-d13f-4dda-a8a9-a7c0463a879e", "963e46ec-c517-451f-95f5-eb9f3b6ea541", "0af3d3da-e991-430c-9917-76c5784c0bd5", "154784b6-ef2e-4be8-9875-5372e5e0fc76", "688527b9-2914-4e7e-a6b8-e4ffe61a539d", "ee6b0591-86a7-48a8-a0d8-8841ba7740df", "d54725ec-1413-4020-9c6f-87c55516eaff", "84a930b1-bb44-456a-9d93-d2576f625e48", "16a3144b-116f-4363-a4f6-243270e46fea", "ba521cb3-be5e-4b5a-81d8-c6fbd22268ab", "8a6a43b3-3110-41b0-ac28-a6861cdb7f55", "b73e38ab-7ef7-4fe1-8f88-c1997fa9ff15", "90fa6875-20bb-480b-9b1a-24b51ac9016f", "32c4612a-fc81-4fa2-9b87-cb90eef59877", "bc702466-0697-411f-b824-97be0b1a8895"], "metadata": {}}, "main_guides_orchestration_orchestration-basics_contract.md": {"node_ids": ["0982f476-fec6-440a-9fba-8235abcdbce5", "e835ef50-1679-4653-b00f-d3448ad50c59", "c7733f67-8ab6-423a-accc-ebbdced779ed", "07fd3e71-a76d-426e-9a6f-b8c3345a6c69", "e76dc33d-3fbd-4e0d-82ed-fef32e092446", "54e549b9-6cc9-46b2-8653-d10f06b36b4f", "e527e1c4-d622-4d99-b322-e9cd07d1c851", "f0367f22-2a28-425f-a1c4-2e944c8c1077", "97100d53-e9dc-4c78-be25-d2ed6575232f", "45193ccc-0ad5-4c22-9094-552a68c0fb75", "f48db4f4-81e1-4808-b9a5-0027e10d001a", "34a2618a-640e-47e7-8288-8fc55ea8e8fc", "51c1b1ac-be66-429b-a972-4c50c635a4eb", "202e6459-4874-4355-96fa-b12df8848e1b", "275a42ca-dfee-4559-be29-e7ea2700ddd3", "65128cc5-257d-4add-b14d-315b4a1370b6", "10c8e301-176f-4257-bdcb-5ce314822cf7", "f32ee26e-2ffd-4405-bcd2-23281ed5fe67", "5b86b294-92f0-4e06-a5ea-c57ae76355a3", "aaf00975-11c7-4868-841c-f2d2e9ad53c7", "efa28d29-36e3-4e0d-80d6-84c51cced792", "50dbbfcd-bf01-45bc-8cac-124da20ef3af", "444a2d07-6dcf-44e3-8040-1d714f437c9e", "5485bba2-8106-4fa2-9eac-b9bb4223e9f3"], "metadata": {}}, "main_guides_orchestration_orchestration-basics_index.md": {"node_ids": ["7d7119dd-fa3f-4da9-9359-b2f57e437fd3", "479fd83d-4d08-41c2-9ac8-17263addf6c6"], "metadata": {}}, "main_guides_orchestration_orchestration-basics_installation.md": {"node_ids": ["9646f24c-5a80-4d47-9924-488eaaff08e9", "dc0696b0-e874-4d10-8720-450c4f990e5f", "8657e00f-f537-4b39-8073-41999c819d3e"], "metadata": {}}, "main_guides_orchestration_orchestration-basics_ui.md": {"node_ids": ["bc4d02c1-08c2-4a9c-bfd2-ea516f4dcbe6", "6b4a2457-5ef4-4e56-83a9-ae7d0cac83e5", "175d825e-7a99-4fca-bb5b-2dce57d80e7e", "54749b79-a593-471c-8eff-e7fbf907ebdf", "1bb6149d-dc2f-4545-8b2e-2bc2ae129bf1", "9955afec-f6d4-4727-b6ce-28cfac920fe4", "c238d4d9-a43f-4780-ac5a-f424807afba8", "4f59cc60-8807-4475-b304-0b1f3591187d", "7d09bbc1-c879-45f3-81aa-97b22b361455", "83699ad1-f57e-4447-84ab-7c04999e0b2c"], "metadata": {}}, "main_guides_platform_index.md": {"node_ids": ["56c35670-7d74-46b4-8620-7877b0e20db7", "458bee02-8966-40de-9fb6-1d782afcd0c9", "eb9f8522-6743-4771-90cd-ea510df130e0", "7699642f-8c8a-4100-ba05-b201bef27774", "ffb6df95-69bd-47ce-91b3-ef8364d3b465", "6aea1100-b2d2-45d2-8932-c90c67a83743", "64361966-d6e2-436e-8756-da1577e30f30", "783fbc4b-ea41-4daf-be8b-f4856d811e9d"], "metadata": {}}, "main_guides_UIComponentLibrary_index.md": {"node_ids": ["c2d0581f-3542-4ec8-800c-410b4f24ec39", "4fa6797c-5db8-440f-9093-58f61b264e7a", "dc2e1861-4f42-4d3d-bfb6-672badc4295d", "7b692a6c-8436-4dcd-995a-fc378516ba43", "2890915b-4346-4261-96c0-4474c6703d4c", "e26bd6a2-ad8e-4d7e-86d3-ec7b7f3e0742", "785131bc-1171-413f-ac3a-3a73af849a85", "54a216a2-0479-48ac-827a-a15d1a8bd915", "f1eccaef-c6f7-4e9c-9438-5e3e65d06a0e", "4bf2ca6e-1835-424a-89fc-62ec339170e5", "c95889ff-4b12-419d-b72a-8f1e95c7e48d", "580b6f9e-2929-45da-9e57-7a366161b8a7", "faac6cbf-98d1-48e8-8f66-b59bc0b1c09f", "589e2845-9027-48a4-845e-cc47e7d984e7"], "metadata": {}}, "main_guides_wallet_index.md": {"node_ids": ["78af4c77-a795-44f3-82a2-8a2ac9c75b21", "ced04e23-e88d-458c-9b89-513053012874", "c814bf64-0875-42c4-b09d-52c6ab32aa3e", "f39ae275-8674-4d50-8665-6b83a9244b4e", "e8d73ce5-965d-41c6-adef-8436878056ff", "8e3bdc20-a7da-4577-9257-ece401b475bc", "3c6a2b39-b1bf-448c-bc8a-138fb56dbda8", "1cf6f85e-2012-4459-becf-8c6e5b71f54c", "d1523f74-6366-49f6-8f29-e0519050a686", "8152a3ec-2b06-4d89-aeca-6e97cb20dadd", "425e8a91-7726-41d1-8efd-cf99cfb6e587", "bbf5b954-9d5a-4c82-a948-458903e02f2b", "c7a35dfe-7483-4a09-9d6c-a3e0dd9dffc7", "0a7b3576-87e1-47c1-8562-b9a95fc1b95b", "3145a487-f4ab-4dd7-983d-55762b4652b4", "790848c7-b0d8-430c-95d3-4cb73d1cf206"], "metadata": {}}, "main_guides_wallet_ui.md": {"node_ids": ["bfc93d3c-c529-4802-b687-77f00c0765d3", "fa358715-ddcd-4c85-9989-fed57c7a1cea", "09dcf02a-8376-4ee2-8f2e-aabdab565afc", "0af8fbba-37c5-4e03-8647-3f1692c185e8", "1cb7790b-f133-47de-aa86-19949a93decc", "c2250e5c-ad76-433e-94e6-af3d44826d48", "b1790c2a-13a2-45df-b63a-b46cbb64b457", "e86d2b7b-4c81-40e6-ab72-5011698238c9", "27542914-a587-43a4-8952-9f71de34166e"], "metadata": {}}, "main_guides_zoe_contract-access-control.md": {"node_ids": ["41745386-d96b-457f-aa53-a8f4532cb644", "51050da0-421a-4073-bb57-400f90553a51", "00c877f2-628f-4560-b412-1c9197190ceb", "e65c53ac-e71c-44cf-a0c2-7f0ec990f899", "82cae29c-c767-493a-b5f2-1c129473ab96", "3b26ca27-626d-44a1-b2bb-7eaec7351ced", "bd1b43c9-f4d3-46f3-85d6-a71c77e2fdf3", "b189c568-d524-43c3-9506-ebb9e734b0b4", "58fcc06c-bf82-4066-b51d-7ccaa1f415f4"], "metadata": {}}, "main_guides_zoe_contract-basics.md": {"node_ids": ["d506b960-0110-4df8-8f9d-356b9f26ef73", "d6bfab0f-3406-498a-9242-a9dfa03b8d29", "a626448b-298a-47fd-8977-1f02292ff843", "bc7b261d-c8c6-4305-a050-cd5d7fe2697a", "dc23e134-f11f-45dc-b480-ceb499148113", "b632d194-3f6b-4e5c-83b2-0c10bd3dcfca"], "metadata": {}}, "main_guides_zoe_contract-details.md": {"node_ids": ["b8c56c7b-1e1a-4df1-89a5-5b270640e62c", "33de0ab2-090b-44d5-b335-5ee18c6acd20", "542cc243-e4d4-4b08-9839-b2d124184caf", "d73f6502-8ba9-4bff-8b14-0de1c5cc85ee", "09c2e092-8034-4be4-84fe-3aa196b9320c", "54927b82-4f1e-4b68-96b2-fc531e8099dc", "f8ff539c-6244-4fef-966a-2e91a084ab82", "34a020b6-766e-4f31-a18a-4db5f66441b9", "5f01cafd-61e5-4ea0-9aa1-9d7f61c0b15e", "1ebb6620-193e-4b1d-8981-09cb15946180", "4df3c633-23b5-41f9-89d7-f8df9fc30236", "27f32658-accc-443c-96b6-efd3706cea72", "1603918d-ce1b-4938-8028-1cca1570970f", "452258fe-741c-4125-b966-74a200480ec1", "4799cd63-5431-44b0-9bae-1ee415fdfb36", "809453a0-e465-4c84-84dc-2d6d79d93580", "c25009ca-89e3-45eb-9e41-97874166d396", "d743ca4e-c4bc-4a97-b6b0-6107d8c405a3", "f2253ee6-07d0-4772-9c1f-3b29e0e04e6c", "2b12b5e7-cd56-4c84-9c74-c602c74ad489", "7643f9a3-0a3d-4777-a289-e0657b09c71b", "e624b34d-1fbd-425a-b11a-f20246515e8b"], "metadata": {}}, "main_guides_zoe_contract-hello.md": {"node_ids": ["e7afc97d-37cb-4c78-a94f-108ceaa68d8e", "c6b0b67b-dd57-48a3-ad24-64be4ecefb1a", "d6cd42dc-c1a9-4794-be3c-bc29c8e771b2", "3f1ca97f-d384-4915-81c2-eb9e7a376021", "6b6200ef-c8a1-4de2-bd4a-b93309842646", "2e36a584-39b4-4015-b0c6-dd548c8ef532", "3b1562c1-b6d3-40a6-9ec2-a3c2ba778a83", "307a6503-144b-419b-add4-033fea470b50", "78578ec8-bf88-4769-a2a2-e27139a68f33"], "metadata": {}}, "main_guides_zoe_contract-requirements.md": {"node_ids": ["3986fc4d-36d0-49a2-b922-12287a0c9b64", "a323ac27-986e-4059-9193-e53df6fead00", "1850b0e8-bd6a-43e0-b369-74275f2b39cd", "fd7ef474-3afb-4e60-a7d5-07e3532304a0", "09909dd4-e8f4-407a-9ad1-821417b36003", "9499c368-c7ce-4194-bc38-fb3556e7e9cf", "f412e368-6474-4c2a-b100-2cb9604bee9a", "ccb66049-d0fc-4a08-8153-f27bddd019ec", "a1f21ba5-7527-40e0-a4f1-34e93f7cfdaa", "e89d62e4-47d7-4b7d-8402-7755a35792f4", "393b77b0-aa2a-4ca3-a337-d8722508017c", "247f7b99-15d4-405f-a258-c01676734f58", "d9f9ea62-e1b4-4c61-8a59-cca7b251c991", "c2b480b0-e336-4ab2-9f6d-e5d47601271c", "19fc4757-a999-4131-bec9-f54f177036be", "8c112258-1b2f-4600-b820-9f9eb3524393", "0ec84829-5ca9-44e6-84ad-5dd962b69ce9", "c1f0be40-ddfe-4644-b694-df11b4f3df1d", "f473db88-2002-44c1-be89-9ce2a457b2ff", "fd3f6c59-491e-4308-ad9a-4f018355a2d9", "a6328f06-fbad-40dd-8eed-bd9d2eebe28b", "0fbb5be9-f608-43d1-a6a5-66be80c844df", "b90b6d2a-086c-4530-87f9-a5629bc5821f", "088be608-a832-4e31-8dc1-b20eaafe5af2", "7102c9a5-33b7-4490-aad7-8c841a32a475"], "metadata": {}}, "main_guides_zoe_contract-state.md": {"node_ids": ["3032798d-0b1f-4867-9da3-0ddb896c50c0", "8f043428-a6f0-49ca-9885-dd6baa6c1440", "3448a719-17ab-4cdf-a273-62c52e5f3732", "1783f7f3-9054-4a04-b02b-1ddcd002a31b", "f7e41fa6-4a9a-4401-a622-14ce19f13366", "b1c63fc1-15af-41df-a132-9cf1be926b5a"], "metadata": {}}, "main_guides_zoe_contract-upgrade.md": {"node_ids": ["5ac54280-deeb-4b71-8bb3-8695116788d8", "4ebdc93b-0829-40d6-8ea5-ce540587b78b", "b6c0f0d4-9d7d-4fe1-b07b-604713f8e137", "867d9661-df9a-420f-a2af-6b4996fbfc4c", "740d3fcf-c737-4eea-993e-9137b9f552d0", "bf5e2b31-def6-4759-a35d-2659e41cc628", "a1d23916-15c5-45c0-9002-a84925f4bcb7", "477975e5-a478-47ef-86ff-9281733a66c6", "b2580e8e-eed2-4609-a448-3cb39362447b", "c525bbe4-6dfb-45c0-9975-f2aa7ffdc6cb", "aabd6d0e-b859-4b08-bb57-5263bc97ad43", "60e68dd7-3b13-42ca-9017-2991721ef6c9", "ea1cfc05-4e6d-46ef-85c7-5bb9b23b8068", "a44ed04e-eeb0-4061-8b2c-24fb7b156d55", "d592d7c7-9ac1-4a02-ab77-78ef4848c250", "c5e99b50-bf1e-4e8b-9734-7e438bf07f8a", "4b100f9a-0df6-429c-bae8-4a422cc84844", "671a7e3b-d516-4311-8acf-fa8b7fa9e2e1", "900aa10e-d39e-4fbd-92b8-eed65f1ddc06", "9dcc50d4-2618-4a2b-aa07-7186a32189bf", "5c4ad7f2-92ac-4de3-817e-559dfc43c957", "c902c2fc-7492-4fc7-a8c6-ae1fb662e1ee", "64abe725-8752-4f74-96d3-e595a66444c3", "5155a395-aa0c-4d8a-a9b4-f7d483395791", "ec575abb-6920-434f-995f-0be660aec0b9", "622ba776-1512-4cbb-9804-9c0158ffb33d"], "metadata": {}}, "main_guides_zoe_contract-walkthru.md": {"node_ids": ["6583085a-b98b-47f4-bd09-1e71adfb68d9", "acdec986-b84a-41b8-a0ae-b61f43a7b1df", "3f174d7c-0eef-41ac-8cfa-d7f210cab09d", "24ff8a87-cb71-4317-b071-c470c7d1aed5", "c94d7037-2f91-45be-a825-49d80fc9c8b8", "8664b83f-b796-4e86-aa5e-452a4854975a", "70ac8def-4fe9-4819-8cae-01ced0a0ba29", "800c9c35-63d0-4130-94f4-a637f2f01d98", "d310c77f-0b52-4d0e-bcce-6b22ab7f68db", "a145b6b0-a8af-4294-9632-5ab661114000", "c14030dc-ff3e-413e-a4b4-aad219d4b422", "09002ee7-a056-43b6-8ced-9b645d231895", "51be263e-6373-4098-97f2-104e54f6ed0b", "02babf16-ec5b-4863-9f99-d3f9300af04b", "8f97bca2-b4e3-497e-a374-9b9fdf23b9fa", "f830b152-903c-4132-b657-6e8ebef8a1c2", "042dfcac-ac34-4d63-a569-50927e3a7944", "eaabfbe0-ed28-4adf-a4f5-9263df0ef2a2", "22cdd6a7-2a95-4d1e-b03e-86f4c24d0193", "157eac4b-61cc-4e14-a072-0f524e86b5d7"], "metadata": {}}, "main_guides_zoe_index.md": {"node_ids": ["2efda485-4d91-49f9-8e65-a6a72ef9bb1d", "23989c15-da83-46da-9aab-0751647e1f24", "62fa7bec-3c79-444e-841e-672589e55419", "f8ee671e-b888-4096-a6e6-ff48ad56cf0a", "7f6f3676-c2d5-45a2-aea8-36df26f54e27", "0d223cf4-934d-4b57-a2d6-1fc08f6f8f18", "6fd3b3de-4e30-4311-81b8-bbd1ec7cc196", "54c790d4-859d-4e6b-9b58-37fc31fcde29", "fa51d138-2aeb-474f-aa6e-71c76db38d4b"], "metadata": {}}, "main_guides_zoe_offer-enforcement.md": {"node_ids": ["b465d9fe-d550-4b4c-bc4e-db073acb91c1", "91a5d3e6-82f4-454c-b76f-73a81ebc0c8f", "0cd627df-337c-4875-8844-7bb3cc4bfa88", "1693c152-5014-49bd-a3d8-79f0746443dc", "95fbd3a7-0594-4c25-acfe-62262032bb0d", "53c06484-5bed-484d-a532-a0661f2d6df0", "30c70e47-68ad-4a7c-9990-ecc48d9e1d4b", "c506e0c5-2b8e-45f5-868f-b21810f5369b", "eb6d447b-daf4-49d4-b10f-1b0d5b703ad6", "8da273f0-3d3f-4585-8d88-c43a8b00087f", "450d3fad-1b08-4ddb-965f-5680f10b704c", "381f35b7-3cf1-40de-a66b-fe11b87042a1", "b8475be6-6641-4345-a6cb-859f0ade7d5f", "07c4a197-1cdd-437c-9efe-f74582c3ab89", "be9ef972-1d24-4b97-b096-583569ce0e7a", "2ac3a771-ca83-467e-93a1-3935361adb06", "d53f23c2-295b-4578-a73c-a38c9abcc133", "a83814c3-6c71-45c8-bafb-f9a96b91296c", "762f351f-2880-41de-8cc6-0ccdd23378e1", "d8b81047-0ec6-4885-b096-ece47af967a8", "687c99cf-92e4-4196-ad34-ed1b12f2bd2c", "688a4573-9cfa-49eb-9534-41acf24cc55c", "a0f61d47-94ad-4a5a-8951-fe8ca8054521", "448d7264-c132-4fc2-87e4-5856c7c10140", "3d3da71a-04fb-4db1-ac22-580d26d9cef8", "72127efb-dcbd-489a-b14d-6a0e0db8f85f", "a90f6e31-8a84-404a-9f53-8c13dc01c554"], "metadata": {}}, "main_guides_zoe_offer-safety.md": {"node_ids": ["e94c3105-a396-4949-b1a3-e7878c1465ad", "8f3d2ffb-6224-47a8-b4ee-8474afbac32e", "044bee6b-feba-45d9-a0d9-03bc8fc83f0f", "25db8f96-531f-497d-904f-5e93195c291f", "80529836-4e08-47b9-8cb0-238bff0e63e1", "dfc3bf37-05ee-4a91-b322-28063cde25f4", "8c639921-d9dd-47d4-814c-3c84ba39bed8", "205d4bdd-4b29-4f55-99dd-1295f6a0b939"], "metadata": {}}, "main_guides_zoe_price-authority.md": {"node_ids": ["7c7589d9-09a3-4048-b001-1a8d9af01bce", "246cdf7f-abd1-4acd-8c0b-7701e27af148", "64a8354a-899c-449d-9f81-b15f1b78b194", "d5178c68-178b-404a-8887-24f007836afe", "6e8310db-7894-48b4-9f84-2a1b53a95d8d", "5d6322b4-926d-4a68-bc4b-98afeb8f83a4"], "metadata": {}}, "main_guides_zoe_proposal.md": {"node_ids": ["edd0d2b7-cf6f-42d6-85e9-8223e2da1382", "b77caf91-e102-48b4-9874-cd7e358422fb", "8eec236f-ac4c-4f8a-882f-b4bacaa11d2b", "689d4a26-d2c9-4837-9510-c4b34706fd37", "9b4b2684-92ce-4f55-916f-126bafc130c1", "9536fd22-2ff4-4b29-a6e3-d048ebef8616", "64264200-f916-4b40-b173-2eda571743d0", "1409fcfb-389e-4f8b-b691-38c6236d338d", "187014a5-2bd6-4952-bd1f-6ed5b09168de", "9548336b-2e1e-4ea1-8f8b-ecb9235b3359", "b4f40d72-7f03-4671-913c-02622c52889f", "f97f6a74-79f4-4173-b0dc-bf7d765bcb3c", "ecc0d59e-129c-49d1-82f9-67cd95431555"], "metadata": {}}, "main_guides_zoe_pub-to-storage.md": {"node_ids": ["e6ac5f46-2774-4bb2-a824-4d3959f7aaf4", "0f1283b8-96d3-431f-a2b1-d939db5a31a6", "ac7a3503-e2b5-4197-90ae-a352a12a09dd", "64d2cc9c-8d52-453b-acb1-1b129c3e49a8", "b8f6f4b5-3349-4e6e-9c42-5766fd1dcf0c", "cb5bba8a-ace2-4253-aee6-ce48f1991a64", "e40d6e18-8036-47e6-942c-ed09b1a22a65", "07efedaa-a5ba-4035-98ee-a79386446c9e", "a7f51be4-aff2-433a-97f7-8d566a40100f", "4582780d-dda8-4757-b147-efcbd332a744", "93b33ce0-5494-47e1-8ce7-c7c1d6f6985c", "c021aa2d-f094-4db4-b4ed-1661a63b2036", "0737e362-a4e3-4bf5-a372-fcfe99e6f0ad", "51327a8a-f060-4642-b85e-0183bef2a412", "229421a8-22c0-47ba-a5e9-a95669b26a7b"], "metadata": {}}, "main_guides_zoe_actual-contracts_index.md": {"node_ids": ["800fcd38-a17f-4e3e-a4ee-daff24f517be", "71129f3e-2431-4e33-884b-66ab7779a34a", "ce365aeb-e6c1-4528-96ed-9db99a5f198e", "a20f0460-d23b-4772-a956-3805be784e55", "67566902-de6d-4d0f-b8f4-d7001b3eb389", "b2e6e495-bc00-430e-b8b7-48bf9756f477", "c54a7d82-b094-425b-a882-6a889d3379dd", "3e93cf64-fcbe-48b6-a6f7-f5381b863497", "b3b77662-6745-4e9b-ad66-c8dd781f13fc", "3916d525-94a6-49cb-8264-44fbf8f67092", "ecbdacb3-f9e0-467e-a559-5b0e5a2be41e", "e9181861-d639-4b05-827d-b13c1af9ea85", "ecbd568a-35e9-4fe4-ae4c-920437e24191"], "metadata": {}}, "main_guides_zoe_actual-contracts_PSM.md": {"node_ids": ["74b39792-f398-466c-8839-bfffa9e060ba", "c6230462-b827-4246-95f1-f329ad4ab5f5", "1abf9c70-4515-4097-8bf4-78eb89e0b46f", "1d62fb75-e0db-4029-9c9a-d7781d62269e", "7b09f046-cab0-4483-8775-694006952cbb", "e34d8971-e18d-41b8-abbd-8adbc95b0f58", "fa877c9d-6aa7-4347-ae3f-ea9ac09f1257", "5f5d8694-87ca-45ca-8388-813699441302", "04ecab38-f089-4e9b-8f12-06fc84814aac", "f40a0200-145f-4c79-99a0-d3e2c1a14baf", "5747a033-5240-4f72-9aae-b80cb6424734", "7c8e374e-d445-4ee2-a305-e8fa52a17998"], "metadata": {}}, "main_guides_zoe_contracts_atomic-swap.md": {"node_ids": ["34026042-91ca-4144-a120-f6a5768574f5", "57089aad-3126-43f7-8556-5366b146f914", "80210bfe-784d-4699-8afb-17058c35063b", "c5e8c0ef-613d-4be4-8446-2ed3f3cc288a", "9b3bdd1c-6af3-43f2-86fd-4f542644768e", "bb07cfda-c0ab-4090-b980-8e2909c625e3", "466f97aa-130f-43cd-9cf2-5dcffda623f6", "ab396034-e347-4a95-bfa3-ddb5267f9506", "0bca0bcf-c1b9-479c-b57b-ccc669ebb1c1", "4e27c004-ac2d-49c0-ac47-230eb90d7d82", "40663f9d-3792-4620-bbd3-3357b4ba34b2", "408c07d0-c24e-4713-8de0-576781f65b9d", "e7220566-12e3-4db3-a61a-72e1c96b206b"], "metadata": {}}, "main_guides_zoe_contracts_automatic-refund.md": {"node_ids": ["8343a08c-95f4-47f7-8cd8-f8f045eba1ec", "04e63339-adc3-40f3-81f7-3f35afce4cb3"], "metadata": {}}, "main_guides_zoe_contracts_barter-exchange.md": {"node_ids": ["e80c0345-da68-46c8-bf8d-1624c324c4c2", "edde4510-9302-4286-aec1-cad5a4e9e9d6", "dcb8d305-5862-44a4-8cce-8f2d06804f73", "653107d7-6468-4e27-93d3-f9546c1bea8e"], "metadata": {}}, "main_guides_zoe_contracts_constantProductAMM.md": {"node_ids": ["be0756c1-bdfd-4af5-b633-7604b70e92aa", "94a837e1-b42f-48e6-929a-19fb9e4914ab", "8c1f6a99-f08a-4f82-9019-013585ab24f0", "0054035f-40dd-4543-bbfb-1a7df1fde45c", "32a0331e-18ff-4a7e-a515-231792da9460", "ff36d66c-db64-4242-a7c0-6bbc83051271", "11d30f7f-7b4f-4d05-8ebc-ba8c6e5d1d0b", "e9eb1c1e-5c5b-433f-8255-c6492582a250", "6ce09b15-968f-48fa-8fc6-b1ff4c44bdb0", "b6093a66-e2bd-4ebb-9392-d95c5b0a2804", "c77125c0-01a9-4163-bbe1-9bb314bb6090", "fd7be30a-9cb0-41d7-a769-4f22e8051848", "eb6a9c28-7688-48b1-a903-49bb1cbc0c49", "81749b7e-74c7-4931-92ab-76ad0f0c7a67", "e65dfb64-d591-4171-8512-fac90d5c8d09", "fd943579-6e25-424f-9faf-4332f4c5cbdc", "00765cbb-04ce-42fc-835e-ba98244f4ae8", "d53fc42f-cc02-4317-b85d-5e0f46fedecd", "0deba041-2b98-4b07-9b3d-58078062076e", "2bbd63bc-1917-4d4c-be36-b18977d56015", "7b9b630e-b5cc-49d0-9b90-8ff464210acf", "4f771985-c748-4e7f-a026-bfc79f8a8d3a", "8f571ed5-e033-4175-86e8-2dcf2e121e78"], "metadata": {}}, "main_guides_zoe_contracts_covered-call.md": {"node_ids": ["5528ba75-4289-4f92-be98-0eb21fb4f846", "6bedf040-8104-4a0a-a530-56ae747f98ca", "4ab0a6a0-2829-4608-96d3-a84bf9acd77b", "7aaeb0fd-0382-42e3-ab2c-9d75d78acffa", "bf89735f-afb2-4048-a751-593d8f82ed96", "c00ef53e-31d3-47b7-b75a-5ac7ee936e51", "7bd2a3e6-ea95-4043-877a-63292b2fc3cc", "c918542d-7260-4db5-86dc-3ecee4a5d2c3", "1da01393-8e2f-4d88-bcdc-1b92a10aebb3", "49c2611c-d176-4860-acb9-1df178fe68b5", "7896cacb-99ca-46e7-863d-ca5875908abf", "670d2d5d-ff4f-42fa-b1da-73d45cad7e1b", "aa978545-c42d-41e6-8148-e9ecf86205a1", "55c29ab7-0801-4377-a1c1-26792937ecb8", "8e32e14f-fe7f-4490-b15a-dfdc3a505af1", "e9917bde-1fd2-475b-91b3-1b473c88651d", "5697ba6b-aade-48ba-8168-0ff5e515c440", "a6ba7017-3719-4e86-a827-6c0734ce356f", "2cca375a-8f6c-4582-8347-e26704f51c8f", "b2551d14-d9cb-47db-985d-b7593d1b43d8", "203556ab-06a6-406f-bba4-ff870102f3b7"], "metadata": {}}, "main_guides_zoe_contracts_escrow-to-vote.md": {"node_ids": ["808040a7-49bd-4ba7-b500-490d99240e49", "e5823a99-d9ba-4e27-b9f0-8ebf8779f804"], "metadata": {}}, "main_guides_zoe_contracts_fundedCallSpread.md": {"node_ids": ["b3e7ab5c-0f7d-420c-ae21-adae4500abbc", "56178aad-5c4c-4b7f-a96b-7624e1288e22", "75653472-ed21-4a1c-95fb-547ed4590110", "d27f3e25-2993-41e5-bf66-9eacfeccb060", "5dcf6805-76df-4b71-8b2b-1b15fee1e7c4", "8ed538d4-ea2c-4486-9bb6-a7795e0f5472", "b2905762-b558-4951-b33d-a9d65b9f8756", "7a49fa3c-8f74-40e6-82dc-f29b1aa4cb7f", "7e9d9586-9336-4f14-b259-1bbf838814dd", "22eef47b-59bb-4a7f-ba88-90731f72a5cf", "7a3bc5a7-c869-49c4-8ffb-e573c923e297", "3078f058-81c8-4ce7-a448-055ff161b282", "f56f8130-999f-460a-b021-f4efa789e3bc", "195c9ee9-c6b2-4786-b7a2-b7698136842b", "21b79135-8141-41d4-ba9d-7e4792adf897", "d79f6f3d-d55c-4d07-8ddb-d7db38d902da", "2cb27a14-39a6-462d-b60a-c271226e6cd6"], "metadata": {}}, "main_guides_zoe_contracts_index.md": {"node_ids": ["ff46ed0a-6a2d-484b-aa34-3dd3f54865c2", "ce1cbec8-2232-4bc8-b845-84e891a136c0", "0faea553-65eb-4f30-a7f2-cc2f161bf21e", "c9612500-f561-47c1-8d07-18ab4264e307", "2c63f985-24cd-49e0-985d-6640e5a099e5", "68cb18b2-4326-4988-94c9-46da3fdd16b4", "311edd6e-cf97-455b-b4c7-903cf38014d4", "fc8a1475-248f-4ae3-9b89-733f3efe34c1", "01b9eb8f-5150-46bc-8001-ae2d7e0fa132", "2d172f9b-d05f-495d-a2ce-5e145c97eaba", "044bd892-0028-4881-a951-7a5e3ad321c8", "dcb5ecee-134b-4493-ab05-9b5c1fe476ae", "76e48a48-c6f8-4943-bf3a-ecd803a5e835", "b4855dd7-ab7e-4923-a04c-4f3d94cb2f8c", "e49a7b40-1d1e-4adc-b42f-96b41b156160", "fdb12170-732d-421e-aca6-2349db6900e7", "6fab3e2c-1c8c-4318-b4a0-9f35fd3cd31b", "a74232e7-5df6-42e0-94db-184db249dd4f", "098c978a-3c61-4951-86a6-79b0d58b75a5", "b65b881e-6752-4d94-a964-c750e73fdcaa", "c8cff053-c01a-4754-99b1-359faafc4f6e", "d027edc2-734d-45fa-b79b-9460cba74748", "7c7c05ee-721a-407d-82ba-cf2ab84c3841", "44b2f995-f555-494e-afe2-113038e152d6", "71651906-5549-42ec-bc2a-57ecbf05ae19", "ba2cd297-2833-435b-a560-0a609f583cf1", "80e7c181-e67e-4ef6-be38-c865f737a055", "70e92f09-dfaf-42d6-a466-2c3830b5b56e", "d7bc2531-fe41-4370-adee-a225c180c443"], "metadata": {}}, "main_guides_zoe_contracts_loan.md": {"node_ids": ["50c252e9-b13d-43d7-8004-79688394c142", "51b26995-073f-4e51-b6ab-b3bc0450b44b", "6ce63c4f-a28e-4fd4-9567-3df4d564a6f5", "4e1c54cd-089d-44ed-9270-25f1b4b9fc29", "6819f3a0-2afc-4d2b-b995-a70719cf7a60", "f4b96ec6-8966-479c-a828-1b57660e5caf", "22dff48d-07f8-4bba-a71b-290e191e2646", "e0f8b8e1-03bb-479f-afa2-fccb135f56a2", "43530b1e-31b9-4855-9c82-51c3e2e49271", "18822bea-53e7-46e4-b27d-6719fd2b6b1c", "3c2ccf9e-a37c-40f4-80c4-889ab77e90db", "df15afd5-a501-4e7d-9300-7d95e4f8b23b", "99780e45-f5a3-41a8-ad39-35fd5345eb93", "01a6a2a5-73ba-4f53-8ba2-4229cfb3ccd1", "fb33402e-a041-4748-9dff-098de29ce753", "2ea39821-ded0-4464-a798-a7abaaafe784"], "metadata": {}}, "main_guides_zoe_contracts_mint-and-sell-nfts.md": {"node_ids": ["204b6927-2f91-40bd-b70b-6f953b89135a", "0213c790-69a8-45bf-95af-29ada6b1d4e3", "d9057436-354a-4829-97dc-3048c1f28b7d"], "metadata": {}}, "main_guides_zoe_contracts_mint-payments.md": {"node_ids": ["65d809ed-344c-463e-b4c3-1e277f904a03", "9a5016fa-c2af-426d-a3ed-12aa27677363"], "metadata": {}}, "main_guides_zoe_contracts_oracle.md": {"node_ids": ["03eac781-8fed-4de9-b74f-169b60ba76e8", "6b4f4bd7-f2a6-4eb1-9785-2d1d7128838a", "960949a9-59e0-4ca3-a09e-c05d7ce54a25", "41da9c62-7c68-4f73-9b69-1e07ac76e78a", "cc4e481b-7f68-4b42-85d4-7e50e512444d", "c11728fa-d09d-44d1-9a12-26b33663a2ea"], "metadata": {}}, "main_guides_zoe_contracts_otc-desk.md": {"node_ids": ["3415eb27-e730-4561-9338-a65def74c750", "cbd3ec65-1600-4050-bfb7-55c306caf390", "dfeaea52-7c8f-4005-b932-6a47a6e1016c", "341d50f2-f3c4-4b9e-ad19-fe072eeba605", "ec389590-e450-4066-b625-d852574ec304"], "metadata": {}}, "main_guides_zoe_contracts_pricedCallSpread.md": {"node_ids": ["0f9c38cf-e2b1-40cb-9590-9ced2bad9134", "a7a26abc-89c9-468e-9e26-a1b6eefb615c", "96f2a5ae-918f-4a7f-92e2-f1231793f5b0", "63cfa5a0-5495-4b8f-928d-d6acf060ece4", "b9b8b4f8-4b3f-4ade-9832-f40532e34b8d", "2c293e91-f608-489f-a548-a58c8f2421d2", "841aa9de-4adc-43ec-b290-d02086312745", "99d843f7-6578-42dd-bfcd-986db746a59f", "26b26366-72db-4be2-a9bf-47736de57990", "276de356-d3a9-458c-ad47-e7ba2ae7a4dc", "e343d824-9c51-43e3-9aff-05982c7e99d6", "e607fbc9-3fb4-4ec3-8480-46fa4bcac5a0", "17cf157b-6b1c-4430-ae26-a3046296ca11", "319ebe45-cf47-47f4-a665-3d16a97ab6d8", "7f267970-849a-4790-afd9-2c57e224c53d", "6e6b557d-3420-44d4-ab2b-8ce3607ba49e", "0bf2de8d-6c1b-4565-b1fb-4070a401b0f6"], "metadata": {}}, "main_guides_zoe_contracts_second-price-auction.md": {"node_ids": ["e1c61780-5f10-4816-ba82-49d29ac0f1cf", "ba80d7cd-aeee-4f51-a71b-c2ef7d7793f9", "bf39aabe-07bf-4490-8fba-9b4608817860", "6a06641d-0815-42a8-8745-64244e6fd65e", "d2e91a25-ff1d-49c1-af89-790452ed7339", "36d1dd8d-4582-4bae-9f6d-d004f44cae12", "983f76cc-4b88-4120-9f6a-e3923e6687c4", "5df8c3b7-2b2e-4d2d-a1ec-c4ee4176b1e9", "c2719ab7-5550-45d5-abab-617ca93a5373", "37218f79-4af1-4e5e-b459-c825071aa3b8", "bb974237-f848-48c4-acec-9ed963d8274c", "3644e8ba-4f81-4168-8d64-962f67930335", "906c49db-7499-49db-826d-cec593e0117f"], "metadata": {}}, "main_guides_zoe_contracts_sell-items.md": {"node_ids": ["23447c2b-c10d-49f5-9461-be753e45f9db", "1d89ed29-a668-4300-9bc1-0ccc33282a16", "e17584d6-1e30-421c-a75b-d7dc30fab19e"], "metadata": {}}, "main_guides_zoe_contracts_simple-exchange.md": {"node_ids": ["d6bea975-6494-46d1-a6dd-ad77149bbea2", "8a9a06bf-95c0-4349-be2e-888130dc1a2d", "4ddd38a1-890a-4392-b82f-e894d27cd180", "9780231e-4d63-4e0b-beac-49fedb952501", "3ba47921-f294-4961-b1ae-1c9a14f23885", "74dcf7d1-8da7-4ff5-8189-f4fea9801171", "5ebab7a5-0d9b-4b0d-89c3-010029d2ec40", "745547d4-01da-4117-aa6d-ee0c10dee422", "5e5d29c3-0b5e-4c07-8961-08f20a0f6b97", "43c45e75-b4e6-49c5-a2e1-8df9f7f6c162", "8c6e1f2d-6e49-4fde-a275-77a71c4563e8", "bf5de0dd-511e-4280-8f8d-cc0786afb2c0", "a4cc30a8-3253-412e-b35d-24d8d64e55e7"], "metadata": {}}, "main_guides_zoe_contracts_use-obj-example.md": {"node_ids": ["113bd1cd-1979-4781-a25b-a9a91f25f95e", "d28314a6-5ed9-49c6-bac9-96cb927e22e6"], "metadata": {}}, "main_guides_zoe_contracts_vault.md": {"node_ids": ["4db25c5a-9164-47e4-a2e0-09ead616c49e", "c6fb5626-f8f1-469e-8a7b-ba59567c3933", "f621117f-c372-4634-9274-61659f7fda6d", "2960a8b5-b4f4-44d1-87a3-905c0d929256", "cf43aa35-c360-4292-85f1-4e56c58db502", "a17e04b9-7a58-4b35-9e76-fccc8c945ef9", "0204222b-e741-48a5-843a-0b7f01352943", "1dc0d8ed-664c-4dd5-a694-ecd5355d56bb", "735d0d24-7772-4f60-9cbb-76b8ffeb3676", "52fe2b3e-7b58-4d9d-8327-95d36672bcf4", "5a0f3428-0c06-494a-b559-5e9a8b902589", "dd8c165a-2c55-49d0-99e6-66f304eb7c46", "fc51c628-35c0-4e77-ab0c-927c64e8b003", "6d9a9209-01f0-439d-bd7d-41b5e40e4933", "7e650292-7468-425e-832d-07a6b530fce6", "4e442158-2cdf-4126-9538-782d478967c5"], "metadata": {}}, "main_reference_vstorage-ref.md": {"node_ids": ["b40e6e96-737c-4b56-8563-fbebdba057d8", "37856f6d-1b49-4e53-b763-8be318b6e4b9", "aaaccde8-b1ff-4329-bb75-5f7ddf8a0161", "2e354ce0-6022-4526-bc43-b1c0925e1660", "d4fd2456-c57e-4119-b8c0-03db9a14bd69", "ad7d17c7-d09f-40e1-8e3b-092618dce637", "de4b319b-389a-4db2-82c9-37b44c7b69ae", "4cc8f9c9-df41-4baa-9b2f-15ba46551e50", "1a36d5b9-46f0-4fa7-b118-4090c7c6202d", "6ad83664-60e9-49d7-95f2-88f2684405de", "4f56de17-39dc-4ad3-a0f1-c942d26e5616", "1ee25b7c-dc07-4549-9ddd-da6bdf4b1245", "3e3b2933-8d4b-4bda-addc-97b8b76a1ced", "5c1c1db4-dcf8-4273-afb8-f227cb59a772", "f0984af3-8757-489a-98ab-4f06d49ff980", "0aa53712-717d-4550-a30c-346505fe1eaf", "c9277695-27eb-44f6-bca0-c535752b5295", "a607224d-e269-46bb-b5fb-9616a34d9a20", "bd2f6658-de00-4277-b6a3-3700c2b57252", "342bc2d6-9ff8-4d97-a404-ad3bf0581fef", "528d860f-7245-40cb-9dc8-65f7c7d18f5b", "f6c21f70-0bf6-4f5e-a944-b2a701a881f3", "c7886f90-d51e-4895-81a6-b14efb24b450", "bb125fed-89c0-4ffa-8d8a-f9eb2082938e", "69e09aff-a76f-496a-a69e-175a5f24c2b6", "cf746ecf-d5c3-4d9a-8c8d-4061bc55951c", "107e2baf-7a3d-4ed5-803d-513fe7a9a681", "620ce043-a20f-4ffe-bc62-cb3f2ebb496f", "41fe85d9-b7c2-45a9-8b4c-e4e23cfaab50", "1757b5de-0b13-43f7-aa81-c0616f742dc3", "f7153725-b2b1-4016-8634-d24c9915b0f5", "bcf65c94-cc9d-451a-931f-283f6c8819cc", "ffad30d3-bae1-44ba-ae3f-f327ce03acee", "9d201e2a-e171-44a4-8afc-c17a68f95f0f", "aa254422-7345-4984-b4e9-97bbadc641cf", "53e44bfb-2668-42d3-b418-f657f22a8a87", "d8a5cbe3-8f2d-4d0b-a6ee-d4770081b300", "84dc6385-6428-4cca-9248-5e32abcd4de2", "5498d3e8-7809-4ffe-9f81-e47f34ef8c47"], "metadata": {}}, "main_reference_assets_index.md": {"node_ids": ["109b4b15-37f3-492d-81c6-745cf8a7b4be"], "metadata": {}}, "main_reference_ertp-api_amount-math.md": {"node_ids": ["a4e5b88a-86ea-44e0-ba0f-3e72e1af992b", "c5d10ba3-4126-491c-9fa9-b54c46cc1827", "43e9dfd4-b906-4ddc-83ab-e019463375b7", "b3d53e8f-f0ff-468d-8750-2fad35125b52", "dde7f9f9-4bc4-434f-b040-7ae9ee35bf9f", "f957095d-915f-4265-aef3-c012b6b70976", "fc1995ad-9381-4687-8bc0-32e8353fc47f", "ca07d778-0566-48df-806f-63497a410ce9", "855e9ce8-daa1-48d7-b186-3c6b13b7d4c2", "8c53a33d-e144-4d5a-ad37-55165a82439a", "02f50183-c9d1-4c68-bfe1-2dcacae83cd1", "4d86002d-9b6a-41f0-9882-a3806128ec1c", "9eb65053-c5a9-450c-bc03-df2bbfa052fc", "803a240f-1876-4f8a-a7ee-29e6b71c9bcf", "e9fb420f-334b-4407-a95c-019676de92d5", "2ab5be3a-0481-46a3-872c-f021a681c354", "c1bddeb9-c27d-454d-a31d-4c1f3be85763", "fb5e2455-2c61-41a3-b603-692537a9b9f7", "83f91f8b-ab0e-4f92-8156-756dc3ae02f7", "f2e04cb6-40e7-4ebb-8fbc-7d372d6ea49b", "d80d1400-4cf3-45e1-b97f-326c1ad85cb8", "11fea41a-db4d-44c5-a4ef-952a777d97c1", "feb18aa4-325c-47ac-add0-fd1faad0ebab", "46df1488-dff0-4f9a-aafd-e401d6d95645", "046f09b7-938c-4e60-8cde-fbfd5e167b2e", "395f97ae-6dc8-4dcb-88b8-fac39641706c"], "metadata": {}}, "main_reference_ertp-api_brand.md": {"node_ids": ["4e936563-9b29-48d0-ae08-77c763c0f231", "812db3ae-cc41-48e1-9ddb-d5314d10d1f7", "7bd8a8f7-9b91-42cb-8a4c-befa22db6888", "c1fd8518-d92f-43d1-b3a1-13dc80bbd3ff", "2234eedc-5c91-4e7d-914a-8a2b82957c88", "d54176e4-4f78-4ca0-8197-1c0e78881a7b", "47ce5ed9-4a45-44fa-bd90-715db6233862", "48d2d1ff-2c05-4b2f-be0a-5538c88e7b19"], "metadata": {}}, "main_reference_ertp-api_ertp-data-types.md": {"node_ids": ["47fb7ae9-680e-4711-bd6e-9203be6b137f", "0cbe8eec-f5af-461b-b07b-4e6f2edb267c", "105d11f6-833a-4b52-84c7-77b03d963ea1", "779e2fa6-cd48-464b-abce-0af09bef6aae", "29bdcd5b-9f0e-4689-8864-d12420fbd724", "68c92bbc-0bf0-45ae-9a9f-6c3aa2225c3f", "dba5ec83-b0a9-40a9-a45a-e0e3f9f60528", "6ce73118-f7a8-49df-8430-4967b1190a37", "d876c074-40d1-4fba-994d-14328281696c", "5129c471-0e47-472a-ba00-374e9d7e3369", "401e8de0-d6af-49bc-bcf2-0a1d793e599a", "0649127c-7b38-4630-8171-ec3746ddc357", "9894338e-ca2d-4b42-9766-dbbd92f78748", "ec5543a7-7626-49f2-9100-1779300f2d48", "4e5c7702-941b-46a1-ac08-e52f4b6fea4d", "76cabb2b-78b7-4977-8023-4af2f3dd4b63"], "metadata": {}}, "main_reference_ertp-api_index.md": {"node_ids": ["33fd3d6a-35ad-48ff-9993-9b848960ec42", "270a3f18-55e2-4d8e-961c-989a6f8f9651", "fa94c686-b4c4-4688-a278-1b66344090cb", "f1d45dbd-0526-4572-82ea-e330a08393da", "e9518db0-fe0e-436e-a74e-53752052cc86", "9b6ca3ec-8683-4459-b89c-d0d96ca3d7c7", "b8671286-7e76-456a-89dc-ea84941bd8ec", "dd7311a9-d8df-4338-925a-7ba2c340fb00", "3f0b96d8-dcdf-4042-9e0a-451c01569a4e", "5583c32a-218b-4f1d-9773-23b2641e8cc8"], "metadata": {}}, "main_reference_ertp-api_issuer.md": {"node_ids": ["ad40a0b5-6d4c-47f8-95c1-efdb7bb00ebc", "e322281c-f338-4706-b3f9-22dbfbb94c1d", "a8a11bf8-74a3-41a6-80e4-9a6a3baf2579", "b7040993-e512-4580-81c5-43f7e5c531ff", "9ae03bed-6bc6-484a-9230-7c0b0306648b", "79998596-8353-4db2-9cb3-242b10bc1d10", "a53d62cf-2123-4704-b3f3-d0b7fb5dadb9", "1f881670-a56e-4373-b342-7fb3dcae1162", "d48c27db-da33-40ba-8ea7-cbdbfbb53df4", "7a55e34e-db15-482e-b5ab-2c9496ef314f", "879cd568-b96a-4b27-b0f9-179f60afc54e", "7920d228-89b3-4482-b0d9-8222e801efcf", "c4fa20f3-ea78-46f4-9c2f-8f6f4b05e833", "49b9d9a9-550b-4364-8d78-eebe3d074d6f", "c068195c-ec72-4a97-a8ca-0911b33422bb", "aa2fb6f4-644f-4104-aed9-8110e132bcfc", "7a06188f-9a72-4a51-9467-a185ef0cdf95", "f830a3c5-5023-43ee-9302-7652d8f33c67", "a10654b6-5001-4f35-92d7-b8d163e6d4a6", "956768b8-37f1-4246-b3e4-2827d0796feb", "f0730f64-7f92-4d52-a44b-22ebf892501f", "58ac20fe-382e-4d66-bb47-0d20d065cbf5", "d2071abe-87c2-4c8d-a568-b9d41434cd7f", "7b713518-b26d-4d10-8423-74893ffc47a5", "73ce437e-4ffe-43b7-b7b0-a250ba573a1a", "6b84edc4-a40d-442c-87d8-30af09ce32d8", "aa1659d9-beca-48a8-a4e2-94bf297d79f2", "2caa9c7f-e941-414d-bc17-36b6e7f32c62", "9f9b945f-9c86-4f9d-881b-4f8e80231d37", "63ac4489-ceb2-4bbd-99b9-97dade405046", "acea8ae2-9aab-4b3d-b234-71a85e1e0ea6", "26a5d5a8-61c8-4754-9f9f-516f10acc000", "58663666-1ff0-4ba6-951f-5829fe3f929d", "54f9dfdb-bd38-4531-8fd5-693087813e1f", "044f77d1-a435-433f-ae03-193f1b167365"], "metadata": {}}, "main_reference_ertp-api_mint.md": {"node_ids": ["ed6d66f4-4606-4b0d-bb13-33d783479928", "2873dfcf-f4fa-4441-b94d-4f9e8366a71e", "0e89fa3a-4d79-4678-8218-30fa5adbee49", "b8ee34e8-b07c-4555-9d86-0c7d832ead85", "f2302b80-82cf-49b4-b011-ddc709324c0d"], "metadata": {}}, "main_reference_ertp-api_payment.md": {"node_ids": ["71e82b88-67eb-42b7-92c2-9c15ee4187b1", "5146a2c3-8fd3-45be-bcf3-00114b6a50be", "4ba55439-2bc1-4a26-b054-dc15a9cc99ca", "47f3d9ca-5d9b-43b1-bb92-b66d02e6efbf", "3a28e369-586b-4ba7-81fb-8c40f678a30a", "66ce1dd5-0286-49dc-a424-ff5671eadf10", "86be667e-6394-4631-9168-f60298d16334", "1cb86112-0a6b-4fae-8bc6-2d01baad6232", "0896aa7d-6174-4886-b4ca-331f7d7d8433", "a672c776-69fc-4be7-94f2-d1ff0200fe0d"], "metadata": {}}, "main_reference_ertp-api_purse.md": {"node_ids": ["5d480d50-678f-484a-83c4-2af8fc7201a0", "2216a443-8d9f-4d55-81ec-2832f81b9f3e", "b7ef2996-807f-40c4-b89c-5de9f9f456f0", "9ffb4bed-434b-4eaf-a303-6b96b7e78039", "1615f4ed-fc45-42fb-ac64-cafae346192d", "1f7a1382-a339-4a29-bcd6-be96354f641e", "36151848-d1fb-4d4c-a0fa-724a90fd8254", "3f29b94f-f662-41cd-9252-9a1f5b3b1ba8", "0f03a239-83a1-44fa-be9e-f2aa5fa0dd9f", "0c1699b2-8a90-4abf-9f6e-3a91cf56b2e9", "8917bc5d-118a-43ed-b4ff-69f13654b5a4", "6a105609-25d8-418c-b339-5b39e82510a9", "268be0f3-0d9c-4fec-b928-01e41478f1f6", "e77753a8-8741-4f08-87a8-79b73c4d5869", "ce1a55e8-20e5-4e50-abdf-de28e62b0fe5", "ab1a4cf7-f1f9-4f51-b383-ea9e0770c816", "2822b78d-c957-4809-b9cd-35d9a4007db4", "03a4cd58-dba7-45bd-afcc-b6d55673e4e7", "55d9fc5a-77e9-4160-bd88-4bae4425dafb", "3aa6b5c2-8d7a-4cf3-8e12-ae65eda5b059", "5e9ebb64-61a9-4c45-ac59-496c6715e839", "85addacd-b4ce-4770-92cc-7831705b3030"], "metadata": {}}, "main_reference_repl_board.md": {"node_ids": ["ad438393-5411-4aec-9d7c-bdeafa99d500"], "metadata": {}}, "main_reference_repl_index.md": {"node_ids": ["359c0fed-619c-4ec3-875a-a87788c72fdd", "87809273-97c8-4b30-be11-5d9440e257a6", "63800a1b-e425-4b0c-94e0-5385f740c188", "36b5d1b6-2d3b-42f2-8b2e-5aeefc82ad8a", "ed69e001-e126-4b6b-9ca1-c76e953bab3d", "253f97e6-dc1f-4024-8d92-b312a850763f", "cd59ecb8-0f55-4d01-9550-db2c72669c93", "01a3e93a-5e34-44bd-84f2-29d97212ef59", "58aa48b8-cfe7-4d5b-bbc7-05e97b79ec4e", "11122904-8000-4a1b-864e-9626db5fc73b", "c09b844e-33a0-4905-aaf5-e30e175d1d6e", "974b70f5-76ca-4528-9225-b1ccf39da033", "e884a0f3-2ab5-43df-8178-0c00080c3ad3", "5f19d628-eeda-46bc-86d3-8dc73f097696", "48ca2205-3c90-4486-b90d-1af6b39b2f2b", "7cff4a08-25a0-49bd-b250-0844c6b09341", "fb3cb326-a902-41c7-994c-1f6ab2f2747e", "2a8d0790-dc1b-4d24-8b70-61d4951b9021"], "metadata": {}}, "main_reference_repl_networking.md": {"node_ids": ["f03adbf6-b4ec-4832-9426-2870bd848f26", "9b067cf1-f9a9-4b78-b728-7e51cb14acd0", "0df37420-4a90-4839-9531-ac90ba30b40e", "0f63d176-944e-49a4-a91c-f2bc2abab1be", "a072bf8f-5a01-4cb2-bc2b-15349345fdbd", "27fab5fb-3a02-4356-b6ad-897204228736", "2e387d72-4856-4e5e-9ad7-39c2b90f98d3", "a9edfc92-fdbd-4651-8adb-ee7561319d57", "db2bd1ce-f3d3-4a35-80f7-f76fb5ea1a4e", "9d89637a-56c7-4769-8a79-89ef093e1256", "5fee9754-fc7d-4345-98e5-776382323606", "0a1c7c24-f5a7-46c1-8ad6-46d5847e2509", "1f7f1f8d-b8a8-4f36-82bd-df24310dbabe", "f8f34e52-c0a3-40af-8682-50facd40ee5d", "b3d92984-33c1-4757-a6ab-8993802145e2", "232fb147-f8a3-4807-8ec5-9b027e235c99", "51feaa59-d638-467f-87f7-1ed8fbf70492", "d6b73e3a-cf10-45cf-bce7-abd9996b3347", "c2c5a93a-d58f-481c-9be6-b1608fc25462", "cf8b9087-17e0-47c8-962c-027196ea1ce1", "b2da8b47-88d7-4416-add7-74a585f26de9", "ca3aeb0d-facc-4214-901b-066e65706835", "546fbc69-6dbd-4d0a-919d-561570fab94b", "814da12f-84cc-4044-89bf-a415fe8b4f44", "3645f012-36a5-49e0-a4a1-a36fb918583e", "971039f0-35de-4ca6-b7f2-c170593fa162", "c05cbd82-2fdb-45fc-b364-eaaf1c8abb6e", "e53cb834-ed36-45fd-9fba-607d5f090a34", "f0d4ab62-d8f0-4045-b7b6-10a5e0ba46bf", "ddd73aad-19ef-4135-88b4-fd29af9fe8f4", "508294e5-bb7b-4a2a-80ee-729192238bdd", "c1852214-e31f-4aa7-829d-7f502592c2cc", "879cb766-e368-4c38-9e4a-fcc5dfd02c1e"], "metadata": {}}, "main_reference_repl_priceAuthority.md": {"node_ids": ["907e7d26-9ea5-4b32-b5b4-4a72343176ab"], "metadata": {}}, "main_reference_repl_scratch.md": {"node_ids": ["72662a33-8696-41e5-86f1-1c617abb8480", "b1e9b122-3555-4cb8-b447-78c10fb8b1c1", "3d5f45d9-4be1-432b-a02a-3d38b6296db5"], "metadata": {}}, "main_reference_repl_timerServices.md": {"node_ids": ["84be469c-e2ae-4296-8d7a-39396c0a6b8e"], "metadata": {}}, "main_reference_wallet-api_index.md": {"node_ids": ["5c3e4853-9103-405d-9756-9a0ab78c4ac5", "b1250f2f-a805-4cbf-918f-a3d673f0e431", "afba586e-f144-49e9-93c4-f17a5c4fd12c"], "metadata": {}}, "main_reference_wallet-api_wallet-bridge.md": {"node_ids": ["8b438b43-d390-4423-a8b8-7cf1dadeb60e", "b0754994-a9e6-419e-8362-f16a2a3634f9", "dee8b471-5189-4180-bbc1-59bd63f3f019", "5d4b8ae5-f268-4643-9138-7aac4f91e9cd"], "metadata": {}}, "main_reference_wallet-api_wallet-commands.md": {"node_ids": ["d53fb613-73d6-4535-a061-c37c6b036904", "2f455844-25e6-4fa3-8d76-8068cea91bc4", "f01eae45-0904-4087-bdf2-49493eb9ac38", "e57f8613-2de4-42d2-85a2-ade35207dfc4"], "metadata": {}}, "main_reference_zoe-api_index.md": {"node_ids": ["d1b503a7-b188-4763-b986-a379874fb178", "631f096c-16d6-4a80-a013-07dc8f5af1d6", "9d5edabe-8650-41b0-9884-9e6a6cac2c11", "584efdc5-419c-4757-9edf-327c99370148", "bdcf027a-f67c-47ac-af16-38fc79c57f75", "7fff91de-8e25-4d3d-9cfd-ab51cf990de3", "1c16aa3e-6706-453a-b8a2-1c345c4c1151", "1c51c36c-d142-4a51-a48a-1589f5e4a483", "f20eb75f-1947-4041-bd99-9dff5e12c271", "0ad0152c-7f72-4ee4-bb38-d6b443b1a40d", "95f933f2-6cea-4879-b67a-f33968a2567d", "ff24c3c6-f28e-4dca-ae2e-2afbccd214e4", "d1795752-b0a6-4cff-893d-754d90cc3ba9", "3b541d11-c176-433e-bd3f-8c69fcee85e7", "0034c606-88fe-4fc9-9053-1aed771c794e", "81244a86-0435-45e4-9a54-25a9bf48b392", "395e1f9b-7342-4445-a2b5-5e1c610592ca", "8be19f70-2c03-41e2-8d30-7d0056abe8a2", "688dc657-5f98-4a54-a62a-0293f0a65745"], "metadata": {}}, "main_reference_zoe-api_mutable-quote.md": {"node_ids": ["868bd997-f84a-4a2e-b50b-2e6a133d315d", "b862a9b2-e939-4268-9964-7766c9e76080", "c98b3d63-58e8-43a1-a41c-c55f0042f0df"], "metadata": {}}, "main_reference_zoe-api_price-authority-admin.md": {"node_ids": ["9d5a9db5-ddd5-48ba-a50a-676c38ff6dd9", "ef6373db-674d-4d38-a28a-e902510cd65f"], "metadata": {}}, "main_reference_zoe-api_price-authority.md": {"node_ids": ["cfdce8e5-a2de-4c8f-8b20-3643dbf191fd", "5812cff1-9f03-4d21-934d-bc1c6efaec80", "1d4b98fa-5b46-404e-8c32-eeb94b632b04", "9b9fe7e3-b7f5-49ab-a9b3-e7e280602b2c", "456d04c5-779a-4840-8451-e6d2f63e7f75", "ef20ddcf-de03-4051-bb21-94484f6ef5b5", "3455549d-f28c-45a9-9baf-93f185fa8338", "3b9d150d-b9e8-41c2-922b-6716df827837", "bbffb93a-c612-489f-97b1-22efc935c77e", "03a9eb2d-1ecb-4148-ab3f-701681c4f089", "96982d35-6c07-4209-b484-c511128660dc", "0b894f9e-15c5-4c32-874c-cd255f2e6417", "562e2eaa-1d2e-4e98-ac79-9a670c222277", "126310b5-b1c1-4ed4-9751-2b1f1e52b760", "c5406b19-e121-4e99-b208-68599970c8ce", "f0573b45-150e-4885-a5ec-40f1550f19fa", "5aa8680f-6afc-4f32-a1d6-fe5a1e3e4a78", "34f9df45-4bc3-4660-8772-bd6b9b3ee73b", "5d08bb50-f548-4ca4-be6e-7510e0b10c4f", "2561e202-1bab-4901-927c-0c4ca186b12c", "6cf4cc70-0418-4718-b75c-118cfc7b5048"], "metadata": {}}, "main_reference_zoe-api_ratio-math.md": {"node_ids": ["176b2fab-51c2-4cc8-911c-895bf0706c08", "c9efd59b-4d23-4c2d-b56b-73197265083e", "a30dee1e-8825-4a7a-802a-df7f70e55e59", "d5ddce5c-52f1-4a04-ae28-21e40d8d8b31", "bdfbce12-f8bd-4c62-8ae7-ea4dd8b66ce5", "1b9f5343-7882-4d60-9da3-4a7b121c52df", "b921781b-f8a0-4b4f-b950-df248b5427db", "2c11f23c-5b6f-414e-9a74-f90874cb5f31", "9484c566-490c-41a5-89df-2f604858c9c9", "6be391e5-9b5f-4fc3-9f67-334592758f1b", "e602b352-6a7f-4228-a976-8f028b401164", "cc041423-ad69-42ed-9381-32f45e2c82b0", "2f8f492f-5032-451b-919c-44e8d347f4d0", "6e701e34-b211-4106-9ce0-f35bc767bfae", "ac8d535c-e2ac-4e08-a7ef-fe2bbd8e9176", "3dcd1c22-2dc5-4683-8c8b-db59bac537d9", "496e0df3-a138-4b87-a114-0b7d37d73d4d", "4cebf3be-c41d-4f78-8940-33d0f61e2474", "74b53960-32b5-475c-b65b-f274a582f722", "c3da5602-00ff-4987-aff3-0ff557cb73aa", "b3a7c6ba-9eff-4f10-9bad-f868eca84f8f", "034beb18-7d94-4daf-b839-a04e4b622cc1", "5875d24a-5b24-4904-8ac8-e3b9fbe1c713", "6cbc9f09-3790-4639-b6c1-d77fe26e4d81", "0aaaa8d0-9472-46fa-8822-02f2b0f3c6bc", "f6af7c9e-7568-435d-841e-add9f033389d", "8a79d54a-4840-4949-8766-6438e3f993c5", "419c4ff2-b3a8-4b2d-90c1-41f417a99a7b", "3b102bd7-50c8-4406-9e58-e023d27e567d", "7b688279-c190-4409-865f-23b9635ec480", "0e0ec446-40eb-4846-855f-0fdb00459b6f", "46e65229-9f44-4f19-b145-c1cd1a7d5877", "d366aafd-6a28-4a2d-bee6-8ef946e14aa8", "54c68522-8e58-422d-8aa9-c0e4b7f3dd6a", "166c4685-0c88-4e3e-a3a5-5434557e4b2d", "77455358-6a7c-4e79-a230-a271fadc5e46", "d193bf99-9749-4c0a-8295-622a1c054c1d", "8734f9ee-79b1-40af-9d09-a7d16c051d3d", "a727e192-7b65-447c-af9f-aea52bc83629"], "metadata": {}}, "main_reference_zoe-api_user-seat.md": {"node_ids": ["f5dfd582-6e9c-4483-bd1c-2e41228dd077", "18a08a27-5e4f-41b2-831f-70b761b637b2", "229f6e77-8553-4753-8b4c-0a321328b1a0", "15af6a7f-e766-40f7-8ec1-5539e78aa6ca", "41faaf13-2f04-4d7e-85a8-7c4e74a5ded2", "9acd3be6-50b0-4305-8b14-3d5148977c3c", "1d0f210c-f265-40f1-97f2-92d5b9287c64", "0b1c90ad-dfb4-405b-bf95-f65b5db907c0", "12f25b05-f98f-49a6-bb38-cc63d7214129", "af1bd818-4145-465d-ada9-9a57a955e36d", "c4064c16-0384-4af8-9016-af808dd68a04", "bd7756f6-3f49-4687-bf39-4843de7e068e", "920fb742-0525-4546-a363-f33fbf6b0676", "3c538f1f-61f6-485a-8235-1778c487bb81", "78c094e5-c717-4d37-a9d5-aa8678b82b0d", "df8e8e7c-8103-4e56-97b9-d2ea21449d25", "094ff33b-ec22-4b2f-9145-76255d9c5d86", "163886e6-60e5-4786-8bd8-8b4441aff54e", "768d53f9-5962-4a72-8037-1421e9dbab3f", "d209a822-02f5-409e-b348-74fdf5f471a7"], "metadata": {}}, "main_reference_zoe-api_zcfmint.md": {"node_ids": ["507655e6-0116-4a68-8789-9fe7ab1ac23a", "6b060d2d-6ced-4a4b-8cd7-19a774d76dac", "e14cc516-0ab9-4d12-bda9-8f02f02f84ac", "fe49fc9e-b6eb-4405-b57e-b9a35f107013", "77c17476-4707-4814-be0e-8fa48a4b2da0"], "metadata": {}}, "main_reference_zoe-api_zcfseat.md": {"node_ids": ["9d11636f-1f01-4d57-a63a-cd2e3ed83750", "eabb8bc4-c4ee-4d3c-9272-f92df4eddc60", "7b44113e-1f24-4cb0-ab01-e566f2962f3d", "f447f9c9-3f70-48a6-8706-e8c85112072d", "10bb00d5-7a01-4015-9d51-a6500899b27d", "0c08f434-0e1b-4b0f-8158-42610e59cdea", "26615b84-fdaf-4dff-a3d2-1e4e7ddb3827", "5ef4c558-b684-47b6-b1bb-bbaccc89a3bf", "2827a890-94ca-44fe-ab47-241a03e09f7f", "faa69621-4e74-4f09-a550-48563091ffe3", "79a36fa9-259c-40db-bccd-a86fb486eaaf", "985d008c-16e5-4649-b52e-bc5b7b0350e8", "f561039b-42ab-46b6-ba55-b46755f33fc3", "72e6809a-45b7-41d8-84d0-0ddca9edc184", "d59534f4-6311-4b0e-a743-e143d2566df9", "78bae0eb-0efc-47d7-b2b1-dad51a140ac5", "83b468cb-18c0-4008-aa82-6ac7cc3a0b04", "1804d37d-492f-40ea-ad50-b7ddd7f53fb3", "a1c966fa-843c-44e6-867b-92f49fb76f4a", "0272bf36-d8ee-400c-a5bf-105377d1245f", "e9dd1b78-9476-4802-a430-197776dc99ba", "0cd867d0-453e-4bc7-a8d4-0ca86f1828a1", "36c1e7c5-2440-4792-8666-3a37ca44497f", "b58ad44f-f800-4d2f-9800-2486c77df8ac", "1c8fc4dc-f1ae-4586-9a87-2f2f311e48d9", "71dc7d12-7442-4cf3-aa7c-891dcbde34ce", "5e4a4ef1-d782-4e3b-8132-dd7847d4c895", "7991d951-8b81-42bb-9385-197799a345f4", "f78d295b-189b-465c-b44b-0daab9030453"], "metadata": {}}, "main_reference_zoe-api_zoe-contract-facet.md": {"node_ids": ["394dcad8-d165-499e-96f8-de179a6eeaaa", "753d946f-f407-4e25-8b49-ba890e516e02", "a3489153-e598-4949-8eb1-be1aa9a16af5", "cffeb22c-c446-4ec9-aa81-28b29e4a0d37", "6b97b380-b502-432f-9da6-316aeec8359f", "e32a56ed-d543-45e8-b904-ed7ff8490efa", "86e533a3-a20c-4f60-ab75-a2a191d842c7", "5ec268f4-b77e-4116-b48b-738980a5ea79", "7753c0ea-6951-4800-b3cc-3cab5719081a", "9e145ea7-4041-428a-856a-d9da3590d2a1", "6bd911dd-1dd6-4073-9ed3-fceced04dcf4", "9624c528-ffce-41d6-be13-6855d7d7afa0", "f42db2e7-f7f8-4fd2-9c00-fd123385b84a", "ab3a5a7d-cff7-4867-9cc7-a66c12e26d05", "5ad39a08-ee69-4a0a-83a3-311baf7e3d1e", "10c09f27-6912-4282-9a17-1ad91e9c2690", "ec53a38c-70ed-4039-84dd-e242f5c1be85", "6c3612af-da8c-41da-a29b-5ce8e6430fce", "2a66b1dd-d22b-4769-8cd3-7f2897b9cbd0", "525b66de-dd33-47c4-822e-0903a759e0b0", "a6e943a3-e1a8-4fa5-a4b2-692e0e9b05cb", "27c119ab-3e62-45b8-8fb0-a4ab8242c95d", "b25c6c6b-9ff5-43bb-ad57-9fea59776ece", "349883ad-3701-48b6-9e3a-4bb8756348f5", "579790a1-9007-434f-b325-2fb04d6bf6d3", "02491069-b70a-4118-92ce-3fe6dd8a85ea", "19454e34-af09-4a84-aa88-8543bb4cd22a", "d62ad2ee-c4ca-4a96-a31d-6fa73768126a", "02756ea4-392c-4303-b5fe-c5c31b5708b0", "84328755-4f0a-4659-9975-1947cad2422b", "d3854786-ba35-46a1-8e09-63acbb6ffb1e", "d53392bc-6985-473c-b085-afa7617f92f7", "047d5c13-cfb0-4f32-8188-575a558dadfe", "2af35305-5330-4c2c-885d-167a626b1176", "e037c1f0-03e9-4d1f-81f1-edba9d8549f2", "1f669ec4-d6ea-4ec8-bb69-dc44ade5080d", "20c534f1-2602-4ec6-8519-f8d5fde0d74b", "a7f56897-24ab-46af-88a2-cd4ba8fa7d10", "70c76bfb-fe13-4232-bcf1-d1eb363c7b9d", "56e3c7e7-eafd-486c-88fa-90f641b51239", "c45cc69e-c86f-443e-934f-dc54dda7b4f3", "b712c677-bf05-4a76-8151-d68880764872", "91daca1c-2720-4089-bc94-1b26627434af"], "metadata": {}}, "main_reference_zoe-api_zoe-data-types.md": {"node_ids": ["e4761fcc-3b95-4766-ac1d-b78ef7b6a430", "36d394fb-49fd-47cb-81f9-ab2e6542f546", "34480ea1-9e2a-48f6-a35d-6d1e20068a14", "8fde4e2d-bbf3-4ad1-88d9-929d8f22c0f9", "a6f49309-1fd9-4eaa-aa8a-887f5e519a47", "1b8e0cef-7b92-460c-b516-9394cf8a99a4", "87d35163-0675-4e22-b2bd-f8da2e95b7be", "7729e7aa-2c72-4524-bb67-e4df0a14bcff", "70e98a06-7f9a-4be0-8beb-f0d0cbf5b59a", "c194e683-5e0e-43c0-9060-eed4ac8afe0d", "92b8ba1b-1236-409e-bef5-bab644ea2ac1", "2f95656b-9a1f-4b55-a815-9a2666cdf865", "70540470-ddf1-4add-9953-8fe27b807efa", "30c0fc0a-ef13-4fa2-b24b-f1f6b3ec2979", "6a1f0023-4051-4212-b480-c112fead71cf", "d5b40086-2a89-474d-9015-9f48a9c8df22", "ec49b791-54c1-4ddc-a287-c41aa74da1dc", "0f365d0f-f051-469d-8cf2-4074bcb92d61", "0ff944d4-304d-4665-938d-3569ecb4ffa1"], "metadata": {}}, "main_reference_zoe-api_zoe-helpers.md": {"node_ids": ["dba51709-bd69-4e7d-abbd-fad45f30793e", "5110d15f-432f-4f8d-af20-7b29e0bed3b1", "23cf50df-7956-4a80-a7ed-98ab665181c3", "1f1134ee-e5fe-495d-90a5-6846e6656d0b", "4b278f8d-e6d8-4af9-95c5-2f246a771c3a", "a6a7111b-48d8-4fed-aee8-3c2c4ad76964", "99756241-b063-4c22-a583-dfcb96a6258c", "80f765a9-af98-47f2-9697-09ee724fc62e", "c7e6cbf3-e650-4160-b62f-d202f0d68547", "9cc205c0-b7ad-413b-85f2-e2c1087bb169", "9f9e8c43-8563-40cb-9a9e-11f4283aa1d9", "3bd43ba4-a2e7-475b-88b5-68b49e626281", "7b5f438e-dc02-4d03-b20d-20f3f41a49cf", "faf9d7c5-d3ad-4ff0-9c76-c5f866bc7209", "4d856a7b-2eb6-4615-be4c-41f39ea6f538", "03eef8f8-9193-46a0-aa18-d5c1654d2432", "0bb3fd30-8eb1-4e08-b16f-4afe4177cec3", "aa40b134-620f-4a3b-b1a0-f18d7afee458", "3edd22ed-1326-4213-b4c2-eaddde0a4576", "5ad34693-30e1-4982-8901-394a632af16b", "52b725cb-c657-440f-8a55-3693fbec2c06", "85c0f5cf-f126-42a9-8e9b-57dc8c253a35", "462891e8-984d-414c-b6a2-5e07f8435b64", "6ebc441a-ac82-4f40-ac2a-4f50f8082041", "36738d28-b1b9-4cde-a273-8f47af46768a", "e535a283-c88d-4b01-85f9-9e1d83eb7d51", "0bad6ddf-0f53-4ca7-a968-1f9c43355b53", "bb900323-27e2-461f-8f1e-87735239cb2b", "7dfb3af1-f1b1-4952-8f26-8ab7aeb53431", "4e405efc-8d72-46f0-92bd-92925250c46f", "a69ba4aa-d953-4f6e-b4c0-48d3f67bd29e", "bd186799-78b0-47b6-bad4-b53d092be8b9", "699d17eb-bd6a-4fba-a114-7f9bd15f4616", "15d636a1-9b0f-4dc2-9e0e-5ccd5e955dd2", "ebf9035d-a2df-4c90-ba58-159d65c2b63d", "2f1b6f6b-77fc-4602-b7f5-b036580d478a", "8f744e79-6ba3-4532-8401-1e0ea71142c5", "b1c31795-74b7-499a-b3f9-386332845e0c", "400603cb-4242-4736-8c8e-8ed96d935a8b", "f6fd6ede-66fc-4527-9c66-ac981610f2d6", "2057a89f-c8ea-4179-8300-525442084df7", "90447f9d-521e-4b31-b0d8-d9b2ab8fcaa9", "e14b12d3-5837-42c6-ac1f-81073397b449", "ae6c5943-2cee-414d-abfd-c09114107756", "b4b46f3b-c101-4952-be3f-adfc414fc9e5", "350ac398-5e3d-4496-865c-d119015f0044", "b1968e7b-3550-4b26-b2af-32f38ba2fde4", "e753d91d-9342-433d-a1ce-b823c1d6b569", "b732e90c-98ac-4190-bc16-cf493468eeaf", "9cf30aa1-3a35-4542-94ea-2dc1754fef2e"], "metadata": {}}, "main_reference_zoe-api_zoe.md": {"node_ids": ["08589e1b-45c2-420c-bde9-b2c9d99972ae", "357584b3-9cfb-4123-9bcf-9527bb997dc1", "b5ce7354-dfa9-4d01-b978-9fd8562c0b7d", "c98ea8d8-4171-4984-b22b-8bc6650c507a", "99148ab4-d319-4e19-8b73-e5c294e9aafc", "cfedd131-8c26-464c-b86a-44c3b786f87b", "e51f744a-4cdd-4e90-9c80-3a074688ef80", "9fdb66f3-e474-40a8-b0a9-bc126cd0acbc", "cc4aae1b-d952-4af8-b897-bf560928ddf8", "16b08e3a-8221-41fc-bc30-927b1f051d4e", "8233c4ab-e57e-4838-baee-9177894b9120", "ea376711-964f-4baa-a36a-385b7527d1e9", "6d0f3383-895e-4c34-8cfc-9350cd1dce56", "44415bc6-ffc8-427d-a849-c09c5e8f0a29", "4b70846e-0bfb-410f-92c6-e2ea1c72179e", "3dc9f18a-4715-4aa1-8717-455896f5cbc9", "da19eb58-2669-424f-a4f1-61cee82bfc3c", "7ad37ee4-e296-4042-b3a4-d53ebd0b6dfb", "e2ac9834-1292-4db5-a418-19b5eb568e2c", "f4ecaecd-5fab-4bdc-8f1a-8341d21ef2c7", "0b6d5fc1-7a32-4db5-83e4-2cf6ca83eae4", "b346044b-f4c0-4c43-8e06-cf9fb34de3e7", "769c5365-9f7e-4f43-bb21-323d801a810a", "7e9c0254-7672-46cd-9aea-3fd29695c6b8", "e24afae1-db9f-4792-bede-721eeabd7c38", "8565155d-6a67-4565-8b58-244a1db45172", "956bd800-0ae4-4f2c-8610-b2000780ab63", "f5bb452e-5061-4a2d-acbc-e2a55dd900df", "8c978617-153c-4701-b241-a850eb1f3de2", "07964871-7474-4158-a60c-bf3cbe97f093", "ae86352a-6f0c-48b9-9e8b-3a7faca81cd6", "40f72c95-d82f-45b4-b9c5-1f1dc227d713", "fd05e706-7d5b-4b8b-a5cf-ecbe31889532", "6f0824db-52a8-41ff-b3e0-6a2b8a05db9c", "bbfe9ff6-b408-48f7-a7ea-d045057d39f1", "9d0899fd-1b51-423c-84b9-dc197db98f40", "6004dc60-534b-42ef-993b-cb882b4797ea", "a9b5ecde-ad65-424a-be43-a7bdc8d2f3f6", "cfeb5023-1636-47e3-8f18-c32bd5ec730f"], "metadata": {}}}}